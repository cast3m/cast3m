$$$$ TRANSIT0
* TRANSIT0  PROCEDUR  FANDEUR   14/10/10    21:15:27     8178
* TRANSIT0  PROCEDUR  CHAT      92/09/01    21:18:33     639
'DEBPROC'  TRANSIT0   ETAB*'TABLE' ;
*----------------------------------------------------------------------*
*         PROCEDURE TRANSIT0    MARS 91                                *
*                                                                      *
*    calcul d'un increment de solution en thermique non-lineaire       *
*    stationnaire par la methode des residus
*                                                                      *
*    INSPIREE DE INCREME + TRANSIT1
*----------------------------------------------------------------------*
*                                                                      *
*     ETAB, TABLE CONTENANT EN ENTREE :                                *
*     -------------------------------                                  *
*     INDICE 'SOUSTYPE'     THERMIQUE                                  *
*     INDICE 'MAILLAGE'     MAILLAGE DE BASE                           *
*     INDICE 'COQUE'        TYPE D'ELEMENT COQUE
*     INDICE 'EPAI'         EPAISSEUR DE LA COQUE
*     INDICE 'BLOCAGE'      MATRICE DE BLOCAGE (CREEE PAR "BLOQUE")    *
*     INDICE 'IMPOSE'       VALEURS IMPOSEES (CREE PAR "DEPI")         *
*     INDICE 'CONDUCTIVITE' VALEUR INITIALE DE LA CONDUCTIVITE         *
*     INDICE 'EVOCOND'      EVOLUTION DE LA CONDUCTIVITE DU MATERIAU   *
*                           EN FONCTION DE LA TEMPERATURE : K(T)       *
*     INDICE 'FLUX'         FLUX EQUIVALENTS                           *
*     INDICE 'CRITERE'      CRITERE DE CONVERGENCE                     *
*                           (10E-5 PAR DEFAUT)                         *
*     INDICE 'NITER'        REACTUALISATION DE LA CONDUCTIVITE TOUTES  *
*                           LES NITER ITERATIONS ( 10  PAR DEFAUT)     *
*     INDICE 'NIVEAU'       NIVEAU DE MESSAGES (NIVEAU=0 PAR DEFAUT)   *
*     INDICE 'ACCELERATION' FREQUENCE DES ACCELERATIONS (2  PAR DEFAUT)
*     INDICE 'MAXITERATION' NOMBRE D'ITERATIONS MAXIMUM (30 PAR DEFAUT)
*                                                                      *
*     ETAB CONTENANT EN SORTIE :                                       *
*     ------------------------                                         *
*     INDICE 'TEMPERATURE'  CHAMP DE TEMPERATURE RESULTAT              *
*                                                                      *
*----------------------------------------------------------------------*
'SI' ( 'NEG' ( ETAB.'SOUSTYPE' ) 'THERMIQUE' ) ;
   'MESS' 'SOUS TYPAGE INCORRECT DE LA TABLE EN ENTREE ' ;
   'QUITTER' TRANSIT0 ;
'FINSI' ;
'SI' ( 'EXISTE' ETAB 'NIVEAU' ) ;
   NIV_MESS = ETAB.'NIVEAU' ;
'SINON' ;
   NIV_MESS = 0 ;
'FINSI' ;
'SI' ( NIV_MESS '>EG' 1 ) ;
   'SAUTER' 1 'LIGNE' ;
   'MESS' '***  DEBUT DE LA PROCEDURE "TRANSIT0"  ***' ;
'FINSI' ;
*
*---  RECUPERATION DE L'INFORMATION CONTENUE DANS "ETAB"
*
'SI' ('EXISTE' ETAB 'COQUE') ;
  TYP_COQ = ETAB.'COQUE' ;
  'SI' ( 'EXISTE' ETAB 'EPAI' )  ;
   EP = ETAB.'EPAI' ;
  'SINON' ;
  'SAUTER' 1 'LIGNE' ;
  'MESS' '*** IL MANQUE L EPAISSEUR DE LA COQUE  *** ';
  'QUITTER' TRANSIT0 ;
  'FINSI' ;
'FINSI' ;
*
OBJ_MAI  = ETAB.'MAILLAGE' ;
VAL_COND = ETAB.'CONDUCTIVITE' ;
ZCLIM    = ETAB.'BLOCAGE'  ;
ZU1    = MANU CHPO OBJ_MAI  1 'T' 0. ;
ZF1    = MANU CHPO OBJ_MAI  1 'Q' 0. ;
ZFEXT2 = MANU CHPO OBJ_MAI  1 'Q' 0. ;
*
 'SI' ( 'EXISTE' ETAB 'IMPOSE' ) ;
  VAL_IMPO = ETAB.'IMPOSE'   ;
  ZFEXT2 = ZFEXT2 ET  VAL_IMPO ;
 'FINSI';
*
 'SI' ( 'EXISTE' ETAB 'FLUX' ) ;
  QTE_FLUX = ETAB.'FLUX'  ;
  ZFEXT2 = ZFEXT2 ET QTE_FLUX ;
 'FINSI';
*
 'SI' ( 'EXISTE' ETAB 'EVOCOND' ) ;
  EVO_COND = ETAB.'EVOCOND' ;
  LIS_COND = 'EXTRAIRE' EVO_COND 'CONDUCTIVITE' ;
  LIS_TEMP = 'EXTRAIRE' EVO_COND 'TEMPERATURE' ;
 'FINSI' ;
*
 'SI' ( 'EXISTE' ETAB 'CRITERE' ) ;
  ZPREC    = ETAB.'CRITERE'  ;
 'SINON' ;
  ZPREC   = 1.E-5 ;
 'FINSI' ;
*
 'SI' ( 'EXISTE' ETAB 'NITER' ) ;
  NBRE_ITE = ETAB.'NITER' ;
   'SI' ( NIV_MESS '>EG' 1 ) ;
   'SAUTER' 1 'LIGNE' ;
   'MESS' 'REACTUALISATION DE LA MATRICE DE CONDUCTIVITE TOUTES '
   'LES ' NBRE_ITE 'ITERATIONS' ;
   'FINSI' ;
 'SINON' ;
  NBRE_ITE = 10;
 'FINSI' ;
*
 'SI' ( 'EXISTE' ETAB 'MAXITERATION' ) ;
  ZMAXIT   = ETAB.'MAXITERATION' ;
 'SINON' ;
  ZMAXIT   = 30 ;
 'FINSI' ;
*
 'SI' ( 'EXISTE' ETAB 'ACCELERATION' ) ;
  ZNACCE   = ETAB.'ACCELERATION' ;
 'SINON' ;
  ZNACCE   = 2  ;
 'FINSI' ;
*
*  CREATION DE L'OBJET MODELE ET DU CHAMP DE MATERIAU
*
 'SI' ('EXISTE' ETAB 'COQUE' ) ;
  ZOBMOD = 'MODE' OBJ_MAI 'THERMIQUE' 'ISOTROPE' TYP_COQ ;
  ZMAT = 'MATE' ZOBMOD 'K' VAL_COND 'EPAI' EP ;
 'SINON' ;
  ZOBMOD = 'MODE' OBJ_MAI 'THERMIQUE' 'ISOTROPE' ;
  ZMAT = 'MATE' ZOBMOD 'K' VAL_COND ;
 'FINSI';
*
*  CALCUL DE L'OPERATEUR
*
   CND1 = 'CONDUCTIVITE' ZOBMOD ZMAT ;
   ZRAID = CND1 ET ZCLIM ;
*
*
********************
********************  initialisation et reprise des valeurs des tables
********************
ETAB.'INCREMENT' = ZFEXT2 ;
MLPRIM = 'MOTS' 'T' 'TSUP' 'TINF' 'LX';
MLDUAL = 'MOTS' 'Q' 'QSUP' 'QINF' 'FLX';
*
*
*        ---------------------------------
*        !   QUELQUES INITIALISATIONS    !
*        ---------------------------------
IT= 0 ;
ZICONV = VRAI;
MMC = 0 ;
MM1 = 1 ;
MM2 = 1 ;
*
******************** calcul de la partie constante du second membre
******************** ZFP1 est cense contenir : F0 + 4/DT*M*V0 - B0*SIG0
********************                              + 2/DT*C*X0
ZFCONSTA = COPIER ZFEXT2;
ZFEXT = ZFCONSTA  'ENLEVER' 'FLX';
********************    mise a jour des jeux
ZZD = 'ENLEVER' ZU1 'LX';
ZMU= ZZD * ZCLIM;
ZFPLU= ZMU + ZF1 ;
ZFPLO=COPIER ZF1 ;
'DETR' ZF1  ;
*
ZITAC= 0 ;
IPREM =  VRAI ;
*******           initialisation acceleration de convergence
*******           on peut mettre n'importe quoi
*******           c'est pour ne pas faire de tests dans la boucle
       acfp1  = zfconsta ;
       acfp2  = zfconsta ;
       acfp3  = zfconsta ;
       acdep1 = zfconsta ;
       acdep2 = zfconsta ;
       acdep3 = zfconsta ;
*********  la il ne faut pas mettre n'importe quoi
       fcorf  = zmu ;
********************
********************     DEBUT DES ITERATIONS
********************
'REPETER'  ETIQ ;
IT= IT + 1 ;
ZITAC = ZITAC + 1 ;
********************CALCUL DE L INCREMENT DE L INCREMENT DE SOLUTION
ZDF = ZFCONSTA - ZFPLU;
ZTEM1 = 'RESOU' ZRAID ZDF;
********************  on ajoute l increment de deplacement au precedent
'SI'   IPREM  ;
XDENO = XTY ZTEM1 (ZFEXT ET
  (ETAB . 'INCREMENT' EXCO 'FLX' 'NOID' 'FLX' * -1)) MLPRIM MLDUAL;
XDENO = ('ABS' XDENO) + ('ABS' ('XTY' ZTEM1 ZFPLO MLPRIM MLDUAL));
XDENO = XDENO /( ('MAXI' ZTEM1 'ABS' ) + 1.D-20 );
           ZTEMT = 'COPIER' ZTEM1 ;
********************  initialisation des messages
     'MESS'  ' iteration      critere   ' ;
*
'SINON';
           ZTEM=ZTEMT 'ENLEVER' 'LX' ;
           'DETR' ZTEMT ;
           ZTEM2 = ZTEM + ZTEM1 ;
           'DETR' ZTEM ;
           ZTEMT = ZTEM2 ;
'FINSI' ;
'SI' (('MULT' it znacce) 'ET' (it > 3)) ;
'MESS' ' ****** acceleration de convergence ';
correc = 'ACT3' acdep3 acdep2  acdep1  ztemt
    acfp3 acfp2 acfp1 (zdf - fcorf) ;
'DETRUIRE' acdep3 ; 'DETRUIRE' acfp3;
acdep3 = acdep2 ; acdep2 = acdep1 ; acdep1 = ztemt ;
ztem2 = ztemt - correc;
ztemt = ztem2;
'SINON';
si (it > 3); 'DETRUIRE' acdep3 ; 'DETRUIRE' acfp3; finsi;
acdep3 = acdep2 ; acdep2 = acdep1 ;  acdep1 = 'COPIER' ztemt 'GEOM' ;
'FINSI';
acfp3  = acfp2  ; acfp2  = acfp1 ;
acfp1  = zdf - fcorf ;
'DETRUIRE' fcorf;
********************
********************  calcul de  fcorf= lambda*m   force de reaction
********************             fcoru = u * m     depi (flx)
********************
ZDETOT = ZZD + ZTEMT;
FCOR= ZCLIM * ZDETOT; 'DETR' ZDETOT ;
FCORF = 'ENLEVER'  FCOR 'FLX';
FCORU = 'EXCO'  FCOR 'FLX' 'FLX';
'DETR' FCOR ;
*----------------------------------------------------------------
******************** preparation des tests de convergence.on calcule la
******************** plus grande composante de delta f + freac(sans flx)
FEQUI = ZFEXT - FCORF;
FEQUI2=FEQUI - ZFPLO; 'DETR' ZFPLU ;
ZFAU1 = 'ABS' FEQUI2;DETR FEQUI2;
XAUX  = 'MAXI' ZFAU1 'ABS' ;
'DETR' ZFAU1;
*
MM2=MM1 * 1;
MM1 = MMC * 1 ;
*
********************   FORCES QUI VARIENT
********************
*
'SI' ('EXISTE' ETAB 'COQUE' ) ;
  U1_T1= 'EXCO' 'TINF' ZTEMT 'NOID' 'T' ;
  U1_T2= 'EXCO' 'TSUP' ZTEMT 'NOID' 'T' ;
  U1_T3= 'EXCO' 'T   ' ZTEMT 'NOID' 'T' ;
  U1_TM = (U1_T1 + U1_T2 + U1_T3)/3.0 ;
'SINON' ;
  U1_T = 'EXCO' ZTEMT 'T' 'NOID' 'T' ;
'FINSI' ;
   'SI' ('EXISTE' ETAB 'COQUE') ;
      K1  = 'IPOL' U1_TM LIS_TEMP LIS_COND ;
      K2  = 'NOMC' 'K' K1 ;
      MA1 = 'EXTRAIRE' K2 'MAIL' 'NOMU' ;
      EE1 = 'MANU' 'CHPO' MA1 1 'EPAI' EP  ;
      CHAM_CN1 = 'CHAN' 'CHAM' ZOBMOD K2  'CARACTERISTIQUES' ;
      CHAM_CN2 =  'CHAN' 'CHAM' ZOBMOD EE1 'CARACTERISTIQUES' ;
      ZMAT2     = CHAM_CN1 'ET' CHAM_CN2   ;
   'SINON' ;
      K1 = 'IPOL' U1_T LIS_TEMP LIS_COND ;
      K2 = 'NOMC' 'K' K1 ;
      ZMAT2    =  'CHAN' 'CHAM' ZOBMOD K2 'CARACTERISTIQUES' ;
   'FINSI' ;
*
   CND2 = 'CONDUCTIVITE' ZOBMOD ZMAT2 ;
   FEQU2 = CND2 * ZTEMT ;
*
   'SI'( 'NON'  ( 'MULT' ZITAC NBRE_ITE ) );
   'DETR'  CND2  'ELEM' ;
   'FINSI';
*
********************
********************   test de convergence
********************
*
RESIDU = FEQUI - FEQU2;
XNUM  = 'MAXI' RESIDU 'ABS';
'DETR' RESIDU ;
XCONV = XNUM / XDENO ;
'MESS'  IT   XCONV  ;
'SI' (NON(('MULT' it znacce) 'ET' (IT > 3)));
 'SI'  ( IT > 1 ) ;
  'SI' ( XCONV < ZPREC ) ;
      'MESS' ' ****** CONVERGENCE A L ITERATION ' IT;
      'DETR' FEQU2 ;
      'QUITTE' ETIQ ;
  'FINSI';
 'FINSI';
'FINSI';
'SI'(IT '>EG'  ZMAXIT );
      'MESS' ' ****** PAS DE CONVERGENCE A L ITERATION ' IT ;
      ZICONV = FAUX;
      'DETR' FEQU2 ;
      'QUITTER' ETIQ;
'FINSI' ;
ZFPLU = FCORU + FEQU2 ;
'DETR' FCORU ;
'DETR' FEQU2 ;  'DETR' FEQUI ;
*
*  CHANGEMENT D'OPERATEUR
*
      'SI'('MULT' ZITAC NBRE_ITE ) ;
             ZITAC = 0;
            'DETR' ZRAID;
             ZRAID =CND2 'ET'  ZCLIM ;
         'FINSI' ;
********************
********************     fin de boucle
********************
IPREM = FAUX;
'FIN' ETIQ ;
********************
********************
********************
********************  quelques destructions supplementaires
'DETR' ZFEXT ; 'DETR'   FCORU ; 'DETR' FCORF ;
'DETR' FEQUI ; 'DETR' ZDF ;
'DETR' ZZD ;
'DETR' ZFPLO;
*
 ETAB.'TEMPERATURE' = ZTEMT;
 'DETR' ZTEM1;
'FINPROC'  ;


