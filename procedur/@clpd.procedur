$$$$ @CLPD
* @CLPD     PROCEDUR  PV        09/12/24    10:30:57     6593
****************************************************
****************************************************
*
*  PROCEDURE POUR CONDITIONS AUX LIMITES
*
*    PERIODIQUE EN DEFORMATION IMPOSEE
*
*  L.GELEBART, G. TREGO                          10/06
****************************************************
*****************************************************
DEBPROC @CLPD MAIL0*MAILLAGE DEF0*TABLE;
EXX = DEF0 . 1; EYY = DEF0 . 2; EZZ = DEF0 . 3;
EXY = DEF0 . 4; EXZ = DEF0 . 5; EYZ = DEF0 . 6;
MOD0 = MODE MAIL0 MECANIQUE ELASTIQUE;
*
*  Identification des points et surfaces exterieures
*    pour application des CL
*=====================================================
ENVE0 = ENVE MAIL0;
elim0 = 1.e-4;
ENVE_PT0 = CHANGE ENVE0 POI1;
XMAX = MAXI (COOR 1 ENVE0);XMIN = MINI (COOR 1 ENVE0);
YMAX = MAXI (COOR 2 ENVE0);YMIN = MINI (COOR 2 ENVE0);
ZMAX = MAXI (COOR 3 ENVE0);ZMIN = MINI (COOR 3 ENVE0);
LX0 = XMAX - XMIN; LY0 = YMAX - YMIN; LZ0 = ZMAX - ZMIN;
PXMIN = ENVE_PT0 POIN 'PLAN'
 (XMIN 0. 0.) (XMIN 1. 0.) (XMIN 0. 1.) (LX0 * elim0);
PYMIN = ENVE_PT0 POIN 'PLAN'
 (0. YMIN 0.) (1. YMIN 0.) (0. YMIN 1.) (LY0 * elim0);
PZMIN = ENVE_PT0 POIN 'PLAN'
 (0. 0. ZMIN) (1. 0. ZMIN) (0. 1. ZMIN) (LZ0 * elim0);
*
SURFX0 = ENVE0 ELEM APPUYE STRICTEMENT PXMIN;
SURFY0 = ENVE0 ELEM APPUYE STRICTEMENT PYMIN;
SURFZ0 = ENVE0 ELEM APPUYE STRICTEMENT PZMIN;
SURFX1 = SURFX0 PLUS (LX0 0. 0.);
SURFY1 = SURFY0 PLUS (0. LY0 0.);
SURFZ1 = SURFZ0 PLUS (0. 0. LZ0);
elim SURFX1 MAIL0 (LX0 * elim0);
elim SURFY1 MAIL0 (LX0 * elim0);
elim SURFZ1 MAIL0 (LX0 * elim0);
*trac (SURFX0 ET SURFY0 ET SURFZ0);
*trac (SURFX1 ET SURFY1 ET SURFZ1);
*
A1 = ENVE_PT0 POIN PROC (XMIN YMIN ZMIN);
*
*  Blocage du mvt de corps rigide
*===========================================
BL1 = BLOQUE UX UY UZ A1;
*BL1 = @CORIGI ENVE0;
*
*  Application des conditions de periodicite
*===========================================
RIGCLP = BL1;
*deplacements imposes*
*faces perpendiculaires a X
CLP1X = RELA 1. UX SURFX1 - 1. UX SURFX0;
depCLP1X = DEPI CLP1X (EXX * LX0);
CLP1Y = RELA 1. UY SURFX1 - 1. UY SURFX0;
depCLP1Y = DEPI CLP1Y (EXY * LX0);
CLP1Z = RELA 1. UZ SURFX1 - 1. UZ SURFX0;
depCLP1Z = DEPI CLP1Z (EXZ * LX0);
CLP1 = CLP1X ET (CLP1Y ET CLP1Z);
depCLP1 = depCLP1X ET (depCLP1Y ET depCLP1Z);
*faces perpendiculaires a Y
CLP2X = RELA 1. UX SURFY1 - 1. UX SURFY0;
depCLP2X = DEPI CLP2X (EXY * LY0);
CLP2Y = RELA 1. UY SURFY1 - 1. UY SURFY0;
depCLP2Y = DEPI CLP2Y (EYY * LY0);
CLP2Z = RELA 1. UZ SURFY1 - 1. UZ SURFY0;
depCLP2Z = DEPI CLP2Z (EYZ * LY0);
CLP2 = CLP2X ET (CLP2Y ET CLP2Z);
depCLP2 = depCLP2X ET (depCLP2Y ET depCLP2Z);
*faces perpendiculaires Z
CLP3X = RELA 1. UX SURFZ1 - 1. UX SURFZ0;
depCLP3X = DEPI CLP3X (EXZ * LZ0);
CLP3Y = RELA 1. UY SURFZ1 - 1. UY SURFZ0;
depCLP3Y = DEPI CLP3Y (EYZ * LZ0);
CLP3Z = RELA 1. UZ SURFZ1 - 1. UZ SURFZ0;
depCLP3Z = DEPI CLP3Z (EZZ * LZ0);
CLP3 = CLP3X ET (CLP3Y ET CLP3Z);
depCLP3 = depCLP3X ET (depCLP3Y ET depCLP3Z);
*
DEPTOT = depCLP1 et (depCLP2 et depCLP3 );
RIGCLP = RIGCLP et (CLP1 et (CLP2 et CLP3));
*
FINPROC RIGCLP DEPTOT;
*********************************************
* FIN DE LA PROCEDURE CLPD
*********************************************

