$$$$ IDENTI
* IDENTI    PROCEDUR  BR232186  12/07/31    21:15:01     7451
*
*
* PROCEDURE D'IDENTIFICATION DE MODELES DE COMPORTEMENT
*
*
DEBPROC IDENTI NOMMOD*MOT;
* modele MAZARS
'SI' ('EGA' NOMMOD 'MAZARS');
   MESSAGE 'POUR LE MODELE MAZARS IL FAUT DONNER DANS L"ORDRE :';
   MESSAGE '    LE MODULE D"ELASTICITE INITIAL';
   MESSAGE '    LE COEFFICIENT DE POISSON';
   MESSAGE '    LA LIMITE EN TRACTION';
   MESSAGE '    LA CONTRAINTE RESIDUELLE EN TRACTION';
   MESSAGE '    UN INDICE DE FRAGILITE COMPRIS ENTRE 0 ET 1';
   MESSAGE '    LA LIMITE EN COMPRESSION';
   MESSAGE '    LA DEFORMATION CORRESPONDANT A CETTE LIMITE';
   'ARGU' E0*FLOTTANT;
   'ARGU' NU0*FLOTTANT;
   'ARGU' FT*FLOTTANT;
   'ARGU' SINF*FLOTTANT;
   'ARGU' FRAGI*FLOTTANT;
   'ARGU' FC*FLOTTANT;
   'ARGU' EPSC*FLOTTANT;
   EPSD0=FT/E0;
   AT=1. - ( SINF / (E0 * EPSD0));
   BT= ( 1. + FRAGI) / EPSD0 ;
   EPSC=ABS EPSC;
   FC= ABS FC;
   SQ2=2.**0.5;
   BC= 1. / ( SQ2 * NU0 * EPSC);
   AC= ( EPSD0 - ( SQ2 * FC * NU0 / E0 ) ) *
       BC / ( BC * EPSD0 - (EXP ( ( BC * EPSD0 ) - 1.)) );
   'SAUTER' 2 'LIGNE';
   'MESSAGE' '   KTR0=' EPSD0 'ATRA=' AT 'BTRA=' BT  ;
   'MESSAGE' '                        ACOM=' AC  'BCOM=' BC;
   RESPRO EPSD0 AT BT AC BC;
   'QUITTER' IDENTI;
'FINSI';

* modele GLRC_DM
SI (EGA NOMMOD 'GLRC_DM');
   MESSAGE 'POUR LE MODELE GLRC_DM IL FAUT DONNER DANS L"ORDRE :';
   MESSAGE '    LE MODULE D"ELASTICITE DU BETON';
   MESSAGE '    LE COEFFICIENT DE POISSON DU BETON';
   MESSAGE '    LE MODULE D"ELASTICITE DE L"ACIER';
   MESSAGE '    LE COEFFICIENT DE POISSON DE L"ACIER';
   MESSAGE '    L"EPAISSEUR DE LA COQUE';
   MESSAGE '    LA SECTION TOTALE D"ACIER PAR METRE LINEAIRE';
   MESSAGE '    LA POSITION RELATIVE D"UNE NAPPE DANS L"EPAISSEUR';
   MESSAGE '    LA RESISTANCE EN TRACTION DU BETON';
   MESSAGE '    L"EFFORT LIMITE EN COMPRESSION PAR METRE LINEAIRE';
   MESSAGE '    LE PARAMETRE GAMMA_MT TEL QUE 0 < GAMMA_MT < 1';
   MESSAGE '    LE PARAMETRE GAMMA_F TEL QUE 0 < GAMMA_F < 1';
   MESSAGE '    ON FAVORISE LE CISAILLEMENT : 1 SINON 0';

   'ARGU' EB*FLOTTANT;
   'ARGU' NUB*FLOTTANT;
   'ARGU' EA*FLOTTANT;
   'ARGU' NUA*FLOTTANT;
   'ARGU' HN*FLOTTANT;
   'ARGU' SA*FLOTTANT;
   'ARGU' XA*FLOTTANT;
   'ARGU' FB*FLOTTANT;
   'ARGU' NC*FLOTTANT;
   'ARGU' GAMT*FLOTTANT;
   'ARGU' GAMF*FLOTTANT;
   'ARGU' CISA*FLOTTANT;

* Module effectif en membrane
    EEQM1 = (EA * (SA / HN));
    EEQM2 = (EB * (((EB * HN) + (EA * SA))));
    EEQM3 = ((EB * HN) + (EA * SA * (1.0 - (NUB**2.0))));
    EEQM  = EEQM1 + ((EEQM2) / (EEQM3));

* Coefficient de Poisson effectif en membrane
    NUM1 = ((NUB * HN) * EB);
    NUM2 = ((EB * HN) + (EA * SA * (1.0 - (NUB**2.0))));
    NUM  = NUM1 / NUM2;

* Module effectif en flexion
    EEQF1 = (3.0 / HN) * EA * SA * (XA ** 2.0);
    EEQF2 = EB * ((EB * HN) + (3.0 * EA * SA * (XA ** 2.0)));
    EEQF3 = ((EB * HN) +
            (3.0 * EA * SA * (XA ** 2.0) *
            (1.0 - (NUB ** 2.0))));
    EEQF  = EEQF1 + (EEQF2 / EEQF3);

* Coefficient de Poisson effectif en flexion
    NUF1 = NUB * EB * HN;
    NUF2 = (EB * HN) + (3.0 * EA * SA * (XA ** 2.0) *
           (1.0 - (NUB**2.0)));
    NUF  = NUF1 / NUF2;

* Parametre XGAMMC
    ND1 = FB * EEQM * HN * (1.0 - (NUB ** 2.0));
    ND2 = EB * (1.0 - (NUB * NUM));
    ND  = ND1 / ND2;

    GAMC1 = 1.0;
    GAMC2 = ((1.0 - GAMT) * (((ND ** 2.0) * (1.0 - NUM) *
            (1.0 + 2.0 * NUM)) - ((NC ** 2.0) * (NUM ** 2.0))));
    GAMC3 = (((NC ** 2.0) * (1.0 - NUM) *
            (1.0 + 2.0 * NUM)) - ((ND ** 2.0) * (NUM ** 2.0)));
    GAMC  = GAMC1 - (GAMC2 / GAMC3);

* Parametre de seuil k0
    XK01 = (ND ** 2.0);
    XK02 = ((1.0 - NUM) * (1.0 + (2.0 * NUM)) *
           (1.0 - GAMT)) + ((NUM ** 2.0) * (1.0 - GAMC));
    XK03 = 4.0 * EEQM * HN * (1.0 + NUM);
    XK0  = ((XK01 * XK02) / XK03);

* Parametre de seuil alfa
    MD1 = FB * EEQF * (HN ** 2.0) * (1.0 - (NUB ** 2.0));
    MD2 = 6.0 * EB * (1.0 - (NUB * NUF));
    MD  = MD1 / MD2;

    LAMF = ((EEQF * (HN ** 3.0) * NUF) /
           (12.0 * (1.0 - (NUF ** 2.0))));
    MUF  = ((EEQF * (HN ** 3.0)) / (24.0 * (1.0 + NUF)));


    XALFA1 = (1.0 - GAMF) * (MD ** 2.0) * (LAMF * ((1.0 - NUF) ** 2.0) +
             (2.0 * MUF));
    XALFA2 = 2.0 * (((LAMF * (1.0 - NUF)) + (2.0 * MUF)) ** 2.0) * XK0;
    XALFA  = XALFA1 / XALFA2;

    RESPRO EEQM NUM EEQF NUF XK0 GAMC XALFA;
    'QUITTER' IDENTI;

FINSI;




'FINPROC';










