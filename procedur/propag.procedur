$$$$ PROPAG
* PROPAG    PROCEDUR  CB215821  15/12/02    21:15:16     8719
  'DEBPROC' PROPAG ETAB*'TABLE';
************************************************************************
*                                                                      *
*    PROCEDURE PERMETTANT D" OBTENIR LA LOI MOMENT-COURBURE POUR       *
*    L"ELEMENT DE TUYAU FISSURE A PARTIR DE LA COURBE DE TRACTION      *
*    (SIG,EPS) ET DE LA COURBE (J,DELTA A) DU MATERIAU.                *
*                                                                      *
*    PLUSIEURS METHODES SONT PROPOSEES POUR DETERMINER CETTE LOI       *
*    MOMENT-COURBURE.                                                  *
*                                                                      *
************************************************************************
************************************************************************
*                                                                      *
*               LA PROCEDURE PROPAG UTILISE :                          *
*                                                                      *
*   SOIT UNE BASE DE DONNEES EXPERIMENTALES                            *
*            - DEFR                                                    *
*                                                                      *
*   SOIT DES METHODES SIMPLIFIEES                                      *
*            - TADA-PARIS                                              *
*            - LBB-NRC                                                 *
*            - LBB1                                                    *
*            - LBB2                                                    *
*                                                                      *
*   ELLE FAIT APPEL AUX ARGUMENTS SUIVANTS:                            *
*                                                                      *
*                                                                      *
* ENTREES                                                              *
*                                                                      *
*    ETAB.'METHODE'   =  MOT CLE INDIQUANT LA METHODE EMPLOYEE         *
*    ETAB.'COUTRA'    =  COURBE DE TRACTION (SIG,EPS) DU MATERIAU      *
*    ETAB.'JDA'       =  COURBE (J,DELTA-A) DU MATERIAU                *
*    ETAB.'YOUN'      =  MODULE D'YOUNG                                *
*    ETAB.'SIG1'      =  CONTRAINTE POUR UNE DEFORMATION DE 0.002      *
* OU ETAB.'SIGF'      =  CONTRAINTE D'ECOULEMENT                       *
*    ETAB.'REXT'      =  RAYON EXTERIEUR DU TUYAU FISSURE              *
*    ETAB.'EPAI'      =  EPAISSEUR DU TUYAU FISSURE                    *
*    ETAB.'ANGLE'     =  ANGLE TOTAL DE LA FISSURE (EN DEGRES)         *
*    ETAB.'COUL'      =  COULEUR AFFECTEE A LA COURBE                  *
*   (ETAB.'ALFA')     =  VALEURS FACULTATIVES PERMETTANT DE FITER      *
*   (ETAB.'N')        =  LA COURBE DE TRACTION (METHODE LBBNRC)        *
*                                                                      *
*                                                                      *
* SORTIES                                                              *
*                                                                      *
*    EVO6             =  COURBE  (M,PHI) AVEC PROPAGATION              *
*                                                                      *
************************************************************************


*----------------------RECEPTION DES ARGUMENTS-------------------------*

  COUL = ETAB . 'COUL';
  ANINI = ETAB . 'ANGLE';
  RAY = ETAB . 'REXT';
  EPA = ETAB . 'EPAI';
  E = ETAB . 'YOUN';
  EVO2 = ETAB . 'JDA';
  LISTJ = PROG 90 * 0.;
  LA1 = PROG 90 * 0.;
  LA2 = PROG 90 * 0.;
  LSOLPHI = PROG 300 * 0.;
  LSOLM = PROG 300 * 0.;
  IN = 2;
  AN = ANINI;
  I = 1;
  RAYM = RAY - (EPA / 2.);


  JPP = 0.;
  'REPE' SB1;
      I = I + 1;
      ETAB . 'ANGLE' = AN;
      EVTE CM KF = TRACTUFI ETAB;
      LISS1 = 'EXTR' EVTE ABSC;
      LISS2 = 'EXTR' EVTE ORDO;
      D = 'DIME' LISS1;
      LISS1 = LISS1 ET (PROG (('EXTR' LISS1 D) * 10.));
      LISS2 = LISS2 ET (PROG ('EXTR' LISS2 D));
      EVTE = EVOL MANU LISS1 LISS2;
      P = (I - 2);
      'SI' (P <EG 0);
         EVOINIT = EVTE;
         KF0 = KF;
         CM0 = CM;
      'FINSI';
      PHIMAX = 'EXTR' LISS1 (D + 1);

*------------------------CALCUL DE J1C--------------------------------*

      TET1 = (AN * PI) / 180.;
      TET2 = (ANINI * PI) / 180.;
      DA = (RAYM * (TET1 - TET2)) / 2.;

      LDA = 'EXTR' EVO2 ABSC;
      LJ = 'EXTR' EVO2 ORDO;
      DE = 'DIME' LDA;
      DAMAX = 'EXTR' LDA DE;
      'SI' (DA >EG DAMAX);
           I = I - 1;
           'QUITTER' SB1;
      'FINSI';
      J1C = IPOL DA LDA LJ;

*--------------ENCADREMENT DE PHI SOLUTION POUR TETA DONNE-------------*
      GG = 0;
      KK = 1;
      'REPE' SB3;
            BX = 'EXTR' LA1 (I - 1);
            BX = BX + (KK * 0.01);
            'SI' (BX < PHIMAX);
                  D2 = 'IPOL' BX LISS1 LISS2;
            'SINON';
                  'SI' ('EGA' GG 1);
                      I = I - 1;
                      'QUITTER' SB1;
                  'FINSI';
                  BX = 0.9999 * PHIMAX;
                  D2 = 'IPOL' BX LISS1 LISS2;
                  GG = 1;
            'FINSI';
            'REMP' LA1 I BX;
            'REMP' LA2 I D2;

*--------------------------CALCUL DE J TOTAL---------------------------*

*---------CALCUL D"UN DELTAJP SUPPLEMENTAIRE DU AU IEME POINT----------*

            AX = 'EXTR' LA1 (I - 1);
            D1 = 'EXTR' LA2 (I - 1);
            C = (AX + BX) / 2.;
            MMOY = IPOL C LISS1 LISS2;
            SIGMOY = MMOY / (4 * RAYM * RAYM * EPA *
              (('COS'(AN / 4.)) - (0.5 * ('SIN'(AN / 2.)))));
            DPHIP = (BX - AX) - (CM0 * (D2 - D1));
            JP = JPP + ((SIGMOY * RAYM * (('COS'(AN / 2.))
                               + ('SIN'(AN / 4.)))) * DPHIP);
*----------------------CALCUL DE JE-------------------------------------

            JE = ((KF0 * D2) ** 2) / E;

            J = JE + JP;
            LOG4 = (J > J1C);
            'SI' LOG4;
                 'QUITTER' SB3;
            'SINON';
                 KK = KK + 1;
            'FINSI';

      'FIN' SB3;

*-------------RECHERCHE DE PHI SOLUTION PAR DICHOTOMIE-------------*

      PHIINF0 = 'EXTR' LA1 (I - 1);
      PHIINF = PHIINF0;
      PHISUP = 'EXTR' LA1 I;
      'REPE' SB4;
           PHICOUR = (PHIINF + PHISUP) / 2.;
           MCOUR = 'IPOL' PHICOUR LISS1 LISS2;
           SI ('EGA' PHIINF PHIINF0);
                 MINF = 'EXTR' LA2 (I - 1);
           SINON;
               MINF = 'IPOL' PHIINF LISS1 LISS2;
           FINSI;
           PHIMOY = (PHIINF + PHICOUR) / 2.;
           MMOY = IPOL PHIMOY LISS1 LISS2;
           SIGMOY = MMOY / (4 * RAYM * RAYM * EPA *
               (('COS'(AN / 4.)) - (0.5 * ('SIN'(AN / 2.)))));
           DPHIP = (PHICOUR - PHIINF) - (CM0 * (MCOUR - MINF));
           JP = JPP + ((SIGMOY * RAYM * (('COS'(AN / 2.))
                                    + ('SIN'(AN / 4.)))) * DPHIP);

           JE = ((KF0 * MCOUR) ** 2) / E;
           J = JE + JP;
           TEST = ABS((J - J1C) / J1C);
           LOG5 = (TEST <EG 10.D-4);
           'SI' LOG5;
              'QUITTER' SB4;
           'SINON';
              'SI' (J > J1C);
                  PHISUP = PHICOUR;
              'SINON';
                  PHIINF = PHICOUR;
                  JPP = JP;
              'FINSI';
           'FINSI';
      'FIN' SB4;
   'REMP' LA1 I PHICOUR;
   'REMP' LA2 I MCOUR;
   JPP = JP;
   'REMP' LISTJ I J;
*---------------STOCKAGE DE LA COURBE SOLUTION-------------------

   K11 = 2;
   PHIPREC = 'EXTR' LA1 (I - 1);
   'REPE' BOC1 ;
       U1 = 'EXTR' LISS1 K11;
       U2 = 'EXTR' LISS2 K11;
       'SI' ((U1 <EG PHICOUR) ET (U1 > PHIPREC));
             'REMP' LSOLPHI IN U1;
             'REMP' LSOLM IN U2;
             IN = IN + 1;
             K11 = K11 + 1;
       'SINON';
          'SI' (U1 > PHICOUR);
               'REMP' LSOLPHI IN PHICOUR;
               'REMP' LSOLM IN MCOUR;
               IN = IN + 1;
               'QUITTER' BOC1;
          'SINON';
               K11 = K11 + 1;
          'FINSI';
       'FINSI';
   'FIN' BOC1;


   AN = AN + (AN / 200.);
 'FIN' SB1;

*-------RESTRICTION DE LF1 ET LF2 A UNE DIMENSION CORRECTE--------------

  IN = IN - 1;
  R = 2;
  LF1 = PROG IN * 0.;
  LF2 = PROG IN * 0.;
  'REPE' S4 ;
         A2 = 'EXTR' LSOLPHI R;
         A3 = 'EXTR' LSOLM R;
         'REMP' LF1 R A2;
         'REMP' LF2 R A3;
         R = (R + 1);
         'SI' (R > IN);
              'QUITTER' S4;
         'FINSI';
  'FIN' S4;


 EVO6 = EVOL COUL 'MANU' LF1 LF2;
 ETAB . 'ANGLE' = ANINI;

  'FINPROC' EVO6;

