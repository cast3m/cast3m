$$$$ G_CALCUL
* G_CALCUL  PROCEDUR  FD218221  16/12/06    21:15:03     9229
DEBPROC G_CALCUL SUPTAB*'TABLE' INFTAB*'TABLE';
*|=====================================================================|
*|                                                                     |
*|    OBJECTIF :                                                       |
*|    ==========                                                       |
*|                                                                     |
*| Cette procedure est appelee par G_THETA.                            |
*|                                                                     |
*|                                                                     |
*|    ENTREE :                                                         |
*|    ========                                                         |
*|                                                                     |
*| SUPTAB = objet de type TABLE utilise par la procedure G_THETA       |
*| INFTAB = objet de type TABLE donnant toute information              |
*|          complementaire pour le calcul des integrales de contour    |
*|                                                                     |
*|                                                                     |
*|                                                                     |
*|                                                                     |
*|=====================================================================|
flmess = faux ;



*|=====================================================================|
*|=======  I. INITIALISATIONS  ========================================|


**************************************************
************* INFORMATIONS GENERALES *************
**************************************************
&DIME = VALE DIME; &MODE = VALE MODE;
&ELEM = VALE 'ELEM'; MOTAX = MOT 'AXIS' ;

**************************************************
*** INFORMATIONS PROVENANT DE LA TABLE INFTAB ****
**************************************************
MOTTI  = INFTAB.'MOTTI'  ;
MODCOU = INFTAB.'MODCOU' ;
TABMOD = INFTAB.'TABMOD' ;
NBOBJ  = DIME    TABMOD  ;
LINTER = INFTAB.'LINTER' ;
ICOQU  = INFTAB.'ICOQU'  ;
IGDER  = INFTAB.'IGDER'  ;
IGDEP  = INFTAB.'IGDEP'  ;
IREPRI = INFTAB.'IREPRI' ;
IPAP   = INFTAB.'IPAP'   ;

ILIN   = INFTAB.'ILIN'   ;
ITHER  = INFTAB.'ITHER'  ;
IPARAL = INFTAB.'IPARAL' ;
MATVARI= INFTAB.'MATVARI';
YOUVARI= INFTAB.'YOUVARI';
ALFVARI= INFTAB.'ALFVARI';
IINTE  = INFTAB.'IINTE'  ;
IQUA   = INFTAB.'IQUA'   ;
ELTETA = INFTAB.'ELTETA' ;
RIGTOT = INFTAB.'RIGTOT' ;
OBJMOD = INFTAB.'OBJMOD' ;
MAILMOD= EXTR OBJMOD 'MAILLAGE' ;
MODPLA = INFTAB.'MODPLA' ;
FOR000 = INFTAB.'FOR000' ;
DEP000 = INFTAB.'DEP000' ;
CMD000 = INFTAB.'CMD000' ;
CMD001 = INFTAB.'CMD001' ;
GRA000 = INFTAB.'GRA000' ;
*
IPERSO1 = INFTAB.'IPERSO1';
SI IPERSO1;
  ESTIM = INFTAB . 'ESTIMATION';
FINSI;
IXFEM    = INFTAB.'IXFEM'   ;
ITYPEF   = INFTAB.'ITYPEF'  ;
IABC     = INFTAB.'IABC'    ;
&BOUCEXT = INFTAB.'&BOUCEXT';
&BOUCMIX = INFTAB.'&BOUCMIX';
INST     = INFTAB.'INST'    ;
FACT1    = INFTAB.'FACT1'   ;
C_MATE   = INFTAB.'C_MATE'  ;
MAT1     = INFTAB.'MAT1'    ;
ENERM    = INFTAB.'ENERM'   ;
WVMIS    = INFTAB.'WVMIS'   ;
TALPH1   = INFTAB.'TALPH1'  ;
TEPINT   = INFTAB.'TEPINT'  ;
TEPABS   = INFTAB.'TEPABS'  ;
PREINT   = INFTAB.'PREINT'  ;
* (fdp) pour la pression sur la fissure
SI (EXIS INFTAB 'MODE_PRESSION_FISSURE');
  MODPF = INFTAB.'MODE_PRESSION_FISSURE';
  PNF = INFTAB.'PRESSION_FISSURE';
FINSI;
DEPINT  = INFTAB.'DEPINT' ;
SIGF    = INFTAB.'SIGF'   ;
SIG1    = INFTAB.'SIG1'   ;
VARF    = INFTAB.'VARF'   ;
*pour la dynamique
VITF    = INFTAB.'VITF'   ;
ACCF    = INFTAB.'ACCF'   ;
*pour le decouplage
MOTMIX  = INFTAB.'MOTMIX' ;
MOTMIA  = INFTAB.'MOTMIA' ;
A_PREI  = INFTAB.'A_PREI' ;
A_DEPI  = INFTAB.'A_DEPI' ;
A_DEPGR = INFTAB.'A_DEPGR';
A_SIGF  = INFTAB.'A_SIGF' ;
* modif sm
DEFINT  = INFTAB.'DEFINT' ;
IDEFI   = INFTAB.'IDEFI'  ;
* fin modif sm
*debut du cas contact frottant IFROT (btrolle 19/02/2013)
IFROT   = INFTAB.'IFROT'  ;
si (IFROT);
  OBJCON  = INFTAB .'OBJCON' ;
  OBJCON2 = INFTAB .'OBJCON2';
  WDEP    = INFTAB .'WDEP'   ;
  SIGCON  = INFTAB .'SIGCON' ;
  B_DEPGR = INFTAB .'B_DEPGR';
fins;
*fin du cas contact frottant IFROT (btrolle 19/02/2013)

**************************************************
***  QUELQUES MOTS POUR SIMPLIFIER L'ECRITURE  ***
**************************************************
MOTU= MOTS 'UX' 'UY'; MOTF = MOTS 'FX' 'FY';
MU1 = MOT  'UX'  ; MU2  = MOT 'UY'  ; MU3  = MOT 'UZ'  ;
MF1 = MOT  'FX'  ; MF2  = MOT 'FY'  ; MF3  = MOT 'FZ'  ;
MFA1= MOT  'FAX' ; MFA2 = MOT 'FAY' ; MFA3 = MOT 'FAZ' ;
GR1 = MOT  'UX,X'; GR2  = MOT 'UX,Y'; GR3  = MOT 'UX,Z';
GR4 = MOT  'UY,X'; GR5  = MOT 'UY,Y'; GR6  = MOT 'UY,Z';
GR7 = MOT  'UZ,X'; GR8  = MOT 'UZ,Y'; GR9  = MOT 'UZ,Z';
SM1 = MOT  'SMXX'; SM2  = MOT 'SMYY'; SM3  = MOT 'SMZZ';
SM4 = MOT  'SMXY'; SM5  = MOT 'SMXZ'; SM6  = MOT 'SMYZ';
EP1 = MOT  'EPXX'; EP2  = MOT 'EPYY'; EP3  = MOT 'EPZZ';
EP4 = MOT  'GAXY'; EP5  = MOT 'GAXZ'; EP6  = MOT 'GAYZ';
SI (EGA MOTAX &MODE) ;
   MOTU = MOTS 'UR' 'UZ' ; MOTF = MOTS 'FR' 'FZ' ;
   LMTSF = MOTS 'FR' 'FZ' 'FT';
   LMTSU = MOTS 'UR' 'UZ' 'UT';
   MU1 = MOT 'UR'  ; MU2 = MOT 'UZ'  ; MU3 = MOT 'UT'  ;
   MF1 = MOT 'FR'  ; MF2 = MOT 'FZ'  ;
   GR1 = MOT 'UR,R'; GR2 = MOT 'UR,Z'; GR3 = MOT 'UR,T';
   GR4 = MOT 'UZ,R'; GR5 = MOT 'UZ,Z'; GR6 = MOT 'UZ,T';
   GR7 = MOT 'UT,R'; GR8 = MOT 'UT,Z'; GR9 = MOT 'UT,T';
   SM1 = MOT 'SMRR'; SM2 = MOT 'SMZZ'; SM3 = MOT 'SMTT';
   SM4 = MOT 'SMRZ';
   EP1 = MOT 'EPRR'; EP2 = MOT 'EPZZ'; EP3 = MOT 'EPTT';
   EP4 = MOT 'GARZ';
FINSI;
SI (&DIME EGA 3) ;
   MOTU = MOTS 'UX' 'UY' 'UZ' ; MOTF = MOTS 'FX' 'FY' 'FZ' ;
FINSI;
SI ICOQU;
   MOTU = MOTU ET (MOTS RX RY RZ) ;
   MOTF = MOTF ET (MOTS MX MY MZ) ;
FINSI;
*BP: PETIT AJOUT DE NOM DE COMPOSANTE DE CHPOINT
SI(EGA IINTE 1); MOCOMP = 'J';    FINSI;
SI(EGA IINTE 2); MOCOMP = 'C*';   FINSI;
SI(EGA IINTE 3); MOCOMP = 'C*';   FINSI;
SI(EGA IINTE 4); MOCOMP = 'DJDA'; FINSI;
SI(EGA IINTE 5); MOCOMP = 'J';    FINSI;
SI(EGA IINTE 99);
  SI(EGA MOTMIX 'I'  ); MOCOMP = 'K1';  FINSI;
  SI(EGA MOTMIX 'II' ); MOCOMP = 'K2';  FINSI;
  SI(EGA MOTMIX 'III'); MOCOMP = 'K3';  FINSI;
FINSI;

************************************
*** RIGTOT + BLOCAGES MECANIQUES ***
************************************
SI (EGA IINTE 4) ;
  SI IPAP;
     RIGTOT = RIGTOT ET
             (SUPTAB.'SOLUTION_PASAPAS'.'BLOCAGES_MECANIQUES');
*rem bp: on suppose ceux ci identique a ceux de wtab...
  SINON;
     RIGTOT = RIGTOT ET SUPTAB.'BLOCAGES_MECANIQUES';
  FINSI;
FINSI;

************************************
********* Valeurs initiales ********
************************************
S10  = 0.; S20  = 0.; S30  = 0.; S40  = 0.; S50  = 0.;
S60  = 0.; S70  = 0.; S80  = 0.; S90  = 0.; S100 = 0.;
S110 = 0.; S120 = 0.; S130 = 0.; S140 = 0.; S141 = 0.;
S150 = 0.; S160 = 0.; S170 = 0.; S180 = 0.;
S190 = 0.; S200 = 0.; S210 = 0.; S220 = 0.;

************************************
********** MATERIAU MAT2 ***********
************************************
SI (ICOQU ET IQUA);
   MAT2 = MAT1;
SINON;
   MAT2 = TEXT '        ';
FINSI;

***************************************************
** DECLARATION DES TABLES STOCKANT LES RESULTATS **
***************************************************
* SI ((EGA &BOUCEXT 1) ET (EGA &BOUCMIX 1));
*   SI (IPAP ET (NON IREPRI));
* BP: mauvaise place du test sur IREPRI
si(iperso1); FLCREA = iabc ega 0;
sino;        FLCREA = NON IREPRI;
fins;
SI ((EGA &BOUCEXT 1) ET (EGA &BOUCMIX 1) et FLCREA);
  SI (IPAP);
    si(flmess); mess 'on va creer SUPTAB RESULTATS'; fins;
*** CREATION DE LA TABLE CRIT_DECHA_*
    SI (EGA ITYPEF 99);
       SUPTAB.'CRIT_DECHA_GLOBAL1'    = TABLE ;
       SUPTAB.'CRIT_DECHA_LOCAL1'     = TABLE ;
       SUPTAB.'CRIT_DECHA_GLOBAL2'    = TABLE ;
       SUPTAB.'CRIT_DECHA_GLOBAL2_L'  = TABLE ;
       SUPTAB.'CRIT_DECHA_LOCAL2'     = TABLE ;
    FINSI;
*** CREATION DE LA TABLE RESULTATS EN 2D
    SI (EGA &DIME 2);
      SI (EGA IINTE 99);
         SUPTAB.'RESULTATS'           = TABLE;
         SUPTAB.'RESULTATS'.'I'       = TABLE;
         SUPTAB.'RESULTATS'.'II'      = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS' = TABLE;
      SINON;
         SUPTAB.'RESULTATS'           = TABLE;
      FINSI;
    FINSI;
*** CREATION DE LA TABLE RESULTATS EN 3D
    SI (EGA &DIME 3) ;
      SI (EGA IINTE 99);
         SUPTAB.'RESULTATS'                 = TABLE;
         SUPTAB.'RESULTATS'.'I'             = TABLE;
         SUPTAB.'RESULTATS'.'II'            = TABLE;
         SUPTAB.'RESULTATS'.'III'           = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS'       = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS'.'I'   = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS'.'II'  = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS'.'III' = TABLE;
      SINON;
         SUPTAB.'RESULTATS'                 = TABLE;
         SUPTAB.'EVOLUTION_RESULTATS'       = TABLE;
      FINSI;
    FINSI;
*** CREATION DE LA TABLE EPAISSEUR_RESULTATS EN COQUE
    SI ICOQU;
       SI (EGA IINTE 99);
          SUPTAB.'EPAISSEUR_RESULTATS'      = TABLE;
          SUPTAB.'EPAISSEUR_RESULTATS'.'I'  = TABLE;
          SUPTAB.'EPAISSEUR_RESULTATS'.'II' = TABLE;
          SUPTAB.'EPAISSEUR_RESULTATS'.'III'= TABLE;
       SINON;
          SUPTAB.'EPAISSEUR_RESULTATS'      = TABLE;
       FINSI;
    FINSI;
* CAS OU L ON NE VERIFIE PAS (IPAP ET (NON IREPRI));
  SINON;
*** CREATION DE LA TABLE RESULTATS EN 2D
    SI (EGA &DIME 2);
      SI (EGA IINTE 99);
         SUPTAB.'RESULTATS' = TABLE;
      FINSI;
    FINSI;
*** CREATION DE LA TABLE RESULTATS EN 3D
    SI (EGA &DIME 3);
      SI (EGA IINTE 99);
         SUPTAB.'RESULTATS'       = TABLE;
         SUPTAB.'RESULTATS'.'I'   = TABLE;
         SUPTAB.'RESULTATS'.'II'  = TABLE;
         SUPTAB.'RESULTATS'.'III' = TABLE;
      SINON;
         SUPTAB.'RESULTATS'       = TABLE;
      FINSI;
    FINSI;
*** CREATION DE LA TABLE EPAISSEUR_RESULTATS EN COQUE
    SI ICOQU;
      SI (EGA IINTE 99);
         SUPTAB.'EPAISSEUR_RESULTATS' = TABLE;
      FINSI;
    FINSI;
  FINSI;
FINSI;

*POUR LE PAS DE TEMPS IABC
SI (IPAP ET (EGA &DIME 3) ET (EGA &BOUCMIX 1));
  SI (EGA IINTE 99);
     SUPTAB.'RESULTATS'.'I'.IABC   = TABLE;
     SUPTAB.'RESULTATS'.'II'.IABC  = TABLE;
     SUPTAB.'RESULTATS'.'III'.IABC = TABLE;
  SINON;
     SUPTAB.'RESULTATS'.IABC       = TABLE;
  FINSI;
FINSI;



*|=====================================================================|
*|=======  II. CRITERES DE DECHARGES  =================================|


************************************************************
****** CRITERE GLOBAL 1 DE DECHARGE DES CONTRAINTES ********
************************************************************
***
*** EVALUATION EN ELASTO-PLASTICITE OU THERMO-ELASTO-PLASTICITE
*** PAR COMPARAISON AVEC UN CALCUL EN ELASTICITE NON-LINEAIRE
*** EN PRENANT POUR REFERENCE LES CONTRAINTES DE VON-MISES DU
*** CALCUL RENDU PAR PASAPAS ET LES CONTRAINTES EQUIVALENTES LUES
*** SUR LES COURBES DE TRACTION
***
OUICRIT = FAUX ;
SI (EXIS SUPTAB 'CALCUL_CRITERE') ;
  OUICRIT = SUPTAB.'CALCUL_CRITERE';
FINSI ;
SI (FLMESS ET OUICRIT);
  MESS 'on va calculer les CRITERES DE DECHARGES, modpla=';
*   list modpla;
FINSI;

SI ((EGA ITYPEF 99) ET IPAP ET OUICRIT);

  XCRIT = 1. ;

  REPE BCMOD0 NBOBJ;
    EXISCRIT = FAUX ;
    MODI  = TABMOD.&BCMOD0 ;
    MATI  = REDU MAT1 MODI ;
    EPSE1 = EXCO VARF 'EPSE' ;
    EPSE1 = EPSE1 CHAN TYPE 'SCALAIRE';
    EPSET = REDU EPSE1 MODI ;
    MSQ   = MASQ 'SUPERIEUR' EPSET 1.E-6 ;

*VMIS1 = contraintes de Von-Mises en elastoplastique
    VMIS1 = CHAN ('VMIS' MODI (REDU SIGF MODI) MATI)
            TYPE 'SCALAIRE';

    SI ('EXIS' MODPLA &BCMOD0) ;
*      TEPABS = TEPINT + TALPH1 ;
      YOU = CHAN 'STRESSES' MODI (EXCO MATI 'YOUN') ;
      YOU = YOU CHAN TYPE 'SCALAIRE';
      SI (EGA MODPLA.&BCMOD0 1);
*modele est plastique isotrope. on utilise la
*courbe de traction TABTRA.&BCMOD0
        EXISCRIT = VRAI ;
        MATA = 'VARI' 'NUAG' MODI ('MATE' MODI
               'TRAC' TABTRA.&BCMOD0) TEPABS ;
        EPELAST = EXCO (VMIS1*(YOU**(-1))) 'SCAL' 'EPSE' ;
        EPSTOT = EPELAST + EPSET ;
*VMIS2 = contraintes deduites des deformations
*equivalentes par la courbe de traction
        VMIS2 = 'VARI' 'NUAG' MODI (EXCO 'TRAC' MATA 'SIGM')
                  EPSTOT 'STRESSES' 'SCALAIRE';
      FINSI;

      SI (EGA MODPLA.&BCMOD0 2) ;
*modele est plastique cinematique, cas ou
*SIGY et H sont des evolutions
        EXISCRIT = VRAI ;
        VMIS22 = CHAN 'STRESSES' MODI (EXCO MATI 'SIGY' 'SCAL') ;
        HSCAL = EXCO MATI 'H' 'SCAL';
        HSCAL = HSCAL CHAN TYPE 'SCALAIRE';
        VMIS2 = VMIS22 + ((CHAN 'STRESSES' MODI HSCAL) * EPSET);
      FINSI;

      SI (EGA MODPLA.&BCMOD0 3) ;
*modele est plastique parfait
        EXISCRIT = VRAI ;
        VMIS2 = CHAN 'STRESSES' MODI ((EXCO MATI 'SIGY' 'SCAL')
                CHAN TYPE 'SCALAIRE' )    ;
      FINSI;

    SINON;
*** modele elastoplastique et modele plastique cinematique
***  avec caracteristiques independantes de la temperature

      SI (EXIS MATI 'TRAC') ;
*extraction de la courbe de traction du modele MODI
        EXISCRIT = VRAI ;
        TRACTI = EXTR MATI 'TRAC' 1 1 1 ;
        PEPSO  = EXTR TRACTI 'ABSC' ;
        PSIGM  = EXTR TRACTI 'ORDO' ;
        TRACTI = 'EVOL' 'MANU' 'EPSE' PEPSO 'SIGM' PSIGM ;
        YOU    = CHAN 'STRESSES' MODI (EXCO MATI 'YOUN') ;
        YOU    = YOU CHAN TYPE 'SCALAIRE' ;
        EPELAST= EXCO (VMIS1*(YOU**(-1))) 'SCAL' 'EPSE' ;
        EPSTOT = EPELAST + EPSET ;
*VMIS2 = contraintes deduites des deformations
*equivalentes par la courbe de traction
        VMIS2 = 'VARI' MODI EPSTOT TRACTI 'STRESSES' ;
*?       VMIS2  = VMIS2 CHAN TYPE 'SCALAIRE';
      FINSI;

      SI ((EXIS MATI 'SIGY') ET (EXIS MATI 'H'));
*modele est plastique cinematique traite ici separement du cas
*ou SIGY et H sont des evolutions c'est inutile car MAT1 est
*deja instantie en temperature mais il faudra regler le pb de
*MODPLA dans son ensemble avec ZONE et une identification
*automatique de chacun des sous-modes
        EXISCRIT = VRAI ;
        VMIS22 = CHAN 'STRESSES' MODI (EXCO MATI 'SIGY' 'SCAL');
        VMIS22 = VMIS22 CHAN TYPE 'SACALAIRE';
        HSCAL  = EXCO MATI 'H' 'SCAL';
        HSCAL  = HSCAL CHAN TYPE 'SCALAIRE';
        VMIS2  = VMIS22 + ((CHAN 'STRESSES' MODI HSCAL) * EPSET);
      FINSI;
      SI ((EXIS MATI 'SIGY') ET (NON (EXIS MATI 'H')));
*modele est plastique parfait
        EXISCRIT = VRAI ;
        VMIS2  = CHAN 'STRESSES' MODI (EXCO MATI 'SIGY' 'SCAL');
        VMIS2  = VMIS2 CHAN TYPE 'SCALAIRE';
      FINSI;

    FINSI;

    SI EXISCRIT ;
      VMIS1P = VMIS1 * MSQ ;
      VMIS1S = INTG MODI VMIS1P ;
      VMIS2P = VMIS2 * MSQ ;
      VMIS2S = INTG MODI VMIS2P ;
      SI ('NEG' VMIS1S 0.) ;
        XCRIT = XCRIT + ((VMIS2S/VMIS1S) - 1.) ;
      FINSI ;
    FINSI ;

  FIN BCMOD0;

  SUPTAB.'CRIT_DECHA_GLOBAL1'.IABC = XCRIT ;

FINSI;


*********************************************************
****** CRITERE LOCAL 1 DE DECHARGE DES CONTRAINTES ******
*********************************************************
***
***
***
***
***

SI ((EGA ITYPEF 99) ET IPAP ET (IABC  > 0) ET OUICRIT);
  SI FLMESS;
    MESS 'CRITERE LOCAL 1';
  FINSI;
  EXISCRIT = FAUX ;
  VMITOTF = ZERO OBJMOD STRESSES ;
  VMITOT1 = ZERO OBJMOD STRESSES ;
*initialisation

  REPE BCMOD0 NBOBJ;

    MODI  = TABMOD.&BCMOD0 ;
    MATI  = REDU MAT1 MODI ;
    EPSE1 = EXCO VARF 'EPSE' ;
    EPSE1 =  EPSE1 CHAN TYPE 'SCALAIRE';
    EPSET = REDU EPSE1 MODI ;
    MSQ   = 'MASQ' 'SUPERIEUR' EPSET 1.E-6 ;

    SI ('EXIS' MODPLA &BCMOD0) ;
      INST1  = SUPTAB.'SOLUTION_PASAPAS'.'TEMPS'.(IABC-1) ;
      TEPIN1 = TIRE CHAR1 INST1 'T' ;
      TEPIN1 = REDU TEPIN1 ELTETA ;
      TEPIN1 = TEPIN1 - TALPH1 ;
      TEPABS = TEPINT + TALPH1 ;
      TEPAB1 = TEPIN1 + TALPH1 ;
*TEPAB1 : temperature absolue au pas precedent

*modele plastique isotrope
      SI (EGA MODPLA.&BCMOD0 1) ;
        MATA = 'VARI' 'NUAG' MODI ('MATE' MODI
                      'TRAC' TABTRA.&BCMOD0) TEPABS ;
        VMISF = CHAN ('VMIS' MODI SIGF MATA) TYPE 'SCALAIRE' ;
*VMISF : contrainte de Von Mises au pas courant
        MATA1 = 'VARI' 'NUAG' MODI ('MATE' MODI
                      'TRAC' TABTRA.&BCMOD0) TEPAB1 ;
        VMIS1 = CHAN ('VMIS' MODI SIG1 MATA1) TYPE 'SCALAIRE' ;
*VMIS1 : contrainte de Von Mises au pas precedent
      FINSI;

*modele plastique cinematique ou plastique parfait
      SI  ((EGA MODPLA.&BCMOD0 2) OU (EGA MODPLA.&BCMOD0 3)) ;
        VMISF = CHAN ('VMIS' MODI SIGF MATI) TYPE 'SCALAIRE';
        VMIS1 = CHAN ('VMIS' MODI SIG1 MATI) TYPE 'SCALAIRE';
      FINSI;

*pour ces 3 modeles
      SI   ((EGA MODPLA.&BCMOD0 1) OU
            (EGA MODPLA.&BCMOD0 2) OU
            (EGA MODPLA.&BCMOD0 3)) ;
        EXISCRIT = VRAI ;
        VMISFP = VMISF * MSQ ;
        VMIS1P = VMIS1 * MSQ ;
*VMISFP : contrainte de Von Mises aux points d'integration plastifies
**      au pas courant
*VMIS1P : contrainte de Von Mises aux points d'integration plastifies
**      au pas precedent
*on considere la plastification lorsque EPSET > 1E-6
        VMISF1P = VMISFP - VMIS1P ;
*VMISFP : difference entre la contrainte equivalente au temps de
*calcul t et celle au temps precedent (t-1)
        VMITOTF = VMITOTF + VMISFP ;
        VMITOT1 = VMITOT1 + VMISF1P ;
      FINSI;

    SINON;

      SI ('EXIS' MATI 'TRAC') ;
*modele elastoplastique avec
**caracteristiques independantes de la temperature
        VMISF = CHAN ('VMIS' MODI (REDU SIGF MODI) MATI)
                     TYPE 'SCALAIRE';
        VMIS1 = CHAN ('VMIS' MODI (REDU SIG1 MODI) MATI)
                     TYPE 'SCALAIRE';
      FINSI;
      SI (EXIS MATI 'SIGY') ;
*modele plastique cinematique et plastique parfait avec
**caracteristiques independantes de la temperature
        VMISF = CHAN ('VMIS' MODI SIGF MATI)
                     TYPE 'SCALAIRE';
        VMIS1 = CHAN ('VMIS' MODI SIG1 MATI)
                     TYPE 'SCALAIRE';
      FINSI;

      SI (('EXIS' MATI 'TRAC') OU (EXIS MATI 'SIGY')) ;
        EXISCRIT = VRAI ;
        VMISFP   = VMISF * MSQ ;
        VMIS1P   = VMIS1 * MSQ ;
        VMISF1P  = VMISFP - VMIS1P ;
        VMITOTF  = VMITOTF + VMISFP ;
        VMITOT1  = VMITOT1 + VMISF1P ;
      FINSI ;
    FINSI ;

  FIN BCMOD0 ;

  SI EXISCRIT ;
*      MSQO = (CHAN 'CHPO' OBJMOD (VMITOT1*((VMITOTF)**(-1))))
*             'MASQ' 'INFERIEUR' 0. ;
*      SUPTAB.'CRIT_DECHA_LOCAL1'.IABC =
*         (CHAN 'CHPO' OBJMOD ((VMITOT1*((VMITOTF)**(-1)))) * MSQO) ;
* #MC 04/11/98 : pour le MASQ, un produit suffit (pas de risque de /0)
    MSQO = (CHAN 'CHPO' OBJMOD (VMITOT1*VMITOTF))
           'MASQ' 'INFERIEUR' 0. ;
* #MC 04/11/98 : ou il y a des 0, on met 1.E-10
    SUPTAB.'CRIT_DECHA_LOCAL1'.IABC =
       (CHAN 'CHPO' OBJMOD ((VMITOT1*((
       VMITOTF+(1.E-10*(VMITOTF 'MASQ' 'EGAL' 0.))
       )**(-1)))) * MSQO) ;
*lorsque la valeur du critere est positive, c'est-a-dire qu'il n'y a
**pas de decharge, celle-ci est ramenee a zero
  FINSI;

FINSI;


************************************************************
****** CRITERE GLOBAL 2 DE DECHARGE DES CONTRAINTES ********
************************************************************
***
***
***

SI ((EGA ITYPEF 99) ET IPAP ET (NON IREPRI) ET OUICRIT);

  SI FLMESS;
    MESS 'CRITERE GLOBAL 2';
  FINSI;

  SI ('EXIS' SUPTAB.'SOLUTION_PASAPAS' 'DEFORMATIONS_INELASTIQUES');
    SI IPERSO1;
      EPPLASF = ESTIM . 'DEFORMATIONS_INELASTIQUES';
    SINON;
      EPPLASF = SUPTAB . 'SOLUTION_PASAPAS'
                       . 'DEFORMATIONS_INELASTIQUES' . IABC;
    FINSI;

    XCRIT = 1. ;
    PRO1  = 0. ;
    PRO2  = 0. ;
    CRITLOCA = MANU 'CHML' OBJMOD 'SCAL' 1. 'STRESSES' ;
    NUMERA   = ZERO OBJMOD 'STRESSES' ;
    DENOMI   = ZERO OBJMOD 'STRESSES' ;
*initialisation
*glob2 n'est pas calcule si reprise car on ne connait pas i-1

    VMISF = CHAN ('VMIS' OBJMOD SIGF MAT1) TYPE 'SCALAIRE';
*VMISF : contrainte de Von Mises au pas courant
    SI ('EXIS' SUPTAB VMISMAX);
      MQSIG = 'MASQ' 'SUPERIEUR' 0. ((SUPTAB.VMISMAX) - VMISF) ;
      VMISF = VMISF + (MQSIG * ((SUPTAB.VMISMAX) - VMISF)) ;
    FINSI;
    SUPTAB.VMISMAX = VMISF ;

    REPE BCMOD0 NBOBJ ;
      EXISCRIT = FAUX ;
      MODI   = TABMOD.&BCMOD0 ;
      MATI   = REDU MAT1 MODI ;
      MAILI  = EXTR MODI 'MAIL';
      EPSEI  = REDU (EXCO VARF 'EPSE') MODI ;
      EPSEI  = EPSEI CHAN TYPE 'SCALAIRE';
*       EPPLASI = (SUPTAB.'SOLUTION_PASAPAS'.
*                'DEFORMATIONS_INELASTIQUES'.IABC) REDU MODI ;
      EPPLASI= REDU EPPLASF MODI ;
      VMISFI = REDU VMISF   MODI ;
      SIGFI  = REDU SIGF    MODI ;
      YOU = CHAN 'STRESSES' MODI (EXCO MATI 'YOUN') ;
      YOU = YOU  CHAN TYPE 'SCALAIRE';
      SI ('EXIS' MODPLA &BCMOD0) ;
        SI ((EGA MODPLA.&BCMOD0 1) OU
            (EGA MODPLA.&BCMOD0 2) OU
            (EGA MODPLA.&BCMOD0 3)) ;
*modele plastique isotrope
*modele plastique cinematique
*modele plastique parfait
          lm_dein = EXTR epplasi 'COMP' ;
          lm_defo = EXTR modi 'DEFO' ;
          ep_u    = nomc lm_dein lm_defo epplasi ;
          ep_u    = changer ep_u type deformations ;
*         PRO1    = PRO1 + (INTG MODI (ENER MODI SIGFI EPPLASI));
          PRO1    = PRO1 + (INTG MODI (ENER MODI SIGFI ep_u));
          PRO2    = PRO2 + (INTG MODI (VMISFI * EPSEI)) ;
          SI (PRO2 'NEG' 0.D0) ;
            XCRIT = XCRIT + (1. - (PRO1/PRO2)) ;
          FINS;
        FINSI;
      SINON;

        SI (('EXIS' MATI 'TRAC') OU (EXIS MATI 'SIGY'));
*modele elastoplastique et
*modele plastique cinematique et plastique parfait
** avec caracteristiques independantes de la temperature
          lm_dein = EXTR epplasi 'COMP' ;
          lm_defo = EXTR modi 'DEFO' ;
          ep_u    = 'NOMC' lm_dein lm_defo epplasi ;
          ep_u    = ep_u changer type deformations ;
*         PRO1    = PRO1 + (INTG MODI (ENER MODI  SIGFI EPPLASI));
          PRO1    = PRO1 + (INTG MODI (ENER MODI  SIGFI ep_u));
          PRO2    = PRO2 + (INTG MODI (VMISFI * EPSEI)) ;
*         NUMERA  = NUMERA + (ENER MODI  SIGFI EPPLASI) ;
          NUMERA  = NUMERA + (ENER MODI  SIGFI ep_u) ;
          DENOMI  = DENOMI + (VMISFI * EPSEI) ;
*         petit traitement pour eviter de diviser par zero
          MIN0 = MINI 'ABS' DENOMI ;
          MIN1 = MINI DENOMI ;
          MAX1 = MAXI DENOMI ;
          AMP = MAX1 - MIN1 ;
          SI (AMP < 1.E-15) ;
            AMP = 1.E-15 ;
          FINSI ;
          SI (MIN0 < (1.E-15 * AMP)) ;
            DENOMI = DENOMI + (1.E-15 * AMP) ;
          FINSI ;
          CRITLOCA = CRITLOCA + (1. - (NUMERA / DENOMI)) ;
        FINSI;
      FINSI ;
    FIN BCMOD0 ;

* Le maxi sert a corriger le probleme castem sur les EPSE
* (ENER MODI  SIGFI EPPLASI) n est pas toujours egal a
* (VMISFI * EPSEI) lorsque le chargement est proportionnel
* A supprimer quand le pb sera resolu
    SUPTAB.'CRIT_DECHA_GLOBAL2'  .IABC='MAXI'(prog 0.9999999999 XCRIT);
    SUPTAB.'CRIT_DECHA_GLOBAL2_L'.IABC= CRITLOCA ;

*mess 'PRO1' , PRO1 , 'PRO2' , PRO2 ,  'XCRIT' , XCRIT ;

  FINSI;
FINSI;


*********************************************************
****** CRITERE LOCAL 2 DE DECHARGE DES CONTRAINTES ******
*********************************************************
***
***
***
***

SI ((EGA ITYPEF 99) ET IPAP ET (IABC  > 0) ET OUICRIT);
si(flmess);   mess 'CRITERE local 2'; fins;

*initialisation
        EXISCRIT = FAUX ;
        CRIT0 = 'ZERO' OBJMOD STRESSES ;

  REPE BCMOD0 NBOBJ;
     MODI = TABMOD.&BCMOD0 ;
     MATI = REDU MAT1 MODI ;
     EPSE1 = EXCO VARF 'EPSE' ;
     EPSE1 = EPSE1 CHAN TYPE 'SCALAIRE';
     EPSET = REDU EPSE1 MODI ;

    SI (('EXIS' MODPLA &BCMOD0) OU ('EXIS' MATI 'TRAC')
      OU ('EXIS' MATI 'SIGY'));
           MAT_z = 'MANU' 'CHML' MODI 'YOUN' 1. 'NU' 0. 'EPAI' 1.
                          TYPE 'CARACTERISTIQUES' 'RIGIDITE' ;
           EXISCRIT = VRAI ;
           DSIG = ELAS MODI (SIGF - SIG1) MAT_z ;
           INV1 = ENER MODI (REDU SIGF MODI) (REDU DSIG MODI) ;
           SIGFTRA = ENER MODI (REDU SIGF MODI)
                    (REDU (ELAS MODI SIGF MAT_z) MODI) ;
           DSIGTRA = ENER MODI (REDU DSIG MODI)
                 (ELAS MODI DSIG MAT_z) ;
           NOR1 = SIGFTRA**(1./2) ;
           DNOR = DSIGTRA**(1./2) ;
           DENO = NOR1 * DNOR ;
           CRIT0 = CRIT0 + (INV1 * (DENO**(-1))) ;

    FINSI ;

  FIN BCMOD0 ;

  SI EXISCRIT ;
       SUPTAB.'CRIT_DECHA_LOCAL2'.IABC = CHAN 'CHPO' OBJMOD CRIT0 ;
  FINSI;


FINSI;



*|=====================================================================|
*|=======  III. TRAITEMENT DES CHAMPS MECANIQUES  =====================|
si(flmess);   mess 'TRAITEMENT DES CHAMPS MECANIQUES'; fins;

****************************************************
* ON CHANGE LA TEMPERATURE EN MCHAML AU NOEUD =TEPINT
****************************************************
  SI (EGA (TYPE TEPINT) 'CHPOINT ');
     TEPINT = REDU TEPINT ELTETA ;
     TEPINT = CHAN 'CHAM' TEPINT OBJMOD 'NOEUD' 'TEMPERATURES';
*   FINSI;
*   SI (EGA (TYPE TEPINT) 'MCHAML  ');
  SINON;
    SI (EGA (TYPE TEPINT) 'MCHAML  ');
      TEPINT = REDU TEPINT OBJMOD ;
      TEPINT = CHAN 'NOEUD' OBJMOD TEPINT;
    FINSI;
  FINSI;

***************************************************
***** GRADIENT DU DEPLACEMENT DEPINT =GRADEP ******
***************************************************
GRADEP = GRAD OBJMOD MAT1 DEPINT ;
GRADEF = TEXT '        ' ;
SI (ICOQU ET ILIN);
   GRADEF = 'GRAF' OBJMOD MAT1 DEPINT;
FINSI;

***************************************************
***** CAS DU CONTACT FROTTANT : ON CALCULE WSAUTGR = GRADIENT DU SAUT ******
***************************************************
SI (IFROT);
* WDEP = deplacement de la fissure de composante UX ... AX ...
* [grad(w)] = grad [w] car linearite (le saut [w] est donne par AX ...)
* on utilise un modele liee a la geo de la fissure (cohesif ou contact)
    WSAUTGR = GRAD OBJCON WDEP ;
* SIGCON = sigma*n de composantes SMX... homogene a une contrainte
* supporte sur la levre superieure
    SI (NEG (TYPE SIGCON) 'MCHAML  ');
      SIGCON = REDU SIGCON (extr OBJCON2 'MAILLAGE');
      SIGCON = CHAN 'CHAM' SIGCON OBJCON2 'STRESSES' 'CONTRAINTES';
    FINS;
*   Vsigcon = 'VECTEUR' sigcon objcon (1E-8) ('MOTS' 'SMX' 'SMY' 'SMZ');
*    'TRACER' vsigcon ('EXTRAIRE' objcon 'MAIL');
    SIGXN = (CHAN (exco SIGCON 'SMX' 'SCAL') TYPE 'SCALAIRE');
    SIGYN = (CHAN (exco SIGCON 'SMY' 'SCAL') TYPE 'SCALAIRE');
    si (ega &DIME 3);
      SIGZN = (CHAN (exco SIGCON 'SMZ' 'SCAL') TYPE 'SCALAIRE');
    fins;
FINSI;

***************************************************
***** GRADIENT DE LA VITESSE VITF   =GRAVIT  ******
***************************************************
SI (EGA IINTE 5);
    GRAVIT = GRAD OBJMOD MAT1 VITF;
    VITF = CHAN 'CHAM'  OBJMOD VITF 'STRESSES';
    ACCF = CHAN 'CHAM'  OBJMOD ACCF 'STRESSES';
FINSI;

***************************************************
** GRADIENT TEMPERATURE Grad T pour tous elements =TEPEGR
** et Grad Grad T pour les elements massifs seuls (si DJ/DA) =DEPDTGR
***************************************************
SI ITHER;
  SI (NON ICOQU);
     TEPEGR = GRAD OBJMOD MAT1 (((EXCO 'T' TEPINT MU1)
          CHAN TYPE 'SCALAIRE') + CMD000);
    SI (EGA IINTE 4);
       DEPDT = ((EXCO GR1 TEPEGR MU1) + (EXCO GR2 TEPEGR MU2))
            CHAN TYPE 'SCALAIRE'  ;
      SI (&DIME EGA 3);
       DEPDT=DEPDT + ((EXCO GR3 TEPEGR MU3) CHAN TYPE 'SCALAIRE');
      FINSI;
       DEPDTGR = GRAD OBJMOD MAT1 (CHAN TYPE
                 (CHAN 'NOEUD' OBJMOD DEPDT) 'DEPLACEMENTS');
*       DEPDTGR = GRAD OBJMOD MAT1 (CHAN 'CHPO' OBJMOD DEPDT);
    FINSI;
  SINON;
     TEPEGR = GRAD OBJMOD MAT1 ((((EXCO 'TINF' TEPINT MU1)
             CHAN TYPE 'SCALAIRE') ET
             ((EXCO 'T   ' TEPINT MU2)CHAN TYPE 'SCALAIRE') ET
             ((EXCO 'TSUP' TEPINT MU3)CHAN TYPE 'SCALAIRE'))
                  + CMD000);
  FINSI;
FINSI;

***************************************************
**GRADIENT DE PRESSIONS Grad P (si DJ/DA) =PRESGR
***************************************************
SI (EGA IINTE 4);
  SI ('>' (XTX PREINT) 1.E-10);
    M1 = EXTR OBJMOD 'FORC';
    M2 = EXTR OBJMOD 'DEPL';
    REPE B1 (DIME M1);
       F1 = DEP000 + (EXCO (EXTR M1 &B1) PREINT (EXTR M2 &B1));
    FIN B1;
    PRESGR = GRAD OBJMOD MAT1 F1;
  FINSI;
FINSI;

***************************************************
* PROFIL DE L'ENERGIE DANS L'EPAISSEUR DE LA COQUE
***************************************************
SI ICOQU;
  PEX1 = PROG; PEN1 = PROG;
  REPE NBJ7 (DIME MODCOU);
    MCOU1 = MODCOU.&NBJ7;
    EX1 = EXTR (REDU MCOU1 MAT1) 'EXCE' 1 1 1;
    E1 = EXTR (REDU MCOU1 MAT1) 'EPAI' 1 1 1;
    SI ('<' (E1 / EPAITO) 1.E-4);
       ENR1 = EXTR (REDU MCOU1 ENERM) 'SCAL' 1 1 1;
       PEX1 = PEX1 ET ('PROG' EX1);
       PEN1 = PEN1 ET ('PROG' ENR1);
    FINSI;
  FIN NBJ7;
  M1 = MOT ' DANS L EPAISSEUR DE LA COQUE A T =';
  'TITR' ('CHAI' 'INTEGRALE ' MOTTI M1 INST);
  EVENR = 'EVOL' 'MANU' 'COOR.Z LOCAL' PEX1 MOTTI PEN1;
  SOM1 = EXTR 1 ('INTG' EVENR);
  SI (EGA SOM1 0.);
     SOM1 = SOM1 + 1.E-10;
  FINSI;
  EVENR = EVENR * EPAITO / SOM1;
  NN = DIME (EXTR EVENR 'ORDO' 1);
  V_SUPE = EXTR NN (EXTR EVENR 'ORDO' 1);
  V_MOYE = EXTR ((NN - 1) / 2) (EXTR EVENR 'ORDO' 1);
  V_INFE = EXTR 1 (EXTR EVENR 'ORDO' 1);
FINSI;

****************************************************
*  RECUPERATION DU NOMBRE DE POINT A AVANCER  =NBOU
****************************************************
SI ((EGA &DIME 2) OU ICOQU);
   NBOU = 1;
FINSI;
SI ((EGA &DIME 3) ET (NON ICOQU));
   TTETA*'TABLE' = SUPTAB.'CHAMP_THETA';
  SI (EGA IINTE 4);
     TPI*'TABLE' = SUPTAB.'CHAMP_PI';
  FINSI;
   INT = INDE TTETA;
  SI (EXIS SUPTAB 'NOEUDS_AVANCES');
    SI (EGA (TYPE (SUPTAB.'NOEUDS_AVANCES')) 'MAILLAGE');
       PMA = CHAN 'POI1' (SUPTAB.'NOEUDS_AVANCES');
       NBOU = ('NBNO' PMA) + 1;
    SINON;
        A = SUPTAB.'NOEUDS_AVANCES'; NBOU = 2;
    FINSI;
  SINON;
     NBOU = DIME TTETA;
  FINSI;
FINSI;



*|=====================================================================|
*|======= BOUCLE SUR LES NOEUDS A AVANCER VIRTUELLEMENT =============>
REPE BCNOEU NBOU;
**************************************************
* RECUP DU CHAMP TETA ASSOCIE AU NOEUD PM DE NUMERO NUNOE
* ET DU CHAMP PI (SI DJ/DA)
**************************************************
SI ((EGA &DIME 3) ET (NON ICOQU));
  SI (&BCNOEU EGA NBOU);
     PM = MOT 'GLOBAL';
     NUNOE = 'CHAI' ' ' PM ' ';
  SINON;
     PM = INT.&BCNOEU;
    SI (EXIS SUPTAB 'NOEUDS_AVANCES');
      SI (EGA (TYPE (SUPTAB.'NOEUDS_AVANCES')) 'MAILLAGE');
         PM = POIN PMA &BCNOEU;
      SINON;
         PM = SUPTAB.'NOEUDS_AVANCES';
      FINSI;
    FINSI;
    si(ega (type PM) 'POINT');
      NUNOE = NOEU PM;
    sino;
      NUNOE = &BCNOEU;
    fins;
  FINSI;
  TETA = TTETA.PM;
  SI (EGA IINTE 4); PI = TPI.PM; FINSI;
FINSI;
SI ((EGA &DIME 2) OU ICOQU);
  PM = SUPTAB.'FRONT_FISSURE';
  TETA = SUPTAB.'CHAMP_THETA';
  SI (EGA IINTE 4);
     PI = SUPTAB.'CHAMP_PI';
  FINSI;
FINSI;

* si(&BOUCMIX ega 1);
*   vq7 = VECT TETA 'DEPL' 'BLEU' ;
*   MESHFR1=SUPTAB.'FRONT_FISSURE';MESHFR11 = chan MESHFR1 'POI1';
* *   trac vq7 (MAILMOD et MESHFR1 et MESHFR11) 'TITR' 'CHAMP_THETA';
*  trac vq7 ((aret MAILMOD) et MESHFR1 et MESHFR11) 'TITR' 'CHAMP_THETA';
* fins;


**************************************************
* GRADIENT, DIVERGENCE DU CHAMP TETA =TETAGR, DIVTETA
* CHAMELEM TETA =(TETX,TETY,TETZ)
**************************************************
TETA = TETA + DEP000;
TETAGR = GRAD OBJMOD MAT1 TETA;
DIVTETA = (EXCO GR1 TETAGR 'SCAL') +
          (EXCO GR5 TETAGR 'SCAL') +
          (EXCO GR9 TETAGR 'SCAL');
DIVTETA= DIVTETA CHAN TYPE 'SCALAIRE';
*btrolle 2013 : ajout de TETAX, TETAY et TETAZ
TETAX= CHAN 'CHAM' OBJMOD (EXCO MU1 TETA 'SCAL') 'SCALAIRE';
TETAY= CHAN 'CHAM' OBJMOD (EXCO MU2 TETA 'SCAL') 'SCALAIRE';
TETX = CHAN 'CHAM' OBJMOD (EXCO MU1 TETA 'SCAL') 'STRESSES';
TETY = CHAN 'CHAM' OBJMOD (EXCO MU2 TETA 'SCAL') 'STRESSES';
TETX = TETX CHAN TYPE'SCALAIRE';
TETY = TETY CHAN TYPE'SCALAIRE';
SI (&DIME EGA 3) ;
   TETAZ= CHAN 'CHAM' OBJMOD (EXCO MU3 TETA 'SCAL') 'SCALAIRE';
   TETZ = CHAN 'CHAM' OBJMOD (EXCO MU3 TETA 'SCAL') 'STRESSES';
   TETZ = TETZ CHAN TYPE'SCALAIRE';
FINSI;

**************************************************
* GRADIENT, DIVERGENCE DU CHAMP PI =PIGR, DIVPI
* CHAMELEM PI =(PIX,PIY,PIZ)
* ...
**************************************************
SI (EGA IINTE 4);
   NORM1 = ((EXCO MU1 PI 'SCAL')**2) + ((EXCO MU2 PI 'SCAL')**2);
  SI (EGA &DIME 3);
     NORM1 = NORM1 + ((EXCO MU3 PI 'SCAL')**2);
  FINSI;
   PI = PI + DEP000;
   PI = PI / ('MAXI' (NORM1**0.5));
   PIGR = GRAD OBJMOD MAT1 PI;
   DIVPI = (EXCO GR1 PIGR 'SCAL') +
           (EXCO GR5 PIGR 'SCAL') +
           (EXCO GR9 PIGR 'SCAL');
   DIVPI = DIVPI CHAN TYPE 'SCALAIRE';
   PITAGR = (OBJMOD PIGR * TETAGR) ;
   DIVPITA = (EXCO GR1 PITAGR 'SCAL') +
             (EXCO GR5 PITAGR 'SCAL') +
             (EXCO GR9 PITAGR 'SCAL');
   DIVPITA = DIVPITA CHAN TYPE 'SCALAIRE';
   ADJ = (DIVPITA - (DIVPI * DIVTETA)) ;
   PIX = CHAN 'CHAM' OBJMOD (EXCO MU1 PI 'SCAL') 'STRESSES';
   PIY = CHAN 'CHAM' OBJMOD (EXCO MU2 PI 'SCAL') 'STRESSES';
   PIX= PIX CHAN TYPE'SCALAIRE';
   PIY= PIY CHAN TYPE'SCALAIRE';
  SI (&DIME EGA 3) ;
     PIZ = CHAN 'CHAM' OBJMOD (EXCO MU3 PI 'SCAL') 'STRESSES';
     PIZ= PIZ CHAN TYPE'SCALAIRE';
  FINSI;
FINSI;

********************************************************
* DENSITE DE MATERIAU EN CAS DE CALCUL DE J DYNAMIQUE **
********************************************************
SI (EGA IINTE 5);
   RHO1 = REDU (EXCO MAT1 'RHO' 'SCAL') OBJMOD;
   RHO1 = (CHAN OBJMOD 'STRESSES' RHO1) CHAN TYPE 'SCALAIRE';
FINSI;

********************************************************
*********** SI LE MATERIAU N'EST PAS CONSTANT **********
* YOU1 = YOUGR * TETA = (grad E) * TETA
* SIGPRIM = (grad D)*TETA*(EPSI elas)   ou grad D =D(grad E,nu) =DMAT
* ALF1 = ALFGR*TETA = (grad Alpha)*TETA
* DMAT = D(1,nu,ALF1)
********************************************************
SI MATVARI;
*** Le coefficient de Poisson est constant ***
*    NU1 = REDU (EXCO MAT1 'NU' 'SCAL') OBJMOD;
*    NU1 = EXCO NU1 'SCAL' 'NU';
   NU1 = REDU (EXCO MAT1 'NU') OBJMOD;
   NU1 = NU1 CHAN TYPE 'SCALAIRE';
****** Gradient de Module d'young ******
  SI YOUVARI;
     YOU1 = REDU (EXCO MAT1 'YOUN' 'SCAL') OBJMOD;
     YOU1 = YOU1   CHAN TYPE 'SCALAIRE';
     YOUGR = GRA000; I = 0;
    REPE NBJ2 NBOBJ;
       I = I + 1;
       YO1 = CHAN 'STRESSES' TABMOD.I
            (REDU ((EXCO MAT1 'YOUN' MU1)
    CHAN TYPE 'SCALAIRE') TABMOD.I);
       YOUGR = YOUGR + (GRAD TABMOD.I MAT1 (YO1 +
               (REDU CMD001 TABMOD.I)));
*       YO1 = CHAN 'CHPO' TABMOD.I
*            (REDU (EXCO MAT1 'YOUN' 'SCAL') TABMOD.I);
*       YOUGR = YOUGR + (GRAD TABMOD.I MAT1 (('NOMC' MU1 YO1)
*               + (REDU DEP000 (EXTR YO1 'MAIL'))));
    FIN NBJ2;
     YOU1 = (((EXCO GR1 YOUGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD TETX) +
            (((EXCO GR2 YOUGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD TETY);
    SI (&DIME EGA 3);
      YOU1= YOU1 + (((EXCO GR3 YOUGR 'SCAL')CHAN TYPE 'SCALAIRE')
           *OBJMOD TETZ);
    FINSI;
     YOU1 = (EXCO YOU1 'SCAL' 'YOUN') CHAN TYPE 'SCALAIRE' ;
     DMAT = 'MATE' OBJMOD 'YOUN' YOU1 'NU' NU1;
     SIGPRIM = ('HOOK' OBJMOD DMAT)*OBJMOD
               (ELAS OBJMOD SIGF MAT1);
  FINSI;
****** Gradient de Coefficient de Dilatation ******
  SI (ITHER ET ALFVARI);
     ALF1 = REDU (EXCO MAT1 'ALPH' 'SCAL') OBJMOD;
     ALF1 = ALF1 CHAN TYPE 'SCALAIRE';
     ALFGR = GRA000; I = 0;
    REPE NBJ3 NBOBJ;
       I = I + 1;
       AL1 = CHAN 'STRESSES' TABMOD.I
            (REDU (EXCO MAT1 'ALPH' MU1) TABMOD.I);
       AL1 = AL1 CHAN TYPE 'SCALAIRE';
       ALFGR = ALFGR + (GRAD TABMOD.I MAT1 (AL1 +
               (REDU CMD001 TABMOD.I)));
*!       AL1 = CHAN 'CHPO' TABMOD.I
*!             (REDU (EXCO MAT1 'ALPH' 'SCAL') TABMOD.I);
*!       ALFGR = ALFGR + (GRAD TABMOD.I MAT1 (('NOMC' MU1 AL1)
*!               + (REDU DEP000 (EXTR AL1 'MAIL'))));
    FIN NBJ3;
     ALF1 = (((EXCO GR1 ALFGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD TETX) +
            (((EXCO GR2 ALFGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD TETY);

    SI (&DIME EGA 3) ;
       ALF1=ALF1 + (((EXCO GR3 ALFGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD TETZ);
    FINSI ;
     ALF1 = EXCO ALF1 'SCAL' 'ALPH';
     ALF1 = ALF1 CHAN TYPE 'SCALAIRE';
     DMAT = 'MATE' OBJMOD 'YOUN' 1. 'NU' NU1 'ALPH' ALF1;
  FINSI;
FINSI;

***********************************************
* TEMU  = (Grad T)*THETA
* TEMU1 = (Grad T)*PI
* TEMU2 = (Grad (Grad T))*PI*THETA
* EPSTU = D^-1 sigma^th
*         avec sigma^th = (-3lambda-2mu)*alpha*(grad T)*TETA*I
***********************************************
SI ITHER;
  SI (NON ICOQU);
     TEMU = (((EXCO GR1 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD TETX) +
            (((EXCO GR2 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
           *  OBJMOD TETY) ;
    SI (&DIME EGA 3) ;
      TEMU=TEMU +(((EXCO GR3 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
          * OBJMOD TETZ);
    FINSI ;
     TEMU = CHAN TYPE (EXCO 'SCAL' TEMU 'T') 'TEMPERATURES';
  SINON;
     T1 = (((EXCO GR1 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD TETX) +
          (((EXCO GR2 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
             *OBJMOD TETY) +
          (((EXCO GR3 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD TETZ) ;
     T2 = (((EXCO GR4 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
            * OBJMOD TETX) +
          (((EXCO GR5 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD TETY) +
          (((EXCO GR6 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD TETZ) ;
     T3 = (((EXCO GR7 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD TETX) +
          (((EXCO GR8 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
            * OBJMOD TETY) +
          (((EXCO GR9 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD TETZ) ;
     TEMU = CHAN TYPE ((EXCO 'SCAL' T1 'TINF') ET
             (EXCO 'SCAL' T2 'T   ') ET
             (EXCO 'SCAL' T3 'TSUP')) 'TEMPERATURES';
  FINSI;
   EPSTU = ELAS OBJMOD (THET OBJMOD MAT1 TEMU) MAT1;
*
  SI (EGA IINTE 4);
     TEMU1 = (((EXCO GR1 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIX) +
             (((EXCO GR2 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIY);
    SI (&DIME EGA 3) ;
      TEMU1=TEMU1+(((EXCO GR3 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
            * OBJMOD PIZ);
    FINSI ;
    SI ICOQU;
       TEMU1 = CHAN TYPE ((EXCO 'SCAL' TEMU1 'T') ET
                (EXCO 'SCAL' TEMU1 'TINF') ET
                (EXCO 'SCAL' TEMU1 'TSUP')) 'TEMPERATURES';
    SINON;
       TEMU1 = CHAN TYPE (EXCO 'SCAL' TEMU1 'T') 'TEMPERATURES';
    FINSI;
     EPSTU1 = ELAS OBJMOD (THET OBJMOD MAT1 TEMU1) MAT1;
*
     TXXPIX = ((EXCO GR1 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIX;
     TYXPIY = ((EXCO GR2 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIY;
     TXYPIX = ((EXCO GR4 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIX;
     TYYPIY = ((EXCO GR5 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
          * OBJMOD PIY;
     TEMU2 = (TETX*OBJMOD (TXXPIX + TYXPIY)) +
             (TETY*OBJMOD (TXYPIX + TYYPIY));
    SI (&DIME EGA 3) ;
      TEMU1=TEMU1+(((EXCO GR3 TEPEGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIZ);
       TZXPIZ=((EXCO GR3 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIZ;
       TZYPIZ=((EXCO GR6 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD PIZ;
       TXZPIX=((EXCO GR7 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIX;
       TYZPIY=((EXCO GR8 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIY;
       TZZPIY=((EXCO GR9 DEPDTGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIZ;
       TEMU2= (TETX*OBJMOD (TXXPIX + TYXPIY + TZXPIZ)) +
               (TETY*OBJMOD (TXYPIX + TYYPIY + TZYPIZ)) +
               (TETZ*OBJMOD (TXZPIX + TYZPIY + TZZPIZ));
    FINSI;
    SI ICOQU;
       TEMU2 = CHAN TYPE ((EXCO 'SCAL' TEMU2 'T') ET
                (EXCO 'SCAL' TEMU2 'TINF') ET
                (EXCO 'SCAL' TEMU2 'TSUP')) 'TEMPERATURES';
    SINON;
       TEMU2 = CHAN TYPE (EXCO 'SCAL' TEMU2 'T') 'TEMPERATURES';
    FINSI;
     EPSTU2 = ELAS OBJMOD (THET OBJMOD MAT1 TEMU2) MAT1;
  FINSI;
FINSI;

* modif sm
***********************************************
* CUMDEFI = SIG_{IJ} * (deps_{ij} / dx_{,k}) * thet_{k}
***********************************************
CUMDEFI = ZERO OBJMOD 'STRESSES' ;
SI IDEFI;
  SI (NON ICOQU);
    LMOEP = EXTR OBJMOD 'DEFO' ;
    LMOSI = EXTR OBJMOD 'CONT' ;
    LMOGR = EXTR OBJMOD 'GRAD' ;
    NIDEF = DIME LMOSI ;
    REPETER BDEFI NIDEF ;
      MOEP = EXTR LMOEP &BDEFI ;
      MOSI = EXTR LMOSI &BDEFI ;
      EIJ  = EXCO DEFINT MOEP  MU1  ;
      SMIJ = EXCO SIGF   MOSI 'SCAL';
      GREIJ = GRAD OBJMOD MAT1
        ((CHAN (CHAN 'NOEUD' OBJMOD EIJ) 'TYPE' 'SCALAIRE') + CMD000);
      DEIJX = (CHAN (CHAN 'STRESSES' OBJMOD
                (EXCO GREIJ (EXTR LMOGR 1) 'SCAL')) TYPE 'SCALAIRE')
            * (CHAN SMIJ TYPE 'SCALAIRE')
            * TETX;
      DEIJY = (CHAN (CHAN 'STRESSES' OBJMOD
                (EXCO GREIJ (EXTR LMOGR 2) 'SCAL')) TYPE 'SCALAIRE')
            * (CHAN SMIJ TYPE 'SCALAIRE')
            * TETY;
      CUMDEFI = CUMDEFI + DEIJX + DEIJY ;
      SI (&DIME EGA 3) ;
        DEIJZ = (CHAN (CHAN 'STRESSES' OBJMOD
                  (EXCO GREIJ (EXTR LMOGR 3) 'SCAL')) TYPE 'SCALAIRE')
              * (CHAN SMIJ TYPE 'SCALAIRE')
              * TETZ;
        CUMDEFI = CUMDEFI + DEIJZ;
      FINSI;
    FIN BDEFI;
  FINSI;
FINSI;

***********************************************
* PEMU1 = (Grad P)*TETA
* PEMU2 = (Grad P)*(Grad PI)*TETA
***********************************************
SI (EGA IINTE 4);
SI ('>' (XTX PREINT) 1.E-10);
   F1 = (((EXCO GR1 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIX) +
        (((EXCO GR2 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD PIY);
   F2 = (((EXCO GR4 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIX) +
        (((EXCO GR5 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD PIY);
   PEMU = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F1 MF1) ET
                                (EXCO 'SCAL' F2 MF2)) ;
  SI (EGA &DIME 3);
     F1=F1+ (((EXCO GR3 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIZ);
     F2=F2+ (((EXCO GR6 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIZ);
     F3 = (((EXCO GR7 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIX) +
          (((EXCO GR8 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD PIY) +
          (((EXCO GR9 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                 * OBJMOD PIZ);
     PEMU = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F1 MF1) ET
            (EXCO 'SCAL' F2 MF2) ET (EXCO 'SCAL' F3 MF3));
  FINSI;
*
   F1 = (((EXCO GR1 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
             * OBJMOD TETX) +
        (((EXCO GR2 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD TETY);
   F2 = (((EXCO GR4 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD TETX) +
        (((EXCO GR5 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
           * OBJMOD TETY);
   PEMU1 = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F1 MF1) ET
                                 (EXCO 'SCAL' F2 MF2)) ;
  SI (EGA &DIME 3);
     F1=F1+ (((EXCO GR3 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                    * OBJMOD TETZ);
     F2=F2+ (((EXCO GR6 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                * OBJMOD TETZ);
     F3=(((EXCO GR7 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD TETX) +
          (((EXCO GR8 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD TETY) +
          (((EXCO GR9 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD TETZ);
     PEMU1 = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F1 MF1) ET
             (EXCO 'SCAL' F2 MF2) ET (EXCO 'SCAL' F3 MF3));
  FINSI;
*
   F1= (((EXCO GR1 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
                * OBJMOD TETX) +
        (((EXCO GR2 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
              * OBJMOD TETY);
   F2= (((EXCO GR4 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD TETX) +
        (((EXCO GR5 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
                 * OBJMOD TETY);
  SI (EGA &DIME 3);
     F1=F1 + (((EXCO GR3 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
               *OBJMOD TETZ);
     F2=F2 + (((EXCO GR6 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD TETZ);
     F3 = (((EXCO GR7 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD TETX) +
          (((EXCO GR8 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
                *OBJMOD TETY) +
          (((EXCO GR9 PIGR 'SCAL')CHAN TYPE 'SCALAIRE')
               *OBJMOD TETZ);
  FINSI;
   F4 = (((EXCO GR1 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
               *OBJMOD F1) +
        (((EXCO GR2 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
             *OBJMOD F2);
   F5 = (((EXCO GR4 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
               *OBJMOD F1) +
        (((EXCO GR5 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
              *OBJMOD F2);
   PEMU2 = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F4 MF1) ET
                                 (EXCO 'SCAL' F5 MF2)) ;
  SI (EGA &DIME 3);
     F4 = F4 + (((EXCO GR3 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                 * OBJMOD F3);
     F5 = F5 + (((EXCO GR6 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD F3);
     F6 = (((EXCO GR7 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                 * OBJMOD F1) +
          (((EXCO GR8 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
               * OBJMOD F2) +
          (((EXCO GR9 PRESGR 'SCAL')CHAN TYPE 'SCALAIRE')
                 * OBJMOD F3);
     PEMU2 = CHAN 'CHPO' OBJMOD ((EXCO 'SCAL' F4 MF1) ET
             (EXCO 'SCAL' F5 MF2) ET (EXCO 'SCAL' F6 MF3));
  FINSI;
FINSI;
FINSI;

***********************************************
* DANS LE CAS DE CALCUL DE DJ/DA
* U^aux=A_DEPI  et  SIGMA^aux=A_SIGF
***********************************************
SI (EGA IINTE 4);
   GRAD11 = (OBJMOD GRADEP * PIGR) ;
   EPXX1 = (EXCO GR1 GRAD11 'SCAL')CHAN TYPE 'SCALAIRE';
   EPYY1 = (EXCO GR5 GRAD11 'SCAL')CHAN TYPE 'SCALAIRE';
   EPZZ1 = (EXCO GR9 GRAD11 'SCAL')CHAN TYPE 'SCALAIRE';
   GAXY1 = ((EXCO GR2 GRAD11 'SCAL') + (EXCO GR4 GRAD11 'SCAL'))
               CHAN TYPE 'SCALAIRE' ;
   GAXZ1 = ((EXCO GR3 GRAD11 'SCAL') + (EXCO GR7 GRAD11 'SCAL'))
             CHAN TYPE 'SCALAIRE' ;
   GAYZ1 = ((EXCO GR6 GRAD11 'SCAL') + (EXCO GR8 GRAD11 'SCAL'))
            CHAN TYPE 'SCALAIRE' ;
  SI (&DIME EGA 3) ;
     EPSIA1 = 'MANU' 'CHML' OBJMOD EP1 EPXX1 EP2
               EPYY1 EP3 EPZZ1 EP4 GAXY1 EP5 GAXZ1 EP6
               GAYZ1 TYPE 'DEFORMATIONS' 'STRESSES';
  SINON;
     EPSIA1 = 'MANU' 'CHML' OBJMOD EP1 EPXX1 EP2
               EPYY1 EP3 EPZZ1 EP4 GAXY1
              TYPE 'DEFORMATIONS' 'STRESSES';
  FINSI;
  SI ITHER; EPSIA1 = EPSIA1 + EPSTU1; FINSI;
   F11 = ('BSIG' OBJMOD ((('HOOK' OBJMOD MAT1)*OBJMOD EPSIA1)
       - (OBJMOD SIGF*DIVPI)) + ('FOFI' OBJMOD SIGF PIGR)) ;
  SI ('>' (XTX PREINT) 1.E-10);
     F11 = F11 + PEMU + (PREINT*(CHAN 'CHPO' OBJMOD DIVPI));
  FINSI;
   A_PREI = FOR000;
   A_DEPI = REDU ('RESO' (F11 + FOR000) RIGTOT) ELTETA ;
   A_SIGF = OBJMOD ('HOOK' OBJMOD MAT1)*
                   (('EPSI' OBJMOD A_DEPI) - EPSIA1);
FINSI;

***************************************************
* GRADIENT DU DEPLACEMENT AUX A_DEPI =A_DEPGR
* SI DJ/DA ou SI DECOUPLAGE  (sauf si A_DEPGR existe deja)
***************************************************
SI ((EGA IINTE 4) OU (EGA IINTE 99));
   si (NEG (TYPE A_DEPGR) 'MCHAML');
     A_DEPGR = GRAD OBJMOD MAT1 A_DEPI;
   fins;
   A_DEPGF = TEXT '        ' ;
   SI (ICOQU ET ILIN);
     A_DEPGF = 'GRAF' OBJMOD MAT1 A_DEPI;
   FINSI;
FINSI;

***********************************************
* DEP0 = (grad U)*THETA
***********************************************
LO1 = ((EGA IINTE 1) OU (EGA IINTE 2) OU (EGA IINTE 3)
        OU (EGA IINTE 4) OU (EGA IINTE 5))
        ET ('>' (XTX PREINT) 1.E-10);
LO2 = FAUX;
SI (EGA IINTE 99);
   LO2 = '>' (XTX A_PREI) 1.E-10;
FINSI;
SI (LO1 OU LO2);
   GRADCH = CHAN 'CHPO' OBJMOD GRADEP ;
*  mess 'gcalcul : CHAN CHPO grad(U)';
*bp : on se ramene a un chpoint pour faire XTY avec preint ensuite
*     on moyenne avce CHAN CHPO, pourrait on l'eviter?
   DEPLX = ((EXCO GR1 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
           ((EXCO GR2 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) ;
   DEPLY = ((EXCO GR4 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
           ((EXCO GR5 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) ;
   DEP0 = ('NOMC' DEPLX MU1) + ('NOMC' DEPLY MU2);
  SI (&DIME EGA 3) ;
     DEPLX = DEPLX +
             ((EXCO GR3 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL'));
     DEPLY = DEPLY +
             ((EXCO GR6 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL'));
     DEPLZ = ((EXCO GR7 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
             ((EXCO GR8 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) +
             ((EXCO GR9 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL')) ;
     DEP0 = ('NOMC' DEPLX MU1) + ('NOMC' DEPLY MU2) +
            ('NOMC' DEPLZ MU3);
  FINSI ;
  SI (ICOQU ET ILIN);
     GRAFCH = CHAN 'CHPO' OBJMOD GRADEF ;
     BXX = EXCO 'BX,X' GRAFCH 'SCAL';
     BXY = EXCO 'BX,Y' GRAFCH 'SCAL';
     BYX = EXCO 'BY,X' GRAFCH 'SCAL';
     BYY = EXCO 'BY,Y' GRAFCH 'SCAL';
     DEPFX = 'NOMC' 'RX' ( (BXX*(EXCO 'UX' TETA 'SCAL'))+
                           (BXY*(EXCO 'UY' TETA 'SCAL')) );
     DEPFY = 'NOMC' 'RY' ( (BYX*(EXCO 'UX' TETA 'SCAL'))+
                           (BYY*(EXCO 'UY' TETA 'SCAL')) );
     DEP0 = DEP0 + DEPFX + DEPFY;
  FINSI ;
FINSI;


***************************************************************
* S'il y a une pression sur la fissure, on calcule
* GRUTE = (grad U)*THETA sur les elements du modele de pression
* et dans la zone d'etude (ou le champ TETA est definit)
***************************************************************
SI (EXIS INFTAB 'MODE_PRESSION_FISSURE');
* on recupere le front de fissure que l'on passe en maillage de POI1
  FF = SUPTAB.'FRONT_FISSURE';
  SI (EGA (TYPE FF) 'POINT');
    FF1 = MANU 'POI1' FF;
  FINSI;
  SI (EGA (TYPE FF) 'MAILLAGE');
    FF1 = CHAN 'POI1' FF;
  FINSI;
* on isole les elements de la fissure ou la pression s'applique et ou le
* champ teta est definit
  FISSP = EXTR (INFTAB . 'MODE_PRESSION_FISSURE') 'MAIL';
  PFISSP = CHAN 'POI1' FISSP;
  FISSP = FISSP ELEM 'APPU' 'STRI' MAILMOD;
  MODPFT = VIDE 'MMODEL';
  GRADEPF = VIDE 'MCHAML';
* on interpole le gradient de deplacement (GRADEP) sur les elements du
* modele de pression touchant la levre inferieure
  SI (EXIS SUPTAB 'LEVRE_INFERIEURE');
    FISI = INTE FISSP (SUPTAB . 'LEVRE_INFERIEURE');
    MODPFI = REDU MODPF FISI;
    MP1 = DIFF (CHAN 'POI1' FISI) FF1;
    EL1 = MAILMOD ELEM 'APPU' 'LARG' MP1;
    OBJMOD1 = REDU OBJMOD EL1;
    GRADEP1 = REDU GRADEP OBJMOD1;
    GRADEP1 = CHAN 'CHAM' GRADEP1 OBJMOD1 'NOEUD';
    GRUI = PROI GRADEP1 MODPFI 'STRESSES';
    MODPFT = MODPFT ET MODPFI;
    GRADEPF = GRADEPF ET GRUI;
  FINSI;
* on interpole le gradient de deplacement (GRADEP) sur les elements du
* modele de pression touchant la levre superieure
  SI (EXIS SUPTAB 'LEVRE_SUPERIEURE');
    FISS = INTE FISSP (SUPTAB . 'LEVRE_SUPERIEURE');
    MODPFS = REDU MODPF FISS;
    MP1 = DIFF (CHAN 'POI1' FISS) FF1;
    EL1 = MAILMOD ELEM 'APPU' 'LARG' MP1;
    OBJMOD1 = REDU OBJMOD EL1;
    GRADEP1 = REDU GRADEP OBJMOD1;
    GRADEP1 = CHAN 'CHAM' GRADEP1 OBJMOD1 'NOEUD';
    GRUS = PROI GRADEP1 MODPFS 'STRESSES';
    MODPFT = MODPFT ET MODPFS;
    GRADEPF = GRADEPF ET GRUS;
  FINSI;
  GRADEPF = REDU GRADEPF MODPFT;
* on interpole le champ theta (TETA) sur les elements du modele de
* pression ==> TETAF
  TETAF = REDU TETA FISSP;
  TETAF = CHAN 'CHAM' MODPFT TETAF 'STRESSES';
* on fait ensuite le produit (GRADEPF * TETAF) ==> GRUTE
  LCT = EXTR TETAF   'COMP';
  LCG = EXTR GRADEPF 'COMP';
  SI (EGA &DIME 2);
    LCG12 = EXTR LCG (LECT 1 2);
    LCG45 = EXTR LCG (LECT 4 5);
    GRUTE1 = PSCA GRADEPF TETAF LCG12 LCT;
    GRUTE2 = PSCA GRADEPF TETAF LCG45 LCT;
    GRUTE  = (NOMC (EXTR LCT 1) GRUTE1) ET
             (NOMC (EXTR LCT 2) GRUTE2);
  FINSI;
  SI (EGA &DIME 3);
    LCG123 = EXTR LCG (LECT 1 2 3);
    LCG456 = EXTR LCG (LECT 4 5 6);
    LCG789 = EXTR LCG (LECT 7 8 9);
    GRUTE1 = PSCA GRADEPF TETAF LCG123 LCT;
    GRUTE2 = PSCA GRADEPF TETAF LCG456 LCT;
    GRUTE3 = PSCA GRADEPF TETAF LCG789 LCT;
    GRUTE  = (NOMC (EXTR LCT 1) GRUTE1) ET
             (NOMC (EXTR LCT 2) GRUTE2) ET
             (NOMC (EXTR LCT 3) GRUTE3);
  FINSI;
  GRUTE = CHAN 'TYPE' GRUTE 'FORCES';
FINSI;


***********************************************
* DEP1 = (grad A_DEPI)*THETA
***********************************************
LO1 = (EGA IINTE 4) ET ('>' (XTX PREINT) 1.E-10);
LO2 = FAUX;
SI (EGA IINTE 99);
   LO2 = ('>' (XTX A_PREI) 1.E-10) OU ('>' (XTX PREINT) 1.E-10);
FINSI;
SI (LO1 OU LO2);
*  mess 'gcalcul : CHAN CHPO grad(U^aux)';
   GRADCH = CHAN 'CHPO' OBJMOD A_DEPGR ;
*bp : on se ramene a un chpoint pour faire XTY avec preint ensuite
*     on moyenne avec CHAN CHPO, pourrait on l'eviter?
   DEPLX = ((EXCO GR1 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
           ((EXCO GR2 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) ;
   DEPLY = ((EXCO GR4 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
           ((EXCO GR5 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) ;
   DEP1 = ('NOMC' DEPLX MU1) + ('NOMC' DEPLY MU2);
  SI (&DIME EGA 3) ;
     DEPLX = DEPLX +
             ((EXCO GR3 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL'));
     DEPLY = DEPLY +
             ((EXCO GR6 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL'));
     DEPLZ = ((EXCO GR7 GRADCH 'SCAL')*(EXCO MU1 TETA 'SCAL')) +
             ((EXCO GR8 GRADCH 'SCAL')*(EXCO MU2 TETA 'SCAL')) +
             ((EXCO GR9 GRADCH 'SCAL')*(EXCO MU3 TETA 'SCAL')) ;
     DEP1 = ('NOMC' DEPLX MU1) + ('NOMC' DEPLY MU2) +
            ('NOMC' DEPLZ MU3);
  FINSI ;
  SI (ICOQU ET ILIN);
     GRAFCH = CHAN 'CHPO' OBJMOD GRADEF ;
     BXX = EXCO 'BX,X' GRAFCH 'SCAL';
     BXY = EXCO 'BX,Y' GRAFCH 'SCAL';
     BYX = EXCO 'BY,X' GRAFCH 'SCAL';
     BYY = EXCO 'BY,Y' GRAFCH 'SCAL';
     DEPFX = 'NOMC' 'RX' ( (BXX*(EXCO 'UX' TETA 'SCAL'))+
                           (BXY*(EXCO 'UY' TETA 'SCAL')) );
     DEPFY = 'NOMC' 'RY' ( (BYX*(EXCO 'UX' TETA 'SCAL'))+
                           (BYY*(EXCO 'UY' TETA 'SCAL')) );
     DEP1 = DEP1 + DEPFX + DEPFY;
  FINSI ;
FINSI;
***********************************************
* Termes supplemenetaire en Dynamique
* VCARE = V*V
* GRUTV = (grad U)*THETA*V      (Attigui)
* GRVTV = V^T * (grad V)*THETA  (BP)
* GRWTU = W^T * (grad U)*THETA  (BP)
***********************************************
SI (EGA IINTE 5);
  VCARE =( ((EXCO MU1 VITF 'SCAL')**2) + ((EXCO MU2 VITF 'SCAL')**2) )
            CHAN TYPE 'SCALAIRE'  ;
  DEPFX = (((EXCO GR1 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE') *TETX) +
          (((EXCO GR2 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE') *TETY) ;
  DEPFY = (((EXCO GR4 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE') *TETX) +
          (((EXCO GR5 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE') *TETY) ;
  VITFX = (((EXCO GR1 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE') *TETX) +
          (((EXCO GR2 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE') *TETY) ;
  VITFY = (((EXCO GR4 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE') *TETX) +
          (((EXCO GR5 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE') *TETY) ;
  SI (EGA &DIME 3);
    VCARE=VCARE +(((EXCO MU3 VITF 'SCAL')**2)CHAN TYPE 'SCALAIRE');
    DEPFX=DEPFX +(((EXCO GR3 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    DEPFY=DEPFY +(((EXCO GR6 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    DEPFZ = (((EXCO GR7 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE')*TETX) +
            (((EXCO GR8 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE')*TETY) +
            (((EXCO GR9 GRADEP 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    VITFX=VITFX +(((EXCO GR3 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    VITFY=VITFY +(((EXCO GR6 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    VITFZ = (((EXCO GR7 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE')*TETX) +
            (((EXCO GR8 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE')*TETY) +
            (((EXCO GR9 GRAVIT 'SCAL')CHAN TYPE 'SCALAIRE')*TETZ);
    GRUTV = ((EXCO MU1 VITF 'SCAL')*DEPFX) +
            ((EXCO MU2 VITF 'SCAL')*DEPFY) +
            ((EXCO MU3 VITF 'SCAL')*DEPFZ) ;
    GRWTU = ((EXCO MU1 ACCF 'SCAL')*DEPFX) +
            ((EXCO MU2 ACCF 'SCAL')*DEPFY) +
            ((EXCO MU3 ACCF 'SCAL')*DEPFZ) ;
    GRVTV = ((EXCO MU1 VITF 'SCAL')*VITFX) +
            ((EXCO MU2 VITF 'SCAL')*VITFY) +
            ((EXCO MU3 VITF 'SCAL')*VITFZ) ;
  SINON;
     GRUTV = ((EXCO MU1 VITF 'SCAL')*DEPFX) +
             ((EXCO MU2 VITF 'SCAL')*DEPFY) ;
    GRWTU = ((EXCO MU1 ACCF 'SCAL')*DEPFX) +
            ((EXCO MU2 ACCF 'SCAL')*DEPFY) ;
    GRVTV = ((EXCO MU1 VITF 'SCAL')*VITFX) +
            ((EXCO MU2 VITF 'SCAL')*VITFY) ;
  FINSI;
FINSI;
*|=====================================================================|
*|=======  IV. CALCUL DE J,C*,C*(h) ou J_DYNA  ========================|

***********************************************
* S10 = w*(div THETA)
* S20 = sigma*(grad U)*(grad THETA)
* S40 = Tr(sigma)*Alpha*(Grad T)*THETA
* S50 = F*(grad U)*THETA
* S60 = 0.5*(grad D)*THETA*(EPSI elas)*(EPSI elas)
* S70 = Tr(sigma)*T*(Grad Alpha)*THETA
* S100 = (W(b) - W(a))*TETA(x)
* S110 = SIGF*n*[ (dU/dX)(b) - (dU/dX)(a) ]*TETA(x)
* S120 = wvmis*(Grad T)*THETA
*     ou wvmis = SOME d(Von_mises)/d(Temperature) d(EPSE)
***********************************************
* Termes supplementaires pour le J dynamique (Formulation de Attigui)
* S130 = 0.5*RHO*(V^2)*(div THETA)
* S140 = [Delta (RHO*V*(grad U)*THETA)]/(Delta Temps)
* Termes supplementaires pour le J dynamique (Formulation de BP)
* S130 = -0.5*RHO*(V^2)*(div THETA)
* S140 =  RHO*W*(grad U)*THETA
* S141 = -RHO*V*(grad V)*THETA
***********************************************
* Termes supplementaires pour le J en grands-deplacements
* S150 = sigma*((grad U)t)*(grad U)*(grad THETA)
***********************************************
***********************************************
* Termes supplementaires pour un chaergement en deformation imposee (modif sm)
* S160 = sigma*(deps/dx)*(THETA)
*      = SIG_{IJ} * (deps^{imp}_{ij} / dx_{,k}) * thet_{k}
***********************************************
* Termes supplementaires pour le contact frottant (modif BP,BT)
* S111 = SIGF*n*[ (dU/dX)(b) - (dU/dX)(a) ]*TETA(x)
***********************************************


SI ( (IINTE EGA 1) OU (IINTE EGA 2) OU
     (IINTE EGA 3) OU (IINTE EGA 5));
  S10 = INTG OBJMOD (ENERM*OBJMOD DIVTETA) MAT2;
  SI (ICOQU ET ILIN);
     S20 = INTG OBJMOD (WORK OBJMOD SIGF
            (GRADEP*OBJMOD TETAGR) (GRADEF*OBJMOD TETAGR));
  SINON;
     S20 = INTG OBJMOD (WORK OBJMOD SIGF
                         (GRADEP*OBJMOD TETAGR)) MAT2;
  FINSI;
  SI IGDEP;
    SI (ICOQU ET ILIN);
       S150 = INTG OBJMOD (WORK OBJMOD SIGF
               (((TAGR GRADEP)*OBJMOD GRADEP)*OBJMOD TETAGR)
               (((TAGR GRADEF)*OBJMOD GRADEF)*OBJMOD TETAGR));
    SINON;
       S150 = INTG OBJMOD (WORK OBJMOD SIGF
               (((TAGR GRADEP)*OBJMOD GRADEP)*OBJMOD TETAGR)) MAT2;
    FINSI;
  FINSI;
  SI ITHER;
     S40 = INTG OBJMOD (ENER OBJMOD SIGF EPSTU) MAT2;
  FINSI;
  S50 = 0.;
  SI ((XTX PREINT) > 1.E-10);
    S50 = XTY PREINT DEP0 MOTF MOTU;
  FINSI;
  SI (EXIS INFTAB 'MODE_PRESSION_FISSURE');
    PNF = REDU PNF MODPFT;
    LC1 = EXTR PNF   'COMP';
    LC2 = EXTR GRUTE 'COMP';
    PGRU = MANU 'CHML' MODPFT 'SCAL' 0. 'STRESSES';
    REPE B1 (DIME LC1);
      PGRU = PGRU + ((EXCO (EXTR LC1 &B1) PNF   'SCAL') *
                     (EXCO (EXTR LC2 &B1) GRUTE 'SCAL'));
    FIN B1;
    S50 = S50 + (INTG MODPFT PGRU);
  FINSI;
  SI (MATVARI ET YOUVARI);
     S60 = INTG OBJMOD (0.5*(ENER OBJMOD
            SIGPRIM (ELAS OBJMOD SIGF MAT1))) MAT2;
  FINSI;
  SI (MATVARI ET ITHER ET ALFVARI);
     S70 = INTG OBJMOD (ENER OBJMOD SIGF (ELAS
            OBJMOD (THET OBJMOD TEPINT DMAT) DMAT)) MAT2;
  FINSI;
  SI (('>' (DIME LINTER) 0) ET (NON IPARAL));
     I = 0; IND1 = 'INDE' LINTER;
    REPE NBJ4 (DIME IND1);
       I = I + 1;
       LE1 = IND1.&NBJ4;
       L1 = LINTER.LE1;
       M1 = TABMOD.(EXTR LE1 1);
       M2 = TABMOD.(EXTR LE1 2);
       OBJINT = MODE L1 'MECANIQUE' 'ELASTIQUE';
       TETXL = REDU L1 (EXCO MU1 TETA 'SCAL');
       TETXLC = CHAN 'CHAM' OBJINT TETXL 'STRESSES';
***
       ENEMA = REDU L1 (CHAN 'CHPO' M1 (REDU M1 ENERM));
       ENEMB = REDU L1 (CHAN 'CHPO' M2 (REDU M2 ENERM));
       ENRMAL = CHAN 'CHAM' OBJINT ENEMA 'STRESSES';
       ENRMBL = CHAN 'CHAM' OBJINT ENEMB 'STRESSES';
       S100 = S100 + (INTG OBJINT
              ((ENRMBL - ENRMAL) * OBJINT TETXLC) MAT2);
***
       GRADA = REDU L1 (CHAN 'CHPO' M1 (REDU M1 GRADEP));
       GRADB = REDU L1 (CHAN 'CHPO' M2 (REDU M2 GRADEP));
       UXXAL =CHAN 'CHAM' OBJINT (EXCO GR1 GRADA 'SCAL') 'STRESSES';
       UXXBL =CHAN 'CHAM' OBJINT (EXCO GR1 GRADB 'SCAL') 'STRESSES';
       UYXAL =CHAN 'CHAM' OBJINT (EXCO GR4 GRADA 'SCAL') 'STRESSES';
       UYXBL =CHAN 'CHAM' OBJINT (EXCO GR4 GRADB 'SCAL') 'STRESSES';
       SIGML =REDU L1 (CHAN 'CHPO' OBJMOD SIGF);
       SIXXL =CHAN 'CHAM' OBJINT (EXCO SM1 SIGML 'SCAL') 'STRESSES';
       SIXYL =CHAN 'CHAM' OBJINT (EXCO SM4 SIGML 'SCAL') 'STRESSES';
       AAAA1 = (SIXXL * OBJINT (UXXBL - UXXAL)) +
               (SIXYL * OBJINT (UYXBL - UYXAL));
       S110 = S110 + (INTG OBJINT (AAAA1*OBJINT TETXLC) MAT2);
    FIN NBJ4;
  FINSI;
  SI (((DIME MODPLA) '>' 0) ET ITHER);
     TEMU = CHAN TYPE (EXCO 'T' TEMU 'SCAL') 'SCALAIRE';
     S120 = INTG OBJMOD (WVMIS * TEMU) MAT2;
  FINSI;
*
* Termes supplementaire en Dynamique **********
  SI (IINTE EGA 5);
* * Formulation de Attigui
*      S130 = INTG OBJMOD (0.5*(RHO1 * VCARE * DIVTETA)) MAT2;
*       SSS1 = INTG OBJMOD (RHO1 * GRUTV) MAT2;
*      SI (EGA IABC 0);
*          S140 = SSS1;
*      SINON;
*          DELTAT = INST - SUPTAB.'SOLUTION_PASAPAS'.'TEMPS'.(IABC - 1);
*          S140 = (SSS1 - SUPTAB.'SSS0') / DELTAT;
*      FINSI;
*       SUPTAB.'SSS0' = SSS1;
* Formulation de BP
* permet : - une meilleure independance du contour
*          - de traiter le cas des fissures qui se propage
*          - de ne pas stocker SSS1
     S130 = INTG OBJMOD (0.5*(RHO1 * VCARE * DIVTETA)) MAT2;
     S140 = INTG OBJMOD (RHO1 * GRWTU) MAT2;
     S141 = INTG OBJMOD (RHO1 * GRVTV) MAT2;
  FINSI;


* Termes supplementaire pour un chargement en deformation imposee (SM) *********
  S160 = 0.;
  SI (IINTE EGA 1);
    si IDEFI;
     S160 = INTG OBJMOD CUMDEFI MAT2;
    finsi;
  FINSI;
* fin modif sm

* Termes supplementaire pour le contact frottant (btrolle 19/02/2013)
  SI (IFROT);
* teta
    TETXC = PROI OBJCON2 TETAX 'STRESSES';
    TETYC = PROI OBJCON2 TETAY 'STRESSES';
    si (ega &DIME 3);
      TETZC = PROI OBJCON2 TETAZ 'STRESSES';
    fins;
* [grad(w)] = grad [w] = WSAUTGR
* sigma*n
    AAAAX= (SIGXN * (CHAN (exco WSAUTGR AX,X 'SCAL') TYPE 'SCALAIRE'))
         + (SIGYN * (CHAN (exco WSAUTGR AY,X 'SCAL') TYPE 'SCALAIRE'));
    AAAAY= (SIGXN * (CHAN (exco WSAUTGR AX,Y 'SCAL') TYPE 'SCALAIRE'))
         + (SIGYN * (CHAN (exco WSAUTGR AY,Y 'SCAL') TYPE 'SCALAIRE'));
    si (ega &DIME 3);
      AAAAX = AAAAX
            + (SIGZN *  (CHAN(exco WSAUTGR AZ,X) TYPE 'SCALAIRE'));
      AAAAY = AAAAY
            + (SIGZN *  (CHAN(exco WSAUTGR AZ,Y) TYPE 'SCALAIRE'));
      AAAAZ = (SIGXN *  (CHAN(exco WSAUTGR AX,Z) TYPE 'SCALAIRE'))
            + (SIGYN *  (CHAN(exco WSAUTGR AY,Z) TYPE 'SCALAIRE'))
            + (SIGZN *  (CHAN(exco WSAUTGR AZ,Z) TYPE 'SCALAIRE'));
      AAAA111 = (AAAAX * OBJCON2 TETXC)
              + (AAAAY * OBJCON2 TETYC)
              + (AAAAZ * OBJCON2 TETZC);
    sino;
      AAAA111 = (AAAAX * OBJCON2 TETXC)
              + (AAAAY * OBJCON2 TETYC);
    fins;
*    AAAA111 = 'MANUEL' CHML objcon 'SCAL' 1 TYPE 'SCALAIRE' 'STRESSES';
    S111 = INTG OBJCON2 AAAA111 ; mess 'S111=' S111;
  'SINON';
      S111 = 0.0;
  FINSI;
* fin du cas contact frottant (btrolle 19/02/2013)


* somme des termes ***************************
   GMCANI = (S20 - S10 - S60 - S100 + S110 - S111
             - S130 + S140 - S141 + S150)*FACT1;
   GTERMI = (S40 + S70 - S120) * FACT1;
* modif sm = ajout S160
   GPRESS = (S160 - S50) * FACT1;
   GTOTA = GMCANI + GTERMI + GPRESS ;
FINSI;



*|=====================================================================|
*|=======  V. CALCUL DE DJ/DA  ========================================|

***********************************************
* S10 = -SIGF*(Grad U)*(Grad PI)*(Grad TETA)
* S20 = -SIGF*(Grad U)*(Grad TETA)*(Grad PI)
* S30 = SIGF*(Grad U)*(Grad TETA)*(Div PI)
* S40 = SIGF*(Grad U)*(Grad PI)*(Div TETA)
* S50 = ENEGIE*(ADJ TETA*PI)
* S60 = ALPH*SIGF*(Grad (Grad T))*PI*TETA
* S70 = ALPH*SIGF*((Grad T)*PI)*(Div TETA)
* S80 = ALPH*SIGF*((Grad T)*TETA)*(Div PI)
* S90 = SIG1*(Grad U)*(Grad TETA)
* S100= SIGF*(Grad U1)*(Grad TETA)
* S110= -SIGF*(Grad U1)*(Div TETA)
* S120= ALPH*SIG1*((Grad T)*TETA)
* S130= -PRESSION*(grad A_DEPI)*THETA
* S140= -(Grad PRESSION)*(Grad PI)*TETA*U
* S150= (Grad PRESSION)*TETA*U*(Div PI)
* S160= -(Grad PRESSION)*PI*(Grad U)*TETA
***********************************************
SI (IINTE EGA 4);
   S10 = 0. - (INTG OBJMOD (WORK OBJMOD SIGF
              (OBJMOD GRADEP * (OBJMOD PIGR * TETAGR))));
   S20 = 0. - (INTG OBJMOD (WORK OBJMOD SIGF
              (OBJMOD GRADEP * (OBJMOD TETAGR * PIGR))));
   S30 = INTG OBJMOD (OBJMOD (WORK OBJMOD
          SIGF (OBJMOD GRADEP * TETAGR)) * DIVPI);
   S40 = INTG OBJMOD (OBJMOD (WORK OBJMOD
          SIGF (OBJMOD GRADEP * PIGR)) * DIVTETA);
   S50 = INTG OBJMOD (ENERM * ADJ);
  SI ITHER ;
     S60 = INTG OBJMOD (ENER OBJMOD SIGF EPSTU2);
     S70 = INTG OBJMOD ((ENER OBJMOD SIGF EPSTU1)*DIVTETA);
     S80 = INTG OBJMOD ((ENER OBJMOD SIGF EPSTU)*DIVPI);
     S120 = INTG OBJMOD (ENER OBJMOD A_SIGF EPSTU);
  FINSI;
  SI ('>' (XTX PREINT) 1.E-10) ;
     S130 = XTY PREINT DEP1 MOTF MOTU ;
     S140 = XTY PEMU2 (CHAN 'CHPO' OBJMOD DEPINT) MOTF MOTU;
     S150 = XTY (PEMU1*(CHAN 'CHPO' OBJMOD DIVPI))
                  (CHAN 'CHPO' OBJMOD DEPINT) MOTF MOTU;
     S160 = XTY PEMU DEP0 MOTF MOTU;
  FINSI;
   S90 = INTG OBJMOD (WORK OBJMOD A_SIGF (OBJMOD GRADEP * TETAGR));
   S100 = INTG OBJMOD (WORK OBJMOD SIGF (OBJMOD A_DEPGR * TETAGR));
   S110 = 0. - (INTG OBJMOD (OBJMOD (WORK
                 OBJMOD SIGF A_DEPGR) * DIVTETA)) ;
   GMCANI = S10 + S20 + S30 + S40 + S50 + S90 + S100 + S110;
   GTERMI = S60 + S70 + S80 + S120 ;
   GPRESS = S150 - S130 - S140 - S160;
   GTOTA = GMCANI + GTERMI + GPRESS ;
FINSI;



*|=====================================================================|
*|=======  VI. CALCUL DES FACTEURS D INTENSITE DES CONTRAINTES  =======|

***********************************************
* En pratique on les deduit de l integrale d interaction
* M(u,u^aux) = 2/E^* (K1*K1^aux + K2*K2^aux)
* On calcule donc :
*  J1 = 1/E^* K1^2 = M(u,u^aux_1)**2 / 4*J(u^aux_1,u^aux_1)
*  J2 = 1/E^* K2^2 = M(u,u^aux_2)**2 / 4*J(u^aux_2,u^aux_2)
***********************************************
* l'integrale J(u^aux, u^aux) est la somme de :
* S10 = 0.5*Tr(A_sigf*(grad A_depi))*(div THETA)
* S20 = Tr[A_sigf*(grad A_depi)*(grad THETA)] *
* S50 = A_prei*(grad A_depi)*THETA
***********************************************
* l'integrale M(u, u^aux) et la somme de :
* S60 = Tr[A_sigf*(Grad U)*(Grad THETA)]
* S70 = Tr[SIGF*(Grad A_depi)*(Grad THETA)]
* S80 = Tr[SIGF*(Grad A_depi)*(Div THETA)]
* S90 = PREINT*(grad A_depi)*THETA
* S100= A_prei*(grad U)*THETA
* S110= ALPH*A_sigf*((Grad T)*TETA)
***********************************************
* Termes supplementaires pour le contact frottant (modif BP,BT)
* S111 = SIGF*n*[ (dU^aux/dX)(b) - (dU^aux/dX)(a) ]*TETA(x)
***********************************************


SI (IINTE EGA 99) ;
*    si(IXFEM);
* *  REM: pour les elements XFEM on a contruit les champs aux. tq
* *      (K_I^aux, K_II^aux)  =  (1,0)  et (0,1)
* *      => inutile de calculer J(u^aux,u^aux) (= C_MATE)
*bp 07/07/2011 : cela est faux dans le cas d'une fissure courbee
*      COE_M2K = 2. * C_MATE;
*    sino;
     S10 = 0.5*( INTG OBJMOD
           (OBJMOD (WORK OBJMOD A_SIGF A_DEPGR) * DIVTETA) );
     S20 = INTG OBJMOD
           (WORK OBJMOD A_SIGF (A_DEPGR*OBJMOD TETAGR) ) MAT2;
     SI ('>' (XTX A_PREI) 1.E-10);
        S50 = XTY A_PREI DEP1 MOTF MOTU ;
     FINSI;
     JETOILE = 'ABS' (S20 - S10 - S50);
     COE_M2K = 2. * ((C_MATE*JETOILE)**0.5);
*    fins;
*  integrale M(u, u^aux)
   S60 = INTG OBJMOD (WORK OBJMOD A_SIGF (OBJMOD GRADEP * TETAGR));
   S70 = INTG OBJMOD (WORK OBJMOD SIGF (OBJMOD A_DEPGR * TETAGR));
   S80 = INTG OBJMOD (OBJMOD (WORK OBJMOD SIGF A_DEPGR) * DIVTETA);
*rem: on pourrait calculer M avec les 2 lignes ci dessous:
*    S81 = INTG OBJMOD (OBJMOD (WORK OBJMOD A_SIGF GRADEP) * DIVTETA);
*    S80 = 0.5*(S80+S81);
* Termes supplementaire pour le contact frottant (btrolle 19/02/2013)
* on calcule WSAUTGR^aux = GRADIENT DU SAUT^aux
SI (IFROT 'ET' IXFEM);
* WDEP = deplacement de la fissure de composante UX ... AX ...
* [grad(w)] = grad [w] car linearite (le saut [w] est donne par AX ...)
* on utilise un modele liee a la geo de la fissure (cohesif ou contact)
* mess 'I avec contact frottant';
* SIGCON = sigma*n de composantes SMX... homogene a une contrainte
* supporte sur la levre superieure
   SI (NEG (TYPE SIGCON) 'MCHAML  ');
     SIGCON = REDU SIGCON (extr OBJCON2 'MAILLAGE');
     SIGCON = CHAN 'CHAM' SIGCON OBJCON2 'STRESSES' 'CONTRAINTES';
   FINS;
   SIGXN = (CHAN (exco SIGCON 'SMX' 'SCAL') TYPE 'SCALAIRE');
   SIGYN = (CHAN (exco SIGCON 'SMY' 'SCAL') TYPE 'SCALAIRE');
   si (ega &DIME 3);
     SIGZN = (CHAN (exco SIGCON 'SMZ' 'SCAL') TYPE 'SCALAIRE');
   fins;
* teta
    TETXC = PROI OBJCON2 TETAX 'STRESSES';
    TETYC = PROI OBJCON2 TETAY 'STRESSES';
    si (ega &DIME 3);
      TETZC = PROI OBJCON2 TETAZ 'STRESSES';
    fins;
* [grad(w)] = grad [w] = WSAUTGR
* sigma*n
  AAAAX= (SIGXN * (CHAN (exco B_DEPGR AX,X 'SCAL') TYPE 'SCALAIRE'))
   + (SIGYN * (CHAN (exco B_DEPGR AY,X 'SCAL') TYPE 'SCALAIRE'));
  AAAAY= (SIGXN * (CHAN (exco B_DEPGR AX,Y 'SCAL') TYPE 'SCALAIRE'))
   '+' (SIGYN * (CHAN (exco B_DEPGR AY,Y 'SCAL') TYPE 'SCALAIRE'));
    si (ega &DIME 3);
      AAAAX = AAAAX
            + (SIGZN *  (CHAN(exco B_DEPGR AZ,X) TYPE 'SCALAIRE'));
      AAAAY = AAAAY
            + (SIGZN *  (CHAN(exco B_DEPGR AZ,Y) TYPE 'SCALAIRE'));
      AAAAZ = (SIGXN *  (CHAN(exco B_DEPGR AX,Z) TYPE 'SCALAIRE'))
            + (SIGYN *  (CHAN(exco B_DEPGR AY,Z) TYPE 'SCALAIRE'))
            + (SIGZN *  (CHAN(exco B_DEPGR AZ,Z) TYPE 'SCALAIRE'));
      AAAA111 = (AAAAX * OBJCON2 TETXC)
              + (AAAAY * OBJCON2 TETYC)
              + (AAAAZ * OBJCON2 TETZC);
    sino;
      AAAA111 = (AAAAX * OBJCON2 TETXC)
              + (AAAAY * OBJCON2 TETYC);
    fins;
    S111 = INTG OBJCON2 AAAA111;
'SINON';
    S111 = 0.0;
FINSI;
* fin du cas contact frottant (btrolle 19/02/2013)
   SI ('>' (XTX PREINT) 1.E-10);
     S90 = XTY PREINT DEP1 MOTF MOTU ;
   FINSI;
   SI ('>' (XTX A_PREI) 1.E-10);
     S100 = XTY A_PREI DEP0 MOTF MOTU ;
   FINSI;
   SI ITHER ;
     S110 = INTG OBJMOD (ENER OBJMOD A_SIGF EPSTU);
   FINSI;
*  facteurs d intensite des contraintes
   GMCANI = (S60 + S70 - S80 + S111) / COE_M2K;
   GTERMI = (S110) / COE_M2K;
   GPRESS = (-1.*(S100 + S90)) / COE_M2K;
   GTOTA = GMCANI + GTERMI + GPRESS ;
FINSI;


*|=====================================================================|
*|=======  VII. STOCKAGE DES RESULTATS ET IMPRESSIONS  ================|


***************************************************
** PROFILE DE G DANS L EPAISSEUR EN CAS DE COQUE **
***************************************************
SI ICOQU;
  SI IPAP;
     SUPTAB.'EPAISSEUR_RESULTATS'.IABC = EVENR * GTOTA;
  SINON;
     SUPTAB.'EPAISSEUR_RESULTATS' = EVENR * GTOTA;
  FINSI;
FINSI;

***************************************************
** STOCKAGE DES RESULTATS DANS SUPTAB.'RESULTATS'**
***************************************************
C1 = 'CHAI' GMCANI ' '; C2 = 'CHAI' GTERMI ' ';
C3 = 'CHAI' GPRESS '  '; C4 = 'CHAI' GTOTA;
*CAS PASAPAS
SI IPAP;
  SI (EGA &DIME 2);
    SI (EGA IINTE 99);
      MESS MOTMIA '  ' IABC C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.MOTMIX.IABC = GTOTA;
    SINON;
      MESS IABC C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.IABC = GTOTA;
    FINSI;
  FINSI;
  SI ((EGA &DIME 3) ET (NON ICOQU));
    SI (EGA IINTE 99);
      MESS MOTMIA ' ' NUNOE IABC C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.MOTMIX.IABC.PM = GTOTA;
    SINON;
      MESS NUNOE IABC C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.IABC.PM = GTOTA;
    FINSI;
  FINSI;
  SI ICOQU;
     C1 = 'CHAI' (GMCANI*V_SUPE) ' '; C2 = 'CHAI' (GTERMI*V_SUPE) ' ';
     C3 = 'CHAI' (GPRESS*V_SUPE) '  ';C4 = 'CHAI' (GTOTA*V_SUPE);
     C5 = 'CHAI' (GMCANI*V_MOYE) ' '; C6 = 'CHAI' (GTERMI*V_MOYE) ' ';
     C7 = 'CHAI' (GPRESS*V_MOYE) '  ';C8 = 'CHAI' (GTOTA*V_MOYE);
     C9 = 'CHAI' (GMCANI*V_INFE) ' '; C10= 'CHAI' (GTERMI*V_INFE) ' ';
     C11= 'CHAI' (GPRESS*V_INFE) '  ';C12= 'CHAI' (GTOTA*V_INFE);
    MESS ' Superi ' IABC C1 C2  C3  C4;
    MESS ' Median ' IABC C5 C6  C7  C8;
    MESS ' Inferi ' IABC C9 C10 C11 C12;
     C1 = 'CHAI' GMCANI ' '; C2 = 'CHAI' GTERMI ' ';
     C3 = 'CHAI' GPRESS '  '; C4 = 'CHAI' GTOTA;
    MESS ' Global ' IABC C1 C2 C3 C4;
    SI (EGA IINTE 99);
       SUPTAB.'RESULTATS'.MOTMIX = GTOTA;
    SINON;
       SUPTAB.'RESULTATS'.IABC.'SUPERI' = GTOTA*V_SUPE;
       SUPTAB.'RESULTATS'.IABC.'MEDIAN' = GTOTA*V_MOYE;
       SUPTAB.'RESULTATS'.IABC.'INFERI' = GTOTA*V_INFE;
       SUPTAB.'RESULTATS'.IABC.'GLOBAL' = GTOTA;
    FINSI;
  FINSI;
*CAS RESOU
SINON;
  SI (EGA &DIME 2);
    SI (EGA IINTE 99);
      MESS MOTMIA '  ' C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.MOTMIX = GTOTA;
    SINON;
      MESS C1 C2 C3 C4;
       SUPTAB.'RESULTATS' = GTOTA;
    FINSI;
  FINSI;
  SI ((EGA &DIME 3) ET (NON ICOQU));
    SI (EGA IINTE 99);
      MESS ' ' MOTMIA '  ' NUNOE C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.MOTMIX.PM = GTOTA;
    SINON;
      MESS NUNOE C1 C2 C3 C4;
       SUPTAB.'RESULTATS'.PM = GTOTA;
    FINSI;
  FINSI;
  SI ICOQU;
     C1 = 'CHAI' (GMCANI*V_SUPE) ' '; C2 = 'CHAI' (GTERMI*V_SUPE) ' ';
     C3 = 'CHAI' (GPRESS*V_SUPE) '  ';C4 = 'CHAI' (GTOTA*V_SUPE);
     C5 = 'CHAI' (GMCANI*V_MOYE) ' '; C6 = 'CHAI' (GTERMI*V_MOYE) ' ';
     C7 = 'CHAI' (GPRESS*V_MOYE) '  ';C8 = 'CHAI' (GTOTA*V_MOYE);
     C9 = 'CHAI' (GMCANI*V_INFE) ' '; C10= 'CHAI' (GTERMI*V_INFE) ' ';
     C11= 'CHAI' (GPRESS*V_INFE) '  ';C12= 'CHAI' (GTOTA*V_INFE);
    MESS ' Superi ' C1 C2  C3  C4;
    MESS ' Median ' C5 C6  C7  C8;
    MESS ' Inferi ' C9 C10 C11 C12;
     C1 = 'CHAI' GMCANI ' '; C2 = 'CHAI' GTERMI ' ';
     C3 = 'CHAI' GPRESS '  '; C4 = 'CHAI' GTOTA;
    MESS ' Global ' C1 C2 C3 C4;
    SI (EGA IINTE 99);
       SUPTAB.'RESULTATS'.MOTMIX = GTOTA;
    SINON;
       SUPTAB.'RESULTATS'.'SUPERI' = GTOTA*V_SUPE;
       SUPTAB.'RESULTATS'.'MEDIAN' = GTOTA*V_MOYE;
       SUPTAB.'RESULTATS'.'INFERI' = GTOTA*V_INFE;
       SUPTAB.'RESULTATS'.'GLOBAL' = GTOTA;
    FINSI;
  FINSI;
FINSI;

***BP: PETIT AJOUT ***
       SI(ega (type PM) 'MAILLAGE');
         SI (EGA (&BCNOEU) 1);
           GCHAM1 = MANU 'CHML' PM MOCOMP GTOTA;
         SINO;
           GCHAM1 = GCHAM1
                et (MANU 'CHML' PM MOCOMP GTOTA);
         FINS;
       FINS;
       SI(ega (type PM) 'POINT');
         SI (EGA (&BCNOEU) 1);
           GCHPO1 = MANU 'CHPO' PM 1 MOCOMP GTOTA 'NATURE' 'DIFFUS';
         SINO;
           GCHPO1 = GCHPO1
                et (MANU 'CHPO' PM 1 MOCOMP GTOTA 'NATURE' 'DIFFUS');
         FINS;
       FINS;
***BP: FIN DU PETIT AJOUT ***

FIN BCNOEU;
*<== FIN DE BOUCLE SUR LES NOEUDS A AVANCER VIRTUELLEMENT =============|
*|=====================================================================|

*********************************************************************
** STOCKAGE DES CHAMPS RESULTATS (+ logique qu'une table a priori) **
*********************************************************************
SI  ( (NEG (TYPE GCHPO1) 'CHPOINT')
   ET (EGA (TYPE GCHAM1) 'MCHAML') );
*version J constant par morceaux
*      GCHPO1 = PROI SUPTAB.'FRONT_FISSURE' GCHAM1;
*version J lissee (projete sur approximation EF)
      efJ = EXTR GCHAM1 'MAILLAGE' ;
*  mess 'efJ='; list efJ; trac efJ ;
*  totoj = inte efJ MAILMOD 'NOVERIF';
*  mess (nbel efJ) ' =nbel=? ' (nbel totoj);
*  mess (nbno efJ) ' =nbno=? ' (nbno totoj);
      OBJMODj =redu OBJMOD efj ;
      GCHPO1 = CHAN 'CHPO' GCHAM1 OBJMODj 'MOYE';
      GCHPO1 = CHAN 'CHAM' GCHPO1 OBJMOD;
*  mess 'redu ok appel a proi';
      GCHPO1 = PROI SUPTAB.'FRONT_FISSURE' GCHPO1;
FINS;
*CAS PASAPAS
SI(IPAP);
  SI (EGA (TYPE GCHPO1) 'CHPOINT');
    SI(NON (EXIS SUPTAB  'CHPO_RESULTATS'));
      SUPTAB . 'CHPO_RESULTATS' = TABL;
    FINSI;
    SI((EGA &BOUCMIX 1) ou (NON (EXIS SUPTAB.'CHPO_RESULTATS' IABC)));
      SUPTAB.'CHPO_RESULTATS'.IABC = GCHPO1;
    SINO;
      SUPTAB.'CHPO_RESULTATS'.IABC
      = SUPTAB.'CHPO_RESULTATS'.IABC ET GCHPO1;
    FINS;
  FINS;
  SI (EGA (TYPE GCHAM1) 'MCHAML');
    SI(NON (EXIS SUPTAB  'CHAM_RESULTATS'));
      SUPTAB . 'CHAM_RESULTATS' = TABL;
    FINSI;
    SI((EGA &BOUCMIX 1) ou (NON (EXIS SUPTAB.'CHAM_RESULTATS' IABC)));
      SUPTAB.'CHAM_RESULTATS'.IABC = GCHAM1;
    SINO;
      SUPTAB.'CHAM_RESULTATS'.IABC
      = SUPTAB.'CHAM_RESULTATS'.IABC ET GCHAM1;
    FINS;
  FINS;
*CAS RESOU
SINO;
  SI (EGA (TYPE GCHPO1) 'CHPOINT');
    SI((EGA &BOUCMIX 1) ou (NON (EXIS SUPTAB 'CHPO_RESULTATS')));
      SUPTAB.'CHPO_RESULTATS' = GCHPO1;
    SINO;
      SUPTAB.'CHPO_RESULTATS' = SUPTAB.'CHPO_RESULTATS' ET GCHPO1;
    FINS;
  FINS;
  SI (EGA (TYPE GCHAM1) 'MCHAML');
    SI((EGA &BOUCMIX 1) ou (NON (EXIS SUPTAB 'CHAM_RESULTATS')));
      SUPTAB.'CHAM_RESULTATS' = GCHAM1;
    SINO;
      SUPTAB.'CHAM_RESULTATS' = SUPTAB.'CHAM_RESULTATS' ET GCHAM1;
    FINS;
 FINS;
FINS;

* ON SE PREPARE A PARTIR...
MENA;
SI (IPAP ET ICOQU);
  'SAUT' 1 'LIGNE';
FINSI;
SI (IPAP ET (NBOU '>' 1));
  'SAUT' 1 'LIGNE';
FINSI;
SI (IPAP ET (NBOU EGA 1) ET (NON ICOQU));
  SI (('ABS' ((&BOUCEXT/10) - (&BOUCEXT/10.))) '<' 1.D-10);
    'SAUT' 1 'LIGNE';
  FINSI;
FINSI;

FINPROC SUPTAB;
$$$$

















