$$$$ FIXHC
* FIXHC     PROCEDUR  BR232186  16/12/05    21:39:28     9238
****************************************************
* Procedure de tracking par resolution d'un probleme
* de conduction thermique stationnaire
* Application au modele E-FEM
* Version  :
*     Fixed global tracking
* Creation :
*     Francesco RICCARDI 22/08/2016
*     Benjamin RICHARD
* Contact :
*     Francesco.Riccardi[at]cea.fr
*     Benjamin.Richard[at]cea.fr
* Institution :
*     CEA\DEN\DANS\DM2S\SEMT\EMSI
****************************************************
* Voir notice TRACKING pour plus d'informations
****************************************************
*
*******----DEBUT Procedure FIXHC----*******
*
DEBP FIXHC TAB2*'TABLE';


* Indice d'evolution
nn = dime tab2.deplacements;
nn = nn-1;

* Modeles
MODEL1 = TAB2. 'MODELE';
MODELS = EXTR MODEL1 'ZONE';

* Modele et materiau EFEM
MODEL11 = MODELS. 1;
SURFACE1 = MODELS. 2;
MATr1 = TAB2. 'WTABLE'. 'CARACTERISTIQUES';
MATr11 = REDU MATr1 SURFACE1;
E11 = EXCO MATr11 YOUN;
NU11 = EXCO MATr11 NU;
P11 = EXCO MATr11 FT;
P12 = EXCO MATR11 XNX;
P13 = EXCO MATR11 XNY;
P14 = EXCO MATr11 IND1;
P15 = EXCO MATR11 XIE;
P16 = EXCO MATR11 YIE;

* Resistance en traction
STMAX = MAXI P11;

* Coordonnees de la geometrie
X0 = COOR 1 SURFACE1;
Y0 = COOR 2 SURFACE1;

* Maximum des contraintes principales
SIG1 = TAB2. 'CONTINUATION'. 'CONTRAINTES';
PRIN1 = PRIN SIG1 MODEL11;
SIGMA11 = EXCO 'SI11' PRIN1;
SIGMAX = MAXI SIGMA11;

* Variables internes : NFLA
FLAG = EXCO (TAB2. 'VARIABLES_INTERNES'.NN) 'NFLA';
VFLAG = MAXI FLAG;
*TRAC FLAG MODEL11;

* Nombre de root elements
NROOTS = TAB2. 'NROOTS';
*LIST NROOTS;

* Nombre maximum de fissures
MAXR = TAB2. 'NRMAX';

*
*----- Debut algorithme de tracking ---------------------------
*
* Cas1 : on fixe le nombre de fissures
SI ((SIGMAX > 0) ET (NROOTS < MAXR));
* Cas2 : on fixe le pas de temps
*SI ((SIGMAX > 0) ET (NN < (TAB2. 'NPAS_TRACKING')));
* Cas3 : pas de limitations
*SI (SIGMAX > 0);


* Points ou la contrainte depasse la resistance en traction
SI (VFLAG EGA 0);
        PSLIM = SIGMA11 POIN 'MAXI';
        NLIM = 1;
        SIGMAX0 = (SIGMA11 MASQ 'EGSUPE' SIGMAX) * SIGMA11;
SINON;
        MTEST = SURFACE1 DIFF (TAB2. 'MESH');
        SIGTEST = REDU SIGMA11 MTEST;
        EL_LIM = SIGTEST ELEM 'EGSUPE' STMAX;
        PSLIM = SIGMA11 POIN 'EGSUPE' STMAX;
        SIGMAX0 = (SIGTEST MASQ 'EGSUPE' STMAX) * SIGTEST;
        SI (VFLAG EGA 0);
                NLIM = 0;
        SINON;
                NLIM = NBEL EL_LIM;
        FINSI;
FINSI;

* On ordonne les possibles root elements par contrainte decr
Prr = TABLE;
Prr. 'coor_x' = TABLE;
Prr. 'coor_y' = TABLE;
Srr = TABLE;
Trr = TABLE;
ff = 0;
REPETER ORDINE (NROOTS + NLIM);
        ff = (ff + 1);
        SI ((NROOTS > 0) ET (ff <EG NROOTS));
                Prr. 'coor_x'. ff =
                COOR 1 (TAB2. 'PROOTS'. ff);
                Prr. 'coor_y'. ff =
                COOR 2 (TAB2. 'PROOTS'. ff);
                Trr. ff = CHAN 'POI1' (TAB2. 'EROOTS'. ff);
                Srr. ff = 0;
        SINON;
                SIGMAX1 = MAXI SIGMAX0;
                Prr. 'coor_x'. ff = MAXI (COOR 1 (SIGMAX0 POIN 'MAXI'));
                Prr. 'coor_y'. ff = MAXI (COOR 2 (SIGMAX0 POIN 'MAXI'));
                Trr. ff = CHAN 'POI1' (SIGMAX0 ELEM 'MAXI');
                Srr. ff = SIGMAX1;
                XAX = SIGMAX0 MASQ 'EGALE' SIGMAX1;
                DIFF1 = XAX * SIGMAX1;
                SIGMAX0 = (SIGMAX0 - DIFF1);
        FINSI;
FIN ORDINE;

*
*\\\\ Resolution du probleme de conduction ////*
*
* Cosinus des tangentes
COS2X = EXCO PRIN1 'COX2';
COS2Y = EXCO PRIN1 'COY2';
COS2Z = EXCO PRIN1 'COZ2';

* Champ vectoriel des tangentes
*SIGMA22 = MANU 'CHML' MODEL11 'SI22' 1. 'TYPE'
*'CONTRAINTES PRINCIPALES' 'STRESSES';
*PRIN12 = (SIGMA22 ET COS2X ET COS2Y ET COS2Z);
*VECTAN = VECT PRIN12 MODEL11 0.001 'SI22';

* Modele thermique
MOTH = MODE SURFACE1 THERMIQUE ANISOTROPE;

* Perturbation conductivite numerique
TTPETIT = 1.E-6;

* Tenseur conductivite anisotrope
KXX=(COS2X**2)+((COS2X**0)*TTPETIT);
KYY=(COS2Y**2)+((COS2Y**0)*TTPETIT);
TTX=NOMC 'UX' COS2X;
TTY=NOMC 'UX' COS2Y;
KXY=TTX*TTY;
PX = 1.0 0.;
MATH= MATE MOTH 'DIRECTION' PX K11 KXX K21 KXY K22 KYY;
* Matrice de rigidite
KTH = COND MOTH MATH;
* Conditions aux limites
PCL1 = CHAN 'POI1' (TAB2. 'LBC');
CLT1 = BLOQ PCL1 'T';
CLTH = CLT1;
* Temperature imposee
VBC = TAB2. 'BCSTH';
DE1 = DEPI CLT1 VBC;
DETH = DE1;
* Assemblage
KTHTOT = KTH ET CLTH;
*Resolution
RESTH = RESO KTHTOT DETH;
TAB2. 'RESTH' = RESTH;
*TRAC RESTH SURFACE1;

*
*\\\\ Extraction des isovaleurs ////*
*
T0 = CHAN 'CHAM' RESTH MOTH 'NOEUD';
T0 = EXCO T0 'T';
i = 0;
NEW_MESH = VIDE 'MAILLAGE';
EL0 = SURFACE1 ELEM 'CONTENANT' (0. 0.);
P0 = SURFACE1 POIN 'PROC' (0. 0.);
P0 = MANU 'POI1' P0;
REPETER BOUCLEEL (NROOTS + NLIM);
        i = i + 1;
        PPP = (Prr. 'coor_x'. i) (Prr. 'coor_y'. i);
        ELACTIF = 0;
        TRACCIA = FAUX;
* Verification des elements
***On a trois cas :
***ELACTIF = 0 : possibles elements root***
***ELACTIF = 1 : elements appartenant a une isovaleur***
***ELACTIF = 2 : elements a negliger***
        SI (i <EG NROOTS);
                ELACTIF = 1;
                TRACCIA = VRAI;
        SINON;
                CHECK1 = NEW_MESH ELEM 'CONTENANT' PPP 'NOVERIF';
* CHECK1 : on verifie si PPP appartient a une isovaleur active
                SI ((NBEL CHECK1) > 0);
                        ELACTIF = 1;
                FINSI;
        FINSI;
* CHECK2 : les elements root doivent etre bien separes
        SI (ELACTIF EGA 0);
                SI (NROOTS EGA 0);
                        TRACCIA = VRAI;
                SINON;
                        CHECK2 = NEW_MESH ELEM 'APPUYE' 'LARGEMENT'
                        (Trr. i) 'NOVERIF';
                        SI ((NBEL CHECK2) EGA 0);
                                TRACCIA = VRAI;
                        SINON;
                                ELACTIF = 2;
                        FINSI;
                FINSI;
        FINSI;
* Isovaleurs
        SI (TRACCIA EGA VRAI);
                TREDUC = REDU RESTH (Trr. i);
                NA = (Trr. i) POIN 1;
                NB = (Trr. i) POIN 2;
                NC = (Trr. i) POIN 3;
                TA = EXTR TREDUC 'T' NA;
                TB = EXTR TREDUC 'T' NB;
                TC = EXTR TREDUC 'T' NC;
                TG = ((TA + TB + TC) / 3.);
                ISOVG = ISOV T0 TG;
                P_ISOVG = CHAN 'POI1' ISOVG;
* Extraction des elements traverses par l'isovaleur
                T0G = MANU 'CHML' MOTH 'T' TG 'NOEUD';
                T01 = T0 - T0G;
                T02 = T01 MASQ 'SUPERIEUR' 0.;
                MAILA = T02 ELEM 'EGALE' 1.;
                MAILB = T02 ELEM 'EGALE' 0.;
                MESH_EL = SURFACE1 DIFF (MAILA ET MAILB);
* CHECK3 : les isovaleurs doivent etre bien separees
* Si le seul element en commun est EL0 alors on continue
                SI (i > NROOTS);
                        MM1 = (CHAN 'POI1' MESH_EL) ET P0;
                        MMT = (CHAN 'POI1' NEW_MESH) ET P0;
                        CHECK3 = MMT INTE MM1;
                        SI ((NBEL CHECK3) > 1);
                                ELACTIF = 2;
                        FINSI;
                FINSI;
                SI (ELACTIF EGA 1);
            NEW_MESH = NEW_MESH ET (TAB2. 'MESH_ISO'. i);
                FINSI;
                SI (ELACTIF EGA 0);
                        NEW_MESH = NEW_MESH ET MESH_EL;
                        TAB2. 'NROOTS' = (TAB2. 'NROOTS') + 1;
            TAB2. 'ISOTOT'. (TAB2. 'NROOTS') = ISOVG;
            TAB2. 'MESH_ISO'. (TAB2. 'NROOTS') = MESH_EL;
                        TAB2. 'PROOTS'. (TAB2. 'NROOTS') = PPP;
                        TAB2. 'EROOTS'. (TAB2. 'NROOTS') = SURFACE1 ELEM
                        'CONTENANT' PPP;
                FINSI;
        FINSI;
        DROOTS = (TAB2. 'NROOTS') - NROOTS;
        SI (DROOTS EGA 1);
                QUIT BOUCLEEL;
        FINSI;
        SI (i EGA (NROOTS + NLIM));
                QUIT BOUCLEEL;
        FINSI;
FIN BOUCLEEL;
TAB2. 'MESH' = NEW_MESH;

*
*\\\\ Creation des chamelem ////*
*
CHM = MANU 'CHML' model11 'SI11' 0.
'TYPE' 'CONTRAINTES PRINCIPALES' 'STRESSES';
X0S = CHAN 'CHAM' X0 MODEL11 'STRESSES';
X0S = CHAN 'TYPE' X0S 'CONTRAINTES PRINCIPALES';
X0S = CHAN 'COMP' 'SI11' X0S;
Y0S = CHAN 'CHAM' Y0 MODEL11 'STRESSES';
Y0S = CHAN 'TYPE' Y0S 'CONTRAINTES PRINCIPALES';
Y0S = CHAN 'COMP' 'SI11' Y0S;
nlm1 = nbel NEW_MESH;
i=0;
repeter BOUCLEB nlm1;
        i = i + 1;
        ELEMi = NEW_MESH ELEM i;
        VALXi = MAXI (REDU X0S ELEMi);
        VALYi = MAXI (REDU Y0S ELEMi);
        CHPX = X0S MASQ 'EGALE' VALXi;
        CHPY = Y0S MASQ 'EGALE' VALYi;
        CHP = CHPX * CHPY;
        CHM = CHM + CHP;
fin BOUCLEB;

* Abscisses des points d'entree des fissures
CHIX = MANU 'CHML' MODEL11 'SI11' 0. 'TYPE'
'CONTRAINTES PRINCIPALES' 'STRESSES';
* Ordonnees des points d'entree des fissures
CHIY = CHIX;
* Composante x des normales
CHNX = CHIX;
* Composante y des normales
CHNY = CHIX;
j = 0;
* Debut de la boucle sur les root elements
REPETER BOUCLE1 (TAB2. 'NROOTS');
    j = j + 1;
    ISOVGj = ORDO (TAB2. 'ISOTOT'. j);
    ROOTj = TAB2. 'EROOTS'. j;
    MESHj = TAB2. 'MESH_ISO'. j;
    NUMEL = NBEL MESHj;
    CHIXj = CHIX * 0.;
    CHIYj = CHIY * 0.;
    CHNXj = CHNX * 0.;
    CHNYj = CHNY * 0.;
    PINI = ISOVGj POIN 'INITIAL';
    PFIN = ISOVGj POIN 'FINAL';
    TEST1 = ROOTj ELEM 'CONTENANT' PINI 'NOVERIF';
    SI ((NBEL TEST1) EGA 1);
        SEG1 = ISOVGj ELEM 'CONTENANT' PINI;
    SINON;
        SEG1 = ISOVGj ELEM 'CONTENANT' PFIN;
        PINI = PFIN;
    FINSI;
* Debut de la boucle sur les elements de l'isovaleur j
    i = 0;
    REPETER BOUCLE2 NUMEL;
        i = i + 1;
        SI (i EGA 1);
            ELi = ROOTj;
            MTEST = ROOTj;
            SEGi = SEG1;
            STEST = SEG1;
            PTEST = PINI;
        SINON;
            MTEST = MTEST ET ELi;
            SI (i > 2);
                STEST = STEST ET SEGi;
            FINSI;
            PTEST1 = STEST POIN 'INITIAL';
            PTEST2 = STEST POIN 'FINAL';
            SI (PTEST1 EGA PINI);
                PTEST = PTEST2;
            SINON;
                PTEST = PTEST1;
            FINSI;
            SDIFF = ISOVGj DIFF STEST;
            SEGi = SDIFF ELEM 'CONTENANT' PTEST;
        FINSI;
        PP = MANU 'POI1' PTEST;
        XTEST YTEST = COOR PTEST;
        COORXi = REDU X0S ELi;
        COORYi = REDU Y0S ELi;
        VALXi = MAXI COORXi;
        VALYi = MAXI COORYi;
        PP1 = SEGi POIN 1;
        XP1 YP1 = COOR PP1;
        PP2 = SEGi POIN 2;
        XP2 YP2 = COOR PP2;
* Calcul de la tangente et de la normale a la fissure
        LL = (((XP1 - XP2) ** 2) + ((YP1 - YP2) ** 2)) ** 0.5;
        SI (YP1 > YP2);
            TY = (YP1 - YP2) / LL;
            TX = (XP1 - XP2) / LL;
        SINON;
            TY = (YP2 - YP1) / LL;
            TX = (XP2 - XP1) / LL;
        FINSI;
        SI (YP1 EGA YP2);
            TY = 0.;
            TX = -1.;
        FINSI;
        NX = TY;
        NY = -1.*TX;
        CHPX = X0S MASQ 'EGALE' VALXi;
        CHPY = Y0S MASQ 'EGALE' VALYi;
        CH = CHPX * CHPY;
        CHIXj = CHIXj + (CH * XTEST);
        CHIYj = CHIYj + (CH * YTEST);
        CHNXj = CHNXj + (CH * NX);
        CHNYj = CHNYj + (CH * NY);
        MREDj = REDU MODEL11 MESHj;
* Pour le pas suivant
        SI (i < NUMEL);
            CTEST = CONT MTEST;
            MDIFF = MESHj DIFF MTEST;
            CDIFF = CONT MDIFF;
            CINTE = CDIFF INTE CTEST;
            GINTE = BARY CINTE;
            ELi = MDIFF ELEM 'CONTENANT' GINTE;
        FINSI;
    FIN BOUCLE2;
    CHIX = CHIX + CHIXj;
    CHIY = CHIY + CHIYj;
    CHNX = CHNX + CHNXj;
    CHNY = CHNY + CHNYj;
FIN BOUCLE1;
MATr2 = MATE MODEL11 YOUN E11 NU NU11 FT P11 XNX CHNX
XNY CHNY IND1 CHM XIE CHIX YIE CHIY;
MATr1 = MATr2;
TAB2. 'WTABLE'. 'CARACTERISTIQUES' = MATR1;


FINSI;


FINP MATR1;

