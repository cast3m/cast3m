$$$$ PMPB
* PMPB      PROCEDUR  BP208322  16/05/24    21:15:14     8932
DEBPROC PMPB TSIG*chpoint  LIG*maillage  grapl*logique
 nnc*entier  nne*entier ;
*************************************************************************
*   Analyse des contraintes sur le segment d appui  LIG  ( SEG2 )suivant
*                     specification des codes
*   ENTREES :    TSIG chpoint des contraintes projetees sur LIG
*                        (TSIG = PROI LIG  SIG )
*                LIG  segment d'appui
*                GRAPL Logique   si VRAI --> traces des decompositions
*   SORTIES :
*       TABLES contenant pour chacune des composantes des contraintes
*              caractéristiques sur les extrémites de segments d'appui
*
************************************************************************
P1 = lig point init ;
P2 = lig point fina ;
lig1 = chan 'POI1' lig ;
Listcomp = extr Tsig comp ;
nn = lig nbno ;
idi = vale DIME ;
si (ega idi 2);
x y = coor lig ;
z = x * 0. ;
sinon ;
x y z =   coor lig   ;
z = z - ( coor 3 P1) ;
finsi ;
x = x - ( coor 1 P1);
y = y - ( coor 2 P1);
xabs  = ((x * x) + ( y * y) + ( z * z)) ** .5 ;
ep = maxi xabs ;
SAUT  LIGNE ;
MESS '        ETAT ' NNE ' COUPE' NNC ': CONTRAINTES LINEARISEES ' ;
SAUT  LIGNE ;
nbcomp = dime Listcomp  ;
compm  = Table ;
compb  = Table ;
compmb = Table ;
  MESS '          ----------------------------------------------'
  '----------' ;
  MESS '          ! MEMBRANE  ! MEM+FLEX ! MEM+FLEX ! TOTALES '
  ' ! TOTALES  !' ;
  MESS '          !           !    INT.  !    EXT.  !   INT. '
  '  !   EXT.   !' ;
 TIRET=
'-----------------------------------------------------------------';
   MESS TIRET;
*
REPETER BOU1 NBCOMP ;
 CCC   = extr Listcomp &bou1 ;
 ev1 = evol roug chpo TSIG CCC lig ;
 rabs = extr ev1 absc ;
*  ep =  maxi rabs  ;
*
*------------------------   contrainte moyenne membrane
*
   pm =(extr (INTG ev1 ) 1 ) / ep  ;
  compm.&bou1 = manu chpo lig 1 SCAL  pm ;

*
*-----------------------    calcul du moment de flexion
*
   xl = rabs - ( prog nn * (ep / 2 ))  ;
   z = manu chpo lig1 1 SCAL xl ;
   sigzz= ((exco TSIG CCC) * z ) nomc SCAL ;
   evm = evol bleu chpo sigzz SCAL lig  ;
   mm =  extr (INTG evm ) 1 ;
*-----------------------------   contrainte   flexion
   pb    = mm * 6. / ( ep * ep) ;
   a =( pb * 2. )  / ep  ;
   compb.&bou1 = ((xabs * a) - pb ) ;
*
 compmb.&bou1 = compm.&bou1 + compb.&bou1 ;
 MEMBR = extr compm.&bou1 SCAL  P1 ;
 MEFLRI =(extr compmb.&bou1  SCAL  P1 )  ;
 MEFLRE =(extr compmb.&bou1  SCAL  P2 )  ;
 FLEXI = (extr  compb.&bou1  SCAL  P1 )  ;
 FLEXE = (extr  compb.&bou1  SCAL  P2 )  ;
 TOTIR = EXTR TSIG CCC  P1 ;
 TOTER = EXTR TSIG CCC  P2 ;


 si GRAPL  ;
*
 'TITRE' 'Seg_app' nnc 'Etat' nne  CCC  '  Membrane ' membr
         'Flexion max ' (MEFLRI - membr)   ;
 evpm  = evol vert chpo  compm.&bou1    SCAL lig  ;
 evpmb = evol turq chpo  compmb.&bou1   SCAL lig ;
 evsignl = ev1 - evpmb ;
 evt =  ev1 et evpm et evpmb  et evsignl ;
*
   TUB = TABLE ;TIB = TABLE ;
   TUB.1 = 'MARQ ETOI'; TIB.1 =  'Totale ' ;
   TUB.2 = 'MARQ CROI'; TIB.2 =  'Pm ' ;
   TUB.3 = 'MARQ TRIA'; TIB.3 =  'Pm+Pb ' ;
   TUB.4 = 'MARQ CARR'; TIB.4 =  'NonLin ' ;
   TUB.'TITRE' = TIB ;
*
   'DESS' evt lege tub xbor 0. ep    AXES ;
 finsi ;

AA = CHAINE FORMAT '(F9.2)' ' ! ' CCC   '   ! 'MEMBR ' !' MEFLRI
' !' MEFLRE ' !' TOTIR ' !' TOTER ' !';
    MESS AA;
    MESS TIRET;
   SI ( EGA &BOU1 1) ;
 P_MEMB  = PROG  MEMBR ;
 P_FLEXI = PROG  FLEXI ;
 P_MPFI   = PROG  MEFLRI ;
 P_MPFE   = PROG  MEFLRE;
 P_FLEXE = PROG  FLEXE ;
 P_TOTI  = PROG  TOTIR  ;
 P_TOTE  = PROG  TOTER  ;
   SINON ;
 P_MEMB  = P_MEMB  et (PROG  MEMBR  ) ;
 P_FLEXI = P_FLEXI et (PROG  FLEXI  ) ;
 P_MPFI  = P_MPFI  et (PROG  MEFLRI ) ;
 P_MPFE  = P_MPFE  et (PROG  MEFLRE ) ;
 P_FLEXE = P_FLEXE et (PROG  FLEXE  ) ;
 P_TOTI  = P_TOTI  et (PROG  TOTIR  ) ;
 P_TOTE  = P_TOTE  et (PROG  TOTER  ) ;
   FINSI ;

FIN BOU1 ;
*
 TABV = TABLE ;
 TABV . 1 = P_FLEXI  ;
 TABV . 2 = P_MPFI ;
 TABV . 3 = P_TOTI  ;
*
 TABV . 4 = P_FLEXE  ;
 TABV . 5 = P_MPFE ;
 TABV . 6 = P_TOTE ;
*
* Contraintes équivalentes - Critère de Von Mises  en peau
* -----------------------------------------------
*                          - Critère de Tresca en peau
* --------------------------------------------
*
 tabana = table ;
 tabana.1 = P_MEMB ;
 tabana.2 = P_MPFI;
 tabana.3 = P_MPFE ;
 tabana.4 = P_TOTI ;
 tabana.5 = P_TOTE ;
    REPETER BTB 5 ;
prcour = tabana.&btb ;
S1 = EXTR prcour 1 ;S2 = EXTR prcour 2 ;S3 = EXTR prcour 3 ;
S4 = EXTR prcour 4 ;S5= 0. ;S6 = 0. ;
SI ( EGA NBCOMP 6 ) ;
S5 = EXTR prcour 5 ;S6 = EXTR prcour 6 ;
FINSI ;
*
TRMM VMMM = @RCCMTRV S1 S2 S3 S4 S5 S6 ;
   si ( ega &btb 1 ) ;
   bbb = prog TRMM ;
   VVV = prog VMMM ;
   sinon ;
   bbb = bbb et (prog TRMM ) ;
   VVV = VVV et(prog VMMM ) ;
   finsi ;
    'FIN' BTB ;
TRESMI = 'EXTR' BBB 1 ; MEMISI  = 'EXTR' VVV 1 ;
TREMFI = 'EXTR' BBB 2 ; BEMISI  = 'EXTR' VVV 2 ;
TREMFE = 'EXTR' BBB 3 ; BEMISE  = 'EXTR' VVV 3 ;
TTREI  = 'EXTR' BBB 4 ; VMV1    = 'EXTR' VVV 4 ;
TTREE  = 'EXTR' BBB 5 ; VMV2    = 'EXTR' VVV 5 ;
    MESS TIRET;
AA = CHAINE FORMAT '(F9.2)' ' ! ' TRESCA ' ! 'TRESMI ' !' TREMFI
' !' TREMFE  ' !' TTREI  ' !' TTREE  ' !';
    MESS AA;
    MESS TIRET;
AA = CHAINE FORMAT '(F9.2)' ' ! ' VMISES ' ! 'MEMISI ' !' BEMISI
' !'BEMISE  ' !' VMV1 ' !' VMV2 ' !';
    MESS AA;
    MESS TIRET;
'FINPROC'  TABV;
$$$$



