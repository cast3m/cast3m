$$$$ @EVN_IDT
* @EVN_IDT  PROCEDUR  MB234859  18/11/21    21:15:01     10007
***********************************************************************
*
* CETTE PROCEDURE A ETE MISE GRACIEUSEMENT A DISPOSITION DES
* UTILISATEURS PAR LE LTDS - Ecole Centrale Lyon (S. Fouvry et S.Garcin)
*
***********************************************************************
*               IDENTIFICATEUR D'EVENEMENTS (@EVN_IDT)
*
*  Determine les 4 booleens suivant :
*   - InPhasUs : VRAI si T_inc est dans l'intervalle [T_INI_US;T_FIN_US]
*   - YesCANPU : VRAI si le profil d'usure doit etre applique
*   - EntreeNC : VRAI si T_inc correspond a un instant de debut de cycle
*   - TermineC : VRAI si T_inc correspond a un instant de   fin de cycle
*  Et l'entier NCNECC qui donne le numero du cycle en cours
*
*  Ces booleens sont utilises par la procedure @EVN_MNG qui appelle
*  ou non en consequence les procedures de calculs (@PRCAi, i=1,5)
*
* Entrees :
*   T1    : Table de PASAPAS
*   ID_BU : Entier donnant le numero de la BOITE D'USURE a considerer
*
* Sortie :
*   T1    : Table de PASAPAS avec les booleens mis a jour
*
* Appelee par PERSO1
*
***********************************************************************
DEBP @EVN_IDT T1*'TABLE' ID_BU*'ENTIER';
*
  BOITE_US = T1.'BOITES_USURES'. ID_BU ;
  T_INI_US = BOITE_US.'T_INI_US'    ;
  T_FIN_US = BOITE_US.'T_FIN_US'    ;
  PERIODCY = BOITE_US.'PERIODCY'    ;

* Initialisation des tables si elles n'existent pas
  BOITE_US = @ChCoTaE BOITE_US ID_BU;
*
* Instant de calcul T_inc
  T_inc    = T1.'ESTIMATION'.'TEMPS' ;
  T_usu    = T_inc - T_INI_US ;

* Numero du Cycle Numerique En Cours Temp : NCNECTmp
* Temps  du Cycle Numerique En Cours Temp : TCNECTmp
  NCNECTmp = ENTI 'SUPERIEUR' ( T_usu / PERIODCY ) ;
  TCNECTmp = T_usu - ((NCNECTmp - 1) * PERIODCY) ;

* A t-on T_inc dans l'intervalle [T_INI_US;T_FIN_US]?
  SI ((T_inc >EG (T_INI_US - 1.e-10))
   ET (T_inc <EG (T_FIN_US + 1.e-10)));
    InPhasUs = VRAI ;
  SINON ;
    InPhasUs = FAUX ;
  FINSI ;

* A t-on T_Inc qui correspond a un instant de debut ou de fin de cycle
* Beginning Or Ending Of Cycle BOEOC
  DT2EOC = ABS (TCNECTmp) ;
  DT2BOC = ABS (TCNECTmp - PERIODCY) ;
  SI (InPhasUs ET ((DT2EOC <EG 1.e-10) OU (DT2BOC <EG 1.e-10))) ;
    BOEOC = VRAI ;
  SINON ;
    BOEOC = FAUX ;
  FINSI ;
*
  SI BOEOC ;
    SI ((ABS (T_inc - T_INI_US)) <EG 1.e-10) ;
      NCNECC = 1  ;
      TCNECC = 0. ;
      EntreeNC = VRAI ;
      TermineC = FAUX ;
    SINON ;
      NCNECC   = ENTI 'PROCHE' (T_usu/PERIODCY) ;
      TCNECC   = PERIODCY ;
      TermineC = VRAI ;
      SI ((ABS (T_inc - T_FIN_US)) <EG 1.e-10) ;
        EntreeNC = FAUX  ;
      SINON ;
        EntreeNC = VRAI ;
      FINSI ;
    FINSI ;
  SINON ;
    EntreeNC = FAUX ;
    TermineC = FAUX ;
    NCNECC = NCNECTmp ;
    TCNECC = TCNECTmp ;
  FINSI ;

* Creation des listes d'instants de chaque cycle qui servira a la
* construction des evolutions (cf. @PRCA5).
* Particularite, certains increments sont communs a deux cycles, et
* doivent apparaitre pour les deux cycles.
  FirstInc = ET EntreeNC (NON TermineC) ;
  TT       = T1 . 'TEMPS' ;
  Inc      = (DIME TT) - 1   ;
  SI (T_inc <EG 1.e-10) ;
    Inc = 0 ;
  FINSI ;
  BOITE_US.'INDICE-STOCKAGE' = Inc ;

  SI InPhasUs ;
*   Cas de l'entree dans un nouveau cycle => Creation de la liste du
*   NCNECC + 1 cycle (sauf cas premier increment d'usure)
    SI EntreeNC ;
      LstIncNC = LECT Inc ;
      LstTpsNC = PROG T_inc ;
      SI FirstInc;
        NumCycle = 1 ;
        BOITE_US.'LISTE_INCREMENTS_DU_CYCLE' = TABL ;
        BOITE_US.'LISTE_TEMPS_DU_CYCLE'      = TABL ;
      SINON ;
        NumCycle = NCNECC + 1 ;
      FINSI;
      BOITE_US.'LISTE_INCREMENTS_DU_CYCLE' . NumCycle = LstIncNC ;
      BOITE_US.'LISTE_TEMPS_DU_CYCLE'      . NumCycle = LstTpsNC ;
    FINSI ;

*   Cas autre que premier increment d'usure : On ajoute le numero d'increment
*   a la liste. Ce traitement convient ainsi aussi bien pour les increments
*   non extremes au cycle, mais aussi pour les increments de fin
    SI (NON FirstInc) ;
      LstIncCC = BOITE_US.'LISTE_INCREMENTS_DU_CYCLE' . NCNECC ;
      LstTpsCC = BOITE_US.'LISTE_TEMPS_DU_CYCLE'      . NCNECC ;
      LstIncCC = ET LstIncCC Inc ;
      LstTpsCC = ET LstTpsCC T_inc ;
      BOITE_US.'LISTE_INCREMENTS_DU_CYCLE' . NCNECC = LstIncCC ;
      BOITE_US.'LISTE_TEMPS_DU_CYCLE'      . NCNECC = LstTpsCC ;
    FINSI ;
  FINSI ;

* Doit-on appliquer le profil d'usure?
  TauxComp = TCNECC / PERIODCY ;

  SI (BOITE_US.'USURE_CYCLIQUE') ;
*   Cas Usure cyclique
    SI (InPhasUs ET (TauxComp EGA 1.)) ;
      YesCANPU = VRAI ;
    SINON ;
      YesCANPU = FAUX ;
    FINSI ;
  SINON ;
*   Cas Usure incrementale
    SI (InPhasUs ET (T_usu >EG 1.e-10)) ;
      YesCANPU = VRAI ;
    SINON ;
      YesCANPU = FAUX ;
    FINSI ;
  FINSI ;

* Stockage des valeurs
  BOITE_US.'NCNECC'   = NCNECC ;
  BOITE_US.'InPhasUs' = InPhasUs ;
  BOITE_US.'YesCANPU' = YesCANPU ;
  BOITE_US.'EntreeNC' = EntreeNC ;
  BOITE_US.'TermineC' = TermineC ;
*
FINP T1;
$$$$


