$$$$ MONTAGNE
* MONTAGNE  PROCEDUR  JC220346  14/12/09    21:15:10     8314
*----------------------------------------------------------------------
*
*        PROCEDURE MONTAGNE
*
*----------------------------------------------------------------------
*
* syntaxe :
*
*   MONTAGNE  CHPO1 (CHPO2) GEO1 (FLOT1) (| POIN1 )
*                                         | PROG1
*             ('TITRE' CHA1) MOT1 MOT2 ;
*
*----------------------------------------------------------------------
*
*  Cette procédure sert à visualiser en relief un champ par point à une
*  composante, et éventuellement de superposer à ce relief les isovaleurs
*  d'un autre champ.
*
*  EN ENTREE :
*                 SMV   :  Le champoint a visualiser (flèches ou volume)
*                (SMV2) :  Le champoint de valeurs (isovaleurs)
*                 GEO   :  Le support géometrique
*               (FLOT1) :  Un coefficient d'amplification
*               (OEIL1) :  Un oeil (POINT)
*               (OEIL2) :  Un oeil (LISTREEL)
*        ('TITRE' CHA1) :  UN TITRE
*                (MOT1) :  mot-clef 'CACH' ou 'CACHE'
*                (MOT2) :  mot-clef 'FLECHE', 'VOLUME' ou 'SUPER'
*
*---------------------------------------------------------------------
*
*  SMV2 doit avoir le même support géométrique que SMV
*
*  Les chpos doivent n'avoir qu'une seule composante
*
*  Si SMV2 est fourni, l'option de tracé est mise à 'VOLUME'
*
*  Si OEIL n'est pas fourni, il est placé au-dessus, face par le
*  sud-sud-ouest
*
*  Si le coefficient d'amplification, n'est pas fourni, il est
*  déterminé automatiquement en donnant une même amplitude verticale
*  que les amplitudes horizontales.
*
*  L'entrée du point de vue sous forme de liste de 3 réels permet
*  de se dispenser de passer en trois dimensions.
*
*  Le type de tracé dépend de MOT2, par défaut VOLUME.
*  une valeur 'SUPER' avec un seul chpo indique qu'on se sert de CHPO1
*  comme champ à superposer sous forme d'isovaleurs.
*
*---------------------------------------------------------------------
'DEBPROC' MONTAGNE
       SMV*'CHPOINT' SMV2/'CHPOINT' GEO*'MAILLAGE' AMP/'FLOTTANT'
       OEIL1/'POINT' OEIL2/'LISTREEL' ;
*---------------------------------------------------------------------

* Gestion des entrées
* ===================

*-- Gestion des entrées optionnelles
LCACH = faux ;
LTITR = faux ;
TYPT  = 'MOT' 'VOLUME' ;
'REPETER' bcl1 ;
   'ARGUMENT' MOT1/'MOT' ;

   'SI' ('EXISTE' MOT1) ;
      'SI' (('EGA' MOT1 'CACH') 'OU' ('EGA' MOT1 'CACHE')) ;
         LCACH = vrai ;
         'ITERER' bcl1 ;
      'FINSI' ;
      'SI' (('EGA' MOT1 'TITR') 'OU' ('EGA' MOT1 'TITRE'));
         'ARGUMENT' MOT2/'MOT' ;
         'SI' ('EXISTE' MOT2) ;
            LTITR = vrai ;
            BARA = MOT2 ;
            'ITERER' bcl1 ;
         'SINON' ;
            'ERREUR' 'On a attend un titre derrière le mot-clef TITRE' ;
         'FINSI' ;
      'FINSI' ;
      'SI' ( ('EGA' MOT1 'FLECHE') 'OU' ('EGA' MOT1 'VOLUME') 'OU'
             ('EGA' MOT1 'SUPER') );
         TYPT = 'MOT' MOT1 ;
         'ITERER' bcl1 ;
      'FINSI' ;
      'ERREUR' ('CHAINE' 'Mot-clef ' MOT1 ' inconnu') ;
   'SINON' ;
      'QUITTER' bcl1 ;
   'FINSI' ;

'FIN' bcl1 ;

*-- Type de tracé
'SI' ('EXISTE' SMV2) ;
*  toujours de type 3 si deux champs sont donnés
   TYPT = 'MOT' 'SUPER' ;
'SINON' ;
   'SI' ('EGA' TYPT 'SUPER') ;
*     le champ superposé sera celui d'origine
      SMV2 = SMV ;
   'FINSI' ;
'FINSI' ;

*-- Test des composantes
'SI' (('DIME' ('EXTR' SMV  'COMP')) 'NEG' 1) ;
   'ERREUR' 'Les champ-points doivent n avoir qu une seule composante' ;
'FINSI' ;
SMV = 'NOMC' SMV 'SCAL' 'NATURE' 'DISCRET' ;

'SI' ('EXISTE' SMV2) ;
   'SI' (('DIME' ('EXTR' SMV2 'COMP')) 'NEG' 1) ;
      'ERREUR'
         'Les champ-points doivent n avoir qu une seule composante' ;
   'FINSI' ;
   SMV2 = 'NOMC' SMV2 'SCAL' 'NATURE' 'DISCRET' ;
'FINSI' ;

* Préparation
* ===========

* Passage en dimension 3
ndime = 'VALEUR' 'DIME' ;
'SI' ('NEG' ndime 3) ;
   savmode = 'VALEUR' 'MODE' ;
   'OPTION' 'DIME' 3 ;
'FINSI' ;

*-- champ de déplacement vertical donné par le champ-point
NA     = 'NBNO' GEO ;

'SI' ('EGA' ndime 3) ;
*  si on est en 3D, on annule la composante verticale de la géométrie
*  support, en projetant sur le plan xOy
   GEO0   = 'PROJETER' GEO 'CYLI' (0 0 1)
                           'PLAN' (0 0 0) (0 1 0) (1 0 0) ;
*  on repositionne SMV sur ce nouveau support
   LIZ    = 'PROG' NA*0. ;
   GEOP0  = 'CHAN' GEO 'POI1' ;
   'REPETER'  LOOP1 NA ;
      I   = &LOOP1  ;
      PPP = 'POINT' GEOP0 I ;
      'REMPLACER' LIZ I ('EXTR' SMV 'SCAL' PPP) ;
   'FIN' LOOP1  ;
   GEOP   = 'CHAN' GEO0 'POI1' ;
   DEPZ   = 'MANU' 'CHPO' GEOP 1 'UZ' LIZ 'NATURE' 'DIFFUS' ;
'SINON' ;
   GEO0   = GEO ;
   GEOP0  = 'CHAN' GEO0 'POI1' ;
   GEOP   = GEOP0 ;
   DEPZ   = 'NOMC' 'UZ' SMV 'NATURE' 'DIFFUS' ;
'FINSI' ;

DEPH = 'MANU' 'CHPO' GEOP 2 'UX' 0. 'UY' 0. 'NATURE' 'DIFFUS';
DEPP = DEPH 'ET' DEPZ ;

*-- Détermination de l'amplification
'SI' ('NON' ('EXISTE' AMP)) ;
*  on tient compte de l'étendue spatiale tel que dz est du même ordre
*  que dx ou dy
   xx yy zz = ('COOR' 1 GEOP) ('COOR' 2 GEOP) SMV ;
   minx maxx = ('MINIMUM' xx) ('MAXIMUM' xx);
   miny maxy = ('MINIMUM' yy) ('MAXIMUM' yy);
   minz maxz = ('MINIMUM' zz) ('MAXIMUM' zz);
   dx = maxx - minx;
   dy = maxy - miny;
   dz = 'MAXIMUM' ('PROG' (maxz - minz) maxz) ;
   'SI' (dz 'EGA' 0.) ;
      AMP = 1. ;
   'SINON' ;
      AMP = ('MAXIMUM' ('PROG' dx dy)) / dz ;
   'FINSI' ;
'FINSI' ;

*-- détermination de la position de l'oeil
'SI' (('EXISTE' OEIL1) 'OU' ('EXISTE' OEIL2)) ;
   'SI' ('EXISTE' OEIL1) ;
      OEIL = OEIL1 ;
   'SINON' ;
      'SI' ('NEG' ('DIME' OEIL2) 3) ;
         'ERREUR'
         'L oeil est soit un point 3D, soit une liste de 3 réels' ;
      'FINSI' ;
      OEIL = ('EXTR' OEIL2 1) ('EXTR' OEIL2 2) ('EXTR' OEIL2 3) ;
   'FINSI' ;
*  on tient compte de la dilatation
   OEIL  = ('COOR' 1 oeil) ('COOR' 2 oeil) (('COOR' 3 oeil) * AMP);

'SINON' ;
*  on s'appuie sur l'étendue spatiale
   xx yy zz = ('COOR' 1 GEOP) ('COOR' 2 GEOP) (SMV*AMP) ;
   minx maxx = ('MINIMUM' xx) ('MAXIMUM' xx);
   miny maxy = ('MINIMUM' yy) ('MAXIMUM' yy);
   minz maxz = ('MINIMUM' zz) ('MAXIMUM' zz);
   xc yx zc  = (.5*(minx + maxx)) (.5*(miny + maxy)) (.5*(minz + maxz));
   xo    = minx - (.5 * (maxx - minx));
   yo    = miny - (2. * (maxy - miny));
   zo    = minz + (4. * (maxz - minz));

*  l'oeil doit être à une hauteur minimale
   zm    = .5 * ('MAXIMUM' ('PROG' (maxx - minx)(maxy - miny))) ;
   zo    = 'MAXIMUM' ('PROG' zo zm) ;

   OEIL  = xo yo zo ;
'FINSI' ;

* Tracé
* =====

'SI' ('EGA' TYPT 'FLECHE') ;
*  Tracé par petites flêches
   VEC1  = 'VECT' DEPP AMP 'A' 'A' 'UZ' 'ROUGE' ;
   DETRB = 'DEFO' GEO0 DEPP 0. VEC1 'DEFAUT' ;
   'SI' ltitr ;
      'TRAC' OEIL  DETRB 'TITRE'  BARA ;
   'SINON' ;
      'TRAC' OEIL  DETRB  ;
   'FINSI' ;
'FINSI' ;

'SI' ('EGA' TYPT 'VOLUME') ;
*  Tracé en volume

*  amplification
   GEOB  = 'PLUS' GEO0 (DEPP '*' AMP) ;

*  différents éléments
   CTBAS = 'COULEUR' ('CONTOUR' GEO0) 'BLEU' ;
   CTHAU = 'COULEUR' ('CONTOUR' GEOB) 'BLEU' ;
   F1    = 'COULEUR' GEO0 'JAUN' ;
   F2    = 'COULEUR' GEOB 'ROUG' ;

   'OPTI' 'ELEM' 'QUA8' ;
   F3    = 'REGLER'  CTBAS 1 CTHAU ;

   SUPTOT = F1 'ET' F2 'ET' F3 ;

   'SI' lcach ;
*     faces cachées
      'SI' ltitr ;
         'TRAC' OEIL SUPTOT 'CACHE' 'TITRE'  BARA ;
      'SINON' ;
         'TRAC' OEIL SUPTOT 'CACHE' ;
      'FINSI' ;
   'SINON' ;
*     tout visible
      'SI' ltitr ;
         'TRAC' OEIL SUPTOT 'TITRE' BARA ;
      'SINON' ;
         'TRAC' OEIL SUPTOT ;
      'FINSI' ;
   'FINSI' ;
'FINSI' ;

'SI' ('EGA' TYPT 'SUPER') ;
*  Tracé en volume avec isovaleurs d'un deuxième champ

*  amplification
   GEOB  = 'PLUS' GEO0 (DEPP '*' AMP) ;
   GEOB0 = CHAN 'POI1' GEOB ;

*  construction du champ-point déplacé :
   PRG2   = 'PROG' NA*0. ;
   'REPETER'  LOOP1 NA ;
      I   = &LOOP1  ;
      PPP = 'POINT' GEOP0 I ;
      'REMPLACER' PRG2 I ('EXTR' SMV2 'SCAL' PPP) ;
   'FIN' LOOP1  ;
   SMV2B  = 'MANU' 'CHPO' GEOB0 1 'SCAL' PRG2 ;

*  les faces sont forcément cachées, donc on ne tient pas compte de lcach
   'SI' ltitr ;
      'TRAC' OEIL GEOB smv2b 'TITRE' BARA ;
   'SINON' ;
      'TRAC' OEIL GEOB smv2b ;
   'FINSI' ;
'FINSI' ;


* Retour dans la dimension d'origine
'SI' ('NEG' ndime 3) ;
   'OPTION' 'DIME' ndime ;
   'OPTION' 'MODE' savmode ;
'FINSI' ;

'FINPROC' ;


