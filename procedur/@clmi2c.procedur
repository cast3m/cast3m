$$$$ @CLMI2C
* @CLMI2C   PROCEDUR  PV        13/06/11    21:15:00     7777
****************************************************
****************************************************
*
*  PROCEDURE POUR APPLICATION DE COND LIM MIXTES
*  TYPE II AVEC PILOTAGE EN CONTRAINTE
*
* L.GELEBART                         08/08
****************************************************
****************************************************
DEBPROC @CLMI2C MAIL0*MAILLAGE CONT0*TABLE;
SXX = CONT0 . 1; SYY = CONT0 . 2; SZZ = CONT0 . 3;
SXY = CONT0 . 4; SXZ = CONT0 . 5; SYZ = CONT0 . 6;
MOD0 = MODE MAIL0 MECANIQUE ELASTIQUE;
*  Identification des points et surfaces exterieures
*    pour application des CL
*=====================================================
ENVE0 = ENVE MAIL0;
elim0 = 1.e-4;
ENVE_PT0 = CHANGE ENVE0 POI1;
XMAX = MAXI (COOR 1 ENVE0);XMIN = MINI (COOR 1 ENVE0);
YMAX = MAXI (COOR 2 ENVE0);YMIN = MINI (COOR 2 ENVE0);
ZMAX = MAXI (COOR 3 ENVE0);ZMIN = MINI (COOR 3 ENVE0);
LX0 = XMAX - XMIN; LY0 = YMAX - YMIN; LZ0 = ZMAX - ZMIN;
PXMIN = ENVE_PT0 POIN 'PLAN'
 (XMIN 0. 0.) (XMIN 1. 0.) (XMIN 0. 1.) (LX0 * elim0);
PYMIN = ENVE_PT0 POIN 'PLAN'
 (0. YMIN 0.) (1. YMIN 0.) (0. YMIN 1.) (LY0 * elim0);
PZMIN = ENVE_PT0 POIN 'PLAN'
 (0. 0. ZMIN) (1. 0. ZMIN) (0. 1. ZMIN) (LZ0 * elim0);
PXMAX = ENVE_PT0 POIN 'PLAN'
 (XMAX 0. 0.) (XMAX 1. 0.) (XMAX 0. 1.) (LX0 * elim0);
PYMAX = ENVE_PT0 POIN 'PLAN'
 (0. YMAX 0.) (1. YMAX 0.) (0. YMAX 1.) (LY0 * elim0);
PZMAX = ENVE_PT0 POIN 'PLAN'
 (0. 0. ZMAX) (1. 0. ZMAX) (0. 1. ZMAX) (LZ0 * elim0);
*
SURFX0 = ENVE0 ELEM APPUYE STRICTEMENT PXMIN;
SURFY0 = ENVE0 ELEM APPUYE STRICTEMENT PYMIN;
SURFZ0 = ENVE0 ELEM APPUYE STRICTEMENT PZMIN;
SURFX1 = ENVE0 ELEM APPUYE STRICTEMENT PXMAX;
SURFY1 = ENVE0 ELEM APPUYE STRICTEMENT PYMAX;
SURFZ1 = ENVE0 ELEM APPUYE STRICTEMENT PZMAX;
*
A1 = ENVE_PT0 POIN PROC (XMIN YMIN ZMIN);
A2 = ENVE_PT0 POIN PROC (XMAX YMIN ZMIN);
A4 = ENVE_PT0 POIN PROC (XMIN YMAX ZMIN);
*
SX00 = LY0 * LZ0;
SX0 = MESU SURFX0;
SX1 = MESU SURFX1;
SY00 = LX0 * LZ0;
SY0 = MESU SURFY0;
SY1 = MESU SURFY1;
SZ00 = LX0 * LY0;
SZ0 = MESU SURFZ0;
SZ1 = MESU SURFZ1;
*trac SURFZ0;
MESSAGE 'SX00 = ' SX00;
MESSAGE 'SX0 = ' SX0;
MESSAGE 'SX1 = ' SX1;
MESSAGE 'SY00 = ' SY00;
MESSAGE 'SY0 = ' SY0;
MESSAGE 'SY1 = ' SY1;
MESSAGE 'SZ00 = ' SZ00;
MESSAGE 'SZ0 = ' SZ0;
MESSAGE 'SZ1 = ' SZ1;
*
*  Application des contraintes
*================================
test = 0;
SI ((SXZ NEG 0.) OU (SYZ NEG 0.) OU (SZZ NEG 0.));
FZ1 = FSUR MASS MOD0 SURFZ1 (SXZ SYZ SZZ);
FZ0 = FSUR MASS MOD0 SURFZ0
         ((0. - SXZ) (0. - SYZ) (0. - SZZ));
FZ0 = FZ0 * (SZ00 / SZ0);
FZ1 = FZ1 * (SZ00 / SZ1);
FCLP0 = FZ0 ET FZ1;
test=1;
FINSI;
*
SI ((SXY NEG 0.) OU (SYY NEG 0.) OU (SYZ NEG 0.));
FY1 = FSUR MASS MOD0 SURFY1 (SXY SYY SYZ);
FY0 = FSUR MASS MOD0 SURFY0
         ((0. - SXY) (0. - SYY) (0. - SYZ));
FY0 = FY0 * (SY00 / SY0);
FY1 = FY1 * (SY00 / SY1);
SI (test EGA 1);
FCLP0 = FCLP0 ET (FY0 ET FY1);
SINON;
FCLP0 = FY0 ET FY1;
test=1;
FINSI;
FINSI;
*
SI ((SXX NEG 0.) OU (SXY NEG 0.) OU (SXZ NEG 0.));
FX1 = FSUR MASS MOD0 SURFX1 (SXX SXY SXZ);
FX0 = FSUR MASS MOD0 SURFX0
         ((0. - SXX) (0. - SXY) (0. - SXZ));
FX0 = FX0 * (SX00 / SX0);
FX1 = FX1 * (SX00 / SX1);
SI (test EGA 1);
FCLP0 = FCLP0 ET (FX0 ET FX1);
SINON;
FCLP0 = FX0 ET FX1;
FINSI;
FINSI;
*
*  Blocage du mvt de corps rigide
*===========================================
BL1 = BLOQUE UX UY UZ A1;
BL2 = BLOQUE UY UZ A2;
BL3 = BLOQUE UZ A4;
BL0 = BL1 ET (BL2 ET BL3);
*BL0 = @CORIGI ENVE0;
*
*  Application des conditions de deformation TANGEANTIELLE homogene
*=============================================================
*
ENVE1 = (SURFX0 ET SURFX1 ET SURFY0 ET SURFY1 ET SURFZ0 ET SURFZ1);
elim 1.e-4  ENVE1;
ENVE_PT1 = CHANGE ENVE1 POI1;
B1 = ENVE_PT1 POIN PROC (XMAX YMIN ZMIN);
B2 = ENVE_PT1 POIN PROC (XMIN YMAX ZMIN);
B3 = ENVE_PT1 POIN PROC (XMIN YMIN ZMAX);
N0 = NBNO ENVE_PT1;
*trac ENVE1 CACH;
RIGCLP = BL0;
*
SURFXPT0 = CHANGE SURFX0 POI1;
N0 = NBNO SURFX0;
i = 0;
REPETE BOUX0 (N0);
i = i + 1;
M0 = SURFXPT0 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIY = RELA 1. UY M0 - (((coor 1 M0)-XMIN)/LX0) UY B1
-(((coor 2 M0)-YMIN)/LY0) UY B2 - (((coor 3 M0)-ZMIN)/LZ0) UY B3;
RIGIZ = RELA 1. UZ M0 - (((coor 1 M0)-XMIN)/LX0) UZ B1
-(((coor 2 M0)-YMIN)/LY0) UZ B2 - (((coor 3 M0)-ZMIN)/LZ0) UZ B3;
RIGCLP = RIGCLP ET (RIGIY ET RIGIZ);
FINSI;
FIN BOUX0;
*
SURFXPT1 = CHANGE SURFX1 POI1;
N0 = NBNO SURFX1;
i = 0;
REPETE BOUX1 (N0);
i = i + 1;
M0 = SURFXPT1 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIY = RELA 1. UY M0 - (((coor 1 M0)-XMIN)/LX0) UY B1
-(((coor 2 M0)-YMIN)/LY0) UY B2 - (((coor 3 M0)-ZMIN)/LZ0) UY B3;
RIGIZ = RELA 1. UZ M0 - (((coor 1 M0)-XMIN)/LX0) UZ B1
-(((coor 2 M0)-YMIN)/LY0) UZ B2 - (((coor 3 M0)-ZMIN)/LZ0) UZ B3;
RIGCLP = RIGCLP ET (RIGIY ET RIGIZ);
FINSI;
FIN BOUX1;
*
SURFYPT0 = CHANGE SURFY0 POI1;
N0 = NBNO SURFY0;
i = 0;
REPETE BOUY0 (N0);
i = i + 1;
M0 = SURFYPT0 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIX = RELA 1. UX M0 - (((coor 1 M0)-XMIN)/LX0) UX B1
-(((coor 2 M0)-YMIN)/LY0) UX B2 - (((coor 3 M0)-ZMIN)/LZ0) UX B3;
RIGIZ = RELA 1. UZ M0 - (((coor 1 M0)-XMIN)/LX0) UZ B1
-(((coor 2 M0)-YMIN)/LY0) UZ B2 - (((coor 3 M0)-ZMIN)/LZ0) UZ B3;
RIGCLP = RIGCLP ET (RIGIX ET RIGIZ);
FINSI;
FIN BOUY0;
*
SURFYPT1 = CHANGE SURFY1 POI1;
N0 = NBNO SURFY1;
i = 0;
REPETE BOUY1 (N0);
i = i + 1;
M0 = SURFYPT1 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIX = RELA 1. UX M0 - (((coor 1 M0)-XMIN)/LX0) UX B1
-(((coor 2 M0)-YMIN)/LY0) UX B2 - (((coor 3 M0)-ZMIN)/LZ0) UX B3;
RIGIZ = RELA 1. UZ M0 - (((coor 1 M0)-XMIN)/LX0) UZ B1
-(((coor 2 M0)-YMIN)/LY0) UZ B2 - (((coor 3 M0)-ZMIN)/LZ0) UZ B3;
RIGCLP = RIGCLP ET (RIGIX ET RIGIZ);
FINSI;
FIN BOUY1;
*
SURFZPT0 = CHANGE SURFZ0 POI1;
N0 = NBNO SURFZ0;
i = 0;
REPETE BOUZ0 (N0);
i = i + 1;
M0 = SURFZPT0 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIX = RELA 1. UX M0 - (((coor 1 M0)-XMIN)/LX0) UX B1
-(((coor 2 M0)-YMIN)/LY0) UX B2 - (((coor 3 M0)-ZMIN)/LZ0) UX B3;
RIGIY = RELA 1. UY M0 - (((coor 1 M0)-XMIN)/LX0) UY B1
-(((coor 2 M0)-YMIN)/LY0) UY B2 - (((coor 3 M0)-ZMIN)/LZ0) UY B3;
RIGCLP = RIGCLP ET (RIGIX ET RIGIY);
FINSI;
FIN BOUZ0;
*
SURFZPT1 = CHANGE SURFZ1 POI1;
N0 = NBNO SURFZ1;
i = 0;
REPETE BOUZ1 (N0);
i = i + 1;
M0 = SURFZPT1 POIN i;
SI ((M0 NEG B1) ET (M0 NEG B2) ET (M0 NEG B3));
RIGIX = RELA 1. UX M0 - (((coor 1 M0)-XMIN)/LX0) UX B1
-(((coor 2 M0)-YMIN)/LY0) UX B2 - (((coor 3 M0)-ZMIN)/LZ0) UX B3;
RIGIY = RELA 1. UY M0 - (((coor 1 M0)-XMIN)/LX0) UY B1
-(((coor 2 M0)-YMIN)/LY0) UY B2 - (((coor 3 M0)-ZMIN)/LZ0) UY B3;
RIGCLP = RIGCLP ET (RIGIX ET RIGIY);
FINSI;
FIN BOUZ1;
*
FINPROC RIGCLP FCLP0;
*******************************************************
* FIN DE LA PROCEDURE CLMI2C
*******************************************************

