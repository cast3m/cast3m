$$$$ COLLER2
* COLLER2   PROCEDUR  BP208322  17/04/18    21:15:01     9395
*
************************************************************************
*
* COLLER2 : CONNECT SHELL TO SOLID ELEMENTS FOR A GIVEN SET OF NODES
*           OF THE SHELL
*
* INPUTS :
*          mod_sh  = SHELL MODEL
*          mat_sh  = SHELL MATERIAL
*          mod_so  = SOLID MODEL
*          node_sh = MESH (MAILLAGE or POINT TYPE) TO LINK
*         (cons_lo = NAME OF THE LOWER CONSTITUANT)
*         (cons_up = NAME OF THE UPPER CONSTITUANT)
*
* CREATION : BP, 2017-03-23
*
************************************************************************

DEBP COLLER2 mod_sh*'MMODEL' mat_sh*'MCHAML'
             mod_so*'MMODEL' ;


************************************************************************
*   I. VERIFICATION AND TREATMENT OF INPUTS
************************************************************************

* POINTS (OR MESH) OF THE SHELL TO GLUE
  mesh_sh = EXTR mod_sh 'MAILLAGE';
  mesh_so = EXTR mod_so 'MAILLAGE';
  ARGU node_sh/'MAILLAGE';
  SI (EXIS node_sh);
    node_sh = node_sh CHAN 'POI1';
  SINON;
    ARGU node_sh*'POINT';
    node_sh = MANU 'POI1' node_sh;
  FINSI;

* CONSITUTANTS'NAME
* (= LAYER NAME GIVEN IN THE MODEL FOR MULTILAYER SHELL)
  ARGU cons_lo/'MOT'  cons_up/'MOT';

* MATERIAL COMPONENTS
  mat_comp = EXTR mat_sh 'COMP';

* COMPONENTS
  IDIM  = VALE 'DIME';
  IFOUR = VALE 'MODE';
  FLAXI = (EGA IFOUR 'FOUR') ou (EGA IFOUR 'AXIS');
  FL2D  = (EGA IDIM 2);
  SI FL2D;
    SI FLAXI;
      moV = MOTS 'VR' 'VZ';
      moU = MOTS 'UR' 'UZ';
      R3  = MOT 'RT'; U3 = MOT 'UT';
    SINON;
      moV = MOTS 'VX' 'VY';
      moU = MOTS 'UX' 'UY';
      R3  = MOT 'RZ';
    FINSI;
    U1 = EXTR moU 1; U2 = EXTR moU 2;
  SINON;
    moV = MOTS 'VX' 'VY' 'VZ';
    moU = MOTS 'UX' 'UY' 'UZ';
    moR = MOTS 'RX' 'RY' 'RZ';
    U1 = EXTR moU 1; U2 = EXTR moU 2; U3 = EXTR moU 3;
    R1 = EXTR moR 1; R2 = EXTR moR 2; R3 = EXTR moR 3;
  FINSI;


************************************************************************
*   II. GENEREATION OF NODES ON UPPER AND LOWER SURFACES
************************************************************************

* MODEL ASSOCIATED WITH UPPER AND LOWER SURFACES
  SI (EXIS cons_lo);  mod_lo = EXTR mod_sh 'CONS' cons_lo;
  SINON;              mod_lo = mod_sh;
  FINSI;
  SI (EXIS cons_up);  mod_up = EXTR mod_sh 'CONS' cons_up;
  SINON;              mod_up = mod_sh;
  FINSI;
  mat_lo = REDU mat_sh mod_lo;
  mat_up = REDU mat_sh mod_up;

* NORMAL TO THE SHELL
  n_sh = CHAN (VSUR mod_lo 'NORM') 'CHPO' mod_lo;
  n_sh = REDU n_sh node_sh;
  n_sh = EXCO n_sh moV moU ;

* SHELL EXCENTRATION AND HALF-THICKNESS
  th_lo = 0.5 * (CHAN (EXCO mat_lo 'EPAI' 'SCAL') 'CHPO' mod_lo);
  th_up = 0.5 * (CHAN (EXCO mat_up 'EPAI' 'SCAL') 'CHPO' mod_up);
  SI (EXIS mat_comp 'EXCE' );
    ex_lo = CHAN (EXCO mat_lo 'EXCE' 'SCAL') 'CHPO' mod_lo;
    ex_up = CHAN (EXCO mat_up 'EXCE' 'SCAL') 'CHPO' mod_up;
  SINON;
    ex_lo = 0.;
    ex_up = 0.;
  FINSI;
  lo_sh = ex_lo - th_lo;
  up_sh = ex_up + th_up;

* NEW NODES (ON UPPER AND LOWER SURFACES)
  n_up = up_sh * n_sh;
  n_lo = lo_sh * n_sh;
  x_up = node_sh PLUS n_up;
  x_lo = node_sh PLUS n_lo;
  x_peau = x_up et x_lo;

*   opti trac X;
* *   TRAC (mesh_sh et x_peau);
*   TRAC (mesh_so et mesh_sh et (x_peau COUL 'ROSE'));


************************************************************************
*   III. LINKING UPPER AND LOWER NODES TO THE SOLID
************************************************************************

* LINKING POINTS TO THE SOLID
  KREL1 = RELA x_peau 'ACCRO' mesh_so;

* GET THE NODES OF x_up AND  x_lo ACTUALLY CONSTRAINED TO THE SOLID
  ELREL1 = CHAN (EXTR KREL1 'MAILLAGE' 'NOMU') 'POI1';


************************************************************************
*   IV. LINKING UPPER AND LOWER NODES TO THE SHELL
************************************************************************

  n_upX = EXCO n_up U1 'SCAL';
  n_upY = EXCO n_up U2 'SCAL';
  n_loX = EXCO n_lo U1 'SCAL';
  n_loY = EXCO n_lo U2 'SCAL';
  SI (NON FL2D);
    n_upZ = EXCO n_up U3 'SCAL';
    n_loZ = EXCO n_lo U3 'SCAL';
  FINSI;
  KREL = VIDE 'RIGIDITE';
  nnode = NBEL node_sh;

* LOOP OVER SHELL NODES -----------------
  REPE Bnode nnode;

*   node of the shell
    node_i = POIN node_sh 1 &Bnode;

*   node of the upper plan of the shell + its relative position
    x_up_i = POIN x_up    1 &Bnode;
    SI (x_up_i DANS ELREL1);
        n_upXi = EXTR n_upX node_i 'SCAL';
        n_upYi = EXTR n_upY node_i 'SCAL';
     SI FL2D;
*       UX - hY(sup)*RZ = UX(sup)
        KupX = RELA U1 node_i - n_upYi R3 node_i - U1 x_up_i;
*       UY + hX(sup)*RZ = UY(sup)
        KupY = RELA U2 node_i + n_upXi R3 node_i - U2 x_up_i;
        KREL = KREL et KupX et KupY;
        SI FLAXI; KREL = KREL et (RELA U3 node_i - U3 x_up_i); FINSI;
      SINON;
        n_upZi = EXTR n_upZ node_i 'SCAL';
*       UX + hZ(sup)*RY - hY(sup)*RZ = UX(sup)
        KupX = RELA U1 node_i + n_upZi R2 node_i - n_upYi R3 node_i
                  - U1 x_up_i;
*       UY + hX(sup)*RZ - hZ(sup)*RX = UY(sup)
        KupY = RELA U2 node_i + n_upXi R3 node_i - n_upZi R1 node_i
                  - U2 x_up_i;
*       UZ + hy(sup)*RX - hX(sup)*RY = UZ(sup)
        KupZ = RELA U3 node_i + n_upYi R1 node_i - n_upXi R2 node_i
                  - U3 x_up_i;
        KREL = KREL et KupX et KupY et KupZ;
      FINSI;
    FINSI;

*   node of the lower plan of the shell + its relative position
    x_lo_i = POIN x_lo    1 &Bnode;
    SI (x_lo_i DANS ELREL1);
        n_loXi = EXTR n_loX node_i 'SCAL';
        n_loYi = EXTR n_loY node_i 'SCAL';
     SI FL2D;
*       UX - hY(inf)*RZ = UX(inf)
        KloX = RELA U1 node_i - n_loYi R3 node_i - U1 x_lo_i;
*       UY + hX(inf)*RZ = UY(inf)
        KloY = RELA U2 node_i + n_loXi R3 node_i - U2 x_lo_i;
        KREL = KREL et KloX et KloY;
        SI FLAXI; KREL = KREL et (RELA U3 node_i - U3 x_lo_i); FINSI;
      SINON;
        n_loZi = EXTR n_loZ node_i 'SCAL';
*       UX + hZ(inf)*RY - hY(inf)*RZ = UX(inf)
        KloX = RELA U1 node_i + n_loZi R2 node_i - n_loYi R3 node_i
                  - U1 x_lo_i;
*       UY + hX(inf)*RZ - hZ(inf)*RX = UY(inf)
        KloY = RELA U2 node_i + n_loXi R3 node_i - n_loZi R1 node_i
                  - U2 x_lo_i;
*       UZ + hy(inf)*RX - hX(inf)*RY = UZ(inf)
        KloZ = RELA U3 node_i + n_loYi R1 node_i - n_loXi R2 node_i
                  - U3 x_lo_i;
        KREL = KREL et KloX et KloY et KloZ;
      FINSI;
    FINSI;

  FIN  Bnode;
* END OF LOOP OVER SHELL NODES -----------------


  KREL2 = KREL ET KREL1;

FINP KREL2 ;

$$$$



