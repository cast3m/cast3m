$$$$ POUT2MAS
* POUT2MAS  PROCEDUR  PASCAL    14/01/23    21:15:03     7910
*************************************************************************
*
*
*  Génère un maillage volumique à partir d'un modèle de poutre
*   (section, tuyau, poutre)
*
**************************************************************************
DEBPROC POUT2MAS MOD1*MMODEL MAT1*MCHAML MOTCLE/MOT TAB1/TABLE;
*
OPTI ELEM CUB8;
*
MESH3D = MOT 'MESH3D';
DEP3DJ = MOT 'DEP3DJ';
DEF3DJ = MOT 'DEF3DJ';
DEFANI =  MOT 'DEFANI';
BLPOUT3D =  MOT 'BLPOUT3D';
*
ZONMOD = extr MOD1 ZONE;
*
SI (NON (EXISTE MOTCLE));
  MOTCLE = MOT 'MASSIF';
FINSI;
*
* Option par défaut
*
   NCIRCP = 8;
   NCIRCT = 8;
   NEPAIT = 1;
   NY = 1;
   NZ = 1;
   FLAGPOUT = 'CIRCULAIRE';
   AMPDEF = 1.;
   FLAGDEFO = FAUX;
   FLAGVAIS = FAUX;
   FLAGVONS = FAUX;
   FLAGRELA = FAUX;
   FLAGMATS = FAUX;
*
SI (EXISTE TAB1);
*
    SI (EXISTE TAB1 'AMPLITUDE_DEFORMEES');
         AMPDEF = TAB1.'AMPLITUDE_DEFORMEES';
    FINSI;
*
    SI (EXISTE TAB1 'TUYAU');
       SI (EXISTE (TAB1.'TUYAU') 'NCIRC');
          NCIRCT = (TAB1.'TUYAU').'NCIRC';
       SINON;
           NCIRCT = 8;
       FINSI;
*
       SI (EXISTE (TAB1.'TUYAU') 'EPAI');
          NEPAIT = (TAB1.'TUYAU').'EPAI';
       SINON;
          NEPAIT = 1;
       FINSI;
*
     FINSI;
*
     SI (EXISTE TAB1 'POUTRE');
       SI (EXISTE (TAB1.'POUTRE') 'NCIRC');
          NCIRCP = (TAB1.'POUTRE').'NCIRC';
       SINON;
          NCIRCP = 8;
       FINSI;
       SI (EXISTE (TAB1.'POUTRE') 'NY');
          NY = (TAB1.'POUTRE').'NY';
       SINON;
         NY = 1;
       FINSI;
       SI (EXISTE (TAB1.'POUTRE') 'NZ');
          NZ = (TAB1.'POUTRE').'NZ';
       SINON;
          NZ = 1;
       FINSI;
       SI (EXISTE (TAB1.'POUTRE') 'RECTANGULAIRE');
          FLAGPOUT = 'RECTANGULAIRE';
       SINON;
          FLAGPOUT = 'CIRCULAIRE';
       FINSI;
    FINSI;
*
    SI (EXISTE TAB1 'DEPLACEMENTS');
      FLAGDEFO = VRAI;
      TAB1. 'DEFORMEES'= TABLE;
      TAB1. 'DEPLACEMENTS_3D'= TABLE;
      NDEFO = DIME (TAB1.'DEPLACEMENTS');
      DEP3D= TABLE;
     SINON;
      FLAGDEFO = FAUX;
      NDEFO = 0;
    FINSI;
*
* Si on veut creer les relations pour les sections au droit des noeuds
*
    SI (EXISTE TAB1 'RELATION_3D');
      SI (EGA (TAB1.'RELATION_3D') VRAI);
        FLAGRELA = VRAI;
        BLPOUTJ = MOT 'BLPOUTJ';
        BLPOUT3D = MOT 'BLPOUT3D';
      SINON;
        FLAGRELA = FAUX;
      FINSI;
     SINON;
      FLAGRELA = FAUX;
    FINSI;
*
* si on fournit MATS
*
    SI (EXISTE TAB1 'MATS');
      FLAGMATS = VRAI;
      MAT3D= MOT 'MAT3D';
     SINON;
      FLAGMATS = FAUX;
      NMATS = 0;
    FINSI;
*
*  si on fournit VAIS
*
    SI (EXISTE TAB1 'VAIS');
      FLAGVAIS = VRAI;
      TAB1. 'VAIS_3D'= TABLE;
      NVAIS = DIME (TAB1.'VAIS');
      VAI3D= TABLE;
     SINON;
      FLAGVAIS = FAUX;
      NVAIS = 0;
    FINSI;
*
* si on fournit VONS
*
    SI (EXISTE TAB1 'VONS');
      FLAGVONS = VRAI;
      TAB1. 'VONS_3D'= TABLE;
      NVONS = DIME (TAB1.'VONS');
      VON3D= TABLE;
     SINON;
      FLAGVONS = FAUX;
      NVONS = 0;
    FINSI;
*
FINSI;

*
* Fin de la lecture de la table d'entrée
*
* Génération du maillage
*
NBZONE = ENTIER ((DIME ZONMOD)/2.);
*
* On boucle sur les zones
*
REPETER LAB1 NBZONE;
*
  I1= &LAB1;
  MESHPOUI =  ZONMOD.(2*I1);
  MODPOUI = ZONMOD.((2*I1) - 1);
  MATPOUI = REDU MAT1 MODPOUI;
*
  NB2= NBEL (ELEM MESHPOUI 'SEG2');
*
  SI (NB2 > 0);
*
* On boucle sur les éléments
*
  REPETER LAB2 NB2;
    I2 = &LAB2;
     MESHPOUJ = MESHPOUI ELEM SEG2 I2;
     PODEPOJ = (MESHPOUJ POIN 'INITIAL');
     POFIPOJ = (MESHPOUJ POIN 'FINAL');
     VEC0POJ = 0.5*(PODEPOJ PLUS POFIPOJ);
     VECXPOJ = POFIPOJ MOINS PODEPOJ;
     VECXPOJ = VECXPOJ/(NORME VECXPOJ);
     VECYPOJ = EXTR MATPOUI VECT 1 I2 1;
     VECYPOJ = VECYPOJ/(NORME VECYPOJ);
     VECYPOJ = VECYPOJ MOINS ((VECYPOJ PSCAL VECXPOJ)*VECXPOJ);
     SI ((NORM VECYPOJ) < 1.D-10);
       SI (VECXPOJ SCAL (1. 0. 0.) > 1.D-10);
           VECYPOJ = VECXPOJ PVEC (1. 0. 0.);
        SINON;
           VECYPOJ = VECXPOJ PVEC (0. 1. 0.);
        FINSI;
     FINSI;
     VECZPOJ = VECXPOJ PVEC VECYPOJ ;
*
*
* Cas du modèle à fibre
*
SI (EXISTE MATPOUI 'MODS');
*
     MODSEC = (EXTR MATPOUI MODS 1 I2 1);
     ZONSEC = EXTR MODSEC ZONE;
*
SINON;
*
* Cas des tuyaux
*
  SI ((EXISTE MATPOUI 'EPAI') ET (EXISTE MATPOUI 'RAYO') );
*
    EPATUY = (MAXI (EXCO MATPOUI 'EPAI'));
    RAYTUY = (MAXI (EXCO MATPOUI 'RAYO'));
*
   P1S = (RAYTUY - (0.5 * EPATUY)) 0. 0.;
   P2S = (RAYTUY + (0.5 * EPATUY)) 0. 0.;
*
   P12S = DROI NEPAIT P1S P2S;
   MESHSEC = P12S ROTA NCIRCT 360. (0. 0. 0.) (0. 0. 1.);
*
   ZONSEC = TABLE;
   ZONSEC.1 =  MESHSEC;
   ZONSEC.2 =  MESHSEC;
*
*
* Fin cas des tuyaux
*
  SINON;
*
* Cas des poutres
*
  SI ((EXISTE MATPOUI 'INRY') ET (EXISTE MATPOUI 'INRZ') );
*
    INRY = (MAXI (EXCO MATPOUI 'INRY'));
    INRZ = (MAXI (EXCO MATPOUI 'INRZ'));
*
*
   SI (EGA FLAGPOUT 'CIRCULAIRE');
*
     RAYO = ((2.D0*(INRY + INRZ))/PI)**0.25;
     P1S = RAYO 0. 0.;
     P2S = 0. RAYO 0.;
     P3S = ((-1.)*RAYO) 0. 0.;
     P4S = 0. ((-1.)*RAYO) 0.;
*
      NDISCR = ENTIER (NCIRCP/4);
*
     CERB = (CERC NDISCR P1S (0. 0. 0.)  P2S) ET
            (CERC NDISCR P2S (0. 0. 0.)  P3S) ET
            (CERC NDISCR P3S (0. 0. 0.)  P4S) ET
            (CERC NDISCR P4S (0. 0. 0.)  P1S);
      MESHSEC = SURF CERB 'PLANE';
      ZONSEC = TABLE;
      ZONSEC.1 =  MESHSEC;
      ZONSEC.2 =  MESHSEC;
*
   SINON;
      LX = (144.*(INRZ**3)/INRY)**(1./8.);
      LY = (144.*(INRY**3)/INRZ)**(1./8.);
      P1S = (0.5*LX) ((-0.5)*LY) 0.;
      P2S = ((-0.5)*LX) ((-0.5)*LY) 0.;
      MESHSEC = (DROI NY P1S P2S) TRAN NZ (0. LY 0.);
      ZONSEC = TABLE;
      ZONSEC.1 =  MESHSEC;
      ZONSEC.2 =  MESHSEC;
*
   FINSI;
*
  FINSI;
* Fin test poutre
  FINSI;
* Fin test tuyau
FINSI;
* Fin test fibre
*
*
     REPETER LAB20 (ENTIER (0.5*(DIME ZONSEC)));
         I20 = &lab20;
*
         MESHSECJ = ZONSEC.(2*I20);
         MODSECJ = ZONSEC.(2*I20 - 1);
*
         MESHSECF = DEDU MESHSECJ
         ((0. 0. 0.) et (0. 0. 1.)
       et (1. 0. 0.) et (0. 1. 0.))
        (VEC0POJ et (VEC0POJ plus VECXPOJ)
      et (VEC0POJ plus VECYPOJ) et (VEC0POJ plus VECZPOJ));
*
*     Génération du volume
*
      SI (EGA MOTCLE 'GAUSS');
        VOL3DJ = MESHSECF;
      SINON;
         MeshSECF=MESHSECF PLUS ((-0.5)*(POFIPOJ MOINS PODEPOJ));
         MeshSECG=MESHSECF PLUS (POFIPOJ MOINS PODEPOJ);
         ELTYPE = ELEM MESHSECF TYPE;
         Ntype = DIME ELTYPE;
         REPETER LAB3  Ntype;
           EleType = (EXTR ELTYPE &LAB3);
           MESHB = ELEM MeshSECF EleType;
           MESHC = ELEM MeshSECG EleType;
           SI (EGA EleType SEG2);
*  Cas des SEGS
             MESHVol = MESHB TRAN 1 (POFIPOJ MOINS PODEPOJ);
           SINON;
*  Cas des TRIS et QUAS
              SI ((EGA EleType TRI3) OU (EGA EleType QUA4));
                MESHVol = MESHB VOLU MESHC 1;
              SINON;
*  Cas des POJS
               NBMESH = NBEL MESHB;
               REPETER LAB4 NBMESH;
                 SI (&LAB4 EGA 1);
                     MESHVol = DROI 1 (POIN MESHB &LAB4)
                                      (POIN MESHC &LAB4);
                 SINON;
                     MESHVola = DROI 1 (POIN MESHB &LAB4)
                                      (POIN MESHC &LAB4);
                     MESHVol = MESHVol ET MESHVola;
                 FINSI;
               FIN LAB4;
*
              FINSI;
           FINSI;
*
           ELIM 0.00001 (MESHVol et MESHC);
*
           SI (EGA (TYPE VOL3DJ) MOT);
               VOL3DJ = MESHVol;
           SINON;
               VOL3DJ = VOL3DJ et MESHVol;
           FINSI;
*
         FIN LAB3;
      FINSI;
*
       SI ( EGA (TYPE VOL3DJJ) MOT);
          VOL3DJJ = VOL3DJ;
          VOL3DJ = MOT 'VOL3DJ';
       SINON;
          VOL3DJJ = VOL3DJJ ET VOL3DJ;
          VOL3DJ = MOT 'VOL3DJ';
       FINSI;
*
* Transfert des MATS sur le 3D
*
     SI FLAGMATS;
*
       MATJ = EXTR (REDU ((TAB1.'MATS')) MESHPOUJ)
               1 1 1 'MATS';
       MATJ0 = (CHAN CHPO (REDU MATJ MODSECJ) MODSECJ);
       MATJ0 = 'CHAN' 'ATTRIBUT' MATJ0 'NATURE' 'DISCRET';
*
       SI (EGA MOTCLE 'GAUSS');
        MATJ = DEDU MATJ0 TRAN MESHSECJ MESHSECF;
       SINON;
        mess 'Option disponible seulement pour GAUSS';
       FINSI;
*
*
           SI ((EGA (TYPE MAT3D) MOT));
               MAT3D = MATJ ;
               MATJ = MOT 'VAIJ';
           SINON;
               MAT3D = MAT3D ET MATJ;
               MATJ = MOT 'MATJ';
           FINSI;
      FINSI;
*
* Fin pour MATS
* Transfert des VAIS sur le 3D
*
     SI FLAGVAIS;
*
      REPETER LAB6 NDEFO;
        i6 = (INDEX (TAB1.'VAIS')).&LAB6;
*
       VAIJ = EXTR (REDU ((TAB1.'VAIS'). i6) MESHPOUJ)
               1 1 1 'VAIS';
       VAIJ0 =
       (CHAN CHPO (REDU VAIJ MODSECJ) MODSECJ);
      VAIJ0 = 'CHAN' 'ATTRIBUT' VAIJ0 'NATURE' 'DISCRET';
*
      SI (EGA MOTCLE 'GAUSS');
       VAIJ = DEDU VAIJ0 TRAN MESHSECJ MESHSECF;
      SINON;
       mess 'Option disponible seulement pour GAUSS';
      FINSI;
*
*
           SI (NON (EXISTE VAI3D i6));
               VAI3D . i6= VAIJ ;
               VAIJ = MOT 'VAIJ';
           SINON;
               VAI3D. i6 =(VAI3D. i6) ET VAIJ;
               VAIJ = MOT 'VAIJ';
           FINSI;
*
       FIN LAB6;
*
     FINSI;
*
* Fin pour VAIS
*
*
* Transfert des VONS sur le 3D
*
     SI FLAGVONS;
*
      REPETER LAB6 NVONS;
        i6 = (INDEX (TAB1.'VONS')).&LAB6;
*
       VONJ = EXTR (REDU ((TAB1.'VONS'). i6) MESHPOUJ)
               1 1 1 VONS;
       VONJ0 = 'CHAN' 'CHPO' (REDU VONJ MODSECJ) MODSECJ;
       VONJ0 =  EXCO VONJ0 (mots SMXX SMXY SMXZ)
                          (mots SMXX SMXY SMXZ);
       VONJ0 = 'CHAN' 'ATTRIBUT' VONJ0 'NATURE' 'DISCRET';
*
      SI (EGA MOTCLE 'GAUSS');
       VONJ = DEDU VONJ0 TRAN MESHSECJ MESHSECF;
      SINON;
       mess 'Option disponible seulement pour GAUSS';
      FINSI;
*
*
           SI (NON (EXISTE VON3D i6));
               VON3D . i6= VONJ ;
               VONJ = MOT 'VONJ';
           SINON;
               VON3D. i6 =(VON3D. i6) ET VONJ;
               VONJ = MOT 'VONJ';
           FINSI;
*
       FIN LAB6;
*
     FINSI;
*
* Fin du VONS
*
*
* Ecriture des RELA pour les poutres
*
     SI FLAGRELA;
       BLPOUTJ = (RELA CORI DEPL ROTA PODEPOJ MeshSECF) ET
                (RELA CORI DEPL ROTA POFIPOJ MeshSECG);
       SI ((EGA (TYPE BLPOUT3D) MOT));
               BLPOUT3D = BLPOUTJ ;
               BLPOUTJ = MOT 'BLPOUTJ';
       SINON;
               BLPOUT3D = BLPOUT3D ET BLPOUTJ ;
               BLPOUTJ = MOT 'BLPOUTJ';
       FINSI;
     FINSI;
*
*
* Fin RELA pour les poutres
*
    FIN LAB20;
*
* Calcul des deformees sur le 3D
*
  SI FLAGDEFO;
*
      REPETER LAB5 NDEFO;
        i5 = (INDEX (TAB1.'DEPLACEMENTS')). &LAB5;
*
          DEPJ = REDU ((TAB1.'DEPLACEMENTS'). i5) MESHPOUJ;
          DEPXINI = (EXTR DEPJ PODEPOJ UX);
          DEPYINI = (EXTR DEPJ PODEPOJ UY);
          DEPZINI = (EXTR DEPJ PODEPOJ UZ);
          DEPXFIN = (EXTR DEPJ POFIPOJ UX);
          DEPYFIN = (EXTR DEPJ POFIPOJ UY);
          DEPZFIN = (EXTR DEPJ POFIPOJ UZ);
          ROTXINI = (EXTR DEPJ PODEPOJ RX);
          ROTYINI = (EXTR DEPJ PODEPOJ RY);
          ROTZINI = (EXTR DEPJ PODEPOJ RZ);
          ROTXFIN = (EXTR DEPJ POFIPOJ RX);
          ROTYFIN = (EXTR DEPJ POFIPOJ RY);
          ROTZFIN = (EXTR DEPJ POFIPOJ RZ);
*
          COOUX = EXCO  (COOR VOL3DJJ 1) SCAL  ;
          COOUX0 = MANU CHPO VOL3DJJ 1  SCAL
                ( (0.5*((COOR PODEPOJ 1) + (COOR POFIPOJ 1))))
                 NATURE DISCRET;
          COOUY = EXCO  (COOR VOL3DJJ 2) SCAL  ;
          COOUY0 = MANU CHPO VOL3DJJ 1  SCAL
                ( (0.5*((COOR PODEPOJ 2) + (COOR POFIPOJ 2))))
                 NATURE DISCRET;
          COOUZ = EXCO  (COOR VOL3DJJ 3) SCAL  ;
          COOUZ0 = MANU CHPO VOL3DJJ 1  SCAL
                ( (0.5*((COOR PODEPOJ 3) + (COOR POFIPOJ 3))))
                NATURE DISCRET;
*
          DEPJ0 = MANU CHPO VOL3DJJ 3
                     UX (0.5*(DEPXINI + DEPXFIN))
                     UY (0.5*(DEPYINI + DEPYFIN))
                     UZ (0.5*(DEPZINI + DEPZFIN))
                        NATURE DISCRET;
*
          DEPJ = DEPJ0 ET
               (EXCO  ( ((0.5*(ROTYINI + ROTYFIN))*(COOUZ - COOUZ0))
            - ((0.5*(ROTZINI + ROTZFIN))*(COOUY - COOUY0)) ) SCAL UX
              NATURE DISCRET);
          DEPJ  = (DEPJ) ET
             (EXCO  ( ((0.5*(ROTZINI + ROTZFIN))*(COOUX-COOUX0))
            - ((0.5*(ROTXINI + ROTXFIN))*(COOUZ - COOUZ0)) ) SCAL UY
              NATURE DISCRET) ;
          DEPJ = (DEPJ) ET
             (EXCO  ( ((0.5*(ROTXINI + ROTXFIN))*(COOUY-COOUY0))
           - ((0.5*(ROTYINI + ROTYFIN))*(COOUX - COOUX0)) ) SCAL UZ
             NATURE DISCRET) ;
*
*
           SI (NON (EXISTE DEP3D i5));
               DEP3D . i5= DEPJ ;
               DEPJ = MOT 'DEPJ';
           SINON;
               DEP3D. i5 =(DEP3D. i5) ET DEPJ;
               DEPJ = MOT 'DEPJ';
           FINSI;
*
       FIN LAB5;
*
     FINSI;
*
*  Fin calcul des deformees sur le modele 3D
*
       SI ( EGA (TYPE MESH3D) MOT);
          MESH3D = VOL3DJJ;
          VOL3DJJ = MOT 'VOL3DJJ';
       SINON;
          MESH3D = MESH3D ET VOL3DJJ;
          VOL3DJJ = MOT 'VOL3DJJ';
       FINSI;
*
* Fin boucle sur les éléments
*
  FIN LAB2;
*
  FINSI;
*
*
* Fin boucle sur les sous zones
*
FIN LAB1;
*
* On stocke les résultats sur le maillage 3D
*
SI FLAGDEFO;
REPETER LAB6 NDEFO;
  i6 = &lab6;
   (TAB1.'DEPLACEMENTS_3D'). i6  = DEP3D.i6;
   (TAB1.'DEFORMEES'). i6  = DEFO MESH3D (DEP3D.i6) AMPDEF;
FIN LAB6;
FINSI;
SI FLAGVAIS;
 REPETER LAB6 NVAIS;
      i6 = &lab6;
     (TAB1.'VAIS_3D'). i6  = VAI3D.i6;
 FIN LAB6;
FINSI;
SI FLAGVONS;
 REPETER LAB6 NVONS;
      i6 = &lab6;
     (TAB1.'VONS_3D'). i6  = VON3D.i6;
 FIN LAB6;
FINSI;
SI FLAGMATS;
     TAB1.'MATS_3D'  = MAT3D;
FINSI;
SI FLAGRELA;
     TAB1.'RELATION_3D' = BLPOUT3D;
FINSI;
*
'FINPROC' MESH3D;
*
$$$$





