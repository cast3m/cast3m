$$$$ MRCFRAME
* MRCFRAME  PROCEDUR  AF221230  18/04/20    21:15:03     9814
DEBPROC MRCFRAME TYP_CAL1*'MOT     '
   TAB_IN*'TABLE' TOL_1*'FLOTTANT'
   L_ELE1/'LISTENTI';
*
* --------------------------------------------------------
*  Procedure MRCFRAME
*  Computation of security coef Lambda for frame element TIMO and POUT
*
*  Developpers:
*    Alberto FRAU
*    DEN/DANS/DM2S/SEMT/EMSI
*    Nicolas ILE
*    DEN/DANS/DM2S/SEMT/EMSI
*    Giulia DI STEFANO

*  INPUT:
*    TYP_CAL1:       Calculation option
*                          'RECTANGLE'
*                          'ELLIPSOIDE'
*    TAB_IN.'MAILLAGE':                Maillage du voile [MAILLAGE]
*    TAB_IN.'EFFORT_SEISME':           MCHAML de la matrice
*                                      representant l'enveloppe des
*                                      efforts sismiques (voir SISSIB)
*    TAB_IN.'EFFORT_STATIQUE':         MCHAML des efforts statiques qui
*                                      agissent sur l'element frame
*    TAB_IN.'CARACTERISTIQUES'        :MCHAML contenant les
*                                      caracteristiques de l'element
*                                      frame :
*                                      'B_Y' longeur Y de la section
*                                      'B_Z' longeur Z de la section
*                                      'LIBY'  Longeur ly
*                                      'LIBZ'  Longeur lz
*                                      'SCAD'  Espacement cadres
*                                      'ENRB'  Enrobage
*                                      'PFER'  Diametres ferrailage
*                                               [LISTREEL]
*                                      'YFER'  position y ferraillage
*                                               [LISTREEL]
*                                      'ZFER'  position z ferraillage
*                                               [LISTREEL]
*                                      'ASWY'  aire ferraillage transv y
*                                      'ASWZ'  aire ferraillage transv z
*                                      'YACI'  mod young acier
*                                      'EPSB'  eps beton
*                                      'EPSA'  eps acier
*    TAB_IN.'FC_BET':             Resistance caracteristique beton
*                                       [FLOTTANT]
*    TAB_IN.'GAM_C':                  Coef gammac  1.5/1.2 EC2/EC8
*                                       [FLOTTANT]
*    TAB_IN.'ALP_C':                  Coef alpa    1.0  EC2
*                                       [FLOTTANT]
*    TAB_IN.'FS_ACI':             resistance caracteristique de l'acier
*                                       [FLOTTANT]
*    TAB_IN.'GAM_S':                  Coef gammas  1.15 EC2
*                                       [FLOTTANT]
*    TOL_1:          Tolerance [FLOTTANT]
*    L_ELE1:         Liste des elements sur lesquels on veut sortir les
*                    graphiques des surfaces limites et des enveloppes
*                   (sans ou avec covariance - RECTANGLE ou ELLISPOIDE)
*                   (pas necessaire) [LISTREEL]
*  OUTPUT:
*   TT2:             Table Contenant:
*    .'CH_LAMBDA': MCHAML les valeurs des marges (composent LAME)
*    .'CARTE':     Maillage avec deux colorations pour indiquer les
*                    elements avec une marge superieure à 1 ou
*                    inferieure:
*                      ROUGE   elements ->  Lambda < 1.0
*                      VERT    elements ->  Lambda > 1.0
*    .'GRAPHIQUES':  Sous table pour les outils de graphique:
*      .I.                    Ieme element
*        .'LIMITE':            Surface limite de la couche externe
*                                [MAILLAGE]
*        .'RECTANGLE':         enveloppe sismique sans prise en compte
*                              des covariances (methode RECTANGLE)
*                              [MAILLAGE]
*        .'ELLIPSOIDE':        enveloppe sismique avec prise en compte
*                              des covariances (methode RECTANGLE)
*                              [MAILLAGE]
*        .'RECTANGLE_AUG':     enveloppe sismique amplifié sans prise
*                              en compte des covariances
*                              (methode RECTANGLE) [MAILLAGE]
*        .'ELLIPSOIDE_AUG':    enveloppe sismique amplifié avec prise
*                              en compte des covariances
*                              (methode RECTANGLE) [MAILLAGE]
*
* --------------------------------------------------------
*
* Controle
'SI' ('EXIST' TAB_IN 'MAILLAGE');
  MAI_F = TAB_IN.'MAILLAGE';
  'SI' ('NEG' ('TYPE' MAI_F) 'MAILLAGE');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'EFFORT_SEISME');
  CH_SEI1 = TAB_IN.'EFFORT_SEISME';
  'SI' ('NEG' ('TYPE' CH_SEI1) 'MCHAML');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'EFFORT_STATIQUE');
  CH_STA1 = TAB_IN.'EFFORT_STATIQUE';
  'SI' ('NEG' ('TYPE' CH_STA1) 'MCHAML');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'CARACTERISTIQUES');
  CH_CAR1 = TAB_IN.'CARACTERISTIQUES';
  'SI' ('NEG' ('TYPE' CH_CAR1) 'MCHAML');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'FC_BET');
  FCBET1 = TAB_IN.'FC_BET';
  'SI' ('NEG' ('TYPE' FCBET1) 'FLOTTANT');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'GAM_C');
  GAMC1 = TAB_IN.'GAM_C';
  'SI' ('NEG' ('TYPE' GAMC1) 'FLOTTANT');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'ALP_C');
  ALPC1 = TAB_IN.'ALP_C';
  'SI' ('NEG' ('TYPE' ALPC1) 'FLOTTANT');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'FS_ACI');
  FSACI1 = TAB_IN.'FS_ACI';
  'SI' ('NEG' ('TYPE' FSACI1) 'FLOTTANT');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
'SI' ('EXIST' TAB_IN 'GAM_S');
  GAMS1 = TAB_IN.'GAM_S';
  'SI' ('NEG' ('TYPE' GAMS1) 'FLOTTANT');
     'MESS' 'Error Input....';
     'QUIT' MRCFRAME;
  'FINSI';
'SINON';
  'MESS' 'Error....';
  'QUIT' MRCFRAME;
'FINSI';
*
'MESS' ;
'MESS' '**************************************************************';
'MESS' '            Calculs des coef de securite                      ';
'MESS' '**************************************************************';
'MESS';
*
*  controle of input data
'SI' (NEG (TYP_CAL1)  'ELLIPSOIDE');
  'SI' (NEG (TYP_CAL1)  'RECTANGLE');
    'MESS' ' ERROR....Type de calcul erronee!!!';
    'QUIT' MRCFRAME;
  'FINSI';
'FINSI';
'SI' ('EGA' TYP_CAL1 'ELLIPSOIDE');
'MESS' ' ------------------------------------------------------------';
'MESS' '                     Methode Ellipsoide';
'MESS' ' ------------------------------------------------------------';
'MESS';
'SINON';
'MESS' ' ------------------------------------------------------------';
'MESS' '                     Methode Rectangle';
'MESS' ' ------------------------------------------------------------';
'MESS';
'FINSI';
*
LIS_MOT1 = ('EXTR' CH_SEI1 'COMP');
LIS_MOT2 = MOTS 'C11' 'C22' 'C33' 'C44' 'C55' 'C66'
                'C12' 'C13' 'C14' 'C15' 'C16' 'C23'
                'C24' 'C25' 'C26' 'C34' 'C35' 'C36';
'SI' ('NON' (EXIST LIS_MOT1 LIS_MOT2 'ET'));
  'MESS' ' ERROR....MCHAML seisme';
  'MESS' '          composantes erronee!!!';
  'QUIT' MRCFRAME;
'FINSI';
*
LIS_MOT1 = ('EXTR' CH_STA1 'COMP');
LIS_MOT2 = MOTS 'EFFX' 'EFFY' 'EFFZ' 'MOMX' 'MOMY' 'MOMZ';
'SI' ('NON' (EXIST LIS_MOT1 LIS_MOT2 'ET'));
    'MESS' ' ERROR....MCHAML statique';
    'MESS' '          composantes erronee!!!';
    'QUIT' MRCFRAME;
'FINSI';
*
LIS_MOT1 = ('EXTR' CH_CAR1 'COMP');
LIS_MOT2 = MOTS 'B_Y' 'B_Z' 'LIBY' 'LIBZ' 'SCAD' 'YFER' 'ENRB' 'PFER'
                'ZFER' 'ASWY' 'ASWZ' 'YACI' 'EPSB' 'EPSA' 'TYFR';
'SI' ('NON' (EXIST LIS_MOT1 LIS_MOT2 'ET'));
  'MESS' ' ERROR....MCHAML caracteristiques';
  'MESS' '          composantes erronee!!!';
  'QUIT' MRCFRAME;
'FINSI';
*
* creation of the table output
TT2 = 'TABLE';
*
* creation of the MCHAML field for the output
CH_LAM1 = 'VIDE' MCHAML;
MAI_RE1 = 'VIDE' MAILLAGE;
MODTOT = 'VIDE' MMODEL;
*
* number of element shear wall
N_ELE1 = 'NBEL' MAI_F;
*
* Resistance de design
FCD1 = ((FCBET1*ALPC1)/(GAMC1));
FSD1 = ((FSACI1)/(GAMS1));
*
* loop for the element
I_ELE1 = 1;
'REPE' IND_ELE1 (N_ELE1);
* element I
  ELE_FRA1 = MAI_F ELEM I_ELE1;
* extracting the forces and characteristics for the external layer
  EFFX0 = EXTR (REDU CH_STA1 ELE_FRA1) 'EFFX' 1 1 1;
  EFFY0 = EXTR (REDU CH_STA1 ELE_FRA1) 'EFFY' 1 1 1;
  EFFZ0 = EXTR (REDU CH_STA1 ELE_FRA1) 'EFFZ' 1 1 1;
  MOMX0 = EXTR (REDU CH_STA1 ELE_FRA1) 'MOMX' 1 1 1;
  MOMY0 = EXTR (REDU CH_STA1 ELE_FRA1) 'MOMY' 1 1 1;
  MOMZ0 = EXTR (REDU CH_STA1 ELE_FRA1) 'MOMZ' 1 1 1;
*
  NNNN1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C11' 1 1 1;
  NNVY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C12' 1 1 1;
  NNVZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C13' 1 1 1;
  NNMT1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C14' 1 1 1;
  NNMY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C15' 1 1 1;
  NNMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C16' 1 1 1;
  VYVY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C22' 1 1 1;
  VYVZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C23' 1 1 1;
  VYMT1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C24' 1 1 1;
  VYMY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C25' 1 1 1;
  VYMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C26' 1 1 1;
  VZVZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C33' 1 1 1;
  VZMT1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C34' 1 1 1;
  VZMY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C35' 1 1 1;
  VZMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C36' 1 1 1;
  MTMT1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C44' 1 1 1;
  MTMY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C45' 1 1 1;
  MTMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C46' 1 1 1;
  MYMY1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C55' 1 1 1;
  MYMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C56' 1 1 1;
  MZMZ1 = EXTR (REDU CH_SEI1 ELE_FRA1) 'C66' 1 1 1;
*
  BASE_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Y' 1 1 1;
  BASE_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Z' 1 1 1;
  LONG_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBY' 1 1 1;
  LONG_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBZ' 1 1 1;
  ENROBA1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ENRB' 1 1 1;
  ACADRY1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWY' 1 1 1;
  ACADRZ1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWZ' 1 1 1;
  S_CADR1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'SCAD' 1 1 1;
  LI_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'PFER' 1 1 1;
  PY_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YFER' 1 1 1;
  PZ_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ZFER' 1 1 1;
  E_ACIE1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YACI' 1 1 1;
  EP_BET1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSB' 1 1 1;
  EP_ACI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSA' 1 1 1;
*
* Determination armature long totale
  II1 = 1;
  A_LONG1 = 0.0;
  'REPE' IND11 (DIME LI_PHI1);
    A_LONG1 = A_LONG1 +
             ((PI)*((((EXTR LI_PHI1 II1)/(1000.))/(2.0))**2.0));
    II1 = II1 + 1;
  'FIN' IND11;
*
* Determination parametres adimensionelles
  OM_SY1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
  OM_SZ1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
  OM_WZ1 = ((ACADRZ1)*(FSD1))/(((BASE_Y1)*(S_CADR1))*(FCD1));
  OM_WY1 = ((ACADRY1)*(FSD1))/(((BASE_Z1)*(S_CADR1))*(FCD1));
  LAMB_Y1 = ((LONG_Z1)/(BASE_Y1));
  LAMB_Z1 = ((LONG_Y1)/(BASE_Z1));
  CHI_Z1 = ((BASE_Z1 - ((2.0)*(ENROBA1)))/(BASE_Z1));
  CHI_Y1 = ((BASE_Y1 - ((2.0)*(ENROBA1)))/(BASE_Y1));
*
*  test pour savoir si on est dans la condiction COURT ou LONG
  TEST_Y1 = LAMB_Y1 <EG (OM_SY1/OM_WY1);
  TEST_Z1 = LAMB_Z1 <EG (OM_SZ1/OM_WZ1);
  TEST_TY = ('EGA' (EXTR (REDU CH_CAR1 ELE_FRA1)
                        'TYFR' 1 1 1) 'POTEAU');
*
* table d'entre pour les procedures MRCFRAM1 MRCFRAM2 MRCFRAM3 MRCFRAM4
  TAB_IN2 = 'TABLE';
  TAB_IN2.'BASE_Y1' = BASE_Y1;
  TAB_IN2.'BASE_Z1' = BASE_Z1;
  TAB_IN2.'LONG_Y1' = LONG_Y1;
  TAB_IN2.'LONG_Z1' = LONG_Z1;
  TAB_IN2.'ENROBA1' = ENROBA1;
  TAB_IN2.'ACADRY1' = ACADRY1;
  TAB_IN2.'ACADRZ1' = ACADRZ1;
  TAB_IN2.'S_CADR1' = S_CADR1;
  TAB_IN2.'LI_PHI1' = LI_PHI1;
  TAB_IN2.'PY_PHI1' = PY_PHI1;
  TAB_IN2.'PZ_PHI1' = PZ_PHI1;
  TAB_IN2.'E_ACIE1' = E_ACIE1;
  TAB_IN2.'EP_BET1' = EP_BET1;
  TAB_IN2.'EP_ACI1' = EP_ACI1;
  TAB_IN2.'OM_SY1'  = OM_SY1;
  TAB_IN2.'OM_SZ1'  = OM_SZ1;
  TAB_IN2.'OM_WZ1'  = OM_WZ1;
  TAB_IN2.'OM_WY1'  = OM_WY1;
  TAB_IN2.'LAMB_Y1' = LAMB_Y1;
  TAB_IN2.'LAMB_Z1' = LAMB_Z1;
  TAB_IN2.'CHI_Z1'  = CHI_Z1;
  TAB_IN2.'CHI_Y1'  = CHI_Y1;
  TAB_IN2.'EFFX0'   = EFFX0;
  TAB_IN2.'EFFY0'   = EFFY0;
  TAB_IN2.'EFFZ0'   = EFFZ0;
  TAB_IN2.'MOMX0'   = MOMX0;
  TAB_IN2.'MOMY0'   = MOMY0;
  TAB_IN2.'MOMZ0'   = MOMZ0;
  TAB_IN2.'NNNN1'   = NNNN1;
  TAB_IN2.'NNVY1'   = NNVY1;
  TAB_IN2.'NNVZ1'   = NNVZ1;
  TAB_IN2.'NNMT1'   = NNMT1;
  TAB_IN2.'NNMY1'   = NNMY1;
  TAB_IN2.'NNMZ1'   = NNMZ1;
  TAB_IN2.'VYVY1'   = VYVY1;
  TAB_IN2.'VYVZ1'   = VYVZ1;
  TAB_IN2.'VYMT1'   = VYMT1;
  TAB_IN2.'VYMY1'   = VYMY1;
  TAB_IN2.'VYMZ1'   = VYMZ1;
  TAB_IN2.'VZVZ1'   = VZVZ1;
  TAB_IN2.'VZMT1'   = VZMT1;
  TAB_IN2.'VZMY1'   = VZMY1;
  TAB_IN2.'VZMZ1'   = VZMZ1;
  TAB_IN2.'MTMT1'   = MTMT1;
  TAB_IN2.'MTMY1'   = MTMY1;
  TAB_IN2.'MTMZ1'   = MTMZ1;
  TAB_IN2.'MYMY1'   = MYMY1;
  TAB_IN2.'MYMZ1'   = MYMZ1;
  TAB_IN2.'MZMZ1'   = MZMZ1;
  TAB_IN2.'FCD1'    = FCD1;
  TAB_IN2.'FSD1'    = FSD1;
*
*
*   Cas Poteaux court
  'SI' TEST_TY;
    'SI' (TEST_Y1 'ET' TEST_Z1);
       LAMB1 = MRCFRAM1 TYP_CAL1 TAB_IN2 TOL_1;
    'SINON';
*
*     Cas Poteaux Mixte
      'SI' (TEST_Y1 'OU' TEST_Z1);
        'MESS' 'Error...cas miixte...';
        'QUIT' MRCFRAME;
      'SINON';
*
*         Cas Poteaux long
        LAMB1 = MRCFRAM2 TYP_CAL1 TAB_IN2 TOL_1;
      'FINSI';
    'FINSI';
  'SINON';
    'SI' (TEST_Z1);
*
*     Cas Poutre courte
      LAMB1 = MRCFRAM3 TYP_CAL1 TAB_IN2 TOL_1;
    'SINON';
*
*     Cas Poutre courte
      LAMB1 = MRCFRAM4 TYP_CAL1 TAB_IN2 TOL_1;
    'FINSI';
  'FINSI';
*
*  Remplissage MMODEL MAILLAGE et MCHML
  MOD1    = 'MODE' ELE_FRA1 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE';
  MODTOT  = MODTOT 'ET' MOD1;
  CH_LAM1 = CH_LAM1 'ET' ('MANU' 'CHML' ELE_FRA1 'LAMB' LAMB1);
  'SI' (LAMB1 '<' 1.0);
    MAI_RE1 = MAI_RE1 'ET' (ELE_FRA1 'COUL' 'ROUG');
  'SINON';
    MAI_RE1 = MAI_RE1 'ET' (ELE_FRA1 'COUL' 'VERT');
  'FINSI';
*
*
  I_ELE1 = I_ELE1 + 1;
'FIN' IND_ELE1;
*
'OUBL' MOD1;
*
* saving
TT2.'CH_LAMBDA' = CH_LAM1;
TT2.'CARTE' = MAI_RE1;
* graphique part (plot of the limit surface, rectangle and ellispe
* combination for the k element)
*
'SI' ('EGA' ('TYPE' L_ELE1) 'LISTENTI');
  'SI' ('EGA' ('TYPE' LL_ERRE1) 'LISTENTI');
    L_ELE1 = L_ELE1 ET LL_ERRE1;
  'FINSI';
'SINON';
  'SI' ('EGA' ('TYPE' LL_ERRE1) 'LISTENTI');
    L_ELE1 = LL_ERRE1;
  'FINSI';
'FINSI';
*
'SI' ('EGA' ('TYPE' L_ELE1) 'LISTENTI');
  L_ELE1 = 'ORDO' L_ELE1 'CROI';
'FINSI';
*
L_ELE2 = 'LECT';
'SI' ('EGA' ('TYPE' L_ELE1) 'LISTENTI');
  TT2.'GRAPHIQUES' = 'TABLE';
  I_VAL1 = 1;
* loop for each k-element
  NN1 = 'DIME' L_ELE1;
  'REPE' IND1 (NN1);
    'SI' (I_VAL1 EGA 1);
*     id k-element
      I_ELE1 = 'EXTR' L_ELE1 I_VAL1;
      L_ELE2 = L_ELE2 'ET' ('LECT' I_ELE1);
*     element
      ELE_FRA1 = MAI_F ELEM I_ELE1;
      LAMB1 = EXTR (REDU CH_LAM1 ELE_FRA1) 'LAMB' 1 1 1;
*     seismic effort stare for k-element
      CHL1 = 'REDU' CH_SEI1 ELE_FRA1;
*     static effort stare for k-element
      CHL2 = 'REDU' CH_STA1 ELE_FRA1;
*     caracteristics for k-element
      BASE_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Y' 1 1 1;
      BASE_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Z' 1 1 1;
      LONG_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBY' 1 1 1;
      LONG_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBZ' 1 1 1;
      ENROBA1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ENRB' 1 1 1;
      ACADRY1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWY' 1 1 1;
      ACADRZ1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWZ' 1 1 1;
      S_CADR1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'SCAD' 1 1 1;
      LI_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'PFER' 1 1 1;
      PY_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YFER' 1 1 1;
      PZ_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ZFER' 1 1 1;
      E_ACIE1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YACI' 1 1 1;
      EP_BET1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSB' 1 1 1;
      EP_ACI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSA' 1 1 1;
*
*     Determination armature long totale
      II1 = 1;
      A_LONG1 = 0.0;
      'REPE' IND11 (DIME LI_PHI1);
        A_LONG1 = A_LONG1 +
                 ((PI)*((((EXTR LI_PHI1 II1)/(1000.))/(2.0))**2.0));
        II1 = II1 + 1;
      'FIN' IND11;
*
*     Determination parametres adimensionelles
      OM_SY1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
      OM_SZ1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
      OM_WZ1 = ((ACADRZ1)*(FSD1))/(((BASE_Y1)*(S_CADR1))*(FCD1));
      OM_WY1 = ((ACADRY1)*(FSD1))/(((BASE_Z1)*(S_CADR1))*(FCD1));
      LAMB_Y1 = ((LONG_Y1)/(BASE_Y1));
      LAMB_Z1 = ((LONG_Z1)/(BASE_Z1));
      CHI_Z1 = ((BASE_Z1 - ((2.0)*(ENROBA1)))/(BASE_Z1));
      CHI_Y1 = ((BASE_Y1 - ((2.0)*(ENROBA1)))/(BASE_Y1));
*
      TEST_Y1 = LAMB_Y1 <EG (OM_SY1/OM_WY1);
      TEST_Z1 = LAMB_Z1 <EG (OM_SZ1/OM_WZ1);
      TEST_TY = ('EGA' (EXTR (REDU CH_CAR1 ELE_FRA1)
                          'TYFR' 1 1 1) 'POTEAU');
*
      T_GAP1                = 'TABLE';
      T_GAP1.'TYPE_COUCHE'  = CHAINE 'POTEAU';
      T_GAP1.'NX'           = 100;
      T_GAP1.'NY'           = 10;
      T_GAP1.'BY'           = BASE_Y1;
      T_GAP1.'BZ'           = BASE_Z1;
      T_GAP1.'ENROBAGE'     = ENROBA1;
      T_GAP1.'S_CADRE'      = S_CADR1;
      T_GAP1.'LONGEUR_Y'    = LONG_Y1;
      T_GAP1.'LONGEUR_Z'    = LONG_Z1;
      T_GAP1.'FCK'          = FCBET1;
      T_GAP1.'FSK'          = FSACI1;
      T_GAP1.'PHI_LON'      = LI_PHI1;
      T_GAP1.'PHI_Y'        = PY_PHI1;
      T_GAP1.'PHI_Z'        = PZ_PHI1;
      T_GAP1.'ASWL_Y'       = ACADRY1;
      T_GAP1.'ASWL_Z'       = ACADRZ1;
      T_GAP1.'GAMMA_C'      = GAMC1;
      T_GAP1.'ALPA_C'       = ALPC1;
      T_GAP1.'GAMMA_S'      = GAMS1;
      T_GAP1.'EPSI_BET'     = EP_BET1;
      T_GAP1.'EPSI_ACI'     = EP_ACI1;
      T_GAP1.'YOUNG_ACIER'  = E_ACIE1;
      T_GAP2 = 'COPI' T_GAP1;
      'SI' TEST_TY;
        'SI' (TEST_Y1 'ET' TEST_Z1);
          T_GAP1.'NX'           = 30;
          T_GAP1.'NY'           = 10;
        'FINSI';
        T_GAP1.'TYPE_COUCHE'  = CHAINE 'POTEAU';
        T_GAP2.'TYPE_COUCHE'  = CHAINE 'POTEAU';
      'SINON';
        'SI' (TEST_Z1);
          T_GAP1.'NX'           = 30;
          T_GAP1.'NY'           = 10;
        'FINSI';
        T_GAP1.'TYPE_COUCHE'  = CHAINE 'POUTRE';
        T_GAP2.'TYPE_COUCHE'  = CHAINE 'POUTRE';
      'FINSI';
      T_GAP1.'EFFORT_SEISME'   = CHL1;
      T_GAP1.'EFFORT_STATIQUE' = CHL2;
      T_GAP2.'EFFORT_SEISME'   = (((LAMB1)**(2.0))*(CHL1));
      T_GAP2.'EFFORT_STATIQUE' = CHL2;
*
*
      T_GAP3 = FRCTRACE T_GAP1 TOL_1;
      T_GAP4 = FRCTRACE T_GAP2 TOL_1;

*
      TT2.'GRAPHIQUES'. I_ELE1 = 'TABLE';
      TT2.'GRAPHIQUES'. I_ELE1 .'LIMITE' =
          T_GAP3.'LIMITE';
      TT2.'GRAPHIQUES'. I_ELE1 .'ELLIPSOIDE' =
          T_GAP3.'ELLIPSOIDE';
      TT2.'GRAPHIQUES'. I_ELE1 .'RECTANGLE' =
          T_GAP3.'RECTANGLE';
      TT2.'GRAPHIQUES'. I_ELE1 .'ELLIPSOIDE_AUG' =
          T_GAP4.'ELLIPSOIDE';
      TT2.'GRAPHIQUES'. I_ELE1 .'RECTANGLE_AUG' =
          T_GAP4.'RECTANGLE';
*
    'SINON';
*     id k-element
      I_ELE1 = 'EXTR' L_ELE1 I_VAL1;
      I_ELE2 = 'EXTR' L_ELE1 (I_VAL1 - 1);
      'SI' (I_ELE1 'NEG' I_ELE2);
        L_ELE2 = L_ELE2 'ET' ('LECT' I_ELE1);
*       element
        ELE_FRA1 = MAI_F ELEM I_ELE1;
        LAMB1 = EXTR (REDU CH_LAM1 ELE_FRA1) 'LAMB' 1 1 1;
*       seismic effort stare for k-element
        CHL1 = 'REDU' CH_SEI1 ELE_FRA1;
*       static effort stare for k-element
        CHL2 = 'REDU' CH_STA1 ELE_FRA1;
*       caracteristics for k-element
        BASE_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Y' 1 1 1;
        BASE_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'B_Z' 1 1 1;
        LONG_Y1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBY' 1 1 1;
        LONG_Z1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'LIBZ' 1 1 1;
        ENROBA1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ENRB' 1 1 1;
        ACADRY1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWY' 1 1 1;
        ACADRZ1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ASWZ' 1 1 1;
        S_CADR1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'SCAD' 1 1 1;
        LI_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'PFER' 1 1 1;
        PY_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YFER' 1 1 1;
        PZ_PHI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'ZFER' 1 1 1;
        E_ACIE1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'YACI' 1 1 1;
        EP_BET1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSB' 1 1 1;
        EP_ACI1 = EXTR (REDU CH_CAR1 ELE_FRA1) 'EPSA' 1 1 1;
*
*       Determination armature long totale
        II1 = 1;
        A_LONG1 = 0.0;
        'REPE' IND11 (DIME LI_PHI1);
          A_LONG1 = A_LONG1 +
                   ((PI)*((((EXTR LI_PHI1 II1)/(1000.))/(2.0))**2.0));
          II1 = II1 + 1;
        'FIN' IND11;
*
*       Determination parametres adimensionelles
        OM_SY1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
        OM_SZ1 = ((A_LONG1)*(FSD1))/(((BASE_Y1)*(BASE_Z1))*(FCD1));
        OM_WZ1 = ((ACADRZ1)*(FSD1))/(((BASE_Y1)*(S_CADR1))*(FCD1));
        OM_WY1 = ((ACADRY1)*(FSD1))/(((BASE_Z1)*(S_CADR1))*(FCD1));
        LAMB_Y1 = ((LONG_Y1)/(BASE_Y1));
        LAMB_Z1 = ((LONG_Z1)/(BASE_Z1));
        CHI_Z1 = ((BASE_Z1 - ((2.0)*(ENROBA1)))/(BASE_Z1));
        CHI_Y1 = ((BASE_Y1 - ((2.0)*(ENROBA1)))/(BASE_Y1));
*
        TEST_Y1 = LAMB_Y1 <EG (OM_SY1/OM_WY1);
        TEST_Z1 = LAMB_Z1 <EG (OM_SZ1/OM_WZ1);
        TEST_TY = ('EGA' (EXTR (REDU CH_CAR1 ELE_FRA1)
                            'TYFR' 1 1 1) 'POTEAU');
*
        T_GAP1                = 'TABLE';
        T_GAP1.'TYPE_COUCHE'  = CHAINE 'POTEAU';
        T_GAP1.'NX'           = 100;
        T_GAP1.'NY'           = 10;
        T_GAP1.'BY'           = BASE_Y1;
        T_GAP1.'BZ'           = BASE_Z1;
        T_GAP1.'ENROBAGE'     = ENROBA1;
        T_GAP1.'S_CADRE'      = S_CADR1;
        T_GAP1.'LONGEUR_Y'    = LONG_Y1;
        T_GAP1.'LONGEUR_Z'    = LONG_Z1;
        T_GAP1.'FCK'          = FCBET1;
        T_GAP1.'FSK'          = FSACI1;
        T_GAP1.'PHI_LON'      = LI_PHI1;
        T_GAP1.'PHI_Y'        = PY_PHI1;
        T_GAP1.'PHI_Z'        = PZ_PHI1;
        T_GAP1.'ASWL_Y'       = ACADRY1;
        T_GAP1.'ASWL_Z'       = ACADRZ1;
        T_GAP1.'GAMMA_C'      = GAMC1;
        T_GAP1.'ALPA_C'       = ALPC1;
        T_GAP1.'GAMMA_S'      = GAMS1;
        T_GAP1.'EPSI_BET'     = EP_BET1;
        T_GAP1.'EPSI_ACI'     = EP_ACI1;
        T_GAP1.'YOUNG_ACIER'  = E_ACIE1;
        T_GAP2 = 'COPI' T_GAP1;
        'SI' TEST_TY;
          T_GAP1.'TYPE_COUCHE'  = CHAINE 'POTEAU';
          T_GAP2.'TYPE_COUCHE'  = CHAINE 'POTEAU';
        'SINON';
          T_GAP1.'TYPE_COUCHE'  = CHAINE 'POUTRE';
          T_GAP2.'TYPE_COUCHE'  = CHAINE 'POUTRE';
        'FINSI';
        T_GAP1.'EFFORT_SEISME'   = CHL1;
        T_GAP1.'EFFORT_STATIQUE' = CHL2;
        T_GAP2.'EFFORT_SEISME'   = (((LAMB1)**(2.0))*(CHL1));
        T_GAP2.'EFFORT_STATIQUE' = CHL2;
*
*
        T_GAP3 = FRCTRACE T_GAP1 TOL_1;
        T_GAP4 = FRCTRACE T_GAP2 TOL_1;
*
        TT2.'GRAPHIQUES'. I_ELE1 = 'TABLE';
        TT2.'GRAPHIQUES'. I_ELE1 .'LIMITE' =
            T_GAP3.'LIMITE';
        TT2.'GRAPHIQUES'. I_ELE1 .'ELLIPSOIDE' =
            T_GAP3.'ELLIPSOIDE';
        TT2.'GRAPHIQUES'. I_ELE1 .'RECTANGLE' =
            T_GAP3.'RECTANGLE';
        TT2.'GRAPHIQUES'. I_ELE1 .'ELLIPSOIDE_AUG' =
            T_GAP4.'ELLIPSOIDE';
        TT2.'GRAPHIQUES'. I_ELE1 .'RECTANGLE_AUG' =
            T_GAP4.'RECTANGLE';
      'FINSI';
    'FINSI';
   I_VAL1 = I_VAL1 + 1;
  'FIN' IND1;
  TT2.'GRAPHIQUES'.'LISTE_ELEMENT' = L_ELE2;
'FINSI';
* fin
FINPROC TT2;


