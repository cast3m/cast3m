$$$$ FOUR2TRI
* FOUR2TRI  PROCEDUR  BP208322  17/04/19    21:15:01     9398

*======================================================================
*
* FOUR2TRI (ou 4 2 3 pour les numericiens purs....) :
* Genere un maillage 3D à partir d'un modele Fourier
* Recombine les CHPO 2D Fourier sur ce maillage 3D
* Creation : D. Combescure, SEMT/DYN, CEA Saclay, Decembre 2006
* Modifs   : B. Prabel, 2013/02, 2017/04
*
*======================================================================

DEBPROC FOUR2TRI MOD1*'MMODEL'    TAB1*'TABLE'
                 NUMFOUR/'ENTIER' PRANGL/'LISTREEL';
*
* Harmonique de Fourier
*
SI (NEG (TYPE NUMFOUR) 'ENTIER');
*  NUMFOUR = 0;
 NUMFOUR = VALE 'MODE' 'FOUR';
 MESS 'Harmonique de Fourier non fournie :'
      ' on prend l harmonique courante 'NUMFOUR;
FINSI;
*
* On ne cree le maillage 3D que s'il n'existe pas dejà
*
SI (NON (EXIS TAB1 'MAILLAGE_3D'));
 FLAGMAIL = VRAI;
SINON;
 FLAGMAIL = FAUX;
*le maillage existe deja -> on recupere les angles
 PRANGL = TAB1 . 'MAILLAGE_3D' . 'ANGLES' ;
FINSI;
*
MAI3D = TABLE;
*
* On ne cree le champs de deplacements 3D uniquement
*  si celui en 2D Fourier est donne
*
SI (EXIS TAB1 'DEPLACEMENTS');
 FLAGDEPL = VRAI;
SINON;
 FLAGDEPL = FAUX;
FINSI;
MODEPL1 = MOTS 'UR' 'UZ' 'UT' 'IUR' 'IUZ' 'IUT';
MODEPL2 = MOTS 'VR' 'VZ' 'VT' 'IVR' 'IVZ' 'IVT';
*
DEP3D = TABLE;
*
* On ne cree le champs de forces 3D uniquement
*  si celui en 2D Fourier est donne
*
SI (EXIS TAB1 'EFFORTS');
 FLAGFOR = VRAI;
SINON;
 FLAGFOR = FAUX;
FINSI;
MOFORC1 = MOTS 'FR' 'FZ' 'FT' 'IFR' 'IFZ' 'IFT';
MOFORC2 = MOTS 'VR' 'VZ' 'VT' 'IVR' 'IVZ' 'IVT';
*
FOR3D = TABLE;
*
* On ne cree le CHPO 3D uniquement
*  si celui en 2D Fourier est donne
*
SI (EXIS TAB1 'CHAMPS_POINTS_SYMETRIQUES');
 FLAGCHPS = VRAI;
SINON;
 FLAGCHPS = FAUX;
FINSI;
*
CHS3D = TABLE;
*
SI (EXIS TAB1 'CHAMPS_POINTS_ANTISYMETRIQUES');
 FLAGCHPA = VRAI;
SINON;
 FLAGCHPA = FAUX;
FINSI;
*
CHA3D = TABLE;
*
* Angles
*
SI (NEG (TYPE PRANGL) 'LISTREEL');
 MESS 'LISTREEL des tranches non fourni :'
      ' on prend tous les 10° par defaut';
 PRANGL = PROG 0. PAS 10. 360.;
FINSI;


************************************************************************
*
*                  CREATION DU MAILLAGE 3D
*
************************************************************************

SI FLAGMAIL;

 TAMOD = EXTR MOD1 'ZONE';
 nzone = (DIME TAMOD) / 2;

*bp : petite elimination pour le multicouche
*     (ok car FOUR2TRI traite uniquement des CHPO)
* rem : en theorie, il faudrait aussi tester les mots de la formulation
*       ou les noms des deplacements...
 iz = 1; izok = 1;
 MOD2DJ0  = TAMOD . 1;
 MESH2DJ0 = TAMOD . 2;
 REPETER LAB0 (nzone - 1); iz = iz + 1;
   MOD2DJ  = TAMOD . (2*iz - 1);
   MESH2DJ = TAMOD . (2*iz);
*  si deja vu --> on l'enleve
   SI (EGA MESH2DJ MESH2DJ0);  ITER LAB0;  FINSI;
*  si pas vu --> on le laisse
   izok = izok + 1;
   TAMOD . (2*izok - 1) = MOD2DJ;
   TAMOD . (2*izok)     = MESH2DJ;
*  on suppose les zones identiques a la suite les unes des autres
   MOD2DJ0  = MOD2DJ;
   MESH2DJ0 = MESH2DJ;
 FIN LAB0;
*on enleve les indices inutiles
*  mess nzone '--->' izok ;
 SI (NEG izok nzone);
   iz = izok;
   repe biz (nzone - izok); iz = iz + 1;
     OTER TAMOD (2*iz - 1);
     OTER TAMOD (2*iz);
   fin  biz;
   nzone = izok;
 FINSI;
*  list TAMOD;
*
*------------ Boucle sur les sous-zones ------------
*
 REPETER LAB0 nzone;

  MESH2DJ = TAMOD. (2*&LAB0);
  NTYPE = EXTR (MESH2DJ 'ELEM' TYPE) 1;
  SI ((EGA NTYPE 'SEG2') OU (EGA NTYPE 'POI1'));
   CONT2DJ = MESH2DJ;
  SINON;
   SI (EGA NTYPE 'RAC2');
    CONT2DJ = CHAN LIGNE MESH2DJ;
   SINON;
    CONT2DJ = CONTOUR MESH2DJ;
   FINSI;
  FINSI;
  SI (&LAB0 EGA 1);
   CONT2D = TABLE;
   MESH2D = TABLE;
  FINSI;
   CONT2D.&LAB0 = CONT2DJ;
   MESH2D.&LAB0 = MESH2DJ;
  TAMOD.((2*&LAB0) - 1) = CONT2DJ;
 FIN LAB0;
*------------ fin de Boucle sur les sous-zones ------------
*
* ELIM 0.000001 (MESH2D et CONT2D);
*
 OPTI DIME 3 ELEM QUA4;
*
 p00000 = 0. 0. 0.;
 p00001 = 0. 1. 0.;
*
*
 NTRANCHE = DIME PRANGL;
*
* MAI3D. 0 = MESH2D ;
*--------------------- Boucle sur les sous-zones ---------------------

 REPETER LAB12 (ENTIER (0.5*(DIME TAMOD)));

  CONT2DJ = TAMOD.((2*&LAB12) - 1);
  MESH2D =  TAMOD. (2*&LAB12);
  SI (EGA &LAB12 1);
    MAI3D. 0 = TABLE ;
  FINSI;
  MAI3D. 0 . &LAB12= MESH2D ;
*
*------------ Boucle sur les secteurs angulaires ------------
*
  REPETER LAB1 NTRANCHE;
*
*   mess 'Sous domaine et Secteur N°:';
*   list &LAB12;
*   list &LAB1;
   MAI3D. 'ANGLES' = PRANGL;
   ANGLAB1 = EXTR PRANGL &LAB1;
*
   MESHJ = MESH2D TOUR ANGLAB1 p00000 P00001;
   NTYPE = EXTR (MESHJ 'ELEM' TYPE) 1;
   SI ((EGA NTYPE 'SEG2') OU (EGA NTYPE 'POI1'));
    CON3DJ = MESHJ;
   SINON;
    SI (EGA NTYPE 'RAC2');
     CON3DJ = CHAN LIGNE MESHJ;
    SINON;
     CON3DJ = CONTOUR MESHJ;
    FINSI;
   FINSI;
   SI (EGA &LAB12 1);
    MAI3D. &LAB1 = TABLE;
   FINSI;
   MAI3D. &LAB1 . &LAB12 = MESHJ;
*
*   ELIM 0.000001 (CON3DJ et (MAI3D. &LAB1));
*
   SI (EGA &LAB1 1);
    SI (EGA &LAB12 1);
      MESH3D = MAI3D. 1 . &LAB12;
    SINON;
      MESH3D = MESH3D ET (MAI3D. 1 . &LAB12);
    FINSI;
   SINON;
    SI ((EGA &LAB1 2) ET (EGA &LAB12 1));
     SI (NEG (EXTR (CON3DJ0 ELEM TYPE) 1) POI1);
      MAI3D. 'ENVELOPPE' = CON3DJ0 REGLER 1 CON3DJ;
     SINON;
      MAI3D. 'ENVELOPPE' = CON3DJ0;
     FINSI;
    SINON;
     SI (NEG (EXTR (CON3DJ0 ELEM TYPE) 1) POI1);
      MAI3D. 'ENVELOPPE' = (MAI3D. 'ENVELOPPE') ET
    (CON3DJ0 REGLER 1 CON3DJ);
     SINON;
      MAI3D. 'ENVELOPPE' = (MAI3D. 'ENVELOPPE') ET
                                           CON3DJ0;
     FINSI;
    FINSI;
    SI (EGA &LAB1 NTRANCHE);
     MESH3D = MESH3D ET (MAI3D. NTRANCHE . &LAB12);
    FINSI;
   FINSI;
   CON3DJ0 = CON3DJ;

  FIN LAB1;
*------------ fin de Boucle sur les secteurs angulaires ------------

 FIN LAB12;
*------------------ fin de Boucle sur les sous-zones ------------------

 MESH3D = MESH3D ET (MAI3D. 'ENVELOPPE');
*
* On range le nouveau maillage 3D
*
  MAI3D . 'TOTAL' = MESH3D;
  TAB1.'MAILLAGE_3D' = MAI3D;
*
SINON;
  MESH3D =  TAB1 . 'MAILLAGE_3D' . 'TOTAL';
FINSI;


************************************************************************
*
*                  CHAMPS DE DEPLACEMENT 3D
*
************************************************************************

SI FLAGDEPL;
*
* OPTI DIME 3 MODE FOUR NUMFOUR;
OPTI DIME 3 MODE TRID;
*
p00000 = 0. 0. 0.;
p00001 = 0. 1. 0.;
NTRANCHE = (DIME (TAB1. 'MAILLAGE_3D')) - 4;
NDEP = DIME (TAB1.'DEPLACEMENTS');
PRANGL = TAB1. 'MAILLAGE_3D'. 'ANGLES' ;
*
NZONE = (DIME (TAB1. 'MAILLAGE_3D' . 0));
*
*-----------------------------> BOUCLE SUR LES DEPLACEMENTS
REPETER LAB2 NDEP; i2 = &lab2;

*-----------------------------> BOUCLE SUR LES ZONES
 REPETER LAB20 NZONE;
 MESH2DI = (TAB1. 'MAILLAGE_3D' . 0 . &LAB20 );
*
*  LCOMPU = EXTR (TAB1.'DEPLACEMENTS'.i2) 'COMP';
 DEP2DJ = REDU  TAB1.'DEPLACEMENTS' . i2  MESH2DI;
*bp : afin de truander DEDU ROTA (et toch1.eso),
*     il faut des noms de composantes bidon : VR VZ et VT
 DEP2DJ = EXCO DEP2DJ MODEPL1 NUMFOUR MODEPL2 'NOID';
*
*.............................> boucle sur les tranches
 REPETER LAB21 NTRANCHE;
*
   ANGLAB1 = EXTR PRANGL &LAB21;
   ANGLABN = NUMFOUR*ANGLAB1;
   MESH2DN = TAB1. 'MAILLAGE_3D' . &LAB21 . &LAB20;

   DEP3DJJ = DEP2DJ DEDU ANGLAB1 p00000 P00001 'ROTA' MESH2DI MESH2DN;

*bp : serie de Fourier
   DEP3DJ0 = ((EXCO DEP3DJJ  'VR' 'NOID' 'UR' )*(COS ANGLABN))
           + ((EXCO DEP3DJJ  'VT' 'NOID' 'UT' )*(SIN ANGLABN))
           + ((EXCO DEP3DJJ  'VZ' 'NOID' 'UZ' )*(COS ANGLABN))
           + ((EXCO DEP3DJJ 'IVR' 'NOID' 'IUR')*(SIN ANGLABN))
           + ((EXCO DEP3DJJ 'IVT' 'NOID' 'IUT')*(COS ANGLABN))
           + ((EXCO DEP3DJJ 'IVZ' 'NOID' 'IUZ')*(SIN ANGLABN));

*bp : changement de repere
   DEP3DJ1 = ((EXCO DEP3DJ0 'UR' 'NOID' 'UX')*(COS ANGLAB1))
           - ((EXCO DEP3DJ0 'UR' 'NOID' 'UZ')*(SIN ANGLAB1))
           - ((EXCO DEP3DJ0 'UT' 'NOID' 'UX')*(SIN ANGLAB1))
           - ((EXCO DEP3DJ0 'UT' 'NOID' 'UZ')*(COS ANGLAB1))
           +  (EXCO DEP3DJ0 'UZ' 'NOID' 'UY');
   DEP3DJ1 = DEP3DJ1
           + ((EXCO DEP3DJ0 'IUR' 'NOID' 'UX')*(COS ANGLAB1))
           - ((EXCO DEP3DJ0 'IUR' 'NOID' 'UZ')*(SIN ANGLAB1))
           - ((EXCO DEP3DJ0 'IUT' 'NOID' 'UX')*(SIN ANGLAB1))
           - ((EXCO DEP3DJ0 'IUT' 'NOID' 'UZ')*(COS ANGLAB1))
           +  (EXCO DEP3DJ0 'IUZ' 'NOID' 'UY');

   DEP3DJ1 =  CHAN 'ATTRIBUT' DEP3DJ1 'NATURE' 'DIFFUS';
   SI ((EGA &LAB21 1) et (EGA &LAB20 1));
     DEP3DJ = DEP3DJ1;
   SINON;
     DEP3DJ = DEP3DJ ET DEP3DJ1;
   FINSI;
*
 FIN LAB21;
*.............................> fin de boucle sur les tranches
*
FIN LAB20;
*-----------------------------> FIN DE BOUCLE SUR LES ZONES
 DEP3D.i2 = DEP3DJ;

FIN LAB2;
*-----------------------------> FIN DE BOUCLE SUR LES DEPLACEMENTS
*
FINSI;


************************************************************************
*
*                    CHAMPS D'EFFORTS 3D
*
************************************************************************

SI FLAGFOR;
*
* OPTI DIME 3 MODE FOUR NUMFOUR;
OPTI DIME 3 MODE TRID;
*
p00000 = 0 0 0;
p00001 = 0 1 0;
NTRANCHE = (DIME (TAB1. 'MAILLAGE_3D')) - 4;
NFOR = DIME (TAB1.'EFFORTS');
PRANGL = TAB1. 'MAILLAGE_3D'. 'ANGLES' ;
*
NZONE = DIME (TAB1. 'MAILLAGE_3D' . 0);
*
*-----------------------------> BOUCLE SUR LES FORCES
 REPETER LAB3 NFOR; i3 = &lab3;

*-----------------------------> BOUCLE SUR LES ZONES
 REPETER LAB30 NZONE;
 MESH2DI = TAB1. 'MAILLAGE_3D' . 0 . &LAB30;
*  LCOMPU = EXTR (TAB1.'EFFORTS'.i3) 'COMP';
 FOR2DJ = REDU (TAB1.'EFFORTS'.i3) MESH2DI;
*bp : afin de truander DEDU ROTA (et toch1.eso),
*     il faut des noms de composantes bidon : VR VZ et VT
 FOR2DJ = EXCO FOR2DJ MOFORC1 NUMFOUR MOFORC2 'NOID';
*
*.............................> boucle sur les tranches
 REPETER LAB31 NTRANCHE;
*
   ANGLAB1 = EXTR PRANGL &LAB31;
   ANGLABN = NUMFOUR*ANGLAB1;
   MESH2DN = TAB1. 'MAILLAGE_3D' . &LAB31 . &LAB30;

   FOR3DJJ = FOR2DJ DEDU ANGLAB1 p00000 P00001 'ROTA' MESH2DI MESH2DN;

*bp : serie de Fourier
   FOR3DJ0 = ((EXCO FOR3DJJ  'VR' 'NOID' 'FR' )*(COS ANGLABN))
           + ((EXCO FOR3DJJ  'VT' 'NOID' 'FT' )*(SIN ANGLABN))
           + ((EXCO FOR3DJJ  'VZ' 'NOID' 'FZ' )*(COS ANGLABN))
           + ((EXCO FOR3DJJ 'IVR' 'NOID' 'IFR')*(SIN ANGLABN))
           + ((EXCO FOR3DJJ 'IVT' 'NOID' 'IFT')*(COS ANGLABN))
           + ((EXCO FOR3DJJ 'IVZ' 'NOID' 'IFZ')*(SIN ANGLABN));

*bp : changement de repere
   FOR3DJ1 = ((EXCO FOR3DJ0 'FR' 'NOID' 'FX')*(COS ANGLAB1))
           - ((EXCO FOR3DJ0 'FR' 'NOID' 'FZ')*(SIN ANGLAB1))
           - ((EXCO FOR3DJ0 'FT' 'NOID' 'FX')*(SIN ANGLAB1))
           - ((EXCO FOR3DJ0 'FT' 'NOID' 'FZ')*(COS ANGLAB1))
           +  (EXCO FOR3DJ0 'FZ' 'NOID' 'FY');
   FOR3DJ1 = FOR3DJ1
           + ((EXCO FOR3DJ0 'IFR' 'NOID' 'FX')*(COS ANGLAB1))
           - ((EXCO FOR3DJ0 'IFR' 'NOID' 'FZ')*(SIN ANGLAB1))
           - ((EXCO FOR3DJ0 'IFT' 'NOID' 'FX')*(SIN ANGLAB1))
           - ((EXCO FOR3DJ0 'IFT' 'NOID' 'FZ')*(COS ANGLAB1))
           +  (EXCO FOR3DJ0 'IFZ' 'NOID' 'FY');

   FOR3DJ1 =  CHAN 'ATTRIBUT' FOR3DJ1 'NATURE' 'DISCRET';
   SI ((EGA &LAB31 1) et (EGA &LAB30 1));
     FOR3DJ = FOR3DJ1;
   SINON;
     FOR3DJ = FOR3DJ ET FOR3DJ1;
   FINSI;
*
 FIN LAB31;
*.............................> fin de boucle sur les tranches

FIN LAB30;
*-----------------------------> FIN DE BOUCLE SUR LES ZONES
 FOR3D.i3 = FOR3DJ;
*
FIN LAB3;
*-----------------------------> FIN DE BOUCLE SUR LES FORCES
*
FINSI;


************************************************************************
*
* CHPO 3D QUELCONQUES - PRESSION, EPAISSEUR... - CAS SYMETRIQUE
*
************************************************************************

SI (FLAGCHPS);
*
* OPTI DIME 3 MODE FOUR NUMFOUR;
OPTI DIME 3 MODE TRID;
*
p00000 = 0 0 0;
p00001 = 0 1 0;
NTRANCHE = (DIME (TAB1. 'MAILLAGE_3D')) - 4;
NCHPS = DIME (TAB1.'CHAMPS_POINTS_SYMETRIQUES');
PRANGL = TAB1. 'MAILLAGE_3D'. 'ANGLES' ;
*
NZONE = DIME (TAB1. 'MAILLAGE_3D' . 0);
*
*-----------------------------> BOUCLE SUR LES CHPO
REPETER LAB3 NCHPS; i3 = &lab3;

 LCOMPU = EXTR (TAB1.'CHAMPS_POINTS_SYMETRIQUES'.i3) 'COMP';
 CHP2DJ0 = EXCO TAB1.'CHAMPS_POINTS_SYMETRIQUES'.i3 LCOMPU NUMFOUR;

*-----------------------------> BOUCLE SUR LES ZONES
REPETER LAB30 NZONE;
*
MESH2DI = TAB1. 'MAILLAGE_3D' . 0 . &LAB30;

*  OPTI MODE FOUR NUMFOUR;
 CHP2DJ = REDU CHP2DJ0 MESH2DI;
*  OPTI MODE TRID;
*
*.............................> boucle sur les tranches
  REPETER LAB31 NTRANCHE;
*
   ANGLAB1 = EXTR PRANGL &LAB31;
   ANGLABN = NUMFOUR*ANGLAB1;
   MESH2DN = TAB1. 'MAILLAGE_3D' . &LAB31 . &LAB30;

   CHP3DJJ = CHP2DJ DEDU ANGLAB1 p00000 P00001 'ROTA' MESH2DI MESH2DN;

*bp : serie de Fourier
   CHP3DJ1 = CHP3DJJ * (COS ANGLABN);
   CHP3DJ1 = CHAN 'ATTRIBUT' CHP3DJ1 'NATURE' 'DIFFUS';
*
   SI ((EGA &LAB31 1) et (EGA &LAB30 1));
     CHP3DJ = CHP3DJ1;
   SINON;
     CHP3DJ = CHP3DJ ET CHP3DJ1;
   FINSI;
*
  FIN LAB31;
*.............................> fin de boucle sur les tranches
*
FIN LAB30;
*-----------------------------> FIN DE BOUCLE SUR LES ZONES
*
 CHS3D.i3 = CHP3DJ;
FIN LAB3;
*-----------------------------> FIN DE BOUCLE SUR LES CHPO
*
FINSI;


************************************************************************
*
* CHPO 3D QUELCONQUES - PRESSION, EPAISSEUR... - CAS ANTISYMETRIQUE
*
************************************************************************

SI FLAGCHPA;
*
* OPTI DIME 3 MODE FOUR NUMFOUR;
OPTI DIME 3 MODE TRID;
*
p00000 = 0 0 0;
p00001 = 0 1 0;
NTRANCHE = (DIME (TAB1. 'MAILLAGE_3D')) - 4;
NCHPA = DIME (TAB1.'CHAMPS_POINTS_ANTISYMETRIQUES');
PRANGL = TAB1. 'MAILLAGE_3D'. 'ANGLES' ;
*
NZONE = DIME (TAB1. 'MAILLAGE_3D' . 0);
*
*-----------------------------> BOUCLE SUR LES CHPO
 REPETER LAB3 NCHPA;  i3 = &lab3;

 LCOMPU = EXTR (TAB1.'CHAMPS_POINTS_ANTISYMETRIQUES'.i3) 'COMP';
 CHP2DJ0 = EXCO TAB1.'CHAMPS_POINTS_ANTISYMETRIQUES'.i3 LCOMPU NUMFOUR;
*
*-----------------------------> BOUCLE SUR LES ZONES
REPETER LAB30 NZONE;
*
 MESH2DI = TAB1. 'MAILLAGE_3D' . 0 . &LAB30;
*  OPTI MODE FOUR NUMFOUR;
 CHP2DJ = REDU CHP2DJ0 MESH2DI;
*  OPTI MODE TRID;
*
*.............................> boucle sur les tranches
  REPETER LAB31 NTRANCHE;
*
   ANGLAB1 = EXTR PRANGL &LAB31;
   ANGLABN = NUMFOUR*ANGLAB1;
   MESH2DN = TAB1. 'MAILLAGE_3D' . &LAB31 . &LAB30;

   CHP3DJJ = CHP2DJ DEDU ANGLAB1 p00000 P00001 'ROTA' MESH2DI MESH2DN;

*bp : serie de Fourier
   CHP3DJ1 = CHP3DJJ * (COS ANGLABN);
   CHP3DJ1 = CHAN 'ATTRIBUT' CHP3DJ1 'NATURE' 'DIFFUS';
*
   SI ((EGA &LAB31 1) et (EGA &LAB30 1));
     CHP3DJ = CHP3DJ1;
   SINON;
     CHP3DJ = CHP3DJ ET CHP3DJ1;
   FINSI;
*
  FIN LAB31;
*.............................> fin de boucle sur les tranches
*
FIN LAB30;
*-----------------------------> FIN DE BOUCLE SUR LES ZONES
*
 CHA3D.i3 = CHP3DJ;
FIN LAB3;
*-----------------------------> FIN DE BOUCLE SUR LES CHPO
*
FINSI;


************************************************************************
* TODO : IL MANQUE LES CHAMPS DE CONTRAINTES ET DE DEFORMATIONS.....
************************************************************************


************************************************************************
*
*           RANGEMENT SI NECESSAIRE
*
************************************************************************

* On stocke les resultats sur le maillage 3D
*
SI FLAGDEPL;
  TAB1.'DEPLACEMENTS_3D'  = DEP3D;
FINSI;
*
SI FLAGFOR;
  TAB1.'EFFORTS_3D'  = FOR3D;
FINSI;
*
SI FLAGCHPS;
  TAB1.'CHAMPS_POINTS_SYME_3D'  = CHS3D;
FINSI;
*
SI FLAGCHPS;
  TAB1.'CHAMPS_POINTS_ANTI_3D'  = CHA3D;
FINSI;
*
'FINPROC' MESH3D;
*
$$$$




