$$$$ PAS_DEFA
* PAS_DEFA  PROCEDUR  MB234859  19/01/21    21:15:14     10049
DEBPROC PAS_DEFA PRECED*'TABLE';
*
*objet de la procedure :
* verifications coherences donnees.
* initialisations des valeurs par defaut des options de calcul
* initialisation des variables locales
*
* verifications de quelques arguments obligatoires
*
* existence modele verification et initialisation modeles particuliers
*
* affectation des valeurs par defaut des options dans WTAB
*
INOUV=VRAI;
'SI' ('EXIS' PRECED 'REPRISE');
  'SI' (PRECED.'REPRISE' > 0.);
     PAS_REPR PRECED;
  'FINSI';
'FINSI';
'SI' ('EXIS' PRECED 'WTABLE');
  WTAB=PRECED.'WTABLE';WTAB.'NOUVEAU'=FAUX;INOUV=FAUX;
'SINON';
  WTAB='TABLE';
  PRECED.'WTABLE'=WTAB;
'FINSI';

* Sous-typage automatique de la TABLE PASAPAS
'SI' ('NON' ('EXIS' PRECED 'SOUSTYPE'));
   PRECED.'SOUSTYPE'='MOT' 'PASAPAS' ;
'FINS';

************************************************************************
********************* CAS D UNE NOUVELLE WTAB **************************
************************************************************************
'SI' INOUV;
  'SI' (( 'EXISTE' PRECED 'GRANDES_ROTATIONS') 'OU'
      ('EXISTE' PRECED 'GRANDES_DEFORMATIONS' ));
        'MESS' 'ATTENTION LES DONNEES CONCERNANT LES GRANDES ROTATIONS';
        'MESS' ' ET GRANDES DEFORMATIONS ONT CHANGE.';
        'MESS' ' Voir le mot EPSILON des operateurs OPTION ou MODELE';
        'MESS' ' Arret de Cast3M';
        'ERREUR'   5 ;
  'FINSI';
  'SI' ( 'EXISTE' PRECED 'CONTACT' ) ;
     'MESS' ' ATTENTION :' ;
     'MESS' ' Les donnees concernant le CONTACT dans PASAPAS ont ete'
            ' modifiees :' ;
     'MESS' ' - L indice CONTACT de la table de PASAPAS n existe plus.';
     'MESS' ' - Il faut definir un MODELE de CONTACT.' ;
     'MESS' ' Arret de Cast3M' ;
     'ERREUR' 5 ;
  'FINSI';
  'SI' (('EXISTE' PRECED 'PROCEDURE_REAC_MECA') 'OU'
        ('EXISTE' PRECED 'PROCEDURE_CHAR_MECA') 'OU'
        ('EXISTE' PRECED 'PROCEDURE_REAC_THER') 'OU'
        ('EXISTE' PRECED 'PROCEDURE_CHAR_THER') 'OU'
        ('EXISTE' PRECED 'PROCEDURE_PARA_THER')) ;
     'MESS' ' ATTENTION :' ;
     'MESS' ' Les donnees concernant les procedures utilisateur ont ete'
            ' modifiees :' ;
     'MESS' ' - L indice PROCEDURE_REAC_MECA est remplace par l indice '
            'PROCEDURE_REEV_MEC' ;
     'MESS' ' - L indice PROCEDURE_CHAR_MECA est remplace par l indice '
            'PROCEDURE_CHARMECA' ;
     'MESS' ' - L indice PROCEDURE_REAC_THER est remplace par l indice '
            'PROCEDURE_REEV_THE' ;
     'MESS' ' - L indice PROCEDURE_CHAR_THER est remplace par l indice '
            'PROCEDURE_CHARTHER' ;
     'MESS' ' - L indice PROCEDURE_PARA_THER est remplace par l indice '
            'PROCEDURE_PARATHER' ;
     'MESS' ' Arret de Cast3M' ;
     'ERREUR' 5 ;
  'FINSI';

* Adherence presence de la composante ADHE (modele contact ou cont/fro)
  WTAB.'ADHERENCE' = FAUX ;
* Advection presence d'un modele thermiquee advection
  WTAB.'ADVECTION'=FAUX;
* matrice d'amortissement en dynamique : pas_defa
  WTAB.'AMORTISSEMENT'='MOT' 'INCONNU';
* arret:  positionne  pour dire a pasapas de s'arreter: perso1
  WTAB.'ARRET'=FAUX;
* autocrit: valeur du critere a utiliser dans autopilo(option automatique)
  WTAB.'AUTOCRIT'= 0.005;
* autocoef: coefficient de pilotage
  WTAB.'AUTOCOEF'='MOT' 'INCONNU';
* autodeux=vrai si pilotage et pas premiere tentative : pasapas
  WTAB.'AUTODEUX'=FAUX;
* automatique =vrai si demande de pilotage automatique : pas_defa
  WTAB.'AUTOMATIQUE'= FAUX;
* autopas : nb maxi de tentative en pilotage automatique:pas_defa
  WTAB.'AUTOPAS'= 250;
* autoredu  : reduit le critere de pilotage : pasapas unpas
  WTAB.'AUTOREDU'=1.D0;
* autored1 : joue sur la strategie d'evolution de autoredu :pasapas unpas
  WTAB.'AUTORED1'='MOT' 'INCONNU';
* beton_ht   ( ne marche pas!)
  WTAB.'BETON_HT' = FAUX;
* blocages_mecaniques; matrices : pas_defa (ou pasapas si pas dans preced)
  WTAB.'BLOCAGES_MECANIQUES'='MOT' 'INCONNU';
* blocages_thermiques; matrices : pas_defa (ou jamais)
  WTAB.'BLOCAGES_THERMIQUES'='MOT' 'INCONNU';
* blocages_diffusions; matrices : pas_defa (ou jamais)
  WTAB.'BLOCAGES_DIFFUSIONS'='MOT' 'INCONNU';
* bou_meth : valeur par defaut du nombre de bouclage mecanique-thermique
  WTAB.'BOU_METH'=1;
* cafrotte logique pas_defa: veut dire il existe modele contact-frottement
  WTAB.'CAFROTTE' = FAUX ;
* capaconst logique il existe une capacite constante : pas_defa
  WTAB.'CAPACONST'=FAUX;
* cara stocke les caracteristiques reactualisees du dernier pas :pasapas
  WTAB.'CARA'='MOT' 'INCONNU';
* caracteristiques :
  WTAB.'CARACTERISTIQUES'= 'MOT' 'INCONNU';
* indice celsius
  WTAB.'CELSIUS'=FAUX;
* ceramique presence de modele ceramique pas_defa
  WTAB.'CERAMIQUE'=FAUX;
* chargement idem celui de preced ou creation d'un chargement farfelu
  WTAB.'CHARGEMENT'='MOT' 'INCONNU';
* chargement_i idem chargement  DFIS et FI si certain materiau pas_defa
  WTAB.'CHARGEMENT_I'='MOT' 'INCONNU';
* char_defi presence de chargement DEFI deformation initiale  pas_defa
  WTAB.'CHAR_DEFI'=FAUX;
* char_pres presence de chargement 'P   ' de pression suiveuse  pas_defa
  WTAB.'CHAR_PRES'=FAUX;
* char_the presence de chargement thermique pour la mecanique pas_defa
  WTAB.'CHAR_THE' = FAUX;
* clim matrice des blocagesmecaniques y compris contact et frottement pasapas
  WTAB.'CLIM'='MOT' 'INCONNU';
* condconst logique il existe une conductivite constante : pas_defa
  WTAB.'CONDCONST'=FAUX;
* conduction presence d'un modele de' conduction : pas_defa
  WTAB.'CONDUCTION'=FAUX;
* consolidation presence de consolidation via preced : pas_defa
  WTAB.'CONSOLIDATION'=FAUX;
* contact presence de contact automatique via preced : pas_defa
  WTAB.'CONTACT' = FAUX ;
* conv logique precisant si unpas a bien converge  : unpas
  WTAB.'CONV'=VRAI;
* convergence_forcee logique demandant la convergence forcee : pas_defa
  WTAB.'CONVERGENCE_FORCEE' = VRAI;
* demande de convergence mecanique-thermique en cas de bouclage : pas_defa
  WTAB.'CONVERGENCE_MEC_THE'=FAUX;
* logique pour imposer au residu de decroitre de facon monotone : pas_defa
  WTAB.'CONVERGENCE_MONOTONE' = FAUX;
* convection presence d'un modele de convection : pas_defa
  WTAB.'CONVECTION' = FAUX;
* conv_thmec on a convergee le bouclage mecanique-thermique  pasapas
  WTAB.'CONV_THMEC'=VRAI;
* couplage le calcul contient des modeles thermiques et des mecaniques pas_defa
  WTAB.'COUPLAGE' = FAUX;
* co1 champ de CONCENTRATION du pas precedent : pasapas
  WTAB.'CO1'=0;
* co2 champ de CONCENTRATION du pas courant : pasapas
  WTAB.'CO2'=0;
* cte_stefan_boltzmann valeur de la constante : pas_defa
  WTAB.'CTE_STEFAN_BOLTZMANN' = 5.673E-8 ;
* deja_calc_charther indique le dernier temps pour lequel on a calcule le
* chargement thermique dans charther : pas_defa et charther
  WTAB.'DEJA_CALC_CHARTHER'=0.d0;
* deltaiter sert au test de non convergence : pas_defa unpas
  WTAB.'DELTAITER'=10;
* dt: valeur du delta de temps entre le dernier pas et le pas en cours:pasapas
  WTAB.'DT'='MOT' 'INCONNU';
* dtprec : dt du pas precedent: pasapas
  WTAB.'DTPREC'='MOT' 'INCONNU';
* dt_init c'est le dt initiale sert au pilotage automatique : pasapas
  WTAB.'DT_INIT'=0.D0;
* dynamique calcul en dynamique :pas_defa
  WTAB.'DYNAMIQUE'=FAUX;
* endommagement il esiste un tel modele de comportement: pas_defa
  WTAB.'ENDOMMAGEMENT'=FAUX;
* Enregistrement de la date du depart de PASAPAS
  WTAB.'EPOQUE' = DATE 'EPOCH';
* ether1 stocke des deformations thermiques au temps precedent : pasapas
  WTAB.'ETHER1'='MOT' 'INCONNU';
* etref deformation d'origine thermique de reference : pas_epth
  WTAB.'ETREF'='MOT' 'INCONNU';
* fnonl permet forces de reequilibrage du pas precedent : unpas
  WTAB.'FNONL'='MOT' 'INCONNU';
* configuration finale  : pasapas unpas
  WTAB.'FOR'='MOT' 'INCONNU';
* configuration en debut de pas : pasapas
  WTAB.'FOR0'='FORM';
* FOR_DIFF le calcul inclus des modeles DIFFUSION:  pas_defa
  WTAB.'FOR_DIFF' = FAUX;
* FOR_METALLU le calcul inclus des modeles METALLURGIE:  pas_defa
  WTAB.'FOR_METALLU' = FAUX;
* utilisation de la frormulation fefp : pas_defa
  WTAB.'FEFP_FORMULATION' = FAUX;
* ffrot  seuil de force de frottement  : unpas
  WTAB.'FFROT'='MOT' 'INCONNU';
* frea1 partie constante du second membre  dynamique,consolidation: pasapas
  WTAB.'FREA1'='MOT' 'INCONNU';
* frequentiel calcul en frequentiel : pas_defa
  WTAB.'FREQUENTIEL'= FAUX;
* ftol desequilibre  tolere : pas_defa
  WTAB.'FTOL'='MOT' 'INCONNU';
* grands_deplacement  logique : pas_defa
  WTAB.'GRANDS_DEPLACEMENTS' = FAUX;
* increment de charge du pas precedent : unpas
  WTAB.'INCREMENT'='MOT' 'INCONNU';
* logique le pas precedent a ete initialise par le temps : unpas
  WTAB.'INITEMPS'= FAUX;
* logique pour autoriser l'Initialisation a partir du pas precedent : unpas
  WTAB.'INITIALISATION'= VRAI;
* iplavi il existe un modele devant passer par COMP : pas_defa
  WTAB.'IPLAVI'=FAUX;
* ipresu : listreel des temps a mettre dans les tables resultats : pas_defa
  WTAB.'IPRESU'='MOT' 'INCONNU';
* iptime  liste des temps a calculer : pas_defa
  WTAB.'IPTIME'='MOT' 'INCONNU';
* isauvega liste des temps sauvegardes (appel SAUV dans pasapas) : pas_defa
  WTAB.'ISAUVEGA'='MOT' 'INCONNU';
* logique la sauvegarde dans pasapas est activee : pas_defa
  WTAB.'ISAUVEGL'=FAUX;
* itcar  des elements ont des caracteristiques geometriques :pas_defa
  WTAB.'ITCAR'=FAUX;
* k_sigma il faut utiliser l'operateur KSIGMA : pas_defa
  WTAB.'K_SIGMA'=FAUX;
* k_tangent il faut utiliser l'operateur KTANG : pas_defa
  WTAB.'K_TANGENT'=FAUX;
* k_tangent_iter0 matrice tangente a utiliser pour iteration 0 : unpas
  WTAB.'K_TANGENT_ITER0'='MOT' 'INCONNU';
* k_tangent_pert operateur KTAN matrice tangente par perturbation : pas_defa unp
  WTAB.'K_TANGENT_PERT'=FAUX;
* k_tangent_syme matrice tangente symetrisee : pas_defa unpas
  WTAB.'K_TANGENT_SYME'=FAUX;
* k_tang_pert_c1 matrice tangente par perturbation coefficient C1 : unpas
  WTAB.'K_TANG_PERT_C1'= 1.D-3;
* k_tang_pert_c2 matrice tangente par perturbation coefficient C2 : unpas
  WTAB.'K_TANG_PERT_C2'='MOT' 'INCONNU';
* lastktan matrice donnant la derniere matrice tangente : pasapas unpas
  WTAB.'LASTKTAN'='MOT' 'INCONNU';
* langrangien schema numerique lagrangien total par defaut
  WTAB.'LAG_TOT'=VRAI ;
* ldeva liste des variables dont dependent les materiaux : pas_defa
  WTAB.'LDEVA'='MOT' 'INCONNU';
* leconomi l'option economique est activee : pas_defa pas_sauv
  WTAB.'LECONOMI'=FAUX;
* liaison_persistante si il existe des liaisons persistantes :pas_defa
  WTAB.'LIAISON_PERSISTANTE' =FAUX;
* linesearch en grand deplacement
  WTAB.'LINESEARCH' = FAUX;
* lisea_m  pour les contacts unilateraux en mecaniques :pasapas unpas
  WTAB.'LISEA_M'='MOT' 'INCONNU';
* lisea_t pour les changements de phase en thermique : pasapas transnon
  WTAB.'LISEA_T'='MOT' 'INCONNU';
* lpar0 liste des parametres externes a passer a COMP : pas_defa
  WTAB.'LPAR0'='MOT' 'INCONNU';
* man methode asymptotique numerique
  WTAB.'MAN'= FAUX;
* massconst logique il existe des masses constantes : pas_defa
  WTAB.'MASSCONST'=FAUX;


* etat0 etat au temps 0 : pasapas pas_etat
  WTAB.'ETAT0'='MOT' 'INCONNU';
* etat1 etat au temps courant : pasapas pas_etat
  WTAB.'ETAT1'='MOT' 'INCONNU';
* etat_ref etat de reference : pasapas pas_etat
  WTAB.'ETAT_REF'='MOT' 'INCONNU';
* mat0 materiau au temps 0 : pasapas pas_epth
  WTAB.'MAT0'='MOT' 'INCONNU';
* mat1  materiaux pour le pas en cours : pasapas unpas
  WTAB.'MAT1'='MOT' 'INCONNU';
* mat1  materiaux de reference
  WTAB.'MAT_REF'='MOT' 'INCONNU';
* matvar le materiau est variable  :  pas_verm
  WTAB.'MATVAR' = FAUX;
* mat_con materiau des modeles de convection : pas_defa
  WTAB.'MAT_CON'='MOT' 'INCONNU';
* mat_dif materiau des modeles de diffusion : pas_defa
  WTAB.'MAT_DIF'='MOT' 'INCONNU';
* mat_mec materiau des modeles de mecanique : pas_defa
  WTAB.'MAT_MEC'='MOT' 'INCONNU';
* mat_pha materiau des modeles de changement de phase : pas_defa
  WTAB.'MAT_PHA'='MOT' 'INCONNU';
* mat_por materiau des modeles poreux : pas_defa
  WTAB.'MAT_POR'='MOT' 'INCONNU';
* mat_ray materiau des modeles de rayonnement : pas_defa
  WTAB.'MAT_RAY'='MOT' 'INCONNU';
* mat_the materiau des modeles thermiques : pas_defa
  WTAB.'MAT_THE'='MOT' 'INCONNU';
* mat_thm materiau thermohydrique : pas_defa
  WTAB.'MAT_THM'= 'MOT' 'INCONNU';
* mat_T materiau thermique + thermohydrique : pas_defa
  WTAB.'MAT_T'  = 'MOT' 'INCONNU';
* materiau des modeles convection + thermiques : pas_defa
  WTAB.'MAT_TOT'='MOT' 'INCONNU';
* maxdefor valeur limitant la deformation en cas de non convergence
* ou de RENORMALISATION souhaitee de ZDEP1 : pas_defa
  WTAB.'MAXDEFOR'= 1.e-3;
* maxiteration nombre maximum d'iteration pour un pas de calcul :pas_defa
  WTAB.'MAXITERATION' = 49;
* maxsouspas nombre maximum de sous pas en cas de non convergence :pas_defa
  WTAB.'MAXSOUSPAS' = 100;
* maxisouspas nombre maximum de sous pas d'integration du fluage
  WTAB.'MAXISOUSPAS'= 2000;
* ma_tot materiau des modeles mecaniques + poreux +liaison : pas_defa
  WTAB.'MA_TOT'='MOT' 'INCONNU';
* ma_total  c'est ce qui est dans preced.caracteristiques : pas_defa
  WTAB.'MA_TOTAL'= 'MOT' 'INCONNU';
* mec1 il existe au moins un modele mecanique  : pas_defa
  WTAB.'MEC1' = FAUX;
* affichage messages options calcul entete procedure resolution THERMIQUE
  WTAB.'MESSTHER' = VRAI ;
* modal ou statique : pas_defa
  WTAB.'MODAL' = FAUX;
* mod_adv modele de thermique, advection
  WTAB.'MOD_ADV'='MOT' 'INCONNU';
* mod_con modele de thermique convection  : pas_defa
  WTAB.'MOD_CON'='MOT' 'INCONNU';
* mod_dif modele de diffusion  : pas_defa
  WTAB.'MOD_DIF'='MOT' 'INCONNU';
* mod_mec modele mecanique: pas_defa
  WTAB.'MOD_MEC'= 'MOT' 'INCONNU';
* mod_pha modele de changement de phase : pas_defa
  WTAB.'MOD_PHA'='MOT' 'INCONNU';
* mod_por modele poreux
  WTAB.'MOD_POR'='MOT' 'INCONNU';
* mod_ray modele rayonnement
  WTAB.'MOD_RAY'='MOT' 'INCONNU';
* mod_the modele thermique : pas_defa
  WTAB.'MOD_THE'= 'MOT' 'INCONNU';
* mod_thm modele thermohydrique : pas_defa
  WTAB.'MOD_THM'= 'MOT' 'INCONNU';
* mod_T modele thermique + thermohydrique (contient inconnue T): pas_defa
  WTAB.'MOD_T'  = 'MOT' 'INCONNU';
* mod_tot modele thermique : pas_defa
  WTAB.'MOD_TOT'= 'MOT' 'INCONNU';
* mo_tot modele mecanique + modele poreux : pas_defa
  WTAB.'MO_TOT' ='MOT' 'INCONNU';
* mo_tot_prec modele mecanique + modele poreux au pas precedent: pas_defa
  WTAB.'MO_TOT_PREC' ='MOT' 'INCONNU';
* mo_total ce qui est dans preced.modele  : pas_defa
  WTAB.'MO_TOTAL'=PRECED.'MODELE';
* mova nom de la variables internes dont le max est imprime : pas_defa
  WTAB.'MOVA' = 'MOT' 'EPSE';
* msrther1 deformations thermiques pour les poreux
  WTAB.'MSRTHER1'='MOT' 'INCONNU';
* msrther2 deformations thermiques pour les poreux
  WTAB.'MSRTHER2'='MOT' 'INCONNU';
* mtol valeur autorisee du desequilibre (en terme de moment): pas_defa
  WTAB.'MTOL'='MOT' 'INCONNU';
* naures valeur de preced .autoresu   : pas_defa
  WTAB.'NAURES'=100000;
* nbplas nb de point ayant plastifie   : pasapas unpas
  WTAB.'NBPLAS'='MOT' 'INCONNU';
* nb_el_para nb minimum d'elements dans une zone pour accepter le parallelisme
  WTAB.'NB_EL_PARA'=1000;
* premier pas de sauvegarde encore present (option economique de pasapas)
  WTAB.'NFSOR'=0;
* nombre maxi d'iteration internes si k_tangent : pas_defa
  WTAB.'NITERINTER_MAX' = 15;
* niter_ktangent recalcule de la matrice tangente toutes les .. iterations
  WTAB.'NITER_KTANGENT' = 1;
* nloc s'il existe un modele de comportement non_local (preced.non_local)
  WTAB.'NLOC' = FAUX ;
* nmaxsubsteps nb maximun de substepping si fefp  : pas_defa
  WTAB.'NMAXSUBSTEPS' = 1;
* nombre_iterations nb d'iterations du pas precedent : pasapas unpas
  WTAB.'NOMBRE_ITERATIONS'='MOT' 'INCONNU';
* non_lineaire il existe un materiau utilisateur non-lineaire  : pas_defa
  WTAB.'NON_LINEAIRE'= FAUX;
* non_local decrit le modele de comportement non_local (preced.non_local)
  WTAB.'NON_LOCAL' = 'MOT' 'INCONNU' ;
* nouveau vrai si premier calcul    : pas_defa
  WTAB.'NOUVEAU'=VRAI;
* delta temps du pas en cours pour dupont2 : pasapas
  WTAB.'NOUV_PAS'=0.D0;
*  nsor numero a ecrire dans les tables de resultats : pas_ init
  WTAB.'NSOR'=0;
* operateur matrice contenant l'operateur d'iterations : pasapas
  WTAB.'OPERATEUR'='MOT' 'INCONNU';
* Ordre est l'ordre de developpement de la MAN
  WTAB.'ORDRE'=12;
* para_exte il existe des parametres externes  : pas_verm
  WTAB.'PARA_EXTE' = FAUX;
* pas numero du pas de temps utile a transnon : pasapas
  WTAB.'PAS'=0;
* pas_ajuste si ajustement automatique de longueur de pas : pas_defa
  WTAB.'PAS_AJUSTE' = FAUX;
* pas_redu  en automatiqu il a fallu reduire le pas  : pasapas unpas
  WTAB.'PAS_REDU'=FAUX;
* phase  il xiste du changement de phase : pas_defa
  WTAB.'PHASE'=FAUX;
* plastique il exite un comportement plastique : pas_defa
  WTAB.'PLASTIQUE' = FAUX;
* por1 il existe un model poreux  : pas_defa
  WTAB.'POR1' = FAUX;
* precdecharge critere de decharge en opilotage automatique  : pas_defa
  WTAB.'PRECDECHARGE' = 1.E-2;
* precflex critere de desequilibre sur moment autorise : pas_defa
  WTAB.'PRECFLEX' = 1.E-4;
* precisinter precision pour les iterations locales (fefp): pas_defa
  WTAB.'PRECISINTER' = 1.D-8;
* precision critere de convergence Thermique & Mecanique : pas_defa
  WTAB.'PRECISION' = 1.E-4 ;
* predicteur
  WTAB.'PREDICTEUR' = 'MOT' 'INCONNU';
* procedure initialisation pour g_theta
  WTAB.'PROCEDURE'='MOT' 'PASAPAS';
* procedure_charmeca il faut appele la procedure charmeca  : pas_defa
  WTAB.'PROCEDURE_CHARMECA'=FAUX;
* procedure_charther il faut appele la procedure charther  : pas_defa
  WTAB.'PROCEDURE_CHARTHER'=FAUX;
* procedure_conv il faut appele la procedure pro_conv :  pas_defa
  WTAB.'PROCEDURE_CONV'=FAUX;
* procedure_parather il faut appeler la procedure parather : pas_defa
  WTAB.'PROCEDURE_PARATHER' = FAUX ;
* procedure_perso1 il faut appeler la procedur perso1:  pas_defa
  WTAB.'PROCEDURE_PERSO1' = FAUX;
* procedure_perso2 il faut appeler la procedur perso2:  pas_defa
  WTAB.'PROCEDURE_PERSO2' = FAUX;
* procedure_reev_mec  il faut appeler la procedur reev_mec :  pas_defa
  WTAB.'PROCEDURE_REEV_MEC' = FAUX ;
* procedure_reev_the  il faut appeler la procedur reev_the :  pas_defa
  WTAB.'PROCEDURE_REEV_THE' = FAUX ;
* procedur_thermique non de la procedure thermique a appeler :  pas_defa
  WTAB.'PROCEDURE_THERMIQUE'='MOT' 'INCONNU';
* processeurs pour imposer l'option de parallelisme
  WTAB.'PROCESSEURS'='MOT' 'INCONNU';
* projection le champ de temperature clcule doit etere projete:  pas_defa
  WTAB.'PROJECTION'= FAUX;
* raidconst il existe des raideurs constantes :  pas_defa
  WTAB.'RAIDCONST' = FAUX;
* raidaugm diffaugm theraugm il existe des raideurs augmentees :  pas_defa
  WTAB.'RAIDAUGM' = FAUX;
  WTAB.'DIFFAUGM' = FAUX;
  WTAB.'THERAUGM' = FAUX;
* autaug  augmentation automatique :  pas_defa
  WTAB.'AUTOAUGM' = FAUX;
* rayo il existe du rayonnement en thermique :  pas_defa
  WTAB.'RAYO'=FAUX;
* rayonnement on y met des pre-calculs pour le rayonnement  : transnon charther
  WTAB.'RAYONNEMENT'='MOT' 'INCONNU';
* Reactualisation de la matrice en grands deplacements pour 0,1 de defor
  WTAB.'REAC_GRANDS'= 0.1 ;
* logique disant pour charther si geometrie a change : pasapas
  WTAB.'REA_GEOM' = FAUX ;
* reaprec utile pour les contacts unilateraux en dynamiques
  WTAB.'REAPREC'='MOT' 'INCONNU';
* recalcul =vrai il faut recalculer la raideur ..
  WTAB.'RECALCUL'= FAUX;
* recaop  = recalcul operateur
* recadet = oubli operateur (destruction de la rigi en commentaire)
* recari  = recalcul rigidite
  WTAB.'RECAOP'  = VRAI;
  WTAB.'RECADET' = FAUX;
  WTAB.'RECARI'  = FAUX;
* relaxation_dupont2 coeff de relaxation pour dupont2  :  pas_defa
  WTAB.'RELAXATION_DUPONT'=0.25;
* parametre de relaxation du pas de temps en non convergence
  WTAB.'RELAXATION_NONCONV' = 1.;
* relaxation_thet   coeff de relaxation pour transnon :  pas_defa  transnon
  WTAB.'RELAXATION_THETA'= 1. ;
* renormalisation de l'itere pour le limiter :  pas_defa
  WTAB.'RENORMALISATION' = FAUX;
* residu chpoint donnant le dernier residu d'equilibre : pasapas unpas
  WTAB.'RESIDU'='MOT' 'INCONNU';
* riblo_m  matrice de blocages des appuis unilateraux : unpas
  WTAB.'RIBLO_M'='MOT' 'INCONNU';
* riblo_t matrice de blocages des changement de phase : transnon
  WTAB.'RIBLO_T'='MOT' 'INCONNU';
* valeurr des rigidites constantes
  WTAB.'RIGIDITE_CONSTANTE'= 'MOT' 'INCONNU';
* second_membre c'est le second_membre du pas d'avant : unpas
  WTAB.'SECOND_MEMBRE'='MOT' 'INCONNU';
* sous_increment nombre de sous increment
  WTAB.'SOUS_INCREMENT'=1 ;
* test stabilite de la solution
  WTAB.'STABILITE' = FAUX;
* substepping  pour integrer en petites deformation :  pas_defa
  WTAB.'SUBSTEPPING'=FAUX;
* succes la procedur unpas s'est bien terminee pasapas unpas
  WTAB.'SUCCES'=VRAI;
* tabsauv table indiquant les options de sauv des resultats :  pas_defa
  WTAB.'TABSAUV'='MOT' 'INCONNU';
* talpha_reference valeur de la temperature de reference de alpha  :  pas_defa
  WTAB.'TALPHA_REFERENCE'='MOT' 'INCONNU';
* temperature_reference  temperature pour laquelle epth=0.  :  pas_defa
  WTAB.'TEMPERATURE_REFERENCE' = 'MOT' 'INCONNU' ;
* temps0 temps de calcul precedent : pas_defa pasapas
  WTAB.'TEMPS0'=0.D0;
* temps_calcules liste des tempsd a calculer  :  pas_defa
  WTAB.'TEMPS_CALCULES'='MOT' 'INCONNU';
* tem_calc liste des temps a calculer pour les proc thermique : pasapas
  WTAB.'TEM_CALC'='MOT' 'INCONNU';
* teta facteur pour la theta methode en consolidation  :  pas_defa
  WTAB.'TETA'=  1.0D0;
* tet0 champ de temperature 2  pas avant   : pasapas dupont2
  WTAB.'TET0'=0;
* tet1 champ de temperature 1  pas avant   : pasapas
  WTAB.'TET1'=0;
* tet2 champ de temperature du pas courant : pasapas
  WTAB.'TET2'=0;
* the1 le calcul inclus des modeles thermique :  pas_defa
  WTAB.'THE1' = FAUX;
* ther_courant champ de temperature propose pour charther : dupont2 transnon
  WTAB.'THER_COURANT'='MOT' 'INCONNU';
* thm1 le calcul inclus des modeles thermohydriques : pas_defa
  WTAB.'THM1' = FAUX;
* tref temperature de reference 0 ou 273 : transnon dupont2
  WTAB.'TREF' = 0.D0;
* t_final objectif du temps a calcule si pas_ajuste pasapas
  WTAB.'T_FINAL'=0.D0;
* update_lagrangian  on veut faire du lagrangien reactualise fefp: pas_defa
  WTAB.'UPDATE_LAGRANGIAN' = FAUX;
* vieuxpas dt precedent  pour dupont2
  WTAB.'VIEUXPAS'=0.D0;
* viscodommage il existe un modele de comportement viscodommage : pas_defa
  WTAB.'VISCODOMMAGE'=FAUX;
* viscoplastique il existe un modele de comportement viscoplastique  : pas_defa
  WTAB.'VISCOPLASTIQUE' = FAUX;
* visco_externe il existe un  modele de comportementvisco_externe  : pas_defa
  WTAB.'VISCO_EXTERNE'=FAUX;
* xdeno valeur pour calculer le critere de convergence force : unpas
  WTAB.'XDENO'=0.d0;
* xdenom valeur pour calculer le critere de convergence moment : unpa
  WTAB.'XDENOM'=0.d0;
  'SI' ( 'EXIS' PRECED 'CONTINUATION' );
*  c'est la reprise d'un fichier cree avec l'ancien PASAPAS
     iii = 'INDEX' PRECED;nii= 'DIME' iii;
     'REPETER' boui nii;
     imo=0;
     'SI' ('EGA' ('TYPE' iii.&boui ) 'MOT     '); imo=1; 'FINSI';
      'SI' ('EGA' imo 1);  aa= 'MOT' iii.&boui;
      'SINON';  aa=   iii.&boui; 'FINSI';
       'SI'('NON' ('EXIS' wtab aa));
         WTAB . aa = PRECED . aa;
       'FINSI';
     'FIN' BOUI;
  'FINSI';
  'SI' ('EXIS' PRECED 'REPRISE');
     'SI' ( > PRECED.'REPRISE' 0);
       ii= 'INDEX' (preced.'TEMPS');
       nn = 'DIME' ii; nsor = ii . nn;
       temps0= PRECED. 'TEMPS' . nsor;
       WTAB.'NSOR' = NSOR;
       WTAB.'TEMPS0'=temps0;
     'FINSI';
  'FINSI';

************************************************************************
************* CAS DE LA REPRISE D UNE WTAB EXISTANTE *******************
************************************************************************
'SINON';
*  indices de wtab remis a leur valeur par defaut quand on re-entre
*  dans pasapas
   WTAB.'AMORTISSEMENT'        ='MOT' 'INCONNU' ;
   WTAB.'ETAT_REF'             ='MOT' 'INCONNU' ;
   WTAB.'MAT_REF'              ='MOT' 'INCONNU' ;
   WTAB.'ETREF'                ='MOT' 'INCONNU' ;
   WTAB.'AUTOMATIQUE'          = FAUX;
   WTAB.'CAPACONST'            = FAUX;
   WTAB.'CHARGEMENT'           ='MOT' 'INCONNU' ;
   WTAB.'CHAR_DEFI'            = FAUX;
   WTAB.'CHAR_PRES'            = FAUX;
   WTAB.'CHAR_THE'             = FAUX;
   WTAB.'CONDCONST'            = FAUX;
   WTAB.'CONVERGENCE_FORCEE'   = VRAI;
   WTAB.'CONVERGENCE_MONOTONE' = FAUX;
   WTAB.'DYNAMIQUE'            = FAUX;
   WTAB.'EPOQUE'               ='DATE' 'EPOCH';
   WTAB.'FOR_DIFF'             = FAUX ;
   WTAB.'FOR_METALLU'          = FAUX;
   WTAB.'FREQUENTIEL'          = FAUX;
   WTAB.'FTOL'                 ='MOT' 'INCONNU' ;
   WTAB.'INITIALISATION'       = VRAI;
   WTAB.'ISAUVEGA'             ='MOT' 'INCONNU' ;
   WTAB.'ISAUVEGL'             = FAUX;
   WTAB.'K_SIGMA'              = FAUX;
   WTAB.'K_TANGENT'            = FAUX;
   WTAB.'K_TANGENT_ITER0'      ='MOT' 'INCONNU' ;
   WTAB.'K_TANGENT_PERT'       = FAUX ;
   WTAB.'K_TANGENT_SYME'       = FAUX ;
   WTAB.'K_TANG_PERT_C1'       = 1.D-3 ;
   WTAB.'K_TANG_PERT_C2'       ='MOT' 'INCONNU' ;
   WTAB.'LAG_TOT'              = VRAI;
   WTAB.'LECONOMI'             = FAUX;
   WTAB.'LIAISON_PERSISTANTE'  = FAUX;
   WTAB.'LINESEARCH'           = FAUX;
   WTAB.'MASSCONST'            = FAUX;
   WTAB.'MESSTHER'             = VRAI;
   WTAB.'MOD_THM'              ='MOT' 'INCONNU' ;
   WTAB.'MAT_THM'              ='MOT' 'INCONNU' ;
   WTAB.'MOD_T'                ='MOT' 'INCONNU' ;
   WTAB.'MAT_T'                ='MOT' 'INCONNU' ;
   WTAB.'MOD_DIF'              ='MOT' 'INCONNU' ;
   WTAB.'MAT_DIF'              ='MOT' 'INCONNU' ;
   WTAB.'MTOL'                 ='MOT' 'INCONNU' ;
  'SI' ('NON' ('EXISTE' WTAB  'OPERATEUR'));
     WTAB.'OPERATEUR'          ='MOT' 'INCONNU' ;
  'FINSI' ;
  'SI' ('EXISTE' WTAB 'NON_LOCAL') ;
    'SI' ('EGA' ('TYPE' WTAB.'NON_LOCAL') 'LOGIQUE') ;
       WTAB.'NLOC'             = WTAB.'NON_LOCAL' ;
       WTAB.'NON_LOCAL'        ='MOT' 'INCONNU'   ;
      'SI' WTAB.'NLOC' ;
         WTAB.'NON_LOCAL'      ='MOT' 'MOYE' ;
      'FINSI' ;
    'SINON' ;
      'SI' ('NEG' ('TYPE' WTAB.'NON_LOCAL') 'MOT') ;
         WTAB.'NLOC'           = FAUX ;
         WTAB.'NON_LOCAL'      ='MOT' 'INCONNU' ;
      'FINSI' ;
    'FINS' ;
  'SINON' ;
    WTAB.'NLOC'                = FAUX ;
    WTAB.'NON_LOCAL'           ='MOT' 'INCONNU' ;
  'FINS' ;
   WTAB.'PAS_AJUSTE'           = FAUX ;
   WTAB.'PAS_REDU'             = FAUX ;
   WTAB.'PROCEDURE_CHARMECA'   = FAUX ;
   WTAB.'PROCEDURE_CHARTHER'   = FAUX ;
   WTAB.'PROCEDURE_PARATHER'   = FAUX ;
   WTAB.'PROCEDURE_PERSO1'     = FAUX ;
   WTAB.'PROCEDURE_PERSO2'     = FAUX ;
   WTAB.'PROCEDURE_REEV_MEC'   = FAUX ;
   WTAB.'PROCEDURE_REEV_THE'   = FAUX ;
   WTAB.'PROCESSEURS'          ='MOT' 'INCONNU' ;
   WTAB.'PROJECTION'           = FAUX ;
   WTAB.'RAIDCONST'            = FAUX ;
   WTAB.'RAIDAUGM'             = FAUX ;
   WTAB.'DIFFAUGM'             = FAUX ;
   WTAB.'THERAUGM'             = FAUX ;
   WTAB.'AUTOAUGM'             = FAUX ;
   WTAB.'RAYO'                 = FAUX ;
   WTAB.'RELAXATION_NONCONV'   = 1.   ;
   WTAB.'RENORMALISATION'      = FAUX ;
   WTAB.'STABILITE'            = FAUX ;
   WTAB.'TEMPS_CALCULES'       ='MOT' 'INCONNU' ;
   WTAB.'THM1'                 = FAUX ;
  'SI'('NON' ('EXIS' WTAB 'REAC_GRANDS'));
     WTAB.'REAC_GRANDS'        = 0.1 ;
  'SINO' ;
    'SI' ('NEG' ('TYPE' WTAB . 'REAC_GRANDS') 'FLOTTANT') ;
       WTAB.'REAC_GRANDS'      = 0.1 ;
    'FINS' ;
  'FINSI';
  'SI' ('NON' ('EXISTE' WTAB 'TET_INI')) ;
     WTAB.'TET_INI'            ='MOT' 'INCONNU' ;
  'FINSI';
'FINSI';

************************************************************************
************* REMPLISSAGE DE WTAB EN FONCTION DE PRECED ****************
************************************************************************

*----------- calcul en frequentiel ---------------------
WTAB.'FREQUENTIEL' = 'EGA' ('VALE' 'MODE') 'FREQ' ;

* verification donnee du modele ------------------------------
'SI' ( 'EXISTE' PRECED 'MODELE');
    MO= PRECED.'MODELE';
    TYP1 = 'TYPE' MO;
   'SI' ('NEG' TYP1 'MMODEL  ');
      'ERREUR' 'Le type du MODELE est incorrect';
   'FINSI';
    WTAB.'MO_TOTAL'=MO;
'SINON';
   'ERREUR' 'Il manque la donnee du modele.';
'FINSI';

* verification existence chargement sinon creation  ------------
'SI' ('EXISTE' PRECED 'CHARGEMENT');
   TYP1 = 'TYPE' (PRECED.'CHARGEMENT');
   'SI' ('NEG' TYP1 'CHARGEME');
      'ERREUR' 'Le type du CHARGEMENT est incorrect';
   'FINSI';
   WTAB.'CHARGEMENT'=PRECED.'CHARGEMENT';
'SINON';
* kich : est-ce indispensable ?/chargement deplacement initial
* 'SI' ('NON' ( ('EXISTE' PRECED  'PROCEDURE_CHARMECA')
*      'OU'  ('EXISTE' PRECED  'PROCEDURE_CHARTHER')) );
*   'ERREUR' 'Il manque la donnee du chargement.';
*   'FINSI';
    MAGEO= 'EXTR' MO 'MAILLAGE' ;
    WTAB.'CHARGEMENT' = 'CHAR' 'FARFELU'
    ( 'MANU' 'CHPO' MAGEO 1 'FARF' 0.)
    ( 'EVOL' 'MANU'  ('PROG' 0. 10.e15 ) ('PROG' 0. 10.e15));
'FINSI';
*  verification donnee caracteristiques et initialisation MA
'SI' ('EXISTE' PRECED 'CARACTERISTIQUES');
   MA= PRECED.'CARACTERISTIQUES'  ;
   TYP1 = 'TYPE' MA ;
   'SI' ('NEG' TYP1 'MCHAML  ');
      'ERREUR' 'Le type du champ de materiau est incorrect';
   'FINSI';
   WTAB.'CARACTERISTIQUES'=MA ;
   WTAB.'MA_TOTAL'=MA;
'SINON';
   'ERREUR' 'Il manque la donnee du materiau.';
'FINSI';
* verification type des temps_calcules (il peut ne pas y en avoir)
'SI' ('EXISTE' PRECED 'TEMPS_CALCULES');
   TYP1 = 'TYPE' PRECED.'TEMPS_CALCULES';
   'SI' ('NEG' TYP1 'LISTREEL');
      'ERREUR' 'Le type de TEMPS_CALCULES est incorrect';
   'FINSI';
   WTAB.'TEMPS_CALCULES'= PRECED.'TEMPS_CALCULES';
'FINSI';
*
* Modele FREQUENTIEL : liste automatique temps_calcules
*
'SI' (WTAB.'FREQUENTIEL' 'ET'
                 ('NON' ('EXISTE' PRECED 'TEMPS_CALCULES')));
 l_zf = 'PROG' ; l_ii = 'PROG' 1. 'PAS' 0.3 4. 'PAS' 1. 10. ;
 'SI' ('EXISTE' WTAB.'CARACTERISTIQUES' 'FREQ') ;
  ccfr1 = 'EXCO' WTAB.'CARACTERISTIQUES' 'FREQ' 'NOID' ;
  'SI' ('EGA' ('TYPE' ccfr1) 'MCHAML  ') ;
 ncfr1 = 'EXTR' ccfr1 'NBZO' ;
  'REPE' vfr1 ncfr1 ;
** hypothese 1 modele = 1 mode !!
   f1 = 'EXTR' ccfr1 'FREQ' &vfr1 1 1 ;
*
log_f1 = ('LOG' f1) / ('LOG' 10.) ;

e10_f1 = 'ENTI' log_f1 ;
  'SI' (log_f1 < 0.) ; e10_f1 = e10_f1 - 1 ; 'FINSI' ;
  'SI'((log_f1 - e10_f1) 'EGA' 0.) ; e10_f1 = e10_f1 - 1 ; 'FINSI' ;
p10_f1 = 10. ** e10_f1 ;
l_zf1 = 'PROG' (f1 - (p10_f1/10.)) (f1 - (p10_f1/100.))
      (f1 - (p10_f1/1000.)) (f1 + (p10_f1/1000.)) ;
*      (f1 + (p10_f1/100.)) (f1 + (p10_f1/10.)) ;

          l_i10 = l_ii * p10_f1 ;
   'SI' (('DIME' l_zf) 'EGA' 0) ;
      e10_min = e10_f1 ; e10_max = e10_f1 + 1 ;
     l_zf = 'ORDO' (l_i10 'ET' l_zf1) 'UNIQ' ;
   'SINON' ;
     l_zf0 = l_zf ;
     'SI' ((e10_f1 '>EG' e10_min) 'ET' (e10_f1 < e10_max)) ;
      l_zf = 'ORDO' (l_zf 'ET' l_zf1) 'UNIQ' ;
     'SINON' ;
       'SI' (e10_f1 < e10_min) ;
        e10_u = e10_f1 ;
        'REPE'  b_lz ;
         l_zf0 = l_i10 'ET' l_zf0 ; e10_u = e10_u + 1 ;
         'SI' (e10_u 'EGA' e10_min) ; 'QUIT' b_lz ; 'FINSI'  ;
         l_i10 = l_i10 * 10 ;
        'FIN'  b_lz ;
        e10_min = e10_f1 ;
        l_zf = 'ORDO' (l_zf0 'ET' l_zf1) 'UNIQ' ;
       'FINSI'  ;
       'SI' (e10_f1 '>EG' e10_max) ;
        e10_u = e10_f1 ;
        'REPE'  b_lz ;
         l_zf0 = l_i10 'ET' l_zf0 ; e10_u = e10_u - 1 ;
         'SI' (e10_u < e10_max) ; 'QUIT' b_lz ; 'FINSI'  ;
         l_i10 = l_i10 / 10 ;
        'FIN'  b_lz ;
        e10_max = e10_f1 + 1;
        l_zf = 'ORDO' (l_zf0 'ET' l_zf1) 'UNIQ' ;
       'FINSI'  ;
     'FINSI'  ;
   'FINSI'  ;
  'FIN'  vfr1 ;
  'SINON' ;
  l_zf = l_ii ;
  'FINSI' ;
  WTAB.'TEMPS_CALCULES' = l_zf ;
 'SINON' ;
  WTAB.'TEMPS_CALCULES' = l_ii ;
 'FINSI' ;
'FINSI' ;
'SI' (WTAB.'FREQUENTIEL') ;
  'REPETER' BTFRE ;
    TI = 'EXTRAIRE'  WTAB.'TEMPS_CALCULES' &BTFRE ;
    'SI' (TI '>' 0.D0) ;
       WTAB.'TEMPS0' = TI ;
       'QUITTER' BTFRE ;
    'FINSI' ;
 'FIN' BTFRE ;
'FINSI';
*
*-------   initialisation deltaiter
'SI' ('EXISTE' PRECED 'DELTAITER');
   WTAB.'DELTAITER'=PRECED.'DELTAITER';
'FINSI' ;
*------ existe-t-il une demande de pas automatique?
'SI' ('EXISTE' PRECED 'AUTOMATIQUE');
  WTAB.'AUTOMATIQUE'= PRECED.'AUTOMATIQUE';
'FINSI' ;
*------------ y-a-t-il la donnee FTOL puis MTOL?
'SI' ('EXISTE' PRECED 'FTOL' );
   WTAB.'FTOL' = PRECED.'FTOL';
'FINSI';
'SI' ('EXISTE' PRECED 'MTOL' );
   WTAB.'MTOL' = PRECED.'MTOL';
'FINSI';
*------------ y-a-t-il l'option 'PAS_AJUSTE'?
'SI' ('EXISTE' PRECED 'PAS_AJUSTE');
    WTAB.'PAS_AJUSTE' =  PRECED.'PAS_AJUSTE';
'SINON';
   'SI'  (('NON' ( 'EXISTE' PRECED 'TEMPS_CALCULES' ))
     'ET' ('EGA' ('TYPE' WTAB.'TEMPS_CALCULES') 'MOT')) ;
         WTAB.'PAS_AJUSTE' = VRAI;
        'SI'  ( 'NON' ( 'EXISTE' PRECED 'TEMPS_SAUVES' ));
            'ERREUR'
          'Il manque la donnee des temps a sauver ou a calculer';
        'FINSI';
        WTAB.'TEMPS_CALCULES'= PRECED.'TEMPS_SAUVES';
        WTAB.'TEMPS_SAUVES' = PRECED.'TEMPS_SAUVES';
   'FINSI';
'FINSI';
'SI' WTAB.'AUTOMATIQUE';  WTAB.'PAS_AJUSTE'= FAUX; 'FINSI';

* ---------- verif existence des termps a calculer
'SI' ( 'EGA' WTAB.'TEMPS_CALCULES' 'INCONNU');
    'ERREUR' 'Il manque la donnee des TEMPS_CALCULES ';
'FINSI';

*----------faut-il calculer l'operateur de resolutions?
  'SI' ('NEG' WTAB.'OPERATEUR' 'INCONNU');
     WTAB.'RECAOP' = FAUX ;
  'FINSI' ;
*-----------existe-t-il une procedure chargement mecanique?
'SI'  ('EXISTE' PRECED  'PROCEDURE_CHARMECA');
  WTAB.'PROCEDURE_CHARMECA'= PRECED . 'PROCEDURE_CHARMECA';
'FINSI';

*-----------a-t-on  une option de parallelisme
'SI'  ('EXISTE' PRECED  'PROCESSEURS');
  WTAB.'PROCESSEURS'= 'MOT' PRECED  . 'PROCESSEURS';
'FINSI';

*---------existe-t-il une procedure chargement thermique?
'SI'  ('EXISTE' PRECED  'PROCEDURE_CHARTHER');
  WTAB.'PROCEDURE_CHARTHER'= PRECED . 'PROCEDURE_CHARTHER';
'FINSI';

*----- Existe-t-il une procedure parametres externes en thermique ?
'SI' ('EXISTE' PRECED 'PROCEDURE_PARATHER') ;
  WTAB.'PROCEDURE_PARATHER' = PRECED.'PROCEDURE_PARATHER' ;
'FINSI';

*----------la procedure a utilisee en thermique est-elle precisee
*-----------si non mettre  nonlineaire
WTAB. 'PROCEDURE_THERMIQUE' = 'NONLINEAIRE';
'SI' ('EXISTE' PRECED 'PROCEDURE_THERMIQUE');
   WTAB. 'PROCEDURE_THERMIQUE' = PRECED.'PROCEDURE_THERMIQUE';
'FINSI';
*
*---------- y-a-t-il des elements de capacite constante ? ---------
   'SI' ( 'EXISTE' PRECED 'CAPACITE_CONSTANTE');
       WTAB.'CAPACITE_CONSTANTE'=PRECED.'CAPACITE_CONSTANTE';
       WTAB.'CAPACONST'=VRAI;
   'FINSI';
*---------- y-a-t-il des elements de conductivite constante ? ---------
   'SI' ( 'EXISTE' PRECED 'CONDUCTIVITE_CONSTANTE');
       WTAB.'CONDUCTIVITE_CONSTANTE'=PRECED.'CONDUCTIVITE_CONSTANTE';
       WTAB.'CONDCONST'=VRAI;
   'FINSI';
*
*   quelques initialisations des variables locales
*
* existe-t-il une formulation THERMIQUE CONDUCTION  dans MODELE ?
* existe-t-il une formulation THERMIQUE ADVECTION   dans MODELE ?
* existe-t-il une formulation THERMIQUE CONVECTION  dans MODELE ?
* existe-t-il une formulation THERMIQUE RAYONNEMENT dans MODELE ?
* existe-t-il une formulation THERMIQUE PHASE                   ?
'SI' ('EXISTE' MO 'FORM' 'THERMIQUE');
   'SI'('EXIS' PRECED 'CELSIUS');
      WTAB.'CELSIUS'=PRECED.'CELSIUS';
      WTAB.'TREF'   = 273.15 ;
   'FINSI';
   WTAB.'THE1'=VRAI;
   WTAB.'MOD_THE' = 'EXTR' MO 'FORM' 'THERMIQUE';
   WTAB.'MAT_THE' = 'REDU' MA WTAB.'MOD_THE';
   WTAB.'MOD_T'   = WTAB.'MOD_THE' ;
   WTAB.'MAT_T'   = WTAB.'MAT_THE' ;
   WTAB.'THM1'= 'EXIS' MO 'FORM' 'THERMOHYDRIQUE' ;
   'SI' WTAB.'THM1' ;
     WTAB.'PROCEDURE_THERMIQUE'='NONLINEAIRE';
     WTAB.'MOD_THM' = 'EXTR' MO 'FORM' 'THERMOHYDRIQUE' ;
     WTAB.'MAT_THM' = 'REDU' MA WTAB.'MOD_THM';
     WTAB.'MOD_T'   = WTAB.'MOD_T' 'ET' WTAB.'MOD_THM' ;
     WTAB.'MAT_T'   = WTAB.'MAT_T' 'ET' WTAB.'MAT_THM' ;
   'FINSI' ;
   WTAB.'MOD_TOT' = WTAB.'MOD_T' ;
   WTAB.'MAT_TOT' = WTAB.'MAT_T' ;
   WTAB.'PHASE' = 'EXISTE' WTAB.'MOD_THE' 'MATE' 'PHASE';
   'SI' WTAB.'PHASE';
     WTAB.'PROCEDURE_THERMIQUE'='NONLINEAIRE';
     WTAB.'MOD_PHA' = 'EXTR' WTAB.'MOD_THE' 'MATE' 'PHASE';
     WTAB.'MAT_PHA' = 'REDU' WTAB.'MAT_THE' WTAB.'MOD_PHA';
     WTAB.'BLO_PHASE' = PMAT WTAB.'MOD_PHA';
   'FINSI';
   'SI' ( 'EXISTE' WTAB.'MOD_THE' 'MATE' 'CONVECTION');
       WTAB.'MOD_CON' ='EXTR' WTAB.'MOD_THE' 'MATE' 'CONVECTION';
       WTAB.'MAT_CON' ='REDU' WTAB.'MAT_TOT' WTAB.'MOD_CON';
       WTAB.'CONVECTION'=VRAI;
   'FINSI';
   'SI' ( 'EXISTE' WTAB.'MOD_THE' 'MATE' 'RAYONNEMENT');
       WTAB.'RAYO'=VRAI;
       WTAB.'MOD_RAY' ='EXTR' WTAB.'MOD_THE' 'MATE' 'RAYONNEMENT';
       WTAB.'MAT_RAY' ='REDU' WTAB.'MAT_TOT' WTAB.'MOD_RAY';
       WTAB.'RAYONNEMENT'='PRRA'  WTAB.'MOD_RAY';
   'FINSI';
   'SI' ( 'EXISTE' WTAB.'MOD_THE' 'MATE' 'ADVECTION');
       WTAB.'MOD_ADV' ='EXTR' WTAB.'MOD_THE' 'MATE' 'ADVECTION';
       WTAB.'MAT_ADV' ='REDU' WTAB.'MAT_TOT' WTAB.'MOD_ADV';
       WTAB.'ADVECTION'=VRAI;
   'FINSI';
   'SI' ( 'EXISTE' WTAB.'MOD_THE' 'MATE' 'CONDUCTION');
       WTAB.'MOD_COND'= 'EXTR' WTAB.'MOD_THE' 'MATE' 'CONDUCTION';
       WTAB.'MAT_COND'= 'REDU' WTAB.'MAT_TOT' WTAB.'MOD_COND';
       WTAB.'CONDUCTION'=VRAI;
    'FINSI';
    'SI' ( 'EXIS' PRECED 'BLOCAGES_THERMIQUES' );
       WTAB. 'BLOCAGES_THERMIQUES'=PRECED. 'BLOCAGES_THERMIQUES';
    'FINSI';

'SINON' ;
  'SI' ('EXISTE' MO 'FORM' 'THERMOHYDRIQUE');
    'SI'('EXIS' PRECED 'CELSIUS');
       WTAB.'CELSIUS'=PRECED.'CELSIUS';
       WTAB.'TREF'   = 273.15 ;
    'FINSI';
    WTAB.'THE1' = FAUX;
    WTAB.'THM1' = VRAI;
    WTAB.'PROCEDURE_THERMIQUE'='NONLINEAIRE';
    WTAB.'MOD_THM' = 'EXTR' MO 'FORM' 'THERMOHYDRIQUE';
    WTAB.'MAT_THM' = 'REDU' MA WTAB.'MOD_THM';
    WTAB.'MOD_T'   = WTAB.'MOD_THM' ;
    WTAB.'MAT_T'   = WTAB.'MAT_THM' ;
    WTAB.'MOD_TOT' = WTAB.'MOD_T' ;
    WTAB.'MAT_TOT' = WTAB.'MAT_T' ;
    WTAB.'PHASE' = FAUX ;
    'SI' ('EXISTE' MO 'MATE' 'CONVECTION');
      WTAB.'MOD_CON' = 'EXTR' MO 'MATE' 'CONVECTION';
      WTAB.'MAT_CON'='REDU' MA WTAB.'MOD_CON';
      WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_CON';
      WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_CON';
      WTAB.'CONVECTION' = VRAI;
    'FINSI';
    'SI' ('EXISTE' MO 'MATE' 'RAYONNEMENT');
      WTAB.'RAYO'=VRAI;
      WTAB.'MOD_RAY'= 'EXTR'  MO 'MATE' 'RAYONNEMENT';
      WTAB.'MAT_RAY' = 'REDU' MA WTAB.'MOD_RAY';
      WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_RAY';
      WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_RAY';
    'FINSI';
    'SI' ('EXISTE' MO 'MATE' 'CONDUCTION');
      WTAB.'MOD_COND' = 'EXTR' MO 'MATE' 'CONDUCTION';
      WTAB.'MAT_COND'='REDU' MA WTAB.'MOD_COND';
      WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_COND';
      WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_COND';
      WTAB.'CONVECTION' = VRAI;
    'FINSI';
    'SI' ('EXISTE' MO 'MATE' 'ADVECTION');
      WTAB.'MOD_ADV' = 'EXTR' MO 'MATE' 'ADVECTION';
      WTAB.'MAT_ADV'='REDU' MA WTAB.'MOD_ADV';
      WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_ADV';
      WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_ADV';
      WTAB.'ADVECTION' = VRAI;
    'FINSI';
    'SI' ( 'EXIS' PRECED 'BLOCAGES_THERMIQUES' );
       WTAB. 'BLOCAGES_THERMIQUES'=PRECED. 'BLOCAGES_THERMIQUES';
    'FINSI';
  'FINSI';
'FINSI';

* FOR_THER = VRAI : on doit resoudre de la thermique/THM : pas_defa
WTAB.'FOR_THER' = WTAB.'THE1' 'OU' WTAB.'THM1' ;

* Initialisation modele DIFFUSION :                                   *
* On rajoute la formulation diffusion a la thermique pour TRANSNON :  *
'SI' ('EXIS' MO 'FORM' 'DIFFUSION') ;
   WTAB.'FOR_DIFF' = VRAI ;
   WTAB.'MOD_DIF'  ='EXTR' MO 'FORM' 'DIFFUSION' ;
   WTAB.'MAT_DIF'  ='REDU' MA WTAB.'MOD_DIF'     ;
  WTAB . 'PROCEDURE_THERMIQUE' = 'NONLINEAIRE';

  'SI' WTAB.'THE1' ;
    WTAB.'MOD_THE' = WTAB.'MOD_THE' 'ET' WTAB.'MOD_DIF' ;
    WTAB.'MAT_THE' = WTAB.'MAT_THE' 'ET' WTAB.'MAT_DIF' ;
    WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_DIF' ;
    WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_DIF' ;

  'SINON' ;
    WTAB.'MOD_THE' = WTAB.'MOD_DIF' ;
    WTAB.'MAT_THE' = WTAB.'MAT_DIF' ;
    'SI' WTAB.'THM1' ;
      WTAB.'MOD_TOT' = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_DIF' ;
      WTAB.'MAT_TOT' = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_DIF' ;
    'SINON' ;
        WTAB.'MOD_TOT' = WTAB.'MOD_DIF' ;
        WTAB.'MAT_TOT' = WTAB.'MAT_DIF' ;
    'FINSI' ;
  'FINSI' ;

  'SI' ('EXIS' PRECED 'BLOCAGES_DIFFUSIONS') ;
    WTAB . 'BLOCAGES_DIFFUSIONS' = PRECED .  'BLOCAGES_DIFFUSIONS';
  'FINSI' ;
'FINSI' ;

* Modele Metallurgie (T.L. en juin 2018)
'SI' ('EXIS' MO 'FORM' 'METALLURGIE');
  WTAB.'MOD_MET'    ='EXTR' MO 'FORM' 'METALLURGIE';
  WTAB.'MAT_MET'    ='REDU' MA WTAB.'MOD_MET';
  WTAB.'FOR_METALLU'= VRAI ;
  WTAB.'MOD_TOT'    = WTAB.'MOD_TOT' 'ET' WTAB.'MOD_MET' ;
  WTAB.'MAT_TOT'    = WTAB.'MAT_TOT' 'ET' WTAB.'MAT_MET' ;
'FINS';

*                                                                      *
* Toutes les inconnues passees a TRANSNON :
'SI' ('NEG' WTAB.'MOD_TOT' 'INCONNU') ;
  WTAB.'PRIM_TOT' ='EXTR' WTAB.'MOD_TOT' 'DEPL' ;
  WTAB.'DUAL_TOT' ='EXTR' WTAB.'MOD_TOT' 'FORC' ;
  WTAB.'PRIM_TOT' = WTAB.'PRIM_TOT' 'ET' ('MOTS' 'LX') ;
  WTAB.'DUAL_TOT' = WTAB.'DUAL_TOT' 'ET' ('MOTS' 'FLX') ;
'FINS' ;
'SI' WTAB . 'FOR_THER' ;
  WTAB.'PRIM_T' ='EXTR' WTAB.'MOD_T' 'DEPL' ;
  WTAB.'DUAL_T' ='EXTR' WTAB.'MOD_T' 'FORC' ;
  WTAB.'PRIM_T' = WTAB.'PRIM_T' 'ET' ('MOTS' 'LX') ;
  WTAB.'DUAL_T' = WTAB.'DUAL_T' 'ET' ('MOTS' 'FLX') ;
'FINS' ;
'SI' WTAB . 'FOR_DIFF' ;
  WTAB.'PRIM_DIF' ='EXTR' WTAB.'MOD_DIF' 'DEPL' ;
  WTAB.'DUAL_DIF' ='EXTR' WTAB.'MOD_DIF' 'FORC' ;
  WTAB.'PRIM_DIF' = WTAB.'PRIM_DIF' 'ET' ('MOTS' 'LX') ;
  WTAB.'DUAL_DIF' = WTAB.'DUAL_DIF' 'ET' ('MOTS' 'FLX') ;
'FINS' ;
*                                                                     *
*---------------- Formulations mecanique / poreux / contact -----
*                                                                     *
NOLIUTIL = FAUX ;
'SI' ('EXISTE' MO 'FORM' 'MECANIQUE');
   WTAB.'MEC1'=VRAI;
   WTAB.'MOD_MEC' = 'EXTR' MO 'FORM' 'MECANIQUE';
   WTAB.'MAT_MEC' = 'REDU' MA  WTAB.'MOD_MEC';
'FINSI';
'SI' ('EXIS' MO 'FORM' 'CONTACT' ) ;
   WTAB.'CONTACT' = VRAI ;
   WTAB.'GRANDS_DEPLACEMENTS' = VRAI;
   MODCONTA='EXTR' MO  'FORM' 'CONTACT';
   WTAB.'MODCONTA'=MODCONTA;
   MATCONTA = 'REDU' MA  MODCONTA      ;
   NBCOMP = 'EXTR' MATCONTA 'COMP' ;
   'SI' ('NEG' ('DIME' NBCOMP) 0) ;
     WTAB.'MATCONTA' = MATCONTA ;
*    A t-on la composante ADHE?
     IADH = 'EXIS' ('EXTR' MATCONTA 'COMP') 'ADHE' ;
     WTAB.'ADHERENCE' = IADH ;
   'FINSI' ;
   'SI' ( ('EXIS'  MODCONTA  'MATE' 'COULOMB') 'OU'
          ('EXIS'  MODCONTA  'MATE' 'FROCABLE') ) ;
     WTAB.'CAFROTTE' = VRAI ;
*    WTAB.'MOD_FRO' = 'EXTR' MO 'COMP' 'FROTTANT';
*    WTAB.'MAT_FRO'= 'REDU' MA  WTAB.'MOD_FRO' ;
   'FINSI';
'FINSI';
'SI' ('EXISTE' MO 'FORM' 'POREUX');
   WTAB.'POR1'=VRAI;
   WTAB.'MOD_POR' = 'EXTR' MO 'FORM' 'POREUX';
   WTAB.'MAT_POR' = 'REDU' MA  WTAB.'MOD_POR';
   WTAB.'MAI_POR' = 'EXTR' WTAB.'MOD_POR' 'MAIL';
   WTAB.'MOT_POR' = 'MOTS' 'FP' 'FPQ' 'FTP' ;
'FINSI';
'SI' ('EXIS' MO 'FORM' 'CHARGEMENT') ;
  WTAB.'MOD_CHA' = 'EXTR' MO 'FORM' 'CHARGEMENT' ;
  WTAB.'MAT_CHA' = 'REDU' MA WTAB.'MOD_CHA' ;
  'SI' ('EXIS' WTAB.'MOD_CHA' 'MATE' 'PRESSION') ;
    WTAB.'MOD_PRE' = 'EXTR' (WTAB.'MOD_CHA') 'COMP' 'PRESSION' ;
*   A t-on un MATE associe?
    MATZ = 'REDU' MA WTAB.'MOD_PRE' ;
    'SI' ('NEG' ('DIME' ('EXTR' MATZ 'COMP')) 0) ;
      WTAB.'MAT_PRE' = MATZ ;
    'FINSI' ;
*   Chargement de pression
    'SI' ('NON' ('EXIS' (WTAB.'CHARGEMENT') 'PRES')) ;
      'ERREUR' 'Il manque la donnee d un chargement de pression';
      'ERREUR' '-> voir la notice de l operateur CHAR';
    'SINON' ;
*      On verifie qu'il y a un chargement par modele de presion
       NBMOP = ('DIME' ('EXTR' WTAB.'MOD_PRE' 'ZONE')) / 2 ;
       NBCHA = 'DIME' ('EXTR' WTAB.'CHARGEMENT' 'PRES') ;
*      'SI' ('EGA' NBMOP NBCHA) ;
*        'ERREUR' 'Un modele n a pas de chargement de pression';
*        'ERREUR' 'associe' ;
*      'FINSI' ;
    'FINSI' ;
  'FINSI' ;
'FINSI' ;

* FOR_MECA = VRAI : on doit resoudre de la MECANIQUE : pas_defa
WTAB . 'FOR_MECA' = WTAB . 'MEC1' 'OU' WTAB . 'POR1' 'OU'
                    ('EXIS' WTAB 'MOD_CHA') ;
*                                                                     *
*----------- Test sur les differentes formulation du modele -------
*                                                                     *
'SI' ('NON' (WTAB.'FOR_MECA' 'OU' WTAB.'FOR_THER' 'OU' WTAB.'FOR_DIFF')) ;
   'ERREUR' 'Le modele ne correspond a aucune formulation valable';
'FINSI';

'SI' ('EXISTE' MO 'FORM' 'LIAISON');
   WTAB.'MOD_LIA' = 'EXTR' MO 'FORM' 'LIAISON' ;
   WTAB.'MAT_LIA' = 'REDU' MA WTAB.'MOD_LIA' ;
'FINSI' ;
*---------- Calcul purement thermique / diffusion ? ou couplage? -------
'SI' (WTAB.'FOR_THER' 'OU' WTAB.'FOR_DIFF');
  'SI'  WTAB.'FOR_MECA' ;
     WTAB.'COUPLAGE' = VRAI;
    'SI' ('EXIS' PRECED 'PROJECTION');
       WTAB.'PROJECTION'=PRECED.'PROJECTION';
    'FINSI';
  'SINON';
     WTAB.'PAS_AJUSTE'=FAUX;
  'FINSI';
'FINSI';

*------------- existe-t-il un chargement thermique ? -----------
 WTAB.'CHAR_THE' = ('EXISTE' (WTAB.'CHARGEMENT') 'T');

*------------ existe-t-il un chargement en deformations ?  --------
'SI' ('EXISTE' (WTAB.'CHARGEMENT') 'DEFI');
   WTAB.'CHAR_DEFI' = VRAI;
'FINSI';

*------------ existe-t-il un chargement en pression suiveuse ?  --------
'SI' ('EXISTE' WTAB 'MOD_PRE');
   WTAB.'CHAR_PRES' = VRAI;
'FINSI';

*-------- y a t-il de la dynamique ---------------------
'SI' (  'EXISTE' PRECED 'DYNAMIQUE') ;
   WTAB.'DYNAMIQUE' = PRECED.'DYNAMIQUE';

*--------- et de l'amortissement
  'SI' ('EXISTE' PRECED 'AMORTISSEMENT' );
     WTAB.'AMORTISSEMENT' = 'EXTR' PRECED.'AMORTISSEMENT' 'RIGI' 'NOMU';
  'FINSI';
'FINSI';

*-------- y a t-il de la liaison persistante ? ---------
'SI' ( 'EXISTE' PRECED 'LIAISON_PERSISTANTE' ) ;
   WTAB.'LIAISON_PERSISTANTE' = PRECED.'LIAISON_PERSISTANTE';
'FINSI';

*-- Dans le cas de la formulation POREUX y-a-t-il consolidation ? --
*--- Dans ce cas il faut donner la matrice de permeabilite et ne ---
*--------------------- pas etre en dynamique -----------------------
'SI' ('EXISTE' PRECED 'CONSOLIDATION')  ;
    WTAB.'CONSOLIDATION' =  PRECED.'CONSOLIDATION'  ;
'FINSI';
'SI' WTAB.'POR1';
   'SI' (WTAB.'CONSOLIDATION');
       'SI' ('NON' ('EXISTE' PRECED 'PERMEABILITE'));
          'ERREUR' 'Il faut donner la matrice de permeabilite';
        'SINON';
           WTAB.'PERMEABILITE'=PRECED.'PERMEABILITE';
       'FINSI';
       'SI' (  'EXISTE' PRECED 'TETA' ) ;
          WTAB.'TETA' = PRECED.'TETA';
       'FINSI';
       'SI' ( WTAB.'DYNAMIQUE' );
          'ERREUR' ' On ne peut pas etre en dynamique.' ;
       'FINSI';
   'FINSI';
'FINSI';

*------ Est on en convergence forcee ? ----------------------------
'SI' ( 'EXISTE' PRECED 'CONVERGENCE_FORCEE');
   WTAB.'CONVERGENCE_FORCEE'= PRECED.'CONVERGENCE_FORCEE';
'SINON';
    'SI' ( 'NON'  WTAB.'AUTOMATIQUE');
        WTAB.'CONVERGENCE_FORCEE' = VRAI;
    'FINSI';
'FINSI';

*------ A t'on un predicteur? ----------------------
'SI' ( 'EXISTE' PRECED 'PREDICTEUR');
   WTAB.'PREDICTEUR'= 'MOT' PRECED.'PREDICTEUR';
'FINSI';

*------ test stabilite ----------------------
'SI' ( 'EXISTE' PRECED 'STABILITE');
 'SI' ('EGA' PRECED.'STABILITE' VRAI);
   WTAB.'STABILITE'= VRAI;
 'SINON';
   WTAB.'STABILITE'= FAUX;
 'FINSI';
'FINSI';

*------ LINESEARCH ----------------------
'SI' ( 'EXISTE' PRECED 'LINESEARCH');
 'SI' ('EGA' PRECED.'LINESEARCH' VRAI);
   WTAB.'LINESEARCH'= VRAI;
   WTAB.'GRANDS_DEPLACEMENTS' = VRAI;
 'SINON';
   WTAB.'LINESEARCH'= FAUX;
 'FINSI';
'FINSI';

*------ INITIALISATION ----------------------
'SI' ( 'EXISTE' PRECED 'INITIALISATION');
   WTAB.'INITIALISATION' = PRECED.'INITIALISATION';
'FINSI';
*------ RENORMALISATION ----------------------
'SI' ( 'EXISTE' PRECED 'RENORMALISATION');
   WTAB.'RENORMALISATION' = PRECED.'RENORMALISATION';
'FINSI';
*------ CONVERGENCE_MONOTONE ----------------------
'SI' ( 'EXISTE' PRECED 'CONVERGENCE_MONOTONE');
   WTAB.'CONVERGENCE_MONOTONE' = PRECED.'CONVERGENCE_MONOTONE';
'FINSI';

*------------- MAXDEFOR -------------
'SI' (WTAB.'CONVERGENCE_FORCEE' 'OU' WTAB.'RENORMALISATION');
    WTAB.'MAXITERATION' = 250;
   'SI' ('EXISTE' PRECED 'MAXDEFOR');
        WTAB.'MAXDEFOR'=PRECED.'MAXDEFOR' ;
   'FINSI';
   'SI' WTAB.'CONVERGENCE_FORCEE';
      'SI' ('EXISTE' PRECED 'RELAXATION_NONCONV');
           WTAB.'RELAXATION_NONCONV'=PRECED.'RELAXATION_NONCONV' ;
      'FINSI';
   'FINSI';
'FINSI';

*----- est-on en convergence MEC_THE?   -------------
'SI'  ('EXISTE' PRECED 'CONVERGENCE_MEC_THE');
   WTAB.'CONVERGENCE_MEC_THE'=PRECED.'CONVERGENCE_MEC_THE';
'FINSI';
'SI' WTAB.'CONVERGENCE_MEC_THE';
   WTAB.'AUTOMATIQUE'=FAUX;
   WTAB.'CONVERGENCE_FORCEE' =FAUX;
   'SI'(WTAB.'PAS_AJUSTE');
   'ERREUR'  'Options CONVERGENCE_MEC_THE et PAS_AJUSTE incompatibles';
   'FINSI';
   'SI' ('EXISTE' PRECED 'CRITERE_COHERENCE') ;
     WTAB.'CRITERE_COHERENCE'=PRECED.'CRITERE_COHERENCE' ;
   'SINO' ;
     'SI' ('EXISTE' PRECED 'PRECISION') ;
       WTAB.'CRITERE_COHERENCE' = PRECED.'PRECISION' ;
     'SINO' ;
       WTAB.'CRITERE_COHERENCE' = WTAB.'PRECISION' ;
     'FINS' ;
   'FINSI' ;
   'SI' ('EXISTE' PRECED 'PROCEDURE_CONV') ;
      WTAB.'PROCEDURE_CONV'=PRECED.'PROCEDURE_CONV' ;
   'FINSI' ;
   'SI' ('EXISTE' PRECED 'NB_BOTH');
     WTAB.'BOU_METH'=PRECED.'NB_BOTH';
   'SINON';
     WTAB.'BOU_METH'=10;
   'FINSI';
'FINSI';

*---- Existe-t-il une procedure de reactualisation de
*---- donnees materiaux
'SI' ('EXISTE' PRECED 'PROCEDURE_REEV_MEC');
    WTAB.'PROCEDURE_REEV_MEC'=PRECED.'PROCEDURE_REEV_MEC' ;
'FINSI' ;
'SI' ('EXISTE' PRECED 'PROCEDURE_REEV_THE');
    WTAB.'PROCEDURE_REEV_THE' =PRECED.'PROCEDURE_REEV_THE' ;
'FINSI' ;

*-------  Initialisation du nombre maximum de sous-pas autorisees ------
'SI' ( 'EXISTE' PRECED 'MAXSOUSPAS');
   WTAB.'MAXSOUSPAS' = PRECED.'MAXSOUSPAS' ;
'FINSI';

*-------  Initialisation du nombre maximum d'iterations autorisees ----
'SI' ( 'EXISTE' PRECED 'MAXITERATION') ;
   WTAB.'MAXITERATION' = PRECED.'MAXITERATION';

'SINON';
   'SI' ((WTAB.'AUTOMATIQUE') 'OU' (WTAB.'PAS_AJUSTE')) ;
      WTAB.'MAXITERATION' = 250;
   'FINSI';
'FINSI';

*----------  initialisation nombre de sous-increment
'SI' ('EXIS' PRECED 'SOUS-INCREMENT' );
      WTAB.'SOUS-INCREMENT'=PRECED.'SOUS-INCREMENT';
'FINSI';

*----------------------blocages mecaniques -------------------
'SI' ('EXIS' PRECED 'BLOCAGES_MECANIQUES');
    WTAB.'BLOCAGES_MECANIQUES'= PRECED.'BLOCAGES_MECANIQUES';
'SINON';
    WTAB.'BLOCAGES_MECANIQUES'= 'VIDE' 'RIGIDITE'/'RIGIDITE';
'FINSI';

*---------------------- definit on la reactualisation de la matrice
'SI' ('EXIS' PRECED 'REAC_GRANDS');
  'SI' ('EGA' ('TYPE' PRECED . 'REAC_GRANDS') 'FLOTTANT') ;
     WTAB.'REAC_GRANDS' = PRECED.'REAC_GRANDS';
  'FINSI';
'FINSI';

*--- y-a-t-il liste des temps ou on doit garder : les resultats ?
* --   les sauvegardes les fantomiser
*-------------- Par default on les sauve tous --------------------

'SI' ( 'EXISTE' PRECED 'TEMPS_SAUVES' );
   WTAB.'IPRESU'=PRECED.'TEMPS_SAUVES';
'SINON';
   WTAB.'IPRESU'= WTAB.'TEMPS_CALCULES';
'FINSI';
WTAB.'IPTIME'= WTAB.'TEMPS_CALCULES';
'SI' ( 'EXISTE' PRECED 'TEMPS_SAUVEGARDES');
   WTAB.'ISAUVEGL'=VRAI; WTAB.'ISAUVEGA'=PRECED.'TEMPS_SAUVEGARDES';
'FINSI';
'SI' ( 'EXISTE' PRECED 'ECONOMIQUE');
    WTAB.'LECONOMI'=PRECED. 'ECONOMIQUE';
'FINSI';

'SI' ( 'EXIS' PRECED 'MES_SAUVEGARDES');
    TABSAUV = PRECED .'MES_SAUVEGARDES';
    WTAB.'TABSAUV' = TABSAUV ;
   'SI' ('NON' ( 'EXIS' TABSAUV 'DEFIN'));
      WTAB.'TABSAUV'.'DEFIN' = FAUX;
   'FINSI';
   'SI' ('NON' ( 'EXIS' TABSAUV 'DEFTO'));
      WTAB.'TABSAUV'.'DEFTO' = FAUX;
   'FINSI';
'SINON';
    WTAB.'TABSAUV'='TABL' ;
    WTAB.'TABSAUV'.'DEFIN' = FAUX;
    WTAB.'TABSAUV'.'DEFTO' = FAUX;
'FINSI';
LOGERR1='DANS' 'QUEL' wtab.'IPRESU' wtab.'IPTIME';
LOGERR2=VRAI;
'SI' WTAB.'ISAUVEGL';
   LOGERR2= 'DANS' 'QUEL' WTAB.'ISAUVEGA' wtab.'IPTIME';
'FINSI';
'SI' ('NON' ( LOGERR1 'ET' LOGERR2));
  'ERRE' 1013;
'FINSI';

*                                                                      *
* Precision demandee par l'utilisateur :
'SI' ('EXISTE' PRECED 'PRECISION') ;
  WTAB.'PRECISION' = PRECED.'PRECISION' ;
'FINS' ;
*                                                                      *
*--------  Existe-t-il des procedure utilisateur perso?
'SI' ('EXISTE' PRECED 'PROCEDURE_PERSO1');
   WTAB.'PROCEDURE_PERSO1'=PRECED.'PROCEDURE_PERSO1';
'FINSI';
'SI' ('EXISTE' PRECED 'PROCEDURE_PERSO2');
   WTAB.'PROCEDURE_PERSO2'=PRECED.'PROCEDURE_PERSO2';
'FINSI';



************************************************************************
*--Verifications et initialisations supplementaires pour la THERMIQUE--*
************************************************************************
'SI' WTAB.'FOR_THER' ;
  'SI'  WTAB.'RAYO' ;
    'SI' ('NON' ('EXISTE' (PRECED.'CARACTERISTIQUES') 'EMIS'));
       'ERREUR' ' Il manque la donnee des facteurs d emissivite';
    'FINSI';
    'SI'('EXISTE' PRECED 'CTE_STEFAN_BOLTZMANN') ;
       WTAB.'CTE_STEFAN_BOLTZMANN'=PRECED.'CTE_STEFAN_BOLTZMANN';
      'SAUT' 1 'LIGN' ;
      'MESS' 'ATTENTION ! Constante de Stefan-Boltzmann en unites SI';
      'MESS' '            soit ' (WTAB . 'CTE_STEFAN_BOLTZMANN') ;
    'FINSI' ;
  'FINSI';

  'SI'  WTAB.'PHASE';
      'SI' ('NON' ('EXISTE' (PRECED.'CARACTERISTIQUES') 'QLAT'));
         'ERREUR' 'Il manque la donnee de la chaleur latente QLAT';
      'FINSI';
      'SI' ('NON' ('EXISTE' (PRECED.'CARACTERISTIQUES') 'TPHA'));
         'ERREUR' 'Il manque la donnee de la temperature TPHA';
      'FINSI';
  'FINSI';

  'SI' ('EXIS'  PRECED  'RELAXATION_THETA' );
       WTAB.'RELAXATION_THETA'=PRECED.'RELAXATION_THETA' ;
  'FINSI';
  'SI' ('EXIS'  PRECED  'RELAXATION_DUPONT');
      WTAB.'RELAXATION_DUPONT'=  PRECED . 'RELAXATION_DUPONT' ;
  'FINSI';


  'SI' ( 'EXISTE' PRECED 'THERMIQUE_AUGMENTEE');
     WTAB.'THERAUGM' =VRAI;
     WTAB.'THERMIQUE_AUGMENTEE'=PRECED.'THERMIQUE_AUGMENTEE';
     RR= PRECED.'THERMIQUE_AUGMENTEE';
     MNOMU = ('EXTR' RR 'MAILLAGE' 'NOMU') 'NBNO';
     MAVMU = ('EXTR' RR 'MAILLAGE'       ) 'NBNO';
    'SI' ( MNOMU 'NEG' MAVMU) ;
        'ERREUR' 'Il ne faut pas de multiplicateur dans THERMIQUE_AUGMENTEE';
    'FINSI';
  'FINSI';
'FINSI';


************************************************************************
*--Verifications et initialisations supplementaires pour la DIFFUSION--*
************************************************************************
'SI' WTAB.'FOR_DIFF' ;
  'SI' ('EXIS' PRECED 'RELAXATION_THETA' );
     WTAB.'RELAXATION_THETA'=PRECED.'RELAXATION_THETA' ;
  'FINSI';
  'SI' ('EXIS'  PRECED  'RELAXATION_DUPONT');
      WTAB.'RELAXATION_DUPONT'=  PRECED . 'RELAXATION_DUPONT' ;
  'FINSI';
  'SI' ( 'EXISTE' PRECED 'DIFFUSION_AUGMENTEE');
      WTAB.'DIFFAUGM' =VRAI;
      WTAB.'DIFFUSION_AUGMENTEE'=PRECED.'DIFFUSION_AUGMENTEE';
      RR= PRECED.'DIFFUSION_AUGMENTEE';
      MNOMU = ('EXTR' RR 'MAILLAGE' 'NOMU') 'NBNO';
      MAVMU = ('EXTR' RR 'MAILLAGE'       ) 'NBNO';
      'SI' ( MNOMU 'NEG' MAVMU) ;
          'ERREUR'
       'Il ne faut pas de multiplicateur dans DIFFUSION_AUGMENTEE';
      'FINSI';
  'FINSI';
'FINSI';



************************************************************************
*--Verifications et initialisations supplementaires pour la MECANIQUE--*
************************************************************************
'SI' WTAB.'FOR_MECA' ;
*--------------- Initialisation des differentes precisions ------------
   'SI' ('EXISTE' PRECED 'PRECISION') ;
      WTAB.'PRECFLEX'  = PRECED.'PRECISION' ;
   'FINSI';
   'SI' ('EXISTE' PRECED 'PRECFLEX') ;
      WTAB.'PRECFLEX' = PRECED.'PRECFLEX';
   'FINSI';
   'SI' ('EXISTE' PRECED 'PRECDECHARGE') ;
      WTAB.'PRECDECHARGE' = PRECED.'PRECDECHARGE' ;
   'FINSI';
*-------------- y-a-t-il iteration ktangent ? -----------

   'SI' (  'EXISTE' PRECED 'K_TANGENT');
      WTAB.'K_TANGENT' = PRECED.'K_TANGENT';
   'FINSI';
   'SI' ('EXISTE' PRECED 'K_TANGENT_PERT') ;
      WTAB.'K_TANGENT_PERT' = PRECED.'K_TANGENT_PERT' ;
      'SI' WTAB.'K_TANGENT_PERT' ;
         WTAB.'K_TANGENT' = VRAI ;
      'FINSI' ;
   'FINSI' ;
   'SI' ('EXISTE' PRECED 'K_TANG_PERT_C1') ;
      WTAB.'K_TANG_PERT_C1' = PRECED.'K_TANG_PERT_C1' ;
   'FINSI' ;
   'SI' ('EXISTE' PRECED 'K_TANG_PERT_C2') ;
      WTAB.'K_TANG_PERT_C2' = PRECED.'K_TANG_PERT_C2' ;
   'FINSI' ;
*  Par defaut, C2 = C1/100 (C1 donne ou par defaut 1.D-3)
   'SI' ('EGA' WTAB.'K_TANG_PERT_C2' 'INCONNU') ;
      WTAB.'K_TANG_PERT_C2' = WTAB.'K_TANG_PERT_C1' / 1.D+02 ;
   'FINSI' ;
* Matrice tangente a utiliser pour iteration 0 dans UNPAS
* Par defaut, matrice tangente precedemment calculee si existe
   'SI' ('EXISTE' PRECED 'K_TANGENT_ITER0') ;
      WTAB.'K_TANGENT_ITER0' = PRECED.'K_TANGENT_ITER0' ;
   'FINSI' ;
* Utilisation matrice tangente symetrisee
   'SI' ('EXISTE' PRECED 'K_TANGENT_SYME') ;
      WTAB.'K_TANGENT_SYME' = PRECED.'K_TANGENT_SYME' ;
   'FINSI' ;
   'SI' (  'EXISTE' PRECED 'NITER_KTANGENT');
      WTAB.'NITER_KTANGENT' =PRECED.'NITER_KTANGENT' ;
   'FINSI';
*-------------y-a-t-il du substepping?-----------
   'SI' (  'EXISTE' PRECED 'SUBSTEPPING');
      WTAB.'SUBSTEPPING'=PRECED.'SUBSTEPPING' ;
   'FINSI';
   'SI' (  'EXISTE' PRECED 'PRECISINTER');
      WTAB.'PRECISINTER' = PRECED.'PRECISINTER';
   'FINSI';
   'SI' ( 'EXISTE' PRECED 'NITERINTER_MAX');
      WTAB.'NITERINTER_MAX' =PRECED.'NITERINTER_MAX';
   'FINSI';
   'SI' ( 'EXISTE' PRECED  'NMAXSUBSTEPS');
      WTAB.'NMAXSUBSTEPS'=PRECED.'NMAXSUBSTEPS';
   'FINSI';
*------------- y-a-t-il du grand deplacement ?
   'SI' ( 'EXISTE' PRECED 'GRANDS_DEPLACEMENTS' );
      'SI' (WTAB.'CONTACT' et (non PRECED.'GRANDS_DEPLACEMENTS'));
        'MESS' 'Un calcul avec un modele de CONTACT doit necessairement'
        'MESS' 'etre realise en GRANDS_DEPLACEMENTS !';
        'MESS' 'Arret de pasapas';
        'ERRE' 21;
      'FINSI';
      WTAB.'GRANDS_DEPLACEMENTS' = PRECED.'GRANDS_DEPLACEMENTS';
      'SI'  (WTAB.'GRANDS_DEPLACEMENTS');
        WTAB.'K_SIGMA'=VRAI;
*       Par defaut, sauvegarde des def. totales en grands deplacements
        'SI' ('NON' ('EXIS' PRECED 'MES_SAUVEGARDES'));
          WTAB.'TABSAUV'.'DEFTO'= VRAI ;
        'FINS' ;
      'FINSI';
   'FINSI';
* ---------- y-a-t-il une demande sur K_SIGMA ?
   'SI' (  'EXISTE' PRECED 'K_SIGMA');
      WTAB.'K_SIGMA' = PRECED.'K_SIGMA';
   'FINSI';
* ---------- y-a-t-il une demande sur LAGRANGIEN ?
   'SI' (  'EXISTE' PRECED 'LAGRANGIEN');
     'SI' ('EGA' preced.'LAGRANGIEN' 'TOTAL');
      WTAB.'LAG_TOT' = VRAI;
     'SINON';
       'SI' ('EGA' preced.'LAGRANGIEN' 'REACTUALISE');
         WTAB.'LAG_TOT' = FAUX;
       'SINON';
      ERRE 'Seules les valeurs TOTAL et REACTUALISE sont permises';
       'FINSI';
     'FINSI';
   'FINSI';
*----------y-a-t-il demande de la MAN?
   'SI' ( 'EXISTE' PRECED 'MAN' );
      WTAB.'MAN'= PRECED.'MAN';
   'SINON';
     WTAB.'MAN'=FAUX;
   'FINSI';
*--------  initialisations
   'SI' (WTAB.'MEC1' 'ET' WTAB.'POR1') ;
     MO_TOT = WTAB.'MOD_MEC' 'ET' WTAB.'MOD_POR';
   'SINON';
     'SI' WTAB.'MEC1';
        MO_TOT = WTAB.'MOD_MEC';
     'FINSI';
     'SI' WTAB.'POR1';
        MO_TOT = WTAB.'MOD_POR';
     'FINSI';
   'FINSI';

   'SI' ('EXISTE' WTAB 'MOD_LIA') ;
       MO_TOT = MO_TOT 'ET' WTAB.'MOD_LIA';
   'FINSI' ;


*--------  Initialisation de 'TEMPERATURE_REFERENCE'
   'SI' ('EXIS' PRECED 'TEMPERATURE_REFERENCE') ;
      WTAB.'TEMPERATURE_REFERENCE' = PRECED.'TEMPERATURE_REFERENCE' ;
   'SINO';
     'SI' ('EGA' (WTAB.'TEMPERATURE_REFERENCE') 'INCONNU') ;
       'SI' ('EXIS' PRECED 'TEMPERATURES');
          WTAB.'TEMPERATURE_REFERENCE' = PRECED.'TEMPERATURES'. 0 ;
       'SINO' ;
         'SI' WTAB.'COUPLAGE' ;
            WTAB.'TEMPERATURE_REFERENCE'= 'ZERO' MO_TOT 'TEMPERATURES' ;
         'SINO' ;
           'SI' ('EXIS' (WTAB.'CHARGEMENT') 'T');
              WTAB.'TEMPERATURE_REFERENCE' = 'TIRE' WTAB.'CHARGEMENT'
                                                     'T' WTAB.'TEMPS0' ;
           'FINS' ;
         'FINS' ;
       'FINS' ;
     'FINS' ;
   'FINS' ;

*--------  Initialisation de 'TALPHA_REFERENCE'
   'SI' ('EXIS' PRECED 'TALPHA_REFERENCE');
      WTAB.'TALPHA_REFERENCE' = PRECED.'TALPHA_REFERENCE';
   'SINON';
      WTAB.'TALPHA_REFERENCE' = 0.D0 ;
   'FINS';


*--------- initialisation des comportements d'apres le modele
   'SI' ('EXISTE' MO_TOT 'MATE' 'PLASTIQUE');
      WTAB.'PLASTIQUE'      = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
   'SI' ('EXISTE' MO_TOT 'MATE' 'PLASTIQUE_ENDOM');
      WTAB.'PLASTIQUE'      = VRAI;
      WTAB.'IPLAVI'         = VRAI;
      WTAB.'ENDOMMAGEMENT'  = VRAI;
   'FINSI';
   'SI' (('EXISTE' MO_TOT 'MATE' 'VISCOPLASTIQUE') 'OU'
         ('EXISTE' MO_TOT 'MATE' 'FLUAGE'        ));
      WTAB.'VISCOPLASTIQUE' = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
   'SI' ('EXISTE' MO_TOT 'MATE' 'VISCODOMMAGE');
      WTAB.'VISCODOMMAGE'   = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
   'SI' (('EXISTE' MO_TOT 'MATE' 'ENDOMMAGEMENT') 'OU'
        ('EXISTE' MO_TOT 'MATE' 'ENDOMMAGEABLE'));
      WTAB.'ENDOMMAGEMENT'  = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
   'SI' ('EXISTE' MO_TOT 'MATE' 'NON_LINEAIRE') ;
      WTAB.'NON_LINEAIRE'   = VRAI;
      WTAB.'IPLAVI'         = VRAI;
      NOLIUTIL = 'EXISTE' MO_TOT 'MATE' 'UTILISATEUR' ;
   'FINSI';
   'SI' ('EXISTE' MO_TOT 'MATE' 'VISCO_EXTERNE') ;
      WTAB.'VISCO_EXTERNE'  = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
  'SI' ('EXISTE' MO_TOT 'MATE' 'CERAMIQUE');
      WTAB.'CERAMIQUE'      = VRAI;
      WTAB.'IPLAVI'         = VRAI;
   'FINSI';
   'SI' (('EXISTE' MO_TOT 'MATE' 'MODAL') 'OU'
             ('EXISTE' MO_TOT 'MATE' 'STATIQUE' ));
      WTAB.'MODAL'          = VRAI;
      WTAB.'IPLAVI'         = VRAI;
  'FINSI';
   'SI' ('EXISTE' MO_TOT 'MATE' 'IMPEDANCE');
      WTAB.'IMPEDANCE'      = VRAI;
      WTAB.'IPLAVI'         = VRAI;
  'FINSI';

   WTAB.'MO_TOT'      = MO_TOT                    ;
   WTAB.'MOD_REF'     = MO_TOT                    ;
   WTAB.'MO_TOT_PREC' = MO_TOT                    ;
   MAI_TOT            ='EXTR' MO_TOT 'MAIL'       ;
   WTAB.'MA_TOT'      ='REDU' MA MO_TOT           ;
   WTAB.'LDEVA'       ='EXTR' WTAB.'MA_TOT' 'DEVA';
   WTAB.'LPAR0'       ='EXTR' MO_TOT 'PARA'       ;
  'SI' ('NEG' 0 ('DIME'  WTAB.'LPAR0'))     ;
     WTAB.'PARA_EXTE'=VRAI;
  'FINSI';

*--------------y-a-t-il une formulation feFP
   'SI' (  'EXISTE' PRECED 'FEFP_FORMULATION'  );
      WTAB.'FEFP_FORMULATION' = PRECED.'FEFP_FORMULATION';
   'FINSI';
   'SI' WTAB.'FEFP_FORMULATION';
      'MESS' ' *** FORMULACION FeFp ***' ;
      WTAB.'GRANDS_DEPLACEMENTS'  = FAUX ;
      WTAB.'K_SIGMA'              = VRAI ;
      WTAB.'K_TANGENT'            = VRAI ;
      WTAB.'SUBSTEPPING'          = FAUX ;
   'FINSI';
   'SI' ( 'EXISTE' PRECED 'UPDATE_LAGRANGIAN'  );
      WTAB.'UPDATE_LAGRANGIAN' = PRECED.'UPDATE_LAGRANGIAN' ;
   'FINSI';
   'SI' WTAB.'UPDATE_LAGRANGIAN';
      'MESS' ' *** UPDATE LAGRANGIAN ***' ;
   'FINSI';
*--------- y-a-t-il un sauver automatique des resultats ? ---------
   'SI' ( 'EXISTE'  PRECED 'AUTORESU');
      WTAB.'NAURES' = PRECED . 'AUTORESU';
   'FINSI';
*---------- en cas de pas automatique ?
   'SI'  WTAB . 'AUTOMATIQUE' ;
       'SI' (  'EXISTE' PRECED 'AUTOCRIT');
           WTAB.'AUTOCRIT'= PRECED.'AUTOCRIT';
       'FINSI';
       'SI' ( 'EXISTE' PRECED 'AUTOPAS');
           WTAB.'AUTOPAS'= PRECED.'AUTOPAS';
       'FINSI';
       WTAB.'DELTAITER'=WTAB.'MAXITERATION';
    'FINSI';
*------ y-a-t-il un nom de variable interne specifique ?
   'SI' (  'EXISTE' PRECED 'MOVA');
      WTAB.'MOVA' =PRECED.'MOVA';
   'SINON';
    'SI'( WTAB.'VISCO_EXTERNE'  'OU' NOLIUTIL);
         WTAB.MOVA = 'MOT' 'RIEN';
    'FINSI';
     'SI' ('NON' ('EXISTE' ('EXTR' WTAB.'MO_TOTAL' 'VARI') 'EPSE'));
         WTAB.'MOVA' = 'MOT' 'RIEN';
     'FINSI'  ;

   'FINSI';
* --------------------a-t-on preciser l'oredre de la MAN?
  'SI' ( 'EXISTE' PRECED 'ORDRE');
       WTAB.'ORDRE'=PRECED.'ORDRE';
   'FINSI';
*---------- y-a-t-il des elements de rigidite constante ? --------
   'SI' ( 'EXISTE' PRECED 'RIGIDITE_CONSTANTE');
       WTAB.'RAIDCONST' =VRAI;
       WTAB.'RIGIDITE_CONSTANTE'=PRECED.'RIGIDITE_CONSTANTE';
       RR= PRECED.'RIGIDITE_CONSTANTE';
       MNOMU = ('EXTR' RR 'MAILLAGE' 'NOMU') 'NBNO';
       MAVMU = ('EXTR' RR 'MAILLAGE' ) 'NBNO';
       'SI' ( MNOMU 'NEG' MAVMU) ;
           'ERREUR'
        'Il ne faut pas de multiplicateur dans RIGIDITE_CONSTANTE';
       'FINSI';
   'FINSI';
*---------- y-a-t-il des elements de rigidite augmentee ? --------
   'SI' ( 'EXISTE' PRECED 'RIGIDITE_AUGMENTEE');
       WTAB.'RAIDAUGM' =VRAI;
       WTAB.'RIGIDITE_AUGMENTEE'=PRECED.'RIGIDITE_AUGMENTEE';
       RR= PRECED.'RIGIDITE_AUGMENTEE';
       MNOMU = ('EXTR' RR 'MAILLAGE' 'NOMU') 'NBNO';
       MAVMU = ('EXTR' RR 'MAILLAGE' ) 'NBNO';
       'SI' ( MNOMU 'NEG' MAVMU) ;
           'ERREUR'
        'Il ne faut pas de multiplicateur dans RIGIDITE_AUGMENTEE';
       'FINSI';
   'FINSI';
   'SI' ( 'EXISTE' PRECED 'AUGMENTATION_AUTOMATIQUE');
       WTAB.'AUTOAUGM'  = VRAI;
       WTAB.'STABILITE' = VRAI ;
     'SI' ('NON' WTAB.'RAIDAUGM');
       'ERREUR' 'il faut donner la matrice d augmentation dans RIGIDITE_AUGMENTEE';
     'FINSI';
   'FINSI';
*---------- y-a-t-il des elements de masse constante ? ---------
   'SI' ( 'EXISTE' PRECED 'MASSE_CONSTANTE');
       WTAB.'MASSE_CONSTANTE'=PRECED.'MASSE_CONSTANTE';
       WTAB.'MASSCONST'=VRAI;
   'FINSI';
*---------- y-a-t-il un sous_increment ? ---------
   'SI' ( 'EXISTE' PRECED 'SOUS_INCREMENT');
     LOGERR = FAUX ;
     'SI' ('EXIS' WTAB 'DYNAMIQUE') ;
       'SI' WTAB.'DYNAMIQUE' ;
       WTAB.'SOUS_INCREMENT'=PRECED.'SOUS_INCREMENT';
       'SINON' ;
         LOGERR = VRAI ;
       'FINSI' ;
     'SINON' ;
       LOGERR = VRAI ;
     'FINSI' ;
     'SI' LOGERR ;
       'MESS' ' Option SOUS_INCREMENT utilisable QUE en DYNAMIQUE ';
       'MESS' ' Arret de Cast3M';
       'ERREUR' 5 ;
     'FINSI' ;
   'FINSI';
*------------------- y-a-t-il du nonlocal ?
* On verifie que l'on a bien un seul type de formulation non locale
  lognlmo = 'EXIS' MO_TOT 'NON_LOCAL' 'MOYE' ;
  lognlsb = 'EXIS' MO_TOT 'NON_LOCAL' 'SB  ' ;
  lognlhe = 'EXIS' MO_TOT 'NON_LOCAL' 'HELM' ;
  'SI' ((lognlmo 'ET' lognlsb) 'OU' (lognlsb 'ET' lognlhe)
                               'OU' (lognlhe 'ET' lognlmo)) ;
    'ERREUR' 'On ne peut pas avoir deux formulations non locales '
             'differentes' ;
  'FINSI' ;
* Cas 'MOYE'
   'SI' lognlmo ;
       WTAB.'NLOC' = VRAI ;
       WTAB.'NON_LOCAL' = 'MOYE' ;
       WTAB.'NLOC_MODL' = 'EXTR' MO_TOT 'NON_LOCAL' 'MOYE' ;
   'FINSI' ;
* Cas 'SB'
   'SI' lognlsb ;
       WTAB.'NLOC' = VRAI ;
       WTAB.'NON_LOCAL' = 'SB' ;
       WTAB.'NLOC_MODL' = 'EXTR' MO_TOT 'NON_LOCAL' 'SB' ;
       MOD_SB = WTAB.'NLOC_MODL' ;
       CHM_1 = 'MANU' 'CHML' MOD_SB 'LONG' 1.0 'STRESSES'
                                    'TYPE' 'CARACTERISTIQUES' ;
       CHM_L = 'INTG' 'ELEM' MOD_SB CHM_1 'LONG' ;
       CHM_L = 'CHAN' 'COMP' 'LONG' CHM_L ;
       CHM_L = 'CHAN' 'STRESSES' MOD_SB CHM_L ;
       TAIL1 = CHM_L ** (1. / ('VALE' 'DIME')) ;
       FTCH  = 'EXCO' WTAB.'MA_TOT' 'SBFT' 'SBFT' ;
       FTCH  = 'CHAN' 'STRESSES' MOD_SB FTCH ;
       MALVIA = TAIL1 '+' FTCH ;
       WTAB.'NLOC_SB_REGU' = 'CHAN' MALVIA
                           'TYPE' 'VARIABLES INTERNES' ;
   'FINSI' ;
* Cas 'HELM'
   'SI' lognlhe ;
       WTAB.'NLOC' = VRAI ;
       WTAB.'NON_LOCAL' = 'HELM' ;
       WTAB.'NLOC_MODL' = 'EXTR' MO_TOT 'NON_LOCAL' 'HELM' ;
   'FINSI' ;
*
   'SI' WTAB.'NLOC' ;
     'SI' ( 'EXISTE'  PRECED 'CONN' );
        'MESS' 'On garde les connectivites dans TAB CONN';
         WTAB.'CONN'=PRECED . 'CONN' ;
     'SINON';
        'MESS' 'Calcul des connectivites en mode normal.';
         WTAB.'CONN'='CONN' WTAB.'NLOC_MODL'
            (REDU WTAB.'MA_TOT' WTAB.'NLOC_MODL') 'NORMAL' ;
     'FINSI' ;
   'FINSI' ;

*------Y-a-t-il des elements dont il faudra reactualiser les caracteristiques?
   'SI' WTAB.'GRANDS_DEPLACEMENTS' ;
       MOCA = 'MOTS' 'VECT' 'VX  ' 'VY  ' 'VZ  ' 'VXF ' 'VYF ' 'VZF '
                     'V1X ' 'V1Y ' 'V1Z ' 'V2X ' 'V2Y ' 'V2Z ';
       'REPETER' BOU_CAR ('DIME' MOCA);
          ITE2 = &BOU_CAR;
          MOT1 = 'EXTR' MOCA ITE2;
          'SI' ('EXIS' WTAB.'MA_TOT' MOT1);
             WTAB.'ITCAR' = VRAI;
             'QUITTER' BOU_CAR;
          'FINSI';
       'FIN' BOU_CAR;
*       'SI' ITCAR;
*          'SI' ('NON' ('EXIS' PRECED 'CARA_ACTU'));
*             PRECED.'CARA_ACTU' = TABLE;
*          'FINSI';
*       'FINSI';
   'FINSI';
*  En grands deplacements, on se met dans la config. initiale.
   'SI'( WTAB.'GRANDS_DEPLACEMENTS' 'OU'  WTAB.'FEFP_FORMULATION');
       WTAB.'RECALCUL'= VRAI ;
   'FINSI';
*- existe-t-il un chargement de flux neutronique pour le modele mistral
*- existe-t-il un chargement de densite de fissions pour gatt_monerie & uo2
*----  si oui on sort si non on le cree a zero
*
   'SI' ('EXIS'  MO_TOT  'MATE' 'MISTRAL');
     'SI' ('NON' ('EXISTE' (WTAB.'CHARGEMENT') 'FI  ')) ;
      FIZER='MANU' 'CHPO' MAI_TOT 1 'FI  ' 0. 'NATURE' 'DIFFUS' ;
      WTAB.'CHARGEMENT'= WTAB.'CHARGEMENT' 'ET' ('CHAR' 'FI' FIZER
      ('EVOL' 'MANU'  ('PROG' 0. 10.e10 ) ('PROG' 1. 1.)));
     'FINSI';
   'FINSI';
   'SI' (('EXIS'  MO_TOT  'MATE' 'UO2') 'OU'
         ('EXIS'  MO_TOT  'MATE' 'GATT_MONERIE') ) ;
      'SI' ('NON' ('EXISTE' (WTAB.'CHARGEMENT') 'DFIS')) ;
     DFISZER='MANU' 'CHPO'  MAI_TOT 1 'DFIS' 0. 'NATURE' 'DIFFUS' ;
      WTAB.'CHARGEMENT'= WTAB.'CHARGEMENT' 'ET' ('CHAR' 'DFIS' DFISZER
         ('EVOL' 'MANU'   ('PROG' 0. 10.e10 ) ('PROG' 1. 1.))) ;
     'FINSI';
   'FINSI';
'FINSI';
WTAB.'CHARGEMENT_I'=WTAB.'CHARGEMENT';


******************************************************************
********** Recapitulation des options de calcul choisies *********
******************************************************************
'SAUTER' 1 'LIGNE';
'SI' WTAB.'FOR_MECA' ;
   'SI' WTAB.'FOR_THER';
       'MESS'  'Couplage THERMIQUE-MECANIQUE ';
   'SINON'   ;
       'MESS'   'Calcul MECANIQUE';
   'FINSI';

   'SI' ('NEG' WTAB.'PREDICTEUR' 'INCONNU');
       'MESS'   ' *** Predicteur: ' wtab.'PREDICTEUR';
   'FINSI';
   'SI' WTAB.'K_SIGMA';
       'MESS'   ' *** K_SIGMA *** ';
   'FINSI';
   'SI' WTAB.'LAG_TOT';
       'MESS'   ' *** Calcul en lagrangien total *** ';
   'SINON';
       'MESS'   ' *** Calcul en lagrangien reactualise *** ';
   'FINSI';
   'SI' WTAB.'STABILITE';
       'MESS'   ' *** Verification stabilite *** ';
   'FINSI';
   'SI' WTAB.'LINESEARCH';
       'MESS'   ' *** Linesearch  *** ';
   'FINSI';
   'SI' (non WTAB.'INITIALISATION');
       'MESS'   ' *** Initialisation a partir du pas precedent'
                ' interdite *** ';
   'FINSI';
   'SI' (WTAB.'CONVERGENCE_MONOTONE');
       'MESS'   ' *** Convergence monotone imposee *** ';
   'FINSI';
   'SI' (WTAB.'RENORMALISATION');
       'MESS'   ' *** Renormalisation des iteres *** ';
   'FINSI';
   'SI' WTAB.'POR1';
      'MESS' ' *** POREUX ***';
   'FINSI';
   'SI'(WTAB.'DYNAMIQUE');
      'MESSAGE' ' *** DYNAMIQUE PAS A PAS ***';
   'FINSI' ;
   'SI' (WTAB.'FREQUENTIEL') ;
      'MESSAGE' ' *** FREQUENTIEL PAS A PAS ***' ;
   'FINSI' ;
   'SI'(WTAB.'LIAISON_PERSISTANTE');
      'MESSAGE' ' *** LIAISON PERSISTANTE ***';
   'FINSI' ;
   'SI'(WTAB.'CONSOLIDATION');
      'MESSAGE' ' *** CONSOLIDATION ***';
   'FINSI' ;
   'SI'(WTAB.'PLASTIQUE');
     'MESSAGE' ' *** PLASTICITE ***';
   'FINSI';
   'SI'(WTAB.'VISCOPLASTIQUE');
      'MESSAGE' ' *** VISCO - PLASTICITE ***';
   'FINSI' ;
   'SI' WTAB.'NON_LINEAIRE';
      'SI' NOLIUTIL;
         'MESS' ' *** MODELE DE COMPORTEMENT NON LINEAIRE EXTERNE ***';
      'SINON';
         'MESS' ' *** ELASTICITE NON_LINEAIRE ***';
      'FINSI';
   'FINSI' ;
   'SI' WTAB.'VISCO_EXTERNE';
      'MESSAGE' ' *** VISCO - PLASTICITE, MODELE EXTERNE ***';
   'FINSI' ;
   'SI' WTAB.'CHAR_THE';
      'MESSAGE' ' *** CHARGEMENT THERMIQUE ***';
   'FINSI';
   'SI' WTAB.'CHAR_DEFI';
      'MESSAGE' ' *** CHARGEMENT PAR DES DEFORMATIONS ***';
   'FINSI';
   'SI' WTAB.'CHAR_PRES';
      'MESSAGE' ' *** CHARGEMENT PAR UNE PRESSION SUIVEUSE ***';
   'FINSI';
   'SI' WTAB.'PARA_EXTE';
      'MESSAGE' ' *** LE MODELE DEPEND DE PARAMETRES EXTERNES ***';
   'FINSI';
   'SI'(WTAB.'GRANDS_DEPLACEMENTS');
      'MESSAGE' ' *** GRANDS DEPLACEMENTS ***';
   'FINSI';
   'SI'(WTAB.'CONVERGENCE_FORCEE');
      'MESSAGE' ' *** CONVERGENCE FORCEE   ***';
   'FINSI';
   'SI'(WTAB.'ENDOMMAGEMENT');
      'MESSAGE' ' *** PLASTICITE + ENDOMMAGEMENT ***';
   'FINSI';
   'SI'(WTAB.'VISCODOMMAGE');
      'MESSAGE' ' *** VISCO-PLASTICITE + ENDOMMAGEMENT ***';
   'FINSI';
   'SI'(WTAB.'CERAMIQUE');
      'MESSAGE' ' ***CERAMIQUE FLUAGE  + ENDOMMAGEMENT ***';
      'MESSAGE' ' ***             +OTTOSEN             ***';
   'FINSI';
*   'SI' IUO2;
*      'MESSAGE' ' *** VISCO-PLASTICITE + OTTOSEN ***';
*   'FINSI';
   'SI' WTAB.'NLOC' ;
       'MESS' ' *** EN NON-LOCAL *** ' ;
   'FINSI';
   'SI' WTAB.'CONTACT';
      'MESS' ' *** CONTACT ***';
   'FINSI';
   'SI' (WTAB.'SOUS_INCREMENT' > 1);
      'MESS'  ' *** SOUS_INCREMENT : ' WTAB.SOUS_INCREMENT;
   'FINSI';
   'SI' WTAB.'CAFROTTE';
      'MESS' ' *** FROTTEMENT ***';
   'FINSI';
   'SI' WTAB.'K_TANGENT' ;
     'SI' WTAB.'K_TANGENT_PERT' ;
       'MESS' ' *** MATRICE TANGENTE PAR PERTURBATION ***' ;
     'SINON' ;
       'MESS' ' *** MATRICE TANGENTE (COHERENTE) ***' ;
     'FINSI' ;
     'MESS' '     MATRICE EVALUEE TOUTES LES' WTAB.'NITER_KTANGENT'
            'ITERATIONS' ;
     'SI' WTAB.'K_TANGENT_SYME' ;
       'MESS' '     PARTIE SYMETRIQUE DE LA MATRICE TANGENTE UTILISEE';
     'FINSI' ;
   'FINSI';
   'SI' WTAB.'SUBSTEPPING';
     'MESSAGE' ' *** SUBSTEPPING *** NUM_MAXI_SUBSTEPS = '
               WTAB.'NMAXSUBSTEPS' ;
     'MESSAGE' ' *** SUBSTEPPING *** NUM_ITER_INTERNAS = '
               WTAB.'NITERINTER_MAX' ;
   'FINSI';
'SINON';
   'MESS' 'Calcul  THERMIQUE ';
'FINSI';

************************************************************************
*-------------  option de parallelisation
************************************************************************
* Note : Il faudrait separer la thermique de la mecanique pour la //.
NBPART = 'VALEUR' 'ASSI' ;
WTAB.'NBPART' = NBPART ;
b_PARA = 0 ;
'SI' ('EGA' 'INCONNU' WTAB.'PROCESSEURS') ;
  'SI' (NBPART > 1);
    toutmo = 'EXTR' PRECED.'MODELE' 'ZONE' ;
    IMOD = ('DIME' toutmo) / 2 ;
    MINELE = 1000000 ; MAXELE = 0 ;
    'REPE' BOUCMO IMOD ;
      BBB = 'NBEL' TOUTMO . (&BOUCMO * 2);
      'SI' (MINELE > BBB); MINELE = BBB; 'FINSI';
      'SI' (MAXELE < BBB); MAXELE = BBB; 'FINSI';
    'FIN' BOUCMO ;
    MINELE=MINELE/NBPART ; MAXELE=MAXELE/NBPART;
    NBELMIN = 1000 ; NBELMM=100 ;
    'SI' (MINELE > NBELMIN) ;
      b_PARA = 2 ;
    'SINON';
      'SI'( (MINELE > NBELMM) 'OU' (MAXELE > 500) ) ;
* on effectue la partition du modele utilisee seulement pour COMP
        b_PARA = 1 ;
      'FINSI';
    'FINSI';
  'FINSI';
'SINON' ;
  'SI' ('>' NBPART 1) ;
    'SI' ('EGA' WTAB.'PROCESSEURS' 'COMPORTEMENT');
      b_PARA = 1 ;
    'SINON' ;
      'SI' ('EGA' WTAB.'PROCESSEURS' 'AUTOMATIQUE');
        b_PARA = 2 ;
      'FINSI';
    'FINSI';
  'FINSI';
'FINSI';
'SAUTER' 1 'LIGNE';
'SI' ('EGA' b_PARA 0) ;
  WTAB.'PROCESSEURS' = 'MOT' 'MONO_PROCESSEUR' ;
  'MESS' ' *** Pas de parallelisation ***' ;
'SINON' ;
  'SI' ('EGA' b_PARA 1) ;
    'MESS' ' *** Parallelisation du comportement ***';
    WTAB.'PROCESSEURS' = 'MOT' 'COMPORTEMENT' ;
  'SINON' ;
    'SI' ('EGA' b_PARA 2) ;
      WTAB.'PROCESSEURS' = 'MOT' 'AUTOMATIQUE' ;
      'MESS' ' *** Parallelisation automatique ***' ;
    'SINON' ;
      'MESS' ' *** Cas // non prevu' ; 'ERREUR' 5 ;
    'FINSI' ;
  'FINSI' ;
'FINSI' ;

'SAUTER' 1 'LIGNE';
'FINPROC' ;
$$$$






