$$$$ @RCCMCO2
* @RCCMCO2  PROCEDUR  CHAT      03/09/23    21:15:03     4697
DEBPROC @RCCMCO2 NNE*ENTIER NNC*ENTIER PP1*POINT PP2*POINT
NSEG*ENTIER SIG1*MCHAML MOD1*MMODEL EPAI*FLOTTANT
GRAPL*LOGIQUE ECRI*LOGIQUE NOM*MOT PP3*POINT ;
* ----------------------------------------------------------------------
*
*   CETTE PROCEDURE PERMET D'EFFECTUER UNE COUPE DANS UN MODELE 2D OU 3D
*   POUR OBTENIR LES CONTRAINTES ELEMENTAIRES A CHAQUE POINT ET DANS
*   LE REPERE LOCAL DE CELLE-CI.
*   CETTE PROCEDURE PERMET EGALEMENT LE TRACE DE CHAQUE CONTRAINTE
*   ELEMENTAIRE ET DE SA DECOMPOSITION LE LONG DE CETTE COUPE PAR
*   APPEL A LA PROCEDURE DECOMP
*
* ----------------------------------------------------------------------
*
*   LES DONNEES SONT :
*    ----> le numero d'etat
*    ----> le numero de la coupe
*    ----> les 2 points extremes de la coupe
*    ----> le nombre de sous-divisions de la coupe
*    ----> le champ de contraintes aux elements (points de GAUSS)
*    ----> la geometrie
*    ----> l'epaisseur du trait de la coupe lors du trace
*    ----> le Logique  GRAPL permettant ou non les traces
*    ----> le mot NOM (optionnel) permettant ou non la sortie d'un
*          fichier pour NOCLIB
*    ----> Pour le 3D PP3  DIRECTION  (type point) definissant
*          l axe OY du repere ( OX etant le segment d appui ) en 2D
*          il ne servira a rien ( mais obligatoire tout de meme
*   EN SORTIE :
*
*    ----> le champ de contraintes dans la coupe
*    ----> les contraintes elementaires x distances a chaque point
*                  par rapport au milieu de la coupe
*    ----> les contraintes 'TOT..' aux extremites de la coupe
*    ----> les evolutions la decomposition de chaque contrainte elementaire
*             la coupe si GRAPL  est VRAI
*
*    ----> eventuellement un fichier pour NOCLIB
*                                    ( voir NOTA ci-dessous )
*
* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*
*  NOTA : Les contraintes du fichier NOCLIB sont dans le repere General
*
*
* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
* ----------------------------------------------------------------------
*   PAR Jean-Marc PIETTE
* ---------------------------------------------------------------------
'OPTION' 'ELEM'  'SEG2' ;
LIG2 = D    NSEG PP1 PP2  'COUL' 'ROUG' ;
NBDC = LIG2 'NBNO' ;
IDIM = 'VALE' DIME ;
*
'SI' ( 'EGA' IDIM 2 ) ;
  'OPTION' 'ELEM' 'QUA4' ;
VECT  = PP2 MOINS PP1 ;LONG  = NORME VECT ;

     'SI' GRAPL ;
  PTC     = PP1 PLUS ( ( VECT / LONG ) * EPAI ) ;
  PTD     = PTC 'TOURNER' -90. PP1 ;
  PTE     = PTC 'TOURNER'  90. PP1 ;
  PTF     = PTD 'PLUS' VECT ;
  PTG     = PTE 'PLUS' VECT ;
  MAILCOU = PTD DROI 1 PTF DROI 1 PTG DROI 1 PTE DROI 1 ;
  L1M     = MAILCOU  elem 'COMP' PTD PTF ;
  L2M     = MAILCOU elem 'COMP' PTF PTG ;
  L3M     = MAILCOU   elem 'COMP' PTG PTE ;
  L4M     = MAILCOU  elem 'COMP' PTE PTD ;
  MAILCOU = L1M L2M L3M L4M DALLER 'PLAN' ;
  MAILCOU = MAILCOU 'COULEUR' 'ROSE' ;
  MAILZ = 'EXTR' MOD1 MAIL ;
    TRACER ( MAILZ ET  MAILCOU ET (LIG2 COUL ROSE) ) ;
      'FINSI' ;
  CHAMRT = RTENS SIG1  MOD1 VECT ;
  CHAMRT = CHAN 'CHPO' MOD1 CHAMRT ;
  CHAMRT = CHAN 'CHAM' CHAMRT MOD1 'NOEUD' ;
SINON ;
* ----------------------------------------------------------------------
* Le calcul est donc tridimensionnel
* ----------------------------------------------------------------------
 OPTION ELEMENT CUB8 ;
  V1      = ( PP2 MOINS PP1 ) ;
        'SI' GRAPL  ;
  V2      = PP3 ;
  VH1     = V2 PVEC V1 ;
  VH1     = VH1 * EPAI / ( NORME VH1 ) ;
  PH1     = PP1 PLUS VH1 ;
  PH2     = PP2 PLUS VH1 ;
  D1      = PP1 DROI 1 PP2 ;
  D2      = PP2 DROI 1 PH2 ;
  D3      = PH2 DROI 1 PH1 ;
  D4      = PH1 DROI 1 PP1 ;
  SS      = DALL D1 D2 D3 D4 'PLAN' ;
  VO1     = VOLU SS 8 ROTA  179.99 PP1 PP2 ;
  VO2     = VOLU SS 8 ROTA -179.99 PP1 PP2 ;
  MAILCOU = VO1 ET VO2 ;
  MAILCOU = MAILCOU COULEUR ROSE ;
  mailz = extr MOD1 mail ;
    TRACER (  MAILZ ET MAILCOU ET (LIG2 COUL ROSE) ) ;
        'FINSI' ;
  V1 = V1/(NORM V1)  ;
  V3 = V1 PVEC PP3   ;V3 = V3/ ( NORME V3) ;
  V2 = V3 PVEC V1  ;
  CHAMRT = RTENS SIG1  MOD1 V1 V2 ;
  CHAMRT = CHAN 'CHPO' MOD1 CHAMRT ;
  CHAMRT = CHAN 'CHAM' CHAMRT MOD1 'NOEUD' ;
FINSI ;
*-----------------------------------------------------------------------
* projection du champ de contraintes sur le segment d appui
*-----------------------------------------------------------------------


CHCOU = 'PROI'  LIG2  CHAMRT  -.01;
NPRO = ('EXTR' CHCOU MAILLAGE) NBNO ;
'SI' ('EGA' ( NSEG+1) NPRO ) ;

  SI  ECRI  ;
    LIST CHCOU ;
  FINSI ;
 LCOMP = 'EXTR' CHCOU COMP ;NCC = 'DIME' LCOMP ;
* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* eventuel fichier pour NOCLIB
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SI ( NEG  NOM  'BLANC'  ) ;
  NBNDC = LIG2 NBNO ;
  VA_IMP = 'VALE' IMPR ;
    OPTION 'IMPR' NOM ;
    MESSAGE '           COORDONNEES GLOBALES ----> NB DE POINTS = '
    NBNDC ;
    REPETER BOUCLN  NBNDC ;
      I     = &BOUCLN ;
      P     = LIG2 POIN I ;
      VECTD = P MOINS PP1 ;
      LONGD = NORME VECTD ;
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* ecriture des coordonnees
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      MESSAGE LONGD ' 0.  0. ' ;
    FIN BOUCLN ;
* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* ecriture des contraintes elementaires pour NOCLIB
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TTT1 = CHAIN ' COUPE No '  NNC  ' ' ;
         repeter  bib  NCC;
      TTT1 = CHAIN ttt1 (extr LCOMP  &bib)  ' ' ;
         fin bib ;
      MESSAGE  TTT1 ;
    REPETER BOUCLC ( NBNDC ) ;
      I     = &BOUCLC ;
      P     = LIG2 POIN I ;
      TTT2 = CHAIN (EXTRAIRE CHCOU (extr LCOMP  1)  P) ' ' ;
      repeter  bib  (NCC - 1);
TTT2 = CHAIN TTT2  (EXTRAIRE CHCOU (extr LCOMP ( &bib + 1))  P) ' ' ;
      fin bib ;
      MESSAGE  TTT2 ;
    FIN BOUCLC ;
    'OPTION' 'IMPR' VA_IMP ;
  FINSI ;
    'SI' GRAPL ;
LTRAC = 'MOTS' ETOI CARR TRIA LOSA CERC CROI ;
LCOU  = 'MOTS' BLAN VERT ROUG BLEU ROSE TURQ ;
*
TITRE 'Contraintes segment  appui no' nnc 'Etat' nne ;

TTTT = TABLE ;
TABLEG = TABLE ;
TTTT.'TITRE' = TABLEG ;
  'REPETER' BIB NCC ;
CCC = 'EXTR' LCOMP &BIB ;
TTTT.&BIB= 'CHAIN' 'MARQ ' ('EXTR' LTRAC &BIB ) ;
TABLEG.&BIB =  CCC  ;
   'SI' ( 'EGA' &BIB 1) ;
   EVS = 'EVOL' ('EXTR' LCOU &BIB) 'CHPO' CHCOU CCC LIG2 ;
   'SINON' ;
 EVS = EVS ET
        ('EVOL' ('EXTR' LCOU &BIB) 'CHPO' CHCOU CCC LIG2) ;
   'FINSI' ;
  'FIN' BIB ;
*
'DESS' EVS   'LEGE' TTTT AXES;
   'FINSI' ;

*----------------------------------------------------------------------
*    decomposition en membrane  flexion  etc --- des contraintes
*----------------------------------------------------------------------
TABV = PMPB CHCOU LIG2 GRAPL nnc nne ;
   'SINON' ;
MESS  '*---------------------------------------------------*' ;
MESS  ' POINTS DU SEGMENT D APPUI ' NNC '  HORS DU DOMAINE  ' ;
MESS  '*---------------------------------------------------*' ;
TABV= 'ARRET' ;
'FINSI' ;
FINPROC   TABV  ;
$$$$


