$$$$ ENCEINTE
* ENCEINTE  PROCEDUR  MAGN      16/01/05    21:15:03     8765
'DEBPROC' ENCEINTE nbit*'ENTIER ' rxt*'TABLE   ' KENC/'MOT';
*----------------------------------------------------------
*---- Suivi des modifications
*--- 20/09/99 : ES prise en compte des incondensables
*               dans la procédure CONDENS
*--- 18/05/00 : FP prises en comptes de la condensation en masse par
*               l'ajout d'une nouvelle équation sur la masse volumique
*               de liquide en suspension. Les équations sur rhovap et
*               sur T sont également complétées par l'introduction
*               d'une nouveau terme source. La détermination des
*               termes sources est réalisée dans une procedure appelée
*               CONDENSM.
*--- 04/11/05 : Ajout d'un choix de formulation pour le flux condensé
*               (Chilton-Colburn) dans la procédure CONDENS
*----------------------------------------------------------

*==============================================================
Si(Exist KENC)                                              ;
MKENC=KENC                                                  ;
Sinon                                                       ;
MKENC='????'                                                ;
Finsi                                                       ;
*-----------------------------------------------------------------------
* Liste des entrées nécessaires                             ;
*-----------------------------------------------------------------------
* Géométrie

  listand = MOTS                                            ;
  listchp = MOTS                                            ;
  listentr= table                                           ;
  listentr.'VERSION'  =''                                   ;
  listentr.'vtf'      =''                                   ;
  listentr.'TF0'      =''                                   ;
  listentr.'PT0'      =''                                   ;

  listentr.'THERMP'   =''                                   ;
  listentr.'THERCO'   =''                                   ;
   listentr.'vtp'         =''                            ;
   listentr.'ROCP'        =''                            ;
   listentr.'LAMBDA'      =''                            ;
   listentr.'Tp0'         =''                            ;
   listentr.'ECHAN'       =''                            ;

   listentr.'ECHEXT'      =''                            ;
   listentr.'parext'      =''                            ;
   listentr.'HEXT'        =''                            ;
   listentr.'TPEXT'        =''                           ;

  listentr.'TIMP1'    =''                                   ;
  listentr.'TIMP2'    =''                                   ;
  listentr.'TIMP3'    =''                                   ;

  listentr.'ECHANP'   =''                                   ;

  listentr.'breche'   =''                                   ;
  listentr.'breche2'  =''                                   ;
  listentr.'breche3'  =''                                   ;
  listentr.'sortie'   =''                                   ;
  listentr.'axe'      =''                                   ;
  listentr.'epsi'     =''                                   ;
  listentr.'pi'       =''                                   ;

* Table utilisée pour la définition de recombineurs
  listentr.'RECOMB'   =''                                   ;

* Table de travail rajoutées par la procédure
  listentr.'REINIT'   =''                                   ;
  listentr.'TIC'      =''                                   ;
  listentr.'GEO'      =''                                   ;
  listentr.'TBT'      =''                                   ;

* paramètres numériques / algorithmes
  listentr.'DISCR'    =''                                   ;
  listentr.'KPRE'     =''                                   ;
  listentr.'STAB'     =''                                   ;
  listentr.'ALGO'     =''                                   ;

* paramètres de fonctionnement
  listentr.'DT0'      =''                                   ;
  listentr.'PERSO'    =''                                   ;
  listentr.'GRAPH'    =''                                   ;
  listentr.'RENU'     =''                                   ;
  listentr.'TYPINV'   =''                                   ;
  listentr.'IMPR'     =''                                   ;
  listentr.'FRPREC'   =''                                   ;
  listentr.'PPDT'     =''                                   ;


** Modèles physiques
* Constituant (air par défaut ) vapeur/incondensables
  listentr.'VAPEUR'   =''                                   ;
  listentr.'HE'       =''                                   ;
  listentr.'H2'       =''                                   ;
  listentr.'O2'       =''                                   ;
  listentr.'N2'       =''                                   ;
  listentr.'CO'       =''                                   ;
  listentr.'CO2'      =''                                   ;
  listentr.'AIR'      =''                                   ;

* Modèles de turbulence
  listentr.'MODTURB'  =''                                   ;
  listentr.'FPAROI'   =''                                   ;

* Formulation pour le modèle de condensation
  listentr.'MODCOND'     =''                                ;

  idim = vale 'DIME'                                        ;
  DIM3D=FAUX                                                ;
  Si(EGA idim 3)                                            ;
  DIM3D=VRAI                                                ;
  Finsi                                                     ;

*-----------------------------------------------------------------------

 REINIT= (NON ('EXIST' rxt 'TBT'))                          ;
'SI' ('EXIST' rxt 'REINIT')                                 ;
 vertytab rxt 'REINIT' 'LOGIQUE'                            ;
 REINIT=rxt.'REINIT'                                        ;
'FINSI'                                                     ;

 'SI'(('EXIST' rxt 'TBT') et (NON REINIT))                  ;
  vertytab rxt 'TBT' 'TABLE   '                             ;
  vertytab rxt 'GEO' 'TABLE   '                             ;
  TPREPA=FAUX                                               ;
  TBT=rxt.'TBT'                                             ;
  GEO=rxt.'GEO'                                             ;
 'SINON'                                                    ;
  TPREPA=VRAI                                               ;
  TBT='TABLE'                                               ;
  GEO='TABLE'                                               ;
  rxt.'GEO'=GEO                                             ;
 'FINSI'                                                    ;

'SI' ('EXIST' rxt 'TIC')                                   ;
 vertytab rxt 'TIC' 'TABLE   '                             ;
 vertytab (rxt.'TIC') 'LTPS' 'LISTREEL'                    ;
 tic=rxt.'TIC'                                             ;
'SINON'                                                    ;
 tic= 'TABLE' 'INCO'                                       ;
 rxt.'TIC'=tic                                             ;
 tic.'LTPS'  = 'PROG' 0.0                                  ;
'FINSI'                                                    ;

 ndl   = 'DIME' (tic.'LTPS')                               ;
 Tps='EXTR' (tic.'LTPS') ndl                               ;
 MESS ' Le calcul demarre a partir du temps ' Tps          ;

* Initialisation
* Liste des Gaz qui peuvent etre calcule
LINCOND=MOTS 'N2' 'H2' 'HE' 'O2' 'CO' 'CO2' 'VAPE'       ;

Si (non(exist tic 'Lg0D'))                               ;
tic.'Lg0D'= Mots                                         ;
tic.'Li0D'= Prog                                         ;
Finsi                                                    ;

*-------------------------------------------------------------
* On vérifie que l'utilisateur a bien crée un volume FLUIDE
*                        Donnée obligatoire
*-------------------------------------------------------------

     vertytab rxt 'vtf' 'MAILLAGE'                      ;
     vertytab rxt 'TF0' 'FLOTTANT'                      ;
     vertytab rxt 'PT0' 'FLOTTANT'                      ;

*-------------------------------------------------------------
* DT0 Le pas de temps  : Donnée obligatoire
*-------------------------------------------------------------

 vertytab rxt 'DT0' 'FLOTTANT'                           ;
 tic.'DT'=rxt.'DT0'                                      ;

*----------------------------------------------------------
* VERSION= 'MOT' indiquant le niveau de la version
* Niveau disponible V0 (standard) et V1
*----------------------------------------------------------

TBT.'VERSION' = 0                                        ;
'SI' (exist rxt 'VERSION')                               ;
 lxt = mots 'V0' 'V1'                                    ;
 tbvs= table; tbvs.'V0'=0; tbvs.'V1'=1;                  ;
 vertytab lxt (rxt.'VERSION') 'MOT'                      ;
TBT.'VERSION'= tbvs.(rxt.'VERSION')                      ;
 'SI' (TBT.'VERSION' > 0)                                ;
  TBT.'CONDMAS' = VRAI                                   ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

*----------------------------------------------------------
* GRAPH = Logique permettant les dessins
*----------------------------------------------------------


TBT.'GRAPH' = FAUX                                       ;
'SI' (exist rxt 'GRAPH')                                 ;
 vertytab rxt 'GRAPH' 'LOGIQUE '                         ;
TBT.'GRAPH'= rxt.'GRAPH'                                 ;
'FINSI'                                                  ;

*---------------------------------------------------------
* STAB = coefficient de Stabilisation pour les MACRO
*        pour l'algorithme de Projection
*---------------------------------------------------------

TBT.'STAB' = 1.                                           ;
'SI' ('EXIST' rxt 'STAB')                                 ;
 vertytab rxt 'STAB' 'FLOTTANT'                           ;
TBT.'STAB' = rxt.'STAB'                                   ;
listand=listand et (MOTS 'STAB')                          ;
'FINSI'                                                   ;

*---------------------------------------------------------
* DETMAT Logique indiquant qu'on détruit toutes les
*        matrices à la fin du calcul.
*---------------------------------------------------------

TBT.'DETMAT' = VRAI                                       ;
'SI' ('EXIST' rxt 'DETMAT')                               ;
 vertytab rxt 'DETMAT' 'LOGIQUE'                          ;
 listentr.'DETMAT'   =''                                  ;
TBT.'DETMAT' = rxt.'DETMAT'                               ;
'FINSI'                                                   ;

*---------------------------------------------------------
* CORTEMP Logique indiquant qu'on supprime ou non le controle
*         du bilan d'énergie.
*---------------------------------------------------------

TBT.'CORTEMP' = VRAI                                      ;
'SI' ('EXIST' rxt 'CORTEMP')                              ;
 vertytab rxt 'CORTEMP' 'LOGIQUE'                         ;
 listentr.'CORTEMP'  =''                                  ;
TBT.'CORTEMP' = rxt.'CORTEMP'                             ;
listand=listand et (MOTS 'CORTEMP')                       ;
'FINSI'                                                   ;

*---------------------------------------------------------
* RENU = Type de renumérotation pour les méthodes d'inversion
*        RIEN SLOA
*---------------------------------------------------------

TBT.'RENU' = 'SLOA'                                       ;
'SI' ('EXIST' rxt 'RENU')                                 ;
 vertytab rxt 'RENU' 'MOT'                                ;
 lxt=mots 'RIEN' 'SLOA' 'GIBR' 'GIBA'                     ;
 vertytab lxt (rxt.'RENU') 'MOT'                          ;
TBT.'RENU' = rxt.'RENU'                                   ;
listand=listand et (MOTS 'RENU')                          ;
'FINSI'                                                   ;

*---------------------------------------------------------
* TYPINV Type d'inversion
*        RIEN BICG sinon voir notice KRES
*---------------------------------------------------------

TBT.'TYPINV'= 3                                           ;
'SI' ('EXIST' rxt 'TYPINV')                               ;
 vertytab rxt 'TYPINV' 'ENTIER'                           ;
TBT.'TYPINV' = rxt.'TYPINV'                               ;
listand=listand et (MOTS 'TYPINV')                        ;
'FINSI'                                                   ;

*---------------------------------------------------------
* PPDT  formulation designé petits/grand  pas de temps
*                   conservative ou non conservative
*---------------------------------------------------------

TBT.'PPDT'= FAUX                                          ;
'SI' ('EXIST' rxt 'PPDT')                                 ;
 vertytab rxt 'PPDT' 'LOGIQUE'                            ;
TBT.'PPDT' = rxt.'PPDT'                                   ;
listand=listand et (MOTS 'PPDT')                          ;
'FINSI'                                                   ;

Si TBT.'PPDT'                                             ;
 TBT.'FCONS'= 'CONS2'                                     ;
Sinon                                                     ;
 TBT.'FCONS'= 'NOCONS'                                    ;
Finsi                                                     ;
*--------------------------------------------------------
* ALGO = choix de l'algorithme implicite / explicite
*   Les choix possibles sont :
*     IMPL  = semi implicite
*     EFM1  = semi explicite
*--------------------------------------------------------

TBT.'ALGO' ='IMPL'                                        ;
TBT.'SPGNU'='CHAI' sommet                                 ;
TBT.'FEF'  ='EF'                                          ;
TBT.'FIMPL'='IMPL'                                        ;
'SI' ('EXIST' rxt 'ALGO')                                 ;
 vertytab rxt 'ALGO' 'MOT'                                ;
 lxt=mots 'IMPL' 'EFM1'                                   ;
 vertytab lxt (rxt.'ALGO') 'MOT'                          ;
TBT.'ALGO' = rxt.'ALGO'                                   ;
 Si (EGA TBT.'ALGO' 'EFM1')                               ;
  TBT.'SPGNU'='CHAI' centre                               ;
  TBT.'FEF'  ='EFM1'                                      ;
  TBT.'FIMPL'='EXPL'                                      ;
 Finsi                                                    ;
listand=listand et (MOTS 'ALGO')                          ;
'FINSI'                                                   ;
'MESS' '==> Algorithme choisi ' TBT.'ALGO'                ;

*--------------------------------------------------------
* DISCR = choix de la discrétisation
*   Les dicrétisations possibles sont :
*     LINE  = éléments linéaires
*     MACRO = éléments MACRO (par DEFAUT)
*     QUAF  = éléments quadratiques fluide
*--------------------------------------------------------

TBT.'discr'='MACRO'                                       ;
'SI' ('EXIST' rxt 'DISCR')                                ;
 vertytab rxt 'DISCR' 'MOT'                               ;
 lxt=mots 'MACRO' 'LINE' 'QUAF'                           ;
 vertytab lxt (rxt.'DISCR') 'MOT'                         ;
TBT.'discr' = rxt.'DISCR'                                 ;
listand=listand et (MOTS 'DISCR')                         ;
'FINSI'                                                   ;
'MESS' '==> Discrétisation choisie pour la vitesse ' TBT.'discr'  ;
TBT.'discrH'=TBT.'discr'                                  ;
Si ((Ega TBT.'discr' 'QUAF') ET (EGA (VALE DIME) 3))      ;
TBT.'discrH'='MACRO'                                      ;
Finsi                                                     ;

*---------------------------------------------------------
* KPRE = position de l'inconnue de pression
*  possibilités : CENTRE avec algorithme de projection
*                 CENTREP1 avec algorithme IMPLICIT
*---------------------------------------------------------

TBT.'KPRE'='CENTRE'                                       ;
TBT.'MAXELPRE'=20000                                      ;
'SI' ('EXIST' rxt 'KPRE')                                 ;
 vertytab rxt 'KPRE' 'MOT'                                ;
 lxt=table; lxt.'CENTRE'=' '; lxt.'CENTREP1'=' '          ;
            lxt.'MSOMMET'=' '                             ;
 vertytab lxt (rxt.'KPRE') 'MOT'                          ;
 TBT.'KPRE' = rxt.'KPRE'                                  ;
listand=listand et (MOTS 'KPRE')                          ;
'FINSI'                                                   ;
'MESS' '==> Discrétisation choisie pour la pression ' TBT.'KPRE';

*---------------------------------------------------------
* Definition des grandeurs Physiques :
* Rgi = constante des gaz pour chaque especes J/Kg/K
*
* Modif FP 26/06/00
Rabs = 6.022*1.38066                                  ;
TBT.'Rabs'  = Rabs                                    ;
TBT.'Rgh2'  = Rabs/2.E-3  ; TBT.'Mkh2'  = 2.016E-3    ;
TBT.'Rghe'  = Rabs/4.E-3  ; TBT.'Mkhe'  = 4.003E-3    ;
TBT.'Rgo2'  = Rabs/3.2E-2 ; TBT.'Mko2'  = 32.00E-3    ;
TBT.'Rgn2'  = Rabs/2.8E-2 ; TBT.'Mkn2'  = 28.02E-3    ;
TBT.'Rgco2' = Rabs/4.4E-2 ; TBT.'Mkco2' = 44.01E-3    ;
TBT.'Rgco'  = Rabs/2.8E-2 ; TBT.'Mkco'  = 28.01E-3    ;
TBT.'Rgvap' = Rabs/1.8E-2 ; TBT.'Mkvap' = 18.02E-3    ;
TBT.'Rgair' = 287.1       ; TBT.'Mkair' = 28.97E-3    ;
TBT.'Rgar'  = Rabs/4.E-2  ; TBT.'Mkar'  = 39.94E-3    ;
TBT.'Rgch4' = Rabs/16.E-3 ; TBT.'Mkch4' = 16.04E-3    ;
TBT.'lamair'= 2.580e-2    ;

TBT.'B0'    = -4512.70756 ; TBT.'B1'    = 4245585.9   ;
TBT.'B2'    = -1584624342.;

* Ancienne mouture
**TBT.'Rgh2'  = 4156.5                                     ;
**TBT.'Rghe'  = 2078.25                                    ;
**TBT.'Rgo2'  = 259.8                                      ;
**TBT.'Rgn2'  = 296.9                                      ;
**TBT.'Rgco2' = 188.9                                      ;
**TBT.'Rgco'  = 296.9                                      ;
**TBT.'Rgvap' = 461.513                                    ;
**TBT.'Rgair' = (0.8 '*' TBT.'Rgn2') '+' (0.2 '*' TBT.'Rgo2');
*--------------------------------------------------------
* Cpvap = Chaleur specifique a pression constante(J/Kg/K)
*         Hypothese de gaz parfait pour la vapeur d'eau
*
'SI' ('EXIST' rxt 'Cpvap')                               ;
 vertytab rxt 'Cpvap' 'FLOTTANT'                         ;
 Cpvap = rxt.'Cpvap'                                     ;
'SINON'                                                  ;
 Cpvap = 1700.                                           ;
'MESS' '==> Cpvap mis par defaut a 1700 J/kg/K        '  ;
'FINSI'                                                  ;
 TBT.'Cpvap'=Cpvap                                       ;
 TBT.'Cvvap'=TBT.'Cpvap' - TBT.'Rgvap'                   ;
*--------------------------------------------------------
* Lv = Chaleur Latente supposée constante (J/kg)
*
'SI' ('EXIST' rxt 'Lv')                                       ;
 vertytab rxt 'Lv' 'FLOTTANT'                                 ;
 Lv = rxt.'Lv'                                                ;
'SINON'                                                       ;
 Lv = 2.3E6                                                   ;
'MESS' '==> Chaleur latente Lv mise par defaut a 2.3E6 J/kg'  ;
'FINSI'                                                       ;
 TBT.'Lv'=Lv                                                  ;
*--------------------------------------------------------
* DB = coefficient de diffusion Brownienne
*
'SI' ('EXIST' rxt 'db')                                  ;
 vertytab rxt 'db' 'FLOTTANT'                            ;
 db = rxt.'db'                                           ;
'SINON'                                                  ;
 db = 1.000e-5                                           ;
'FINSI'                                                  ;
 TBT.'db'=db                                             ;
*----------------------------------------------------------

   TBT.'Taxe' = FAUX                                     ;
  Si (exist rxt 'axe')                                   ;
   vertytab rxt 'axe' 'MAILLAGE'                         ;
   TBT.'Taxe' = VRAI                                     ;
  Finsi                                                  ;

*----------------------------------------------------------
* SCENARIO = on verifie existence de la TABLE necessaire
*            pour faire un calcul avec ENCEINTE
*            si il y a au moins une brèche

   TBT.'Tbreche' = FAUX                                  ;
  Si (exist rxt 'breche')                                ;

   vertytab rxt 'breche' 'MAILLAGE'                      ;
   TBT.'Tbreche' = VRAI                                  ;

*  listentr= listentr et (mots 'diru1' 'scenario')       ;
   listentr.'diru1'       =''                            ;
   listentr.'scenario'    =''                            ;
   vertytab rxt 'diru1' 'POINT   '                       ;
   TBT.'diru1'=rxt.'diru1'                               ;

   vertytab rxt 'scenario' 'TABLE   '                    ;
   scn = rxt.'scenario'                                  ;
   TBT.'Modinj'=mot 'A'                                  ;
   Si(EXIST rxt.'scenario' 'Modinj')                     ;
   TBT.'Modinj'=rxt.'scenario'.'Modinj'                  ;
   Finsi                                                 ;
  Finsi                                                  ;

   TBT.'Tbreche2' = FAUX                                 ;
  Si (exist rxt 'breche2')                               ;

* pas de breche2 sans breche sinon pb ds les Qo
   vertytab rxt 'breche'  'MAILLAGE'                     ;
   vertytab rxt 'breche2' 'MAILLAGE'                     ;
   TBT.'Tbreche2' = VRAI                                 ;

*  listentr= listentr et (mots 'diru2''scenario2')       ;
   listentr.'diru2'       =''                            ;
   listentr.'scenario2'   =''                            ;
   vertytab rxt 'diru2' 'POINT   '                       ;
   TBT.'diru2'=rxt.'diru2'                               ;

   vertytab rxt 'scenario2' 'TABLE   '                   ;
   scn2 = rxt.'scenario2'                                ;
   TBT.'Modinj2'=mot 'A'                                 ;
   Si(EXIST rxt.'scenario2' 'Modinj')                    ;
   TBT.'Modinj2'=rxt.'scenario2'.'Modinj'                ;
   Finsi                                                 ;
  Finsi                                                  ;

   TBT.'Tbreche3' = FAUX                                 ;
  Si (exist rxt 'breche3')                               ;

* pas de breche3 sans breche sinon pb ds les Qo
   vertytab rxt 'breche'  'MAILLAGE'                     ;
   vertytab rxt 'breche2' 'MAILLAGE'                     ;
   vertytab rxt 'breche3' 'MAILLAGE'                     ;
   TBT.'Tbreche3' = VRAI                                 ;

*  listentr= listentr et (mots 'diru3''scenario3')       ;
   listentr.'diru3'       =''                            ;
   listentr.'scenario3'   =''                            ;
   vertytab rxt 'diru3' 'POINT   '                       ;
   TBT.'diru3'=rxt.'diru3'                               ;

   vertytab rxt 'scenario3' 'TABLE   '                   ;
   scn3 = rxt.'scenario3'                                ;
   TBT.'Modinj3'=mot 'A'                                 ;
   Si(EXIST rxt.'scenario3' 'Modinj')                    ;
   TBT.'Modinj3'=rxt.'scenario3'.'Modinj'                ;
   Finsi                                                 ;
  Finsi                                                  ;

   TBT.'Tsortie' = FAUX                                  ;

  Si (exist rxt 'sortie')                                ;
   vertytab rxt 'sortie' 'MAILLAGE'                      ;
   TBT.'Tsortie' = VRAI                                  ;
   Si (NON (exist rxt 'CORTEMP'))                        ;
   TBT.'CORTEMP' = FAUX                                  ;
   Finsi                                                 ;
  Finsi                                                  ;

*----------------------------------------------------------
* vtp : thermique paroi
*

   TBT.'THERMP' = FAUX                                   ;
   TBT.'THERCO' = FAUX                                   ;
   TBT.'ECHEXT' = FAUX                                   ;

 Si (Exist rxt 'THERMP')                                 ;
   vertytab rxt 'THERMP' 'LOGIQUE'                       ;
   TBT.'THERMP' = rxt.'THERMP'                           ;
 Finsi                                                   ;

 Si (Exist rxt 'THERCO')                                 ;
   vertytab rxt 'THERCO' 'LOGIQUE'                       ;
   TBT.'THERCO' = rxt.'THERCO'                           ;
  Si (TBT.'THERCO')                                      ;
   TBT.'THERMP' = VRAI                                   ;
   listand=listand et (MOTS 'THCO')                      ;
  Finsi                                                  ;
 Finsi                                                   ;

 Si TBT.'THERMP'                                         ;
* On vérifie que le modèle est bien renseigné
   vertytab rxt 'vtp'      'MAILLAGE'                    ;
   vertytab rxt 'ROCP'     'FLOTTANT' 'CHPOINT'          ;
   vertytab rxt 'LAMBDA'   'FLOTTANT' 'CHPOINT'          ;
   vertytab rxt 'Tp0'      'FLOTTANT' 'CHPOINT'          ;
   vertytab rxt 'ECHAN'    'FLOTTANT' 'CHPOINT'          ;

   listchp=listchp et (MOTS 'ROCP')                      ;
   listchp=listchp et (MOTS 'LAMBDA')                    ;
   listchp=listchp et (MOTS 'Tp0'   )                    ;
   listchp=listchp et (MOTS 'ECHAN' )                    ;

   'SI' ('NON' ('EXIST' tic 'ROCP'))                     ;
     tic.'ROCP'=rxt.'ROCP'                               ;
   'FINSI'                                               ;
   'SI' ('NON' ('EXIST' tic 'LAMBDA'))                   ;
   tic.'LAMBDA'=rxt.'LAMBDA'                             ;
   'FINSI'                                               ;
   'SI' ('NON' ('EXIST' tic 'Tp0'))                      ;
   tic.'Tp0'   =rxt.'Tp0'                                ;
   'FINSI'                                               ;
*? 'SI' ('NON' ('EXIST' tic 'KHW'))                      ;
   tic.'KHW'   =rxt.'ECHAN'                              ;
*? 'FINSI'                                               ;

  Si (Exist rxt 'ECHEXT')                                ;
   vertytab rxt 'ECHEXT' 'LOGIQUE'                       ;
   TBT.'ECHEXT'   = rxt.'ECHEXT'                         ;
  Finsi                                                  ;

  Si (TBT.'ECHEXT')                                      ;
   vertytab rxt 'parext'   'MAILLAGE'                    ;
   vertytab rxt 'HEXT'     'FLOTTANT' 'CHPOINT'          ;
   vertytab rxt 'TPEXT'    'FLOTTANT' 'CHPOINT'          ;

   listchp=listchp et (MOTS 'HEXT'  )                    ;
   listchp=listchp et (MOTS 'TPEXT' )                    ;

   'SI' ('NON' ('EXIST' tic 'HEXT'))                     ;
   tic.'HEXT'=rxt.'HEXT'                                 ;
   'FINSI'                                               ;
   'SI' ('NON' ('EXIST' tic 'TPEXT'))                    ;
   tic.'TPEXT'=rxt.'TPEXT'                               ;
   'FINSI'                                               ;

  Finsi                                                  ;

 'MESS' ' : ==> Scénario avec thermique paroi  '         ;
 Sinon                                                   ;
 'MESS' ' : ==> Scénario sans thermique paroi  '         ;
 Finsi                                                   ;
*----------------------------------------------------------
* TIMPi : Températures imposées
*
   TBT.'TTIMP1' = FAUX                                   ;
   TBT.'TTIMP2' = FAUX                                   ;
   TBT.'TTIMP3' = FAUX                                   ;
 Si (Exist rxt 'TIMP1')                                  ;
   TBT.'TTIMP1' = VRAI                                   ;
   vertytab rxt 'TIMP1' 'TABLE'                          ;
   vertytab (rxt.'TIMP1') 'MAILLAGE' 'MAILLAGE'          ;
   vertytab (rxt.'TIMP1') 'ECHAN'    'FLOTTANT'          ;
   vertytab (rxt.'TIMP1') 't'        'LISTREEL'          ;
   vertytab (rxt.'TIMP1') 'TIMP'     'LISTREEL'          ;
 Finsi                                                   ;

 Si (Exist rxt 'TIMP2')                                  ;
   TBT.'TTIMP2' = VRAI                                   ;
   vertytab rxt 'TIMP2' 'TABLE'                          ;
   vertytab (rxt.'TIMP2') 'MAILLAGE' 'MAILLAGE'          ;
   vertytab (rxt.'TIMP2') 'ECHAN'    'FLOTTANT'          ;
   vertytab (rxt.'TIMP2') 't'        'LISTREEL'          ;
   vertytab (rxt.'TIMP2') 'TIMP'     'LISTREEL'          ;
 Finsi                                                   ;

 Si (Exist rxt 'TIMP3')                                  ;
   TBT.'TTIMP3' = VRAI                                   ;
   vertytab rxt 'TIMP3' 'TABLE'                          ;
   vertytab (rxt.'TIMP3') 'MAILLAGE' 'MAILLAGE'          ;
   vertytab (rxt.'TIMP3') 'ECHAN'    'FLOTTANT' 'CHPOIN' ;
   vertytab (rxt.'TIMP3') 't'        'LISTREEL'          ;
   vertytab (rxt.'TIMP3') 'TIMP'     'LISTREEL'          ;
 Finsi                                                   ;

*----------------------------------------------------------
* ECHANP : Température du mur constante ou calculée via une procédure
* personnelle
   TBT.'TECHANP' = FAUX                                  ;
 Si (Exist rxt 'ECHANP')                                 ;
   TBT.'TECHANP' = VRAI                                  ;
   vertytab rxt 'ECHANP' 'TABLE'                         ;
   vertytab (rxt.'ECHANP') 'MAILLAGE' 'MAILLAGE'         ;
   vertytab (rxt.'ECHANP') 'ECHAN'    'FLOTTANT'         ;
   vertytab (rxt.'ECHANP') 'TMUR'     'FLOTTANT'         ;
 Finsi                                                   ;

* On verifie les données de la table RECOMB
* pour définir des recombineurs
   TBT.'TRECOMB' = FAUX ;
  'SI' ('EXIST' rxt 'RECOMB') ;
   vertytab rxt 'RECOMB' 'TABLE   ' ;
   NBREC = 'DIME' rxt.'RECOMB' ;

   'REPETER' BCL1 NBREC ;
   vertytab (rxt.'RECOMB' . &BCL1) 'PAREXT' 'MAILLAGE' ;
   vertytab (rxt.'RECOMB' . &BCL1) 'ENTREE' 'MAILLAGE' ;
   vertytab (rxt.'RECOMB' . &BCL1) 'SORTIE' 'MAILLAGE' ;
   vertytab (rxt.'RECOMB' . &BCL1) 'direntr' 'POINT   ' ;
   vertytab (rxt.'RECOMB' . &BCL1) 'dirsort' 'POINT   ' ;
   'FIN' BCL1 ;
   TBT.'TRECOMB' = VRAI ;
   TBT.'RECOMB'  = rxt.'RECOMB' ;
  'FINSI' ;
*----------------------------------------------------------
* MODTURB = Mot identifiant le modèle de turbulence
* NUTURB ou LMEL ou KEPSILON ou NUTCONS

  Si (Exist rxt 'MODTURB')                               ;

   vertytab rxt 'MODTURB' 'MOT'                          ;
   TBT.'MODTURB'=rxt.'MODTURB'                           ;

* On vérifie que le modèle est bien identifié
   lxt=table                                             ;
   lxt.'NUTURB'   = ' '                                  ;
   lxt.'LMEL'     = ' '                                  ;
   lxt.'KEPSILON' = ' '                                  ;
   vertytab lxt rxt.'MODTURB' 'MOT'                      ;

* Nu turbulent constant
   Si(Ega rxt.'MODTURB' 'NUTURB')                        ;
*  listentr=listentr et (mots 'NUT')                     ;
   listentr.'NUT'         =''                            ;
   vertytab rxt 'NUT' 'FLOTTANT'                         ;
   TBT.'NUT'    = rxt.'NUT'                              ;
   Finsi                                                 ;

* Longueur de mélange
   Si(Ega rxt.'MODTURB' 'LMEL' )                         ;
*  listentr=listentr et (mots 'LMEL')                    ;
   listentr.'LMEL'        =''                            ;
   vertytab rxt 'LMEL' 'FLOTTANT'                        ;
   TBT.'LMEL' = rxt.'LMEL'                               ;
   Finsi                                                 ;

 'MESS' '         : ==> Scenario avec modèle de turbulence '
  rxt.'MODTURB' ;
 Sinon                                                   ;
 'MESS' '         : ==> Scenario sans modèle de turbulence ';
 Finsi                                                   ;
*----------------------------------------------------------
* FPAROI = logique identifiant l'utilisation de fonctions
* de paroi

   TBT.'FPAROI' = FAUX                                   ;
 'SI' ('EXIST' rxt 'FPAROI')                             ;
   vertytab rxt 'FPAROI' 'LOGIQUE'                       ;
   TBT.'FPAROI' = rxt.'FPAROI'                           ;
 'FINSI'                                                 ;

 'SI' TBT.'FPAROI'                                       ;
 'MESS' '         : ==> Scenario avec fonction de paroi ';
*  listentr=listentr et (mots 'YP')                      ;
   listentr.'YP'          =''                            ;
   vertytab rxt 'YP' 'FLOTTANT'                          ;
   TBT.'YP'=rxt.'YP'                                     ;
 'FINSI'                                                 ;

*----------------------------------------------------------
* MODCOND = mot identifiant la formulation du flux de
* condensation
   TBT.'MODCOND' = 'CHIL0'                               ;
'SI' ('EXIST' rxt 'MODCOND')                             ;
   vertytab rxt 'MODCOND' 'MOT'                          ;
   TBT.'MODCOND' = rxt.'MODCOND'                         ;

* On vérifie que le modèle est bien identifié
   lxt=table                                             ;
   lxt.'CHIL0'   = ' '                                   ;
   lxt.'CHIL1'     = ' '                                 ;
   vertytab lxt rxt.'MODCOND' 'MOT'                      ;

'FINSI'                                                  ;
   'MESS' '       : ==> Scénario avec flux de condensation '
  TBT.'MODCOND' ;
*----------------------------------------------------------
* PERSO = logique identifiant une procédure PERSO
* dans le cas de calcul

   TBT.'PERSO' = FAUX                                    ;
'SI' ('EXIST' rxt 'PERSO')                               ;
   vertytab rxt 'PERSO' 'LOGIQUE'                        ;
   TBT.'PERSO' = rxt.'PERSO'                             ;
'FINSI'                                                  ;

 'SI' TBT.'PERSO'                                        ;
 'MESS' '         : ==> Scénario avec exécution d une  ' ;
 'MESS' '               procédure personnelle          ' ;

* listentr = listentr et (mots 'PRCPERSO' 'TABPERSO')    ;
  listentr.'PRCPERSO' =''                                ;
  listentr.'TABPERSO' =''                                ;

   vertytab rxt 'PRCPERSO' 'MOT'                         ;
   TBT.'PRCPERSO' = rxt.'PRCPERSO'                       ;
   vertytab rxt 'TABPERSO' 'TABLE'                       ;
   TBT.'TABPERSO' = rxt.'TABPERSO'                       ;
'FINSI'                                                  ;

*----------------------------------------------------------
* VAPEUR = logique identifiant l'utilisation de vapeur
* dans le cas de calcul

   TBT.'VAPEUR' = FAUX                                   ;
 'SI' ('EXIST' rxt 'VAPEUR')                             ;
   vertytab rxt 'VAPEUR' 'LOGIQUE'                       ;
   TBT.'VAPEUR' = rxt.'VAPEUR'                           ;
 'FINSI'                                                 ;

 'SI' TBT.'VAPEUR'                                       ;
   vertytab rxt 'Yvap0' 'FLOTTANT'                       ;
   listentr.'Yvap0'        =''                           ;
   listentr.'Mliq0'        =''                           ;
   listentr.'Lv'           =''                           ;
   listentr.'Cpvap'        =''                           ;
 'FINSI'                                                 ;

*-----------------------------------------------------------
* Modif. FP 18/05/00
* Introduction d'une nouvelle variable logique qui est vrai lorsque la
* condensation en masse est prise en compte.

* CONDMAS = Mot identifiant le modèle de condensation en masse
* CMAS0

   TBT.'CONDMAS' = FAUX                                  ;
   TBT.'MODCMAS'  ='????'                                ;
   listentr.'CONDMAS'     =''                            ;
   listentr.'HMAS'        =''                            ;
   listentr.'WCM'         =''                            ;
*'SI' ('EXIST' rxt 'CONDMAS')                             ;
*   vertytab rxt 'CONDMAS' 'MOT'                          ;
*   TBT.'CONDMAS' = VRAI                                  ;
** On vérifie que le modèle est bien identifié
*   lxt=table                                             ;
*   lxt.'CMAS0'    = ' '                                  ;
*   vertytab lxt rxt.'CONDMAS' 'MOT'                      ;
*   TBT.'MODCMAS'  = rxt.'CONDMAS'                        ;
*     Si ('EGA' rxt.'CONDMAS' 'CMAS0')                    ;
*      Si ('EXIST' rxt 'HMAS')                            ;
*      vertytab rxt 'HMAS' 'FLOTTANT'                     ;
*      TBT.'HMAS'=rxt.'HMAS'                              ;
*      Sinon                                              ;
*      TBT.'HMAS'=0.                                      ;
*      Finsi                                              ;
*      Si ('EXIST' rxt 'WCM')                             ;
*      vertytab rxt 'WCM' 'FLOTTANT'                      ;
*      TBT.'WCM'=rxt.'WCM'                                ;
*      Sinon                                              ;
*      TBT.'WCM'=0.                                       ;
*      Finsi                                              ;
*     Finsi                                               ;
*'FINSI'                                                  ;
*-----------------------------------------------------------
* ASPER logique indiquant qu'on traite l'aspersion

'SI' TBT.'VAPEUR'                                        ;
   listentr.'ASPER'       =''                            ;
'FINSI'                                                  ;

   TBT.'ASPER' = FAUX                                    ;
 'SI' ('EXIST' rxt 'ASPER')                              ;
   vertytab rxt 'ASPER' 'LOGIQUE'                        ;
   TBT.'ASPER' = rxt.'ASPER'                             ;
 'FINSI'                                                 ;

 'SI' (TBT.'ASPER')                                      ;
   listentr.'scenasp'    =''                             ;
   vertytab rxt 'scenasp' 'TABLE   '                     ;
   scn = rxt.'scenasp'                                   ;

   vertytab rxt 'aspinj' 'MAILLAGE'                      ;
   listentr.'aspinj'      =''                            ;
   vertytab rxt 'toitf'  'MAILLAGE'                      ;
   listentr.'toitf'       =''                            ;
   vertytab rxt 'rod'    'FLOTTANT'                      ;
   listentr.'rod'        =''                             ;
   vertytab rxt 'Cpd'    'FLOTTANT'                      ;
   listentr.'Cpd'         =''                            ;
 'FINSI'                                                 ;

*----------------------------------------------------------
* Vérification des incondensables utilisés
* Les incondensables possibles sont H2, HE, O2, N2, CO, CO2
*
*---------------------------------------------------------
LINCOND = 'MOTS'                                         ;
TBT.'TH2' = FAUX                                         ;
TBT.'THE' = FAUX                                         ;
TBT.'TO2' = FAUX                                         ;
TBT.'TN2' = FAUX                                         ;
TBT.'TCO2'= FAUX                                         ;
*? TCO2AIR
TBT.'TAIR'= FAUX                                         ;
TBT.'TCO' = FAUX                                         ;

'SI' ('EXIST' rxt 'H2' )                                 ;
 vertytab rxt 'H2' 'LOGIQUE'                             ;
 TBT.'TH2' = rxt.'H2'                                    ;
 'SI' TBT.'TH2'                                          ;
 LINCOND=LINCOND 'ET' ('MOTS' 'H2')                      ;
 vertytab rxt 'Yh20' 'FLOTTANT'                          ;
 listentr.'Yh20'        =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qh2' 'LISTREEL'           ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

'SI' ('EXIST' rxt 'HE' )                                 ;
 vertytab rxt 'HE' 'LOGIQUE'                             ;
 TBT.'THE' = rxt.'HE'                                    ;
 'SI' TBT.'THE'                                          ;
 LINCOND=LINCOND 'ET' ('MOTS' 'HE')                      ;
 vertytab rxt 'Yhe0' 'FLOTTANT'                          ;
 listentr.'Yhe0'        =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qhe' 'LISTREEL'           ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

'SI' ('EXIST' rxt 'O2' )                                 ;
 vertytab rxt 'O2' 'LOGIQUE'                             ;
 TBT.'TO2' = rxt.'O2'                                    ;
 'SI' TBT.'TO2'                                          ;
 LINCOND=LINCOND 'ET' ('MOTS' 'O2')                      ;
 vertytab rxt 'Yo20' 'FLOTTANT'                          ;
 listentr.'Yo20'        =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qo2' 'LISTREEL'           ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

'SI' ('EXIST' rxt 'N2' )                                 ;
 vertytab rxt 'N2' 'LOGIQUE'                             ;
 TBT.'TN2' = rxt.'N2'                                    ;
 'SI' TBT.'TN2'                                          ;
 LINCOND=LINCOND 'ET' ('MOTS' 'N2')                      ;
 vertytab rxt 'Yn20' 'FLOTTANT'                          ;
 listentr.'Yn20'        =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qn2' 'LISTREEL'           ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

'SI' ('EXIST' rxt 'CO2' )                                ;
 vertytab rxt 'CO2' 'LOGIQUE'                            ;
 TBT.'TCO2' = rxt.'CO2'                                  ;
 'SI' TBT.'TCO2'                                         ;
 LINCOND=LINCOND 'ET' ('MOTS' 'CO2')                     ;
 vertytab rxt 'Yco20' 'FLOTTANT'                         ;
 listentr.'Yco20'       =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qco2' 'LISTREEL'          ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

*? TCO2AIR
'SI' ('EXIST' rxt 'AIR' )                                ;
 vertytab rxt 'AIR' 'LOGIQUE'                            ;
 TBT.'TAIR' = rxt.'AIR'                                  ;
 'SI' TBT.'TAIR'                                         ;
 LINCOND=LINCOND 'ET' ('MOTS' 'AIR')                     ;
*? non  vertytab rxt 'Yair0' 'FLOTTANT'                         ;
*? non  listentr.'Yair0'       =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qair' 'LISTREEL'          ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

'SI' ('EXIST' rxt 'CO' )                                 ;
 vertytab rxt 'CO' 'LOGIQUE'                             ;
 TBT.'TCO' = rxt.'CO'                                    ;
 'SI' TBT.'TCO'                                          ;
 LINCOND=LINCOND 'ET' ('MOTS' 'CO')                      ;
 vertytab rxt 'Yco0' 'FLOTTANT'                          ;
 listentr.'Yco0'        =''                              ;
  'SI' ('EXIST' rxt 'scenario')                          ;
    vertytab (rxt.'scenario') 'qco' 'LISTREEL'           ;
  'FINSI'                                                ;
 'FINSI'                                                 ;
'FINSI'                                                  ;

*---------------------------------------------------------
* Affichage de la liste des incondensables
*---------------------------------------------------------

TINCOND= 'NON' ( 'EGA' ('DIME' LINCOND ) 0 )             ;
'SI' TINCOND                                             ;
'MESS' ' Liste des incondensables : '                    ;
'LIST' LINCOND                                           ;
'SINON'                                                  ;
'MESS' ' Il n y a pas d incondensable hormis AIR '       ;
'FINSI'                                                  ;

'SI' TBT.'TRECOMB' ;
LOG0 = TBT.'TH2' 'ET' TBT.'VAPEUR' 'ET' TBT.'TN2' 'ET' TBT.'TO2' ;
  'SI' ('NON' LOG0) ;
    'MESS' 'RECOMBINEUR ==> H2, H20, O2 et N2 par defaut !' ;
    'ERRE' 5 ;
  'FINSI' ;
'FINSI' ;

*---------------------------------------------------------
* Initialisation des paramètres du modèle
* nimpr = Niveau impression lors de la résolution
*         0 = Pas d'impression
* epsi = tolérance pour les maillages (OPERATEUR ELIM)
* FRPREC : ENTIER fréquence de recalcul du préconditionnement
*---------------------------------------------------------

 TBT.'nimpr'=0                                           ;
 TBT.'IMPR' =2                                           ;
'SI' ('EXIST' rxt 'IMPR' )                               ;
 vertytab rxt 'IMPR'  'ENTIER'                           ;
 TBT.'IMPR' =rxt.'IMPR'                                  ;
'FINSI'                                                  ;

  GEO.'epsi'= 1.e-4                                      ;
'SI' ('EXIST' rxt 'epsi')                                ;
  vertytab rxt 'epsi' 'FLOTTANT'                         ;
  GEO.'epsi'= rxt.'epsi'                                 ;
'FINSI'                                                  ;

'SI' ( 'EXIST' rxt 'FRPREC' )                                      ;
  vertytab rxt 'FRPREC' 'ENTIER'                                   ;
  TBT.'FRPREC'   = rxt.'FRPREC'                                    ;
'FINSI'                                                            ;
*-----------------------------------------------------------------------
* Controle des entrées de la table RXT et de la compatibilité
* entre les entrées.
*-----------------------------------------------------------------------
* On vérifie que les entrées de RXT sont autorisées


  lindex=index rxt ;
  n=dime lindex;

  repeter Bver n ;
*mess lindex.&bver ;
  tae=type lindex.&bver ;
  Si (non (ega tae 'MOT'));
  Mess ' Il y a un indice qui n est pas de type mot dans la table ';
  erreur 21 ;
  Finsi ;
  Si (non (exist listentr lindex.&bver)) ;
  Mess                                                                 ;
  Mess '**************************************************************';
  Mess                                                                 ;
  Mess ' Il y a un indice non reconnu :   ' lindex.&bver
 '    dans la table ';
  Mess                                                                 ;
  Mess '**************************************************************';

  erreur 21 ;
  Finsi ;
  Fin Bver ;

  n=dime listand ;
  Si (non (ega n 0));
  Mess                                                                 ;
  Mess '**************************************************************';
  Mess                                                                 ;
  Mess ' Il y a des options surchargées dont voici la liste :   '      ;
  list listand                                                         ;
  Si (exist listand 'THCO')                                            ;
  Mess                                                                 ;
  Mess 'Commentaire:'                                                  ;
  mess 'THCO: le couplage thermique paroi/thermohydraulique'
  ' est implicite'                                                     ;
  Finsi                                                                ;
  Mess                                                                 ;
  Mess '**************************************************************';
  Finsi ;

* Vérification de Compatibilités

'SI'(('EGA' TBT.'ALGO' 'EFM1') et ('EGA' TBT.'discr' 'QUAF'))          ;
vertytab 'ERREUR' 'ERREUR'
                            (CHAI 'Options QUAF et EFM1 incompatibles');
'FINSI'                                                                ;


'SI'(Exist TBT 'MODTURB')                                              ;
'SI'( (Ega TBT.'MODTURB' 'KEPSILON') et (non('EGA' TBT.'ALGO' 'EFM1')));
vertytab 'ERREUR' 'ERREUR'
       (CHAI 'L option EFM1 est nécessaire pour le modèle K-epsilon')  ;
'FINSI'                                                                ;
'FINSI'                                                                ;

'SI'(TBT.'Tsortie' et TBT.'CORTEMP')                                   ;
vertytab 'ERREUR' 'ERREUR'
  (CHAI 'Ecoulement ouvert (Sortie) incompatible avec CORTEMP VRAI')   ;
'FINSI'                                                                ;




*-----------------------------------------------------------------------
*-----------------------------------------------------------------------
*-----------------------------------------------------------------------
* ------------- FIN DES INITIALISATIONS ET VERIFICATIONS ---------------
*-----------------------------------------------------------------------
*-----------------------------------------------------------------------
*-----------------------------------------------------------------------

 'SI' (TPREPA);
   PREPAENC rxt TBT GEO TIC ;
 'FINSI' ;

  rxt.'TBT'=TBT;

*==============================================================
 GEO=rxt.'GEO' ;

* On depile un certain nombre de renseignements sur le
* cas test a traiter

  idim = vale 'DIME';
  DIM3D=FAUX ;
  Si(EGA idim 3);
  DIM3D=VRAI ;
  Finsi ;

* B/ Les maillages ou modeles

 vtf         = rxt.'vtf'                                 ;
'SI' (TBT.'Tbreche');
 breche = rxt.'breche'                                   ;
 brechec=GEO.'brechec'                                   ;
 brechei=GEO.'brechei'                                   ;
 $breche=GEO.'$breche'                                   ;
 Sbreche = GEO.'Sbreche'                                 ;
'FINSI';
'SI' (TBT.'Tbreche2');
 breche2=rxt.'breche2'                                   ;
 brech2c=GEO.'brech2c'                                   ;
 brech2i=GEO.'brech2i'                                   ;
 $breche2=GEO.'$breche2'                                 ;
 Sbreche2= GEO.'Sbreche2'                                ;
'FINSI';
'SI' (TBT.'Tbreche3');
 breche3=rxt.'breche3'                                   ;
 brech3c=GEO.'brech3c'                                   ;
 brech3i=GEO.'brech3i'                                   ;
 $breche3=GEO.'$breche3'                                 ;
 Sbreche3= GEO.'Sbreche3'                                ;
'FINSI';

 $vtf      = GEO.'$vtf'                                  ;
'SI' TBT.'THERMP'                                        ;
 $vtp      = GEO.'$vtp'                                  ;
 $paroif  = GEO.'$paroif'                                ;
 paroif   = GEO.'paroif'                                 ;
'FINSI'                                                  ;

 Diag   = 'DOMA' $vtf    'XXDIAGSI'                      ;

 Volvtf = 'DOMA' $vtf    'VOLUME'                        ;
 VTotal  = GEO.'VTotal'                                  ;


'MESS' ' ************* GEOMETRIE  *********************' ;
'MESS' ' **********************************************' ;
  'DOMA' $vtf 'IMPR'                                     ;
'SI' TBT.'THERMP'                                        ;
  'DOMA' $vtp 'IMPR'                                     ;
'FINSI'                                                  ;


* C/ Les chaines de caracteres

*? DISCR  = TBT.'discr'                                  ;
 tic    = rxt.'TIC'                                      ;

* D/ Les données physiques

 Cpvap  = TBT.'Cpvap'                                    ;
 Lv     = TBT.'Lv'                                       ;
 Rgh2   = TBT.'Rgh2'                                     ;
 Rghe   = TBT.'Rghe'                                     ;
 Rgo2   = TBT.'Rgo2'                                     ;
 Rgn2   = TBT.'Rgn2'                                     ;
 Rgco2  = TBT.'Rgco2'                                    ;
 Rgco   = TBT.'Rgco'                                     ;
 Rgvap  = TBT.'Rgvap'                                    ;
 Rgair  = TBT.'Rgair'                                    ;

'MESS' ' ************* DISCRETISATION *****************' ;
'MESS' ' **********************************************' ;
'MESS' ' Discr = ' tbt.'discr' ' Pression = ' tbt.'KPRE' ;
'MESS' ' Algo  = ' algo  ' Niveau impression = ' nimpr   ;
'MESS' ' Pas de temps DT = ' rxt.'DT0'                   ;

* Calcul Cp (Tfm)
ndl   = 'DIME' (tic.'Tfm')                               ;
Tfm   = 'EXTR' (tic.'Tfm')    ndl                        ;
* CALCP initialisation  ?
Cph2 Cphe Cpo2 Cpn2 Cpco2 Cpco Cpair =  CALCP  Tfm       ;
Cpvap = TBT.'Cpvap'                                      ;

* Calcul Mu (Tkm)
Tkm=Tfm '+' 273.15                                       ;
Muh2 Muhe Muo2 Mun2 Muco2 Muco Muvap Muair =  CALMU  Tkm ;

'MESS' ' ******* PROPRIETES PHYSIQUES *****************' ;
'MESS' ' **********************************************' ;

'MESS' ' ***** Air ***** '                               ;
 Cvair       = Cpair '-' Rgair                           ;
'MESS' '==> Cpair = ' Cpair 'J/kg/K'                     ;
'MESS' '==> Cvair = ' Cvair 'J/kg/K'                     ;
'MESS' '==> Rgair = ' Rgair 'J/kg/K'                     ;

'SI' TBT.'VAPEUR'                                        ;
'MESS' ' ***** Vapeur H2o ***** '                        ;
 Cvvap       = Cpvap '-' Rgvap                           ;
'MESS' '==> Cpvap = ' Cpvap 'J/kg/K'                     ;
'MESS' '==> Cvvap = ' Cvvap 'J/kg/K'                     ;
'MESS' '==> Rgvap = ' Rgvap 'J/kg/K'                     ;
'MESS' '==> Lv    = ' Lv  'J/kg/K'                       ;
'FINSI'                                                  ;

'SI' TBT.'THE'                                           ;
'MESS' ' ***** He  ***** '                               ;
 Cvhe        = Cphe  '-' Rghe                            ;
'MESS' '==> Cphe  = ' Cphe 'J/kg/K'                      ;
'MESS' '==> Cvhe  = ' Cvhe 'J/kg/K'                      ;
'MESS' '==> Rghe  = ' Rghe 'J/kg/K'                      ;
'FINSI'                                                  ;

'SI' TBT.'TH2'                                           ;
'MESS' ' ***** H2  ***** '                               ;
 Cvh2        = Cph2  '-' Rgh2                            ;
'MESS' '==> Cph2  = ' Cph2 'J/kg/K'                      ;
'MESS' '==> Cvh2  = ' Cvh2 'J/kg/K'                      ;
'MESS' '==> Rgh2  = ' Rgh2 'J/kg/K'                      ;
'FINSI'                                                  ;

'SI' TBT.'TO2'                                           ;
'MESS' ' ***** O2  ***** '                               ;
 Cvo2        = Cpo2  '-' Rgo2                            ;
'MESS' '==> Cpo2  = ' Cpo2 'J/kg/K'                      ;
'MESS' '==> Cvo2  = ' Cvo2 'J/kg/K'                      ;
'MESS' '==> Rgo2  = ' Rgo2 'J/kg/K'                      ;
'FINSI'                                                  ;

'SI' TBT.'TN2'                                           ;
'MESS' ' ***** N2  ***** '                               ;
 Cvn2        = Cpn2  '-' Rgn2                            ;
'MESS' '==> Cpn2  = ' Cpn2 'J/kg/K'                      ;
'MESS' '==> Cvn2  = ' Cvn2 'J/kg/K'                      ;
'MESS' '==> Rgn2  = ' Rgn2 'J/kg/K'                      ;
'FINSI'                                                  ;

'SI' TBT.'TCO2'                                          ;
'MESS' ' ***** CO2 ***** '                               ;
 Cvco2       = Cpco2 '-' Rgco2                           ;
'MESS' '==> Cpco2 = ' Cpco2 'J/kg/K'                     ;
'MESS' '==> Cvco2 = ' Cvco2 'J/kg/K'                     ;
'MESS' '==> Rgco2 = ' Rgco2 'J/kg/K'                     ;
'FINSI'                                                  ;

*? TCO2AIR
'SI' TBT.'TAIR'                                          ;
'MESS' ' ***** AIR ***** '                               ;
 Cvair       = Cpair '-' Rgair                           ;
'MESS' '==> Cpair = ' Cpair 'J/kg/K'                     ;
'MESS' '==> Cvair = ' Cvair 'J/kg/K'                     ;
'MESS' '==> Rgair = ' Rgair 'J/kg/K'                     ;
'FINSI'                                                  ;

'SI' TBT.'TCO'                                           ;
'MESS' ' ***** CO  ***** '                               ;
 Cvco        = Cpco  '-' Rgco                            ;
'MESS' '==> Cpco  = ' Cpco 'J/kg/K'                      ;
'MESS' '==> Cvco  = ' Cvco 'J/kg/K'                      ;
'MESS' '==> Rgco  = ' Rgco 'J/kg/K'                      ;
'FINSI'                                                  ;

'MESS' ' *************** '                               ;
'MESS' ' Diffusion browniene db = ' db                   ;
'SI' TBT.'THERMP'                                        ;
  'SI' ('EGA' ('TYPE' tic.'KHW') 'CHPOINT')              ;
    'MESS' ' Coefficient d echange ECHAN (Min/Max)= '
       ('MINI' tic.'KHW') '  ' ('MAXI' tic.'KHW') 'W/m2/K' ;
  'SINON' ;
'MESS' ' Coefficient d echange ECHAN= ' tic.'KHW' 'W/m2/K' ;
  'FINSI'                                                ;
'FINSI'                                                  ;


'MESS' '*** Bilans initiaux 0D-MultiD ***'               ;
'MESS' '_____________________________________________________________';
'MESS' '---------Bilans 0D ____________________Bilans MultiD ________'
       '_____________ Erreur Relative (%)';
*---- Bilan masse
 Rhom   = 'EXTR' (tic.'Rhom')    ndl                     ;
 M0D = Rhom '*' Vtotal                                   ;
 MMD = 'SOMT' (Diag '*' rxt.'TIC'.'RHO')                 ;

 'SI' TBT.'VAPEUR'                                       ;
      Rhomv   = 'EXTR' (tic.'Rhomv')    ndl              ;
      MV0D = Rhomv '*' Vtotal                            ;
      MVMD = 'SOMT' (Diag '*' rxt.'TIC'.'ROVP')          ;
      Rhomvg  = 'EXTR' (tic.'Rhomvg')    ndl             ;
*?    Rliqm   = 'EXTR' (tic.'Rliqm')     ndl             ;
*?    Rbrom   = 'EXTR' (tic.'Rbrom')     ndl             ;
      MVG0D = Rhomvg '*' Vtotal                          ;
      MVGMD = 'SOMT' (Diag '*' rxt.'TIC'.'RVP')          ;
 'FINSI'                                                 ;
 'SI' TBT.'THE'                                          ;
      Rhomhe   = 'EXTR' (tic.'Rhomhe')    ndl            ;
      MHE0D = Rhomhe '*' Vtotal                          ;
      MHEMD = 'SOMT' (Diag '*' rxt.'TIC'.'RHE')          ;
 'FINSI'                                                 ;
 'SI' TBT.'TH2'                                          ;
      Rhomh2   = 'EXTR' (tic.'Rhomh2')    ndl            ;
      MH20D = Rhomh2 '*' Vtotal                          ;
      MH2MD = 'SOMT' (Diag '*' rxt.'TIC'.'RH2')          ;
 'FINSI'                                                 ;
 'SI' TBT.'TO2'                                          ;
      Rhomo2   = 'EXTR' (tic.'Rhomo2')    ndl            ;
      MO20D = Rhomo2 '*' Vtotal                          ;
      MO2MD = 'SOMT' (Diag '*' rxt.'TIC'.'RO2')          ;
 'FINSI'                                                 ;
 'SI' TBT.'TN2'                                          ;
      Rhomn2   = 'EXTR' (tic.'Rhomn2')    ndl            ;
      MN20D = Rhomn2 '*' Vtotal                          ;
      MN2MD = 'SOMT' (Diag '*' rxt.'TIC'.'RN2')          ;
 'FINSI'                                                 ;
 'SI' TBT.'TCO'                                          ;
      Rhomco   = 'EXTR' (tic.'Rhomco')    ndl            ;
      MCO0D = Rhomco '*' Vtotal                          ;
      MCOMD = 'SOMT' (Diag '*' rxt.'TIC'.'RCO')          ;
 'FINSI'                                                 ;
 'SI' TBT.'TCO2'                                         ;
      Rhomco2   = 'EXTR' (tic.'Rhomco2')    ndl          ;
      MCO20D = Rhomco2 '*' Vtotal                        ;
      MCO2MD = 'SOMT' (Diag '*' rxt.'TIC'.'RCO2')        ;
 'FINSI'                                                 ;
*? TCO2AIR
 'SI' TBT.'TAIR'                                         ;
      Rhomair   = 'EXTR' (tic.'Rhomair')    ndl          ;
      MAIR0D = Rhomair '*' Vtotal                        ;
      MAIRMD = 'SOMT' (Diag '*' rxt.'TIC'.'RAIR')        ;
 'FINSI'                                                 ;

*---- Bilan energie

 Remn   = 'EXTR' (tic.'Remn')    ndl                     ;
 E0D = Remn                                              ;
 'SI' ( 'EGA' ndl 1 )                                    ;
 Cvm     = 'EXTR' (tic.'Cvm')      ndl                   ;
 'SINON'                                                 ;
 Cvm     = 'EXTR' (tic.'Cvm')     (ndl-1)                ;
 'FINSI'                                                 ;
 EMD = ( 'SOMT' (Diag '*' Cvm '*' rxt.'TIC'.'RHO' '*'
       (rxt.'TIC'.'TF' '+' 273.15)) ) '/' Vtotal         ;
 'MESS' ' Masse   (Kg)  ' M0D '_______' MMD '________'
       (100. '*'(M0D '-' MMD) '/'M0D)                    ;
 'MESS' ' Energie (J/m3)' E0D '_______' EMD '________'
       (100. '*' (E0D '-' EMD) '/' E0D)                  ;
 'SI' (TBT.'VAPEUR' 'ET' ('NON' ('EGA' MV0D 0.0)))       ;
 'MESS' ' M Vapeur(Kg)  ' MV0D '_______' MVMD '_______'
       (100. '*' (MV0D '-' MVMD) '/' MV0D)               ;
 'FINSI'                                                 ;
 'SI' (TBT.'THE' 'ET' ('NON' ('EGA' MHE0D 0.0)))         ;
 'MESS' ' M Helium (Kg)  ' MHE0D '_______' MHEMD '_______'
       (100. '*' (MHE0D '-' MHEMD) '/' MHE0D)            ;
 'FINSI'                                                 ;
 'SI' (TBT.'TH2' 'ET' ('NON' ('EGA' MH20D 0.0)))         ;
 'MESS' ' M Hydrogene (Kg)  ' MH20D '_______' MH2MD '_______'
       (100. '*' (MH20D '-' MH2MD) '/' MH20D)            ;
 'FINSI'                                                 ;
 'SI' (TBT.'TO2' 'ET' ('NON' ('EGA' MO20D 0.0)))         ;
 'MESS' ' M Oxygene (Kg)  ' MO20D '_______' MO2MD '_______'
       (100. '*' (MO20D '-' MO2MD) '/' MO20D)            ;
 'FINSI'                                                 ;
 'SI' (TBT.'TN2' 'ET' ('NON' ('EGA' MN20D 0.0)))         ;
 'MESS' ' M Azote (Kg)  ' MN20D '_______' MN2MD '_______'
       (100. '*' (MN20D '-' MN2MD) '/' MN20D)            ;
 'FINSI'                                                 ;
 'SI' (TBT.'TCO' 'ET' ('NON' ('EGA' MCO0D 0.0)))         ;
 'MESS' ' M CO (Kg)  ' MCO0D '_______' MCOMD '_______'
       (100. '*' (MCO0D '-' MCOMD) '/' MCO0D)            ;
 'FINSI'                                                 ;
 'SI' (TBT.'TCO2' 'ET' ('NON' ('EGA' MCO20D 0.0)))       ;
 'MESS' ' M CO2 (Kg)  ' MCO20D '_______' MCO2MD '_______'
       (100. '*' (MCO20D '-' MCO2MD) '/' MCO20D)         ;
 'FINSI'                                                 ;
*? TCO2AIR
 'SI' (TBT.'TAIR' 'ET' ('NON' ('EGA' MAIR0D 0.0)))       ;
 'MESS' ' M AIR (Kg)  ' MAIR0D '_______' MAIRMD '_______'
       (100. '*' (MAIR0D '-' MAIRMD) '/' MAIR0D)         ;
 'FINSI'                                                 ;
 'MESS' '_____________________________________________'
        '________________'                               ;
 'SI' TBT.'THERMP'                                       ;
      Emurn  = 'EXTR' (tic.'Emur')    ndl                ;
     'MESS' ' Energie Stockée Mur (J) ' Emurn            ;
 'MESS' '_____________________________________________'
        '________________'                               ;
 'FINSI'                                                 ;

'MESS' ' *** Divers **** '                               ;

'MESS' ' Dimension espace: ' idim                        ;
'MESS' ' Nombre d elements/noeuds ' ('NBEL' vtf)
                                    ('NBNO' vtf)         ;

'MESS' '***********************************************' ;


 Econv = 0.0                                             ;
 Qc = 0.0                                                ;
 Econd = 0.0                                             ;
 Hcond = 0.0                                             ;
 Rgp = tic.'Rgp'                                         ;

 dRhov  = 0.                                             ;
 dRhohe = 0.                                             ;
 dRhoh2 = 0.                                             ;
 dRhoo2 = 0.                                             ;
 dRhon2 = 0.                                             ;
 dRhoco = 0.                                             ;
 dRhoco2= 0.                                             ;

*----------------------------------------------------------
*----- BOUCLE PRINCIPALE DE RESOLUTION SUR LE NB ----------
*----- TOTAL DE PAS DE TEMPS A REALISER -------------------
*----------------------------------------------------------

  Si (NON (EXIST tic 'DT'))                              ;
*?DT         = rxt.'DT0'                                 ;
  tic.'DT'   = rxt.'DT0'                                 ;
  Finsi                                                  ;

*>1 'REPETER' BCLTPS nbit
 'REPETER' BCLTPS nbit                                   ;

* Gestion de la frequence de preconditionnement
 'SI' ('OU' ('EGA' &BCLTPS 1)
            ('MULT' &BCLTPS RXT.'FRPREC')) ;
   calprec = VRAI ;
 'SINON' ;
   calprec = FAUX ;
 'FINSI' ;

 'SI' ('EGA' nbit 0)                                     ;
      'QUITTER' BCLTPS                                   ;
 'FINSI'                                                 ;

 nupadt = tic.'NUPADT'                                   ;
 nupadt = nupadt '+' 1                                   ;
 tic.'NUPADT' = nupadt                                   ;
*>1 ndl   = 'DIME' (tic.'LTPS')
 ndl   = 'DIME' (tic.'LTPS')                             ;

 Tps='EXTR' (tic.'LTPS') ndl                             ;

 Tps        = tic.'Tps' '+' tic.'DT'                     ;
 tic.'Tps'  = Tps                                        ;
 tic.'LTPS' = tic.'LTPS' 'ET' ('PROG' Tps )              ;

 'SI' ( TBT.'IMPR' >EG 1)                                             ;
 'MESS' '*************************************************************'
        '***********************';
 'MESS' '*************************************************************'
        '***********************';
 'MESS' '==> Pas de temps ' nupadt
       ' Temps = ' tps 'Secondes     Pas de temps : DT= ' tic.'DT'    ;
 'FINSI'                                                              ;


**** Initialisations en début de bas de temps ****************

**** Evolution de la source en fct du temps ******************
******** Scenario transitoire ********************************

 Ksi=1. ; Ksi2=1. ; Ksi3=1. ;
 Qlj=0. ; Qlj2=0. ; Qlj3=0. ;

 Si (TBT.'Tbreche') ;
 qeau qlj qair qhe qh2 qo2 qn2 qco qco2 =  bruche 'KAS1' 1 rxt;
 Finsi;

 Si (TBT.'Tbreche2') ;
 qeau2 qlj2 qair2 qhe2 qh22 qo22 qn22 q2co q2co2 = bruche 'KAS1' 2 rxt;
 Finsi;

 Si (TBT.'Tbreche3') ;
 qeau3 qlj3 qair3 qhe3 qh23 qo23 qn23 q3co q3co2 = bruche 'KAS1' 3 rxt;
 Finsi;


*--------------------------------------------------------------
* Interpolation des conditions aux limites en température
* imposée sur une ou plusieurs parois et chargement coef d'échange
* TTIMP1 -> tic.'TBP1' etc

'SI' TBT.'TTIMP1'                                            ;
  tic.'TBP1' = 'IPOL' tps (rxt.'TIMP1'.'t') (rxt.'TIMP1'.'TIMP');
  Si  (NON ((TBT.'VAPEUR') et (exist tic 'KH1')))            ;
  tic.'KH1'  = (rxt.'TIMP1'.'ECHAN')                         ;
  Finsi                                                      ;
  tic.'Ltbp1'= tic.'Ltbp1' et (prog (tic.'TBP1'))            ;
'FINSI'                                                      ;

'SI' TBT.'TTIMP2'                                            ;
  tic.'TBP2' = 'IPOL' tps (rxt.'TIMP2'.'t') (rxt.'TIMP2'.'TIMP');
  Si  (NON ((TBT.'VAPEUR') et (exist tic 'KH2')))            ;
  tic.'KH2'  = (rxt.'TIMP2'.'ECHAN')                         ;
  Finsi                                                      ;
  tic.'Ltbp2'= tic.'Ltbp2' et (prog (tic.'TBP2'))            ;
'FINSI'                                                      ;

'SI' TBT.'TTIMP3'                                            ;
  tic.'TBP3' = 'IPOL' tps (rxt.'TIMP3'.'t') (rxt.'TIMP3'.'TIMP');
  Si  (NON ((TBT.'VAPEUR') et (exist tic 'KH3')))            ;
  tic.'KH3'  = (rxt.'TIMP3'.'ECHAN')                         ;
  Finsi                                                      ;
  tic.'Ltbp3'= tic.'Ltbp3' et (prog (tic.'TBP3'))            ;
'FINSI'                                                      ;

'SI' TBT.'TECHANP'                                           ;
  'SI' ('NON' ('EXIST' TIC 'TBP0'))                          ;
  tic.'TBP0' = 'KCHT' RXT.'GEO'.'$mtp0' 'SCAL' 'SOMMET'
                                         rxt.'ECHANP'.'TMUR' ;
  'FINSI' ;
  Si  (NON ((TBT.'VAPEUR') et (exist tic 'KH0')))            ;
  tic.'KH0'  = 'KCHT' RXT.'GEO'.'$mtp0' 'SCAL' 'CENTRE'
                                        rxt.'ECHANP'.'ECHAN' ;
  Finsi                                                      ;
'FINSI'                                                      ;

*--------------------------------------------------------------
* Traitement de l'aspersion

'SI' TBT.'ASPER '                                            ;
   t       =  rxt.'scenasp'.'t'                             ;
   vzinj   = 'IPOL' tps t (rxt.'scenasp'.'vzinj')           ;
   xdinj   = 'IPOL' tps t (rxt.'scenasp'.'xdinj')           ;
   tdinj   = 'IPOL' tps t (rxt.'scenasp'.'tdinj')           ;
   ddinj   = 'IPOL' tps t (rxt.'scenasp'.'ddinj')           ;
   $aspinj = GEO.'$aspinj'                                   ;
   $toitf  = GEO.'$toitf'                                    ;
*   vnj     = 'KCHT' $aspinj 'VECT' 'SOMMET' 'COMP'
*                        ('MOTS' 1VN 2VN 3VN) (0.0 0.0 vzinj) ;

      'SI' (DIM3D) ;
   vnj     = 'KCHT' $aspinj 'VECT' 'SOMMET' 'COMP'
                        ('MOTS' 1VN 2VN 3VN) (0.0 0.0 vzinj) ;
   'SINON' ;
*--------------------------------------------------------------
*                    modif Tojo 12/07/2007                    *
*
*   mise en place de vecteurs inclinés conformément
*   à l'angle d'ouverture du jet
*   ici l'inclinaison est fixée à 30°
*   une prochaine évolution pourrait consister à mettre
*   l'angle d'ouverture comme donnée d'entrée
*   dans la table scenasp
*
*--------------------------------------------------------------
*
cc1 = coor 1 rxt.'aspinj'                                     ;
z0 = (sin(300. '*' cc1)) '*' ((cos(300. '*' cc1)) '**' (-1.0));
z0 = z0 '*' (vzinj '*' -1.)                                   ;
z0 = chan attribut z0 nature diffus                           ;
z1 = z0 '*' 0.                                                ;
ux0 = nomc '1VN' z0                                           ;
z1 = z1 '+' vzinj                                             ;
z1 = chan attribut z1 nature diffus                           ;
uy0 = nomc '2VN' z1                                           ;
vnj1 = ux0 et uy0                                             ;
vnj  = 'KCHT' $aspinj 'VECT' 'SOMMET' 'COMP'
('MOTS' '1VN' '2VN') vnj1                                     ;
*
*--------------------------------------------------------------
   'FINSI' ;
*--------------------fin modif Tojo Juillet 2007---------------

   xdj     = 'KCHT' $aspinj 'SCAL' 'SOMMET' 'COMP'
                         ('MOT'  'XD') xdinj                 ;
   tdj     = 'KCHT' $aspinj 'SCAL' 'SOMMET' 'COMP'
                         ('MOT'  'TD') tdinj                 ;
   ddj     = 'KCHT' $toitf  'SCAL' 'SOMMET' 'COMP'
                         ('MOT'  'DD') ddinj                 ;
'FINSI'                                                      ;

*--------------------------------------------------------------
*>1**********************************************************
*>1* Grandeurs moyennes au debut du pas de temps N **********
*>1* i.e. au temps N-1 **************************************

  Ptnm    = 'EXTR' (tic.'PT')    ndl                         ;
  dPdtnm  = 'EXTR' (tic.'dPdt')  ndl                         ;
  Rgpmnm  = 'EXTR' (tic.'Rgpm')  ndl                         ;
  Cvmnm   = 'EXTR' (tic.'Cvm')   ndl                         ;
  Gamnm   = 'EXTR' (tic.'Gamm')  ndl                         ;
  Cpmnm   = 'EXTR' (tic.'Cpm')   ndl                         ;
  Rhomnm  = 'EXTR' (tic.'Rhom')  ndl                         ;

  Rhomvn  = 0.                                               ;
  Rhovgn  = 0.                                               ;
  Rbrom   = 0.                                               ;
  Rmhen   = 0.                                               ;
  Rmh2n   = 0.                                               ;
  Rmn2n   = 0.                                               ;
  Rmo2n   = 0.                                               ;
  Rmcon   = 0.                                               ;
  Rmco2n  = 0.                                               ;
  Rmairn  = 0.                                               ;

  'SI' TBT.'VAPEUR'                                          ;
*>1 Rhomvnm,Rhovgnm,Rliqm = EXTR tic.'Rhomv','Rhomvg','Rliqm' ndl
  Rhomvnm = 'EXTR' (tic.'Rhomv')  ndl                        ;
  Rhovgnm = 'EXTR' (tic.'Rhomvg') ndl                        ;
   'SI' TBT.'CONDMAS'                                        ;
    Rliqm   = 'EXTR' (tic.'Rliqm')  ndl                      ;
    Rbrom   = 'EXTR' (tic.'Rbrom')  ndl                      ;
   'FINSI'                                                   ;
  'FINSI'                                                    ;
  'SI' TBT.'THE'                                             ;
  Rmhenm  = 'EXTR' (tic.'Rhomhe') ndl                        ;
  'FINSI'                                                    ;
  'SI' TBT.'TH2'                                             ;
  Rmh2nm  = 'EXTR' (tic.'Rhomh2') ndl                        ;
  'FINSI'                                                    ;
  'SI' TBT.'TO2'                                             ;
  Rmo2nm  = 'EXTR' (tic.'Rhomo2') ndl                        ;
  'FINSI'                                                    ;
  'SI' TBT.'TN2'                                             ;
  Rmn2nm  = 'EXTR' (tic.'Rhomn2') ndl                        ;
  'FINSI'                                                    ;
  'SI' TBT.'TCO'                                             ;
  Rmconm  = 'EXTR' (tic.'Rhomco') ndl                        ;
  'FINSI'                                                    ;
  'SI' TBT.'TCO2'                                            ;
  Rmco2nm  = 'EXTR' (tic.'Rhomco2') ndl                      ;
  'FINSI'                                                    ;

  Rmairnm  = 'EXTR' (tic.'Rhomair') ndl                      ;
  Remnm   = 'EXTR' (tic.'Remn')  ndl                         ;
  'SI' TBT.'THERMP'                                          ;
  Emurnm  = 'EXTR' (tic.'Emur')  ndl                         ;
  'FINSI'                                                    ;
  'SI' TBT.'ASPER '                                          ;
       Qasp    = extr (tic.'Qaspe') ndl                      ;
       Easp    = extr (tic.'Easpe') ndl                      ;
       Hasp    = extr (tic.'Haspe') ndl                      ;
  'SINON'                                                    ;
       Qasp    = 0.0                                         ;
       Easp    = 0.0                                         ;
       Hasp    = 0.0                                         ;
  'FINSI'                                                    ;

  Qcnm    = 'EXTR' (tic.'Qc')    ndl                         ;
  Qcm     = 0.                                               ;
* Qcm     = 'EXTR' (tic.'Qcm')   ndl                         ;
* Pour faire marcher la version V0
  Econdnm = 'EXTR' (tic.'Econd') ndl                         ;
  Econvnm = 'EXTR' (tic.'Econv') ndl                         ;
  Hcondnm = 'EXTR' (tic.'Hcond') ndl                         ;
  MinjT   = 'EXTR' (tic.'Minj')  ndl                         ;
  McondT  = 'EXTR' (tic.'Mcond') ndl                         ;

  'SI' (TBT.'VAPEUR')                                        ;
*?    'SI' (TBT.'CONDMAS')                                     ;
    'SI' (TBT.'VERSION' > 0)                                 ;
      'SI' (EXIST TIC 'Mcondm')                              ;
        Mcondm  = 'EXTR' (tic.'Mcondm') ndl                  ;
      'SINON'                                                ;
        tic.'Mcondm' = 'PROG' 0.0                            ;
        Mcondm       = 0.0                                   ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qcm'))                           ;
        tic.'Qcm'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;

    'SI' (TBT.'TPAROIF')                                     ;
      'SI' (EXIST TIC 'Mcondw')                              ;
        McondTw = 'EXTR' (tic.'Mcondw') ndl                  ;
      'SINON'                                                ;
        tic.'Mcondw' = 'PROG' 0.0                            ;
        McondTw      = 0.0                                   ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qcw'))                           ;
        tic.'Qcw'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;
    'SI' (TBT.'TTIMP1')                                      ;
      'SI' (EXIST TIC 'Mcond1')                              ;
        McondT1 = 'EXTR' (tic.'Mcond1') ndl                  ;
      'SINON'                                                ;
        tic.'Mcond1' = 'PROG' 0.0                            ;
        McondT1      = 0.0                                   ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qc1'))                           ;
        tic.'Qc1'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;
    'SI' (TBT.'TTIMP2')                                      ;
      'SI' (EXIST TIC 'Mcond2')                              ;
        McondT2 = 'EXTR' (tic.'Mcond2') ndl                  ;
      'SINON'                                                ;
        tic.'Mcond2' = 'PROG' 0.0                            ;
        McondT2      = 0.0                                   ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qc2'))                           ;
        tic.'Qc2'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;
    'SI' (TBT.'TTIMP3')                                      ;
      'SI' (EXIST TIC 'Mcond3')                              ;
        McondT3 = 'EXTR' (tic.'Mcond3') ndl                  ;
      'SINON'                                                ;
       tic.'Mcond3' = 'PROG' 0.0                             ;
       McondT3      = 0.0                                    ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qc3'))                           ;
        tic.'Qc3'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;
    'SI' (TBT.'TECHANP')                                     ;
      'SI' (EXIST TIC 'Mcond0')                              ;
        McondT0 = 'EXTR' (tic.'Mcond0') ndl                  ;
      'SINON'                                                ;
       tic.'Mcond0' = 'PROG' 0.0                             ;
       McondT0      = 0.0                                    ;
      'FINSI'                                                ;
      'SI' (NON (EXIST TIC 'Qc0'))                           ;
        tic.'Qc0'   = 'PROG' 0.0                             ;
      'FINSI'                                                ;
    'FINSI'                                                  ;
  'FINSI'                                                    ;
  MrestT  = 'EXTR' (tic.'Mrest') ndl                         ;

*-------------------------------------------------------------
* Calcul KH/Ro Cp pour l'équation en température TF

 'SI' TBT.'THERMP'                                           ;
  tic.'KHEW'=tic.'KHW' /  (Rhomnm '*' Cpmnm)                 ;
  tic.'LHEW' = -1.0 * tic.'KHEW'                             ;
 'FINSI'                                                     ;

'SI' TBT.'TTIMP1'                                            ;
     tic.'KHE1'  = (tic.'KH1') '/' (Rhomnm '*' Cpmnm)        ;
'FINSI'                                                      ;

'SI' TBT.'TTIMP2'                                            ;
     tic.'KHE2'  = (tic.'KH2') '/' (Rhomnm '*' Cpmnm)        ;
'FINSI'                                                      ;

'SI' TBT.'TTIMP3'                                            ;
     tic.'KHE3'  = (tic.'KH3') '/' (Rhomnm '*' Cpmnm)        ;
'FINSI'                                                      ;

'SI' TBT.'TECHANP'                                           ;
     tic.'KHE0'  = (tic.'KH0') '/' (Rhomnm '*' Cpmnm)        ;
'FINSI'                                                      ;

*=============================================================
*BRECHE
*=============================================================
  Qj   = 0. ;
  Roj  = 1.e-10 ;
  src  = 0. ;
  guj  = 0. ;
  Ej=0. ;
  Hj=0. ;
  Tj=0. ;

 Si (TBT.'Tbreche') ;
  Rvapj Rairj Rhej Rh2j Ro2j Rn2j Rco2j Rcoj Rgj Hj Ej
  Tj Qj Roj gj guj unvf0 src = bruche 'KAS2'   1    rxt       ;
 asrc = Roj '*' ('ABS' src)                               ;
 Finsi;

*----------------------------------------------------------
* STOCKAGE des valeurs de l'injection pour le temps courant
* 1ere Breche
* La brèche peut avoir eu une existance évanescente (Tbreche=FAUX)
* Si tic.'Qj' existe on complete avec des valeurs nulles
* tic.'Qj',tic.'guj',tic.'Hj',tic.'Ej'
*
 Si(Exist tic 'Qj') ;
  tic.'guj'= tic.'guj' 'ET' ('PROG' guj)                   ;
  asrc = Roj '*' ('ABS' src)                               ;
  tic.'Qj' = tic.'Qj' 'ET' ('PROG' asrc)                   ;

  tic.'Hj'= tic.'Hj' 'ET' ('PROG' Hj)                      ;
  tic.'Ej'= tic.'Ej' 'ET' ('PROG' Ej)                      ;
 Finsi ;

*=============================================================
*BRECHE 2
*=============================================================
  Qj2   = 0. ;
  Roj2  = 1.e-10 ;
  src2  = 0. ;
  guj2  = 0. ;
  Ej2=0. ;
  Hj2=0. ;
  Tj2=0. ;

 Si (TBT.'Tbreche2') ;
  Rvapj2 Rairj2 Rhej2 Rh2j2 Ro2j2 Rn2j2 Rco2j2 Rcoj2 Rgj2 Hj2 Ej2
  Tj2 Qj2 Roj2 gj2 guj2 unvf0 src2 = bruche 'KAS2'   2  rxt   ;

 asrc2 = Roj2 '*' ('ABS' src2)                               ;
 Finsi;

*----------------------------------------------------------
* STOCKAGE des valeurs de l'injection pour le temps courant
* 2eme Breche
* La brèche peut avoir eu une existance évanescente (Tbreche2=FAUX)
* Si tic.'Qj2' existe on complete avec des valeurs nulles
* tic.'Qj2',tic.'guj2',tic.'Hj2',tic.'Ej2'
*
 Si(Exist tic 'Qj2') ;
  tic.'guj2'= tic.'guj2' 'ET' ('PROG' guj2)                   ;
  asrc2 = Roj2 '*' ('ABS' src2)                               ;
  tic.'Qj2' = tic.'Qj2' 'ET' ('PROG' asrc2)                   ;
  tic.'Hj2'= tic.'Hj2' 'ET' ('PROG' Hj2)                      ;
  tic.'Ej2'= tic.'Ej2' 'ET' ('PROG' Ej2)                      ;
 Finsi ;
*=============================================================
*BRECHE 3
*=============================================================
  Qj3   = 0. ;
  Roj3  = 1.e-10 ;
  src3 = 0.;
  guj3  = 0. ;
  Ej3=0. ;
  Hj3=0. ;
  Tj3=0. ;

 Si (TBT.'Tbreche3') ;
  Rvapj3 Rairj3 Rhej3 Rh2j3 Ro2j3 Rn2j3 Rco2j3 Rcoj3 Rgj3 Hj3 Ej3
  Tj3 Qj3 Roj3 gj3 guj3 unvf0 src3 = bruche 'KAS2'   3  rxt   ;

 asrc3 = Roj3 '*' ('ABS' src3)                               ;
 Finsi;

*----------------------------------------------------------
* STOCKAGE des valeurs de l'injection pour le temps courant
* 3ème Breche
* La brèche peut avoir eu une existance évanescente (Tbreche3=FAUX)
* Si tic.'Qj3' existe on complète avec des valeurs nulles
* tic.'Qj3',tic.'guj3',tic.'Hj3',tic.'Ej3'
*
Si(Exist tic 'Qj3') ;
 tic.'guj3'= tic.'guj3' 'ET' ('PROG' guj3)                   ;
 asrc3 = Roj3 '*' ('ABS' src3)                               ;
 tic.'Qj3' = tic.'Qj3' 'ET' ('PROG' asrc3)                   ;
 tic.'Hj3'= tic.'Hj3' 'ET' ('PROG' Hj3)                      ;
 tic.'Ej3'= tic.'Ej3' 'ET' ('PROG' Ej3)                      ;
Finsi ;
*=============================================================


'SI' TBT.'TRECOMB' ;

MDRECOMB RXT ;

'FINSI' ;

*------------------------------------------------------------
**** Avancement des grandeurs moyennes 0D *******************
**** compte tenu des injections           *******************
* Pour le calcul de RHO, P
*


* Calcul de l energie moyenne au pas de temps N
 Htot          = Hcondnm '-' Hasp                            ;
 Etot          = Econvnm '-' Easp                            ;
 DPDT          = dPdtnm                                      ;
 Si (TBT.'CORTEMP')                                          ;
 dr            = 0. '-' Etot '-' Htot + DPDT                 ;
 Sinon                                                       ;
 dr            = dr '-' Etot '-' Htot                        ;
 Finsi                                                       ;

*mess ' Etot ' Etot   ' Htot ' Htot  'dr=' dr;
*mess 'Econv pour calcul de dr ' Econv;

* Calcul de la densité moyenne au pas de temps N
 Qtot          = Qasp '-' Qcnm ;
* Source de vapeur liée à la première brèche :
 Si (TBT.'Tbreche') ;
 Qtot          = Qtot '+' asrc   ;
 dr = dr + (Qj '*' Hj) ;
 Finsi ;
* Source de vapeur liée à la deuxième brèche :
 Si (TBT.'Tbreche2') ;
 Qtot          = Qtot '+' asrc2  ;
 dr = dr + (Qj2 '*' Hj2) ;
 Finsi ;
* Source de vapeur liée à la troisième brèche :
 Si (TBT.'Tbreche3') ;
 Qtot          = Qtot '+' asrc3  ;
 dr = dr + (Qj3 '*' Hj3) ;
 Finsi ;

* Prise en compte des données du ou des recombineurs eventuels
'SI' TBT.'TRECOMB' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;

   DIRNAME = 'CHAIN' 'DREC' 'ent' &BCLREC ;
   direntr = RXT.'GEO'. DIRNAME ;
   DIRNAME = 'CHAIN' 'DREC' 'sor' &BCLREC ;
   dirsort = RXT.'GEO'. DIRNAME ;

   $NAME = 'CHAIN' '$REC' 'ent' &BCLREC ;
   $ENTREE = RXT.'GEO'. $NAME ;
   $NAME = 'CHAIN' '$REC' 'sor' &BCLREC ;
   $SORTIE = RXT.'GEO'. $NAME ;

   'SI' TBT.'FPAROI' ;
      NAME = 'CHAIN' 'REC' 'ent' &BCLREC ;
      ENTREE = RXT.'GEO'.NAME ;
      NAME = 'CHAIN' 'REC' 'sor' &BCLREC ;
      SORTIE = RXT.'GEO'.NAME ;
   'SINON' ;
      NAME = 'CHAIN' 'REC' 'entI' &BCLREC ;
      ENTREE = RXT.'GEO'.NAME ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIE = RXT.'GEO'.NAME ;
   'FINSI' ;

   LMOT1 = 'MOTS' 1UN 2UN ;
   LMOT2 = 'MOTS' UX  UY  ;

   'SI' DIM3D;
    LMOT1 = LMOT1 'ET' ('MOTS' 3UN ) ;
    LMOT2 = LMOT2 'ET' ('MOTS' UZ  ) ;
   'FINSI' ;
   NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'Uin' ;
   Uin1  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'Uin'  NRECT ;
   Uout1 = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'Uout' NRECT ;
   DEB1  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'DEB'  NRECT ;
   Hin1  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'Hin'  NRECT ;
   Hout1 = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'Hout' NRECT ;
   toto1 = 'KCHT' $ENTREE 'VECT' 'SOMMET' 'COMP'
             LMOT1  (direntr * Uin1);
   toto1 = 'REDU' toto1 ENTREE  ;
   toto1 = 'KCHT' $ENTREE 'VECT' 'SOMMET' 'COMP'
             LMOT1  toto1;
   toto2 = 'NOMC' LMOT1 LMOT2 toto1 ;
   toto3 = 'KCHT' RXT.'GEO'.'$menvf'  'VECT' 'SOMMET'  toto2 ;
   toto3 = 'DBIT' toto3 RXT.'GEO'.'$menvf' ;

   tutu1 = 'KCHT' $SORTIE 'VECT' 'SOMMET' 'COMP'
             LMOT1  (dirsort * Uout1);
   tutu1 = 'REDU' tutu1 SORTIE  ;
   tutu1 = 'KCHT' $SORTIE 'VECT' 'SOMMET' 'COMP'
             LMOT1  tutu1;
   tutu2 = 'NOMC' LMOT1 LMOT2 tutu1 ;
   tutu3 = 'KCHT' RXT.'GEO'.'$menvf'  'VECT' 'SOMMET'  tutu2 ;
   tutu3 = 'DBIT' tutu3 RXT.'GEO'.'$menvf' ;

   'SI' ('EGA' &BCLREC 1) ;
     Urec0 = toto1 'ET' tutu1 ;
*     Srho0 = tutu3 '-' toto3 ;
   'SINON' ;
     Urec0 = Urec0 'ET' toto1 'ET' tutu1 ;
*     Srho0 = Srho0 '+' tutu3 '-' toto3 ;
   'FINSI' ;
     Srho0 = 0.0 ;

** Dans le recombineur, on suppose que le debit massique entrant
** est egale au debit massique sortant
** ==> auncune correction n'est a effectué sur la densité totale !
* Qtot          = Qtot '+' 0.0  ;

 dr = dr '+' (DEB1 '*' (Hout1 '-' Hin1)) ;

   'FIN' BCLREC ;

'FINSI' ;
* Modif. FP 19/05/00
* Retranchement de la masse et de l'énergie perdues par condensation
* en masse :

*µµµµµµµµµµµµµ calcul Rhomn et Remn µµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµ
Si TBT.'Tsortie';

 Tf=tic.'TF'                                                 ;
 Rho=tic.'RHO'                                               ;
 Cvm     = 'EXTR' (tic.'Cvm')      ndl                       ;
 Rhomn = Rhom                                                ;
 Remn  = (Somt(Diag * Rho * cvm * (Tf+273.15))) '/' VTotal   ;
 tic.'Rhom'  = tic.'Rhom'  'ET' ('PROG' Rhomn)               ;
 tic.'Remn'  = tic.'Remn'  'ET' ('PROG' Remn)                ;

Sinon;

* Détermination de la masse volumique et de l'énergie interne moyenne

 Rhomn = MAXI (PROG (Rhomnm '+' (tic.'DT' '*' Qtot '/' VTotal )) 0.0);
 Remn  = MAXI (PROG (Remnm  '+' (tic.'DT' '*' dr '/' VTotal )  ) 0.0);

 tic.'Rhom'  = tic.'Rhom'  'ET' ('PROG' Rhomn)               ;
 tic.'Remn'  = tic.'Remn'  'ET' ('PROG' Remn)                ;

Finsi ;
*µµµµµµµµµµµµµ calcul Rhomn et Remn µµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµµ

* Calcul de l'energie dans le mur au pas de temps N
* Il manque la partie convective !!!!
 'SI' TBT.'THERMP'                                           ;
 Hmur = Qcnm '*' TBT.'Lv'                                    ;
 Emurn = Emurnm '+' ( tic.'DT' '*' Hmur)                     ;
 tic.'Emur'  = tic.'Emur'  'ET' ('PROG' Emurn)               ;
 'FINSI'                                                     ;

* Calcul de la densité moyenne de vapeur au pas de temps N
 'SI' TBT.'VAPEUR'                                           ;
 Qo=0. ; Qlo=0.;
 Si (TBT.'Tbreche')  ; Qo=Qeau      ; Qlo=Qlj        ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Qeau2; Qlo=Qlo + Qlj2 ; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Qeau3; Qlo=Qlo + Qlj3 ; Finsi ;

 'SI' TBT.'TRECOMB' ;
 QIN_H2O  = 'EXTR' RXT.'TIC'.'QIN_H2O'  ('DIME' RXT.'TIC'.'QIN_H2O')  ;
 QOUT_H2O = 'EXTR' RXT.'TIC'.'QOUT_H2O' ('DIME' RXT.'TIC'.'QOUT_H2O') ;
 Qo=Qo + QOUT_H2O - QIN_H2O  ;
 'FINSI' ;
*>2       Calcul Rhovgn Rhomvn -> tic.'Rhomvg' et tic.'Rhomv'
*>2 Rhovgn= MAXI (PROG (Rhovgnm '+'
*>2 (tic.'DT' '*' (Qo '-' Qcnm '-' Qcm '+' Qasp)'/' VTotal)) 0.);
*>2 Rhomvn= Rhovgn - Rbrom                                      ;

 Rhovgn= MAXI (PROG (Rhovgnm '+'
  (tic.'DT' '*' (Qo '-' Qcnm '+' Qasp - Qcm) '/' VTotal )) 0.0) ;
 Rhomvn= Rhovgn -  Rbrom                                     ;

 tic.'Rhomv' = tic.'Rhomv' 'ET' ('PROG' Rhomvn)              ;
 tic.'Rhomvg'= tic.'Rhomvg' 'ET' ('PROG' Rhovgn)             ;

 Mlq = (tic.'DT' '*' (Qcnm + Qlo))                           ;

 'FINSI'                                                     ;

 'SI' TBT.'THE'                                              ;
 Qo=0. ;
 Si (TBT.'Tbreche')  ; Qo=Qhe ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Qhe2; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Qhe3; Finsi ;
 Rmhen= MAXI (PROG (Rmhenm '+' (tic.'DT' '*' Qo '/' VTotal )) 0.0) ;
 tic.'Rhomhe' = tic.'Rhomhe' 'ET' ('PROG' Rmhen)             ;
 'FINSI'                                                     ;

 'SI' TBT.'TH2'                                              ;
 Qo=0. ;
 Si (TBT.'Tbreche')  ; Qo=Qh2 ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Qh22; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Qh23; Finsi ;

 'SI' TBT.'TRECOMB' ;
 QIN_H2   = 'EXTR' RXT.'TIC'.'QIN_H2'   ('DIME' RXT.'TIC'.'QIN_H2' ) ;
 QOUT_H2  = 'EXTR' RXT.'TIC'.'QOUT_H2'  ('DIME' RXT.'TIC'.'QOUT_H2') ;
 Qo=Qo + QOUT_H2 - QIN_H2  ;
 'FINSI' ;

 Rmh2n= MAXI (PROG (Rmh2nm '+' (tic.'DT' '*' Qo '/' VTotal )) 0.0) ;
 tic.'Rhomh2' = tic.'Rhomh2' 'ET' ('PROG' Rmh2n)             ;
 'FINSI'                                                     ;

 'SI' TBT.'TN2'                                              ;
 Qno= 0. ;
 Si (TBT.'Tbreche') ; Qno=Qn2; Finsi ;
 Si (TBT.'Tbreche2') ; Qno=Qno + Qn22; Finsi ;
 Si (TBT.'Tbreche3') ; Qno=Qno + Qn23; Finsi ;

 'SI' TBT.'TRECOMB' ;
 QIN_N2   = 'EXTR' RXT.'TIC'.'QIN_N2'   ('DIME' RXT.'TIC'.'QIN_N2' ) ;
 QOUT_N2  = 'EXTR' RXT.'TIC'.'QOUT_N2'  ('DIME' RXT.'TIC'.'QOUT_N2') ;
 Qo=Qo + QOUT_N2 - QIN_N2  ;
 'FINSI' ;

 Rmn2n= MAXI (PROG (Rmn2nm '+' (tic.'DT' '*' Qno '/' VTotal )) 0.0);
 tic.'Rhomn2' = tic.'Rhomn2' 'ET' ('PROG' Rmn2n)             ;
 'FINSI'                                                     ;

 'SI' TBT.'TO2'                                              ;
 Qo=0. ;
 Si (TBT.'Tbreche')  ; Qo=Qo2 ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Qo22; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Qo23; Finsi ;

 'SI' TBT.'TRECOMB' ;
 QIN_O2   = 'EXTR' RXT.'TIC'.'QIN_O2'   ('DIME' RXT.'TIC'.'QIN_O2' ) ;
 QOUT_O2  = 'EXTR' RXT.'TIC'.'QOUT_O2'  ('DIME' RXT.'TIC'.'QOUT_O2') ;
 Qo=Qo + QOUT_O2 - QIN_O2  ;
 'FINSI' ;

 Rmo2n= MAXI (PROG (Rmo2nm '+' (tic.'DT' '*' Qo '/' VTotal )) 0.0) ;
 tic.'Rhomo2' = tic.'Rhomo2' 'ET' ('PROG' Rmo2n)             ;
 'FINSI'                                                     ;

 'SI' TBT.'TCO'                                              ;
 Qo=0. ;
 Si (TBT.'Tbreche')  ; Qo=Qco ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Q2co; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Q3co; Finsi ;
 Rmcon= MAXI (PROG (Rmconm '+' (tic.'DT' '*' Qo '/' VTotal )) 0.0) ;
 tic.'Rhomco' = tic.'Rhomco' 'ET' ('PROG' Rmcon)             ;
 'FINSI'                                                     ;

 'SI' TBT.'TCO2'                                             ;
 Qo=0. ;
 Si (TBT.'Tbreche')  ; Qo=Qco2 ; Finsi ;
 Si (TBT.'Tbreche2') ; Qo=Qo + Q2co2; Finsi ;
 Si (TBT.'Tbreche3') ; Qo=Qo + Q3co2; Finsi ;
 Rmco2n= MAXI (PROG (Rmco2nm '+' (tic.'DT' '*' Qo '/' VTotal )) 0.0);
 tic.'Rhomco2' = tic.'Rhomco2' 'ET' ('PROG' Rmco2n)          ;
 'FINSI'                                                     ;

*D'où la masse d'air totale
*Rmairn = Rhomn - Rhovgn - Rmhen - Rmh2n - Rmn2n -
 Rmairn = Rhomn - Rhomvn - Rmhen - Rmh2n - Rmn2n -
 Rmo2n -  Rmcon - Rmco2n                                     ;
 'SI' (Rmairn '<' 0.0) ;
    'MESS' 'Pb avec la masse d air 0D' ;
 'FINSI';
 tic.'Rhomair' = tic.'Rhomair' 'ET' ('PROG' Rmairn)          ;
*
*? d_ME            = tic.'DT' * (Easp + Hasp)                        ;
*? d_RhoE          = tic.'DT' * (Easp + Hasp) / Vtotal               ;
*
*µµµµµµµµ calcul de la Pression 0D au pas de temps N µµµµµµµµµµµµµµµµµµµ
* Si Cavité ouverte Pression nulle !
 Si TBT.'Tsortie'                                           ;
  Pt       = 0.                                             ;
  DPDT     = 0.                                             ;
 Sinon                                                      ;
* Calcul de la Pression 0D au pas de temps N
* Calcul du terme DPDT  0D au pas de temps N
* Estimation de la pression Pt au temps N

  Pt       = (Gamnm '-' 1.) '*' Remn                        ;
* mess 'Estimation de Pt =' Pt;
  DPDT     = (Pt '-' Ptnm) '/' (tic.'DT')                   ;
 Finsi                                                      ;
  tic.'dPdt' = tic.'dPdt' 'ET' ('PROG' DPDT)                ;

*µµµµµµµµ calcul de la Pression 0D au pas de temps N µµµµµµµµµµµµµµµµµµµ
*-----------------------------------------------------------------------
* Execution d'une eventuelle procedure PERSO
 Si TBT.'PERSO'                                                        ;
  'SI' ( TBT.'IMPR' >EG 2)                                             ;
mess '                             ***********************************';
mess '                             * Execution d une procédure PERSO *';
mess '                             *          '(rxt.'PRCPERSO')
     '                *';
mess '                             ***********************************';
  'FINSI'                                                              ;
 (TEXT (rxt.'PRCPERSO')) Tps rxt                                       ;
  'SI' ( TBT.'IMPR' >EG 2)                                             ;
mess '                             ***********************************';
mess '                             * Fin execution de la procédure   *';
mess '                             *          '(rxt.'PRCPERSO')
     '                *';
mess '                             ***********************************';
  'FINSI'                                                              ;
 Finsi                                                                 ;

*-----------------------------------------------------------------------
* RESOLUTION DE LA QDM
* Calcul du terme source de l'equation de QDM
* Ajout de la CLIM injection

 tic.'DSRC'  =  ((-1.) '*' (src + src2 + src3) '/' VTotal) ;

** contribution source densité des recombineurs ---
 'SI' (TBT.'TRECOMB') ;
 tic.'DSRC'  =  tic.'DSRC' '+' Srho0 ;
 'FINSI' ;
** ------------------------------------------------

 rv         =  TBT.'RV'                                    ;

 gjo  matxx= 'KOPS' 'MATRIK'                               ;
 Si (TBT.'Tbreche')                                        ;
 gjo= gjo et gj                                            ;
 Finsi                                                     ;
 Si (TBT.'Tbreche2')                                       ;
 gjo= gjo et gj2                                           ;
 Finsi                                                     ;
 Si (TBT.'Tbreche3')                                       ;
 gjo= gjo et gj3                                           ;
 Finsi                                                     ;

'SI'((EGA TBT.'MODTURB' 'KEPSILON') et (EGA TBT.'FEF' 'EFM1'));
*---- Modèle K-Epsilon EFM1 --------------------------------
*mess 'Modèle K-Epsilon EFM1' ;
 Si (TBT.'Tbreche')                                        ;
 lcj=extr gj 'COMP'                                        ;
 mdj=gj 'PSCA' gj lcj lcj                                  ;
 gk=((0.05**2.)*mdj) nomc 'KN'                             ;
 gk=CHAN 'ATTRIBUT' gk 'NATURE' 'DISCRET'                  ;
 ge=((gk**1.5)/(GEO.'Dbreche')) nomc 'EN'                  ;
 gjo= gjo et gk                                            ;
 gjo= gjo et ge                                            ;
 Finsi                                                     ;
 Si (TBT.'Tbreche2')                                       ;
 lcj=extr gj2 'COMP'                                       ;
 mdj=gj2 'PSCA' gj2 lcj lcj                                ;
 gk=((0.05**2.)*mdj) nomc 'KN'                             ;
 gk=CHAN 'ATTRIBUT' gk 'NATURE' 'DISCRET'                  ;
 ge=((gk**1.5)/(GEO.'Dbreche2')) nomc 'EN'                 ;
 gjo= gjo et gk                                            ;
 gjo= gjo et ge                                            ;
 Finsi                                                     ;
 Si (TBT.'Tbreche3')                                       ;
 lcj=extr gj3 'COMP'                                       ;
 mdj=gj3 'PSCA' gj3 lcj lcj                                ;
 gk=((0.05**2.)*mdj) nomc 'KN'                             ;
 gk=CHAN 'ATTRIBUT' gk 'NATURE' 'DISCRET'                  ;
 ge=((gk**1.5)/(GEO.'Dbreche3')) nomc 'EN'                 ;
 gjo= gjo et gk                                            ;
 gjo= gjo et ge                                            ;
 Finsi                                                     ;

*---- Modèle K-Epsilon EFM1 -- FIN -------------------------
 'FINSI'                                                   ;

Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3')) ;
rv.'CLIM'    = (rv.'CLIM'  '-' rv.'CLIM')  '+' gjo        ;
Finsi ;

** contribution CL vitesse des recombineurs ---
 'SI' (TBT.'TRECOMB') ;
  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     rv.'CLIM'    = rv.'CLIM' '+' Urec0 ;
  'SINON' ;
     rv.'CLIM'    = (rv.'CLIM'  '-' rv.'CLIM')  '+' Urec0 ;
  'FINSI' ;
 'FINSI' ;
** --------------------------------------------


 Rgp = tic.'Rgp' ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION QDM'                               ;
 'FINSI'                                                   ;

*--- Actualisation de NU
 tic.'NU'  = (tic.'Mu' '/' Rhomnm)                         ;
 tic.'NUm' = somt (GEO.'Diag' * tic.'NU') / GEO.'VTotal'   ;

*--- On actualise YP (si Fonction de paroi)
 Si (TBT.'FPAROI');
 tic.'YP'=rxt.'YP';
 Finsi ;

*--- Actualisation de NUEFF
Si (Exist TBT 'MODTURB')                                   ;

*---- Modèle viscosité tourbillonnaire constante -----------
 Si ( Ega TBT.'MODTURB' 'NUTURB')                          ;
  tic.'NUEFF'=tic.'NU' + rxt.'NUT'                         ;
 Finsi                                                     ;
*---- Modèle viscosité tourbillonnaire constante -- FIN ----

*---- Modèle de longueur de mélange ------------------------
 Si ( Ega TBT.'MODTURB' 'LMEL')                            ;
  un    = tic.'UN'                                         ;
  P = PRODT UN $vtf                                        ;
  lm=TBT.'LMEL'                                            ;
  NUT= (lm*lm*(P**0.5))                                    ;
*Réalisabilité sur Nut
   Nu=tic.'NU'                                             ;
   a = 5000.*Nu                                            ;
   al=0.8 ; ala=al*a ; b=ala*((2.*(1.-al))**(-1.))         ;
   ik=masq Nut 'INFERIEUR' ala                             ;
   Nut=(ik*Nut)+( (1.-ik)*a*(Nut + b)*(inve (a + Nut + b)));
   Nutsnu=Nut*(inve Nu)                                    ;
  'SI' ( TBT.'IMPR' >EG 2)                                 ;
   MESS ' Mini Maxi Nut/Nu ' (mini Nutsnu) (maxi Nutsnu)   ;
  'FINSI'                                                  ;
   tic.'NUEFF'=NUT + tic.'NU'                              ;

 Finsi                                                     ;
*---- Modèle de longueur de mélange -- FIN -----------------

*---- Modèle K-Epsilon Implicite ---------------------------
 Si (( Ega TBT.'MODTURB' 'KEPSILON') et (non(EGA TBT.'FEF' 'EFM1')));
* Calcul KEPSILON
************** Constantes du K epsilon ******
cnu=0.09;
c1=1.44;
c2=1.92;
sgk=1. ;
sge=1.3;

 Dg = doma $vtf 'XXDIAGSI' ;
 Lma=(somt Dg)**(1./(vale DIME));
 Lmi=(mini Dg)**((1.)/(vale DIME));
  un    = tic.'UN'                                         ;
  P = PRODT UN $vtf                                        ;
* P= PRODT UN $vtf m4 m5 ;

 Rrk=  TBT.'Rrk'                                           ;
 Rre=  TBT.'Rre'                                           ;

 En=tic.'EN'    ;
 Kn=tic.'KN'    ;
*Nut=Cnu * Kn * Kn * (inve En) ;
 Nut = (Lmi*Lma*(P**0.5)) ;
* Réalisabilité sur Nut
* Nut > 1.e-15
 ik=masq Nut 'SUPERIEUR' 1.e-15 ;
 Nut=(ik*Nut)+((1.-ik)*1.e-15);
* Nut P < En
*a= En * (inve P) * 0.133;
 a= En * (inve P) * 0.133;
 al=0.8; ala=al*a; b=ala*((2.*(1.-al))**(-1.));
 ik=masq Nut 'INFERIEUR' ala ;
*Nut=(ik*Nut)+( (1.-ik)*a*(Nut + b)*(inve (a + Nut + b)));
*Nut = kcht $vtf scal sommet Nut  ;
 mess 'mini maxi Nut ' (mini Nut ) (maxi Nut ) ;
 Sk=Nut * P - ((KN**1.5)*(1./Lma))  ;
 Kn         =  'KOPS' Kn  '|<' 1.e-5                       ;
 EsK= En * (inve Kn) ;
 Se=EsK*(Nut * P - (c2*En));
 tic.'Se'=Se;
 tic.'Sk'=Sk;

tic.'NUEFF'=NUT + tic.'NU'                               ;
*-- On traite l'injection comme une C.L. en température
cpv  matxx= 'KOPS' 'MATRIK' ;
Si (TBT.'Tbreche') ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'KN'
                           Knj 'NATURE' 'DISCRET')        ;
Finsi ;
Si (TBT.'Tbreche2') ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'KN'
                           Knj2 'NATURE' 'DISCRET')       ;
Finsi ;
Si (TBT.'Tbreche3') ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'KN'
                           Knj3 'NATURE' 'DISCRET')       ;
Finsi ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrk.'CLIM' = cpv;
 Finsi ;


 Rrk.'METHINV'.'CALPREC' = calprec ;
 EXEC Rrk ;
*  Filtre  0 '<' Kn
 Kn         =  tic.'KN'                                    ;
 Kn         =  'KOPS' Kn  '|<' 1.e-5                       ;
 tic.'KN'   = Kn                                           ;



*-- On traite l'injection comme une C.L. en température
cpv  matxx= 'KOPS' 'MATRIK' ;
Si (TBT.'Tbreche') ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'EN'
                           Enj 'NATURE' 'DISCRET')        ;
Finsi ;
Si (TBT.'Tbreche2') ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'EN'
                           Enj2 'NATURE' 'DISCRET')       ;
Finsi ;
Si (TBT.'Tbreche3') ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'EN'
                           Enj3 'NATURE' 'DISCRET')       ;
Finsi ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rre.'CLIM' = cpv;
 Finsi ;


 Rre.'METHINV'.'CALPREC' = calprec ;
 EXEC Rre ;
*  Filtre  0 '<' En
 En         =  tic.'EN'                                    ;
 En         =  'KOPS' En  '|<' 1.e-15                      ;
 tic.'EN'   = En                                           ;

* Réalisabilité sur Nut
   Nut = cnu * Kn * Kn * (inve En) ;                       ;
   Nu= tic.'NU'                                             ;
mess 'Réalisabilité sur Nut';
   a = 1500.*Nu ; al=0.8 ; ala=al*a ; b=ala*((2.*(1.-al))**(-1.));
 tic.'ala'=ala ;
 tic.'nut'=nut ;
   ik=masq Nut 'INFERIEUR' ala ;
   Nut=(ik*Nut)+( (1.-ik)*a*(Nut + b)*(inve (a + Nut + b)));
   Nut = kcht $vtf scal sommet Nut ;
   Nutsnu=(1./Nu)*Nut;
 'SI' ( TBT.'IMPR' >EG 2)                                  ;
  MESS ' Mini Maxi Nut/Nu ' (mini Nutsnu) (maxi Nutsnu)    ;
 'FINSI'                                                   ;

tic.'NUEFF'=NUT + tic.'NU'                                 ;


 Finsi                                                     ;
*---- Modèle K-Epsilon Implicite -- FIN --------------------

*---- Modèle K-Epsilon EFM1 --------------------------------
'SI'(( Ega TBT.'MODTURB' 'KEPSILON') et (EGA TBT.'FEF' 'EFM1'));
  tic.'NUEFF'=tic.'NUT' + tic.'NU'                         ;
*---- Modèle K-Epsilon EFM1 -- FIN -------------------------
 Finsi                                                     ;

Sinon                                                      ;
*---- Il n'y a pas de modèle de turbulence -----------------
  tic.'NUEFF'=tic.'NU'                                     ;
Finsi                                                      ;

*--- Actualisation de MUT
  tic.'MUT'   = (tic.'NUEFF'* Rhomnm)                        ;
*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

*   Mess ' Avt EXEC RV tic.DT=' tic.'DT'                      ;

  rv.'METHINV'.'CALPREC' = calprec ;
  'SI' ('EXIS' rv 'PROJ') ;
    rv.'PROJ'.'METHINV'.'CALPREC' = calprec ;
  'FINSI' ;
  EXEC  rv                                                 ;

* Modif. FP 18/05/00
* Détermination des termes sources liés à la condensation en masse :
* ------------------------------------------------------------------

*---------------------------------------------------
* RESOLUTION DE LA DENSITE DE VAPEUR
* Affichage des masses totales vapeur AVANT et APRES
* Creation de la CLIM pour injection

'SI' TBT.'VAPEUR'                                          ;
 Rrvap       =  TBT.'Rrvap'                                ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK' ;
Si (TBT.'Tbreche') ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RVP'
                         Rvapj 'NATURE' 'DISCRET')        ;
Finsi ;
Si (TBT.'Tbreche2') ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RVP'
                        Rvapj2  'NATURE' 'DISCRET')       ;
Finsi ;
Si (TBT.'Tbreche3') ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RVP'
                        Rvapj3  'NATURE' 'DISCRET')       ;
Finsi ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrvap.'CLIM' = cpv;
 Finsi ;

 'SI' TBT.'TRECOMB' ;
   cpvrec  matxx= 'KOPS' 'MATRIK' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIEi = GEO.NAME ;
      NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'RH2OS' ;
      RH2Os  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'RH2OS' NRECT ;

     cpvrec = cpvrec 'ET' ('MANU' 'CHPO' SORTIEi 1 'RVP'
                         RH2Os 'NATURE' 'DISCRET')        ;
   'FIN' BCLREC ;

  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     Rrvap.'CLIM'    = Rrvap.'CLIM' '+' cpvrec ;
  'SINON' ;
     Rrvap.'CLIM'    = cpvrec ;
  'FINSI' ;
 'FINSI' ;


 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrvap'                             ;
 'FINSI'                                                   ;

  Rrvap.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrvap                                              ;

'SINON'                                                    ;
 Rvp        = 0.                                           ;
 tic.'RVP'  = Rvp                                          ;
'FINSI'                                                    ;
tic.'ROVP' = tic.'RVP'                                     ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE HELIUM
*
 'SI' TBT.'THE'                                            ;
 Rrhe        =  TBT.'Rrhe'                                 ;

*-- On traite l'injection comme une C.L. en densite
cpv  matxx= 'KOPS' 'MATRIK' ;
Si (TBT.'Tbreche') ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RHE'
                         Rhej  'NATURE' 'DISCRET')         ;
Finsi ;
Si (TBT.'Tbreche2') ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RHE'
                        Rhej2  'NATURE' 'DISCRET')         ;
Finsi ;
Si (TBT.'Tbreche3') ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RHE'
                        Rhej3  'NATURE' 'DISCRET')         ;
Finsi ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrhe.'CLIM' = cpv;
 Finsi ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrhe'                              ;
 'FINSI'                                                   ;

 Rrhe.'resmn'              = tic.'RHE' NOMC 'RHE'          ;

  Rrhe.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrhe                                               ;


*  Filtre  0 '<' Rhe
 rhe        =  tic.'RHE'                                   ;
 rhe        =  'KOPS' rhe '|<' 1.e-10                      ;
 rhe        =  'KOPS' rhe '>|' (maxi tic.'RHO')            ;
'SINON'                                                    ;
 rhe        = 0.                                           ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE HYDROGENE
*
 'SI' TBT.'TH2'                                            ;
 Rrh2        =  TBT.'Rrh2'                                 ;

*-- On traite l'injection comme une C.L. en densite
cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RH2'
                           Rh2j 'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RH2'
                       Rh2j2 'NATURE' 'DISCRET')           ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RH2'
                       Rh2j3 'NATURE' 'DISCRET')           ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrh2.'CLIM' = cpv                                         ;
 Finsi                                                     ;

 'SI' TBT.'TRECOMB' ;
   cpvrec  matxx= 'KOPS' 'MATRIK' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIEi = GEO.NAME ;
      NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'RH2S' ;
      RH2s  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'RH2S' NRECT ;

     cpvrec = cpvrec 'ET' ('MANU' 'CHPO' SORTIEi 1 'RH2'
                         RH2s 'NATURE' 'DISCRET')        ;
   'FIN' BCLREC ;

  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     Rrh2.'CLIM'    = Rrh2.'CLIM' '+' cpvrec ;
  'SINON' ;
     Rrh2.'CLIM'    = cpvrec ;
  'FINSI' ;
 'FINSI' ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrh2'                              ;
 'FINSI'                                                   ;

 Rrh2.'resmn'              = tic.'RH2' NOMC 'RH2'          ;

  Rrh2.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrh2                                               ;

*  Filtre  0 '<' Rh2
 rh2        =  tic.'RH2'                                   ;
 rh2        =  'KOPS' rh2 '|<' 1.e-10                      ;
 rh2        =  'KOPS' rh2 '>|' (maxi tic.'RHO')            ;
'SINON'                                                    ;
 rh2        = 0.                                           ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE OXYGENE
*
 'SI' TBT.'TO2'                                            ;
 Rro2        =  TBT.'Rro2'                                 ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RO2'
                           Ro2j 'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RO2'
                       Ro2j2 'NATURE' 'DISCRET')           ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RO2'
                       Ro2j3 'NATURE' 'DISCRET')           ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rro2.'CLIM' = cpv                                         ;
 Finsi                                                     ;

 'SI' TBT.'TRECOMB' ;
   cpvrec  matxx= 'KOPS' 'MATRIK' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIEi = GEO.NAME ;
      NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'RO2S' ;
      RO2s  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'RO2S' NRECT ;

     cpvrec = cpvrec 'ET' ('MANU' 'CHPO' SORTIEi 1 'RO2'
                         RO2s 'NATURE' 'DISCRET')        ;
   'FIN' BCLREC ;

  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     Rro2.'CLIM'    = Rro2.'CLIM' '+' cpvrec ;
  'SINON' ;
     Rro2.'CLIM'    = cpvrec ;
  'FINSI' ;
 'FINSI' ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rro2'                              ;
 'FINSI'                                                   ;

 Rro2.'resmn'              = tic.'RO2' NOMC 'RO2'          ;

  Rro2.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rro2                                               ;

*  Filtre  0 '<' Ro2
 ro2        =  tic.'RO2'                                   ;
 ro2        =  'KOPS' ro2 '|<' 1.e-10                      ;
 ro2        =  'KOPS' ro2 '>|' (maxi tic.'RHO')            ;
'SINON'                                                    ;
 ro2        = 0.                                           ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE AZOTE
*
 'SI' TBT.'TN2'                                            ;
 Rrn2        =  TBT.'Rrn2'                                 ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RN2'
                           Rn2j 'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RN2'
                       Rn2j2 'NATURE' 'DISCRET')           ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RN2'
                       Rn2j3 'NATURE' 'DISCRET')           ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrn2.'CLIM' = cpv                                         ;
 Finsi                                                     ;

 'SI' TBT.'TRECOMB' ;
   cpvrec  matxx= 'KOPS' 'MATRIK' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIEi = GEO.NAME ;
      NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'RN2S' ;
      RN2s  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'RN2S' NRECT ;

     cpvrec = cpvrec 'ET' ('MANU' 'CHPO' SORTIEi 1 'RN2'
                         RN2s 'NATURE' 'DISCRET')        ;
   'FIN' BCLREC ;

  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     Rrn2.'CLIM'    = Rrn2.'CLIM' '+' cpvrec ;
  'SINON' ;
     Rrn2.'CLIM'    = cpvrec ;
  'FINSI' ;
 'FINSI' ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrn2'                              ;
 'FINSI'                                                   ;

 Rrn2.'resmn'              = tic.'RN2' NOMC 'RN2'          ;

  Rrn2.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrn2                                               ;

*  Filtre  0 '<' Rn2
 rn2        =  tic.'RN2'                                   ;
 rn2        =  'KOPS' rn2 '|<' 1.e-10                      ;
 rn2        =  'KOPS' rn2 '>|' (maxi tic.'RHO')            ;
'SINON'                                                    ;
 rn2        = 0.                                           ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE DIOXYDE DE CARBONE
*
 'SI' TBT.'TCO2'                                           ;
 Rrco2       =  TBT.'Rrco2'                                ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RCO2'
                          Rco2j 'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RCO2'
                       Rco2j2 'NATURE' 'DISCRET')          ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RCO2'
                       Rco2j3 'NATURE' 'DISCRET')          ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrco2.'CLIM' = cpv                                        ;
 Finsi                                                     ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrco2'                             ;
 'FINSI'                                                   ;

 Rrco2.'resmn'              = tic.'RCO2' NOMC 'RCO2'       ;

  Rrco2.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrco2                                              ;

*  Filtre  0 '<' Rco2
 rco2        =  tic.'RCO2'                                 ;
 rco2        =  'KOPS' rco2 '|<' 1.e-10                    ;
 rco2        =  'KOPS' rco2 '>|' (maxi tic.'RHO')          ;
'SINON'                                                    ;
 rco2       = 0.                                           ;
'FINSI'                                                    ;

*? TCO2AIR
*------------------------------------------------
* RESOLUTION DE LA DENSITE D'AIR
*
 'SI' TBT.'TAIR'                                           ;
 Rrair       =  TBT.'Rrair'                                ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RAIR'
                          Rairj 'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RAIR'
                       Rairj2 'NATURE' 'DISCRET')          ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RAIR'
                       Rairj3 'NATURE' 'DISCRET')          ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrair.'CLIM' = cpv                                        ;
 Finsi                                                     ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrair'                             ;
 'FINSI'                                                   ;

 Rrair.'resmn'              = tic.'RAIR' NOMC 'RAIR'       ;

  Rrair.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrair                                              ;

*  Filtre  0 '<' Rair
 rair        =  tic.'RAIR'                                 ;
 rair        =  'KOPS' rair '|<' 1.e-10                    ;
 rair        =  'KOPS' rair '>|' (maxi tic.'RHO')          ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA DENSITE MONOXYDE DE CARBONE
*
 'SI' TBT.'TCO'                                            ;
 Rrco        =  TBT.'Rrco'                                 ;

*-- On traite l'injection comme une C.L. en densite

cpv  matxx= 'KOPS' 'MATRIK'                                ;
Si (TBT.'Tbreche')                                         ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'RCO'
                          Rcoj  'NATURE' 'DISCRET')        ;
Finsi                                                      ;
Si (TBT.'Tbreche2')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'RCO'
                       Rcoj2  'NATURE' 'DISCRET')          ;
Finsi                                                      ;
Si (TBT.'Tbreche3')                                        ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'RCO'
                       Rcoj3  'NATURE' 'DISCRET')          ;
Finsi                                                      ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 Rrco.'CLIM' = cpv                                         ;
 Finsi                                                     ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION Rrco'                              ;
 'FINSI'                                                   ;

 Rrco.'resmn'              = tic.'RCO' NOMC 'RCO'          ;

  Rrco.'METHINV'.'CALPREC' = calprec ;
  EXEC  Rrco                                               ;

*  Filtre  0 '<' Rco
 rco        =  tic.'RCO'                                   ;
 rco        =  'KOPS' rco '|<' 1.e-10                      ;
 rco        =  'KOPS' rco '>|' (maxi tic.'RHO')            ;
'SINON'                                                    ;
 rco        = 0.                                           ;
'FINSI'                                                    ;

*------------------------------------------------
* RESOLUTION DE LA TEMPERATURE DU FLUIDE TF
* Definition des températures TBPW et TBP pour ECHI
*                             TBPW température paroi (THERMP)
* Definition des CLIM pour l'injection et ajout
* des CLIM pour température paroi imposée
* Le terme source STF est calcule avant (fin pas precedent)

 rtf        = TBT.'RTF'                                   ;

'SI' TBT.'TPAROIF'                                        ;
     TBPW       = 'REDU' (tic.'TP') GEO.'paroif'          ;
     tic.'TBPW' = 'KCHT' GEO.'$paroif' 'SCAL' 'SOMMET' TBPW    ;
     TBFW       = 'REDU' (tic.'TF') GEO.'paroif'          ;
     tic.'TBFW' = 'KCHT' GEO.'$paroif' 'SCAL' 'SOMMET' TBFW    ;
'FINSI'                                                   ;

*-- On traite l'injection comme une C.L. en température
cpv  matxx= 'KOPS' 'MATRIK' ;
Si (TBT.'Tbreche') ;
 cpv = cpv et ('MANU' 'CHPO' brechei 1 'TF'
                            Tj 'NATURE' 'DISCRET')        ;
Finsi ;
Si (TBT.'Tbreche2') ;
 cpv = cpv et ('MANU' 'CHPO' brech2i 1 'TF'
                            Tj2 'NATURE' 'DISCRET')       ;
Finsi ;
Si (TBT.'Tbreche3') ;
 cpv = cpv et ('MANU' 'CHPO' brech3i 1 'TF'
                            Tj3 'NATURE' 'DISCRET')       ;
Finsi ;

 Si ((TBT.'Tbreche') ou (TBT.'Tbreche2') ou (TBT.'Tbreche3'));
 rtf.'CLIM' = cpv;
 Finsi ;

 'SI' TBT.'TRECOMB' ;
   cpvrec  matxx= 'KOPS' 'MATRIK' ;

   NBREC = 'DIME' rxt.'RECOMB' ;
   'REPETER' BCLREC NBREC ;
      NAME = 'CHAIN' 'REC' 'sorI' &BCLREC ;
      SORTIEi = GEO.NAME ;
      NRECT = 'DIME' RXT.'TIC'.'RECOMB'.&BCLREC.'Tout' ;
      RTS0  = 'EXTR' RXT.'TIC'.'RECOMB'.&BCLREC.'Tout' NRECT ;

     cpvrec = cpvrec 'ET' ('MANU' 'CHPO' SORTIEi 1 'TF'
                         RTS0 'NATURE' 'DISCRET')        ;
   'FIN' BCLREC ;

  'SI' ((TBT.'Tbreche') 'OU' (TBT.'Tbreche2') 'OU' (TBT.'Tbreche3')) ;
     rtf.'CLIM'    = rtf.'CLIM' '+' cpvrec ;
  'SINON' ;
     rtf.'CLIM'    = cpvrec ;
  'FINSI' ;
 'FINSI' ;

 'SI' ( TBT.'IMPR' >EG 2)                                  ;
 'MESS' '==> RESOLUTION rtf '                             ;
 'FINSI'                                                   ;

*? TF=tic.'TF'  ;
*? TFmoy=(somt(Diag*TF))/Vtotal;
*? mess '%$$ TFmoy avant exec rtf ' TFmoy;

  rtf.'METHINV'.'CALPREC' = calprec ;
  EXEC  rtf                                               ;

*? TF=tic.'TF'  ;
*? TFmoy=(somt(Diag*TF))/Vtotal;
*? mess '%$$ TFmoy apres exec rtf ' TFmoy;

*--------------------------------------------------------
* RESOLUTION DE LA TEMPERATURE PAROI TP
* Le terme SOURCE FHP1 est calulé dans la procédure CONDENS

'SI' TBT.'THERMP'                                        ;
 'SI' ('NON' TBT.'THERCO')                               ;
    rtp        = TBT.'RTP'                               ;
  'SI' ( TBT.'IMPR' >EG 2)                               ;
  'MESS' '==> RESOLUTION rtp '                           ;
  'FINSI'                                                ;
    rtp.'METHINV'.'CALPREC' = calprec                    ;
    EXEC  rtp                                            ;
 'FINSI'                                                 ;
   Tp         = tic.'TP'                                 ;
'FINSI'                                                  ;

 Tfgd = 1.E10 ;
* Filtre  Tfmini '<' Tf
 CHrtf1 = rtf.'CLIM'                                     ;
 MArtf1 = EXTR CHrtf1 'MAILLAGE'                         ;
 'SI' ( MArtf1 'EGA' 0 )                                 ;
   tfmi0 = Tfgd                                          ;
 'SINON'                                                 ;
   tfmi0 = mini rtf.'CLIM'                               ;
 'FINSI'                                                 ;
 'SI' TBT.'ASPER '                                       ;
   tfmiij= tdinj                                         ;
 'SINON'                                                 ;
   tfmiij= Tfgd                                          ;
 'FINSI'                                                 ;
 'SI' TBT.'THERMP'                                       ;
   tfmiw = mini tic.'TP'                                 ;
 'SINON'                                                 ;
   tfmiw = Tfgd                                          ;
 'FINSI'                                                 ;
 'SI' TBT.'TTIMP1'                                       ;
   tfmi1 = tic.'TBP1'                                    ;
 'SINON'                                                 ;
   tfmi1 = Tfgd                                          ;
 'FINSI'                                                 ;
 'SI' TBT.'TTIMP2'                                       ;
   tfmi2 = tic.'TBP2'                                    ;
 'SINON'                                                 ;
   tfmi2 = Tfgd                                          ;
 'FINSI'                                                 ;
 'SI' TBT.'TTIMP3'                                       ;
   tfmi3 = tic.'TBP3'                                    ;
 'SINON'                                                 ;
   tfmi3 = Tfgd                                          ;
 'FINSI'                                                 ;
 'SI' TBT.'TECHANP'                                      ;
   tfmi4 = 'MINI' tic.'TBP0'                             ;
 'SINON'                                                 ;
   tfmi4 = Tfgd                                          ;
 'FINSI'                                                 ;
 Tfmi = MINI (PROG tfmi0 tfmiw tfmi1 tfmi2 tfmi3 tfmi4 tfmiij
             (rxt.'TF0'));
 Tf         = tic.'TF'                                   ;
 Tf         = 'KOPS' Tf  '|<' tfmi                       ;
 tic.'TF'   = Tf                                         ;
* Tf est bornée inférieurement par la température minimale
* physique

'SI' TBT.'ASPER '                                        ;
*** RVN ***   Velocita gocce
   rvn       =  TBT.'RVN'                                ;
   rvn.'CLIM'  = (rvn.'CLIM' '-' rvn.'CLIM') '+' vnj     ;
    rvn.'METHINV'.'CALPREC' = calprec                    ;
    EXEC  rvn                                            ;

*** RXD ***   Frazione volume fase dispersa
   rxd       =  TBT.'RXD'                                ;
   rxd.'CLIM'  = (rxd.'CLIM' '-' rxd.'CLIM') '+' xdj     ;
    rxd.'METHINV'.'CALPREC' = calprec                    ;
    EXEC  rxd                                            ;
   tic.'XD'  =  'KOPS' (tic.'XD') '|<' 1.e-10            ;

*** RTD ***   Temperature fase dispersa
   rtd       =  TBT.'RTD'                                ;
   rtd.'CLIM'  = (rtd.'CLIM' '-' rtd.'CLIM') '+' tdj     ;
    rtd.'METHINV'.'CALPREC' = calprec                    ;
    EXEC  rtd                                            ;

*** RDD ***   Diametro fase dispersa
   rdd       =  TBT.'RDD'                                ;
   rdd.'CLIM'  = (rdd.'CLIM' '-' rdd.'CLIM') '+' ddj     ;
    rdd.'METHINV'.'CALPREC' = calprec                    ;
    EXEC  rdd                                            ;
   tic.'DD'  =  'KOPS' (tic.'DD') '|<' 1.e-10            ;

'FINSI'                                                  ;

**** Fin EDP **********************

*tc mise en commentaire de ce finsi
*'FINSI'                                                  ;

*------------------------------------------------------------
*>7 MISE EN PLACE DES CONTRAINTES POUR LES BILANS 0D
*>7 Contraintes sur :
*>7   - la masse totale
*>7   - l'énergie et donc la température
*>7   - les masses des differents constituants incondensables
*>7   - la masse de vapeur d'eau
*
*------------------------------------------------------------
'SI' TBT.'VAPEUR'                                        ;
Si (exist tic 'RAIR');
Mvp=somt (diag*tic.'RVP');
Mair=somt (diag*tic.'RAIR');
mess '%$$ RETSAT avt CORMASSE Mvp=' mvp ' Mair='Mair;
finsi;

dRhov    rvp Rhomvnt =  CORMASSE 'RVP' Rhovgn 'Mdrvap'   ;
Mvp=somt (diag*tic.'RVP');
Mdrov= drhov*Vtotal;
mess '%$$ RETSAT apr CORMASSE Mvp=' mvp ' Mdrov=' Mdrov;
'FINSI'                                                  ;
*>7 D'où RVP

*------------------------------------------------------------
'SI' TBT.'THE'                                            ;
dRhohe    rhe Rhomhet =  CORMASSE 'RHE' Rmhen 'Mdrhe'     ;
'FINSI'                                                   ;

*--------------------------------------------------------
'SI' TBT.'TH2'                                           ;
dRhoh2    rh2 Rhomh2t =  CORMASSE 'RH2' Rmh2n 'Mdrh2'     ;
'FINSI'                                                   ;

*--------------------------------------------------------
'SI' TBT.'TO2'                                           ;
dRhoo2    ro2 Rhomo2t =  CORMASSE 'RO2' Rmo2n 'Mdro2'     ;
'FINSI'                                                   ;

*---------------------------------------------------------
'SI' TBT.'TN2'                                           ;
dRhon2    rn2 Rhomn2t =  CORMASSE 'RN2' Rmn2n 'Mdrn2'     ;
'FINSI'                                                   ;

*---------------------------------------------------------
'SI' TBT.'TCO'                                           ;
dRhoco    rco Rhomcot =  CORMASSE 'RCO' Rmcon 'Mdrco'     ;
'FINSI'                                                   ;

*---------------------------------------------------------
'SI' TBT.'TCO2'                                           ;
dRhoco2    rco2 Rhomco2t =  CORMASSE 'RCO2' Rmco2n 'Mdrco2';
'FINSI'                                                   ;

*---------------------------------------------------------
*µµµµµµµµ Calcul de la Densité au pas de temps N µµµµµµµµµµµµµµµµµµµµµµµ
* Si Cavité ouverte Pression nulle !
 Si TBT.'Tsortie'                                        ;
 Pt = 0.                                                 ;
 tic.'PT' = tic.'PT' 'ET' ('PROG' Pt)                    ;
 rho = Rhom                                              ;
 Sinon                                                   ;
* Calcul de la pression 0D avec le champ Tf actualise

 irtf = 'INVE' (rgp '*' (tic.'TF' '+' 273.15))           ;
 Pt = ((Rhomn-Rbrom) '*' Vtotal) '/' ('SOMT' (Diag '*' irtf));
*mess ' Rhomn= ' Rhomn ' Pression : Pt = ' Pt ;

* Calcul de la Densité au pas de temps N

  Si((EGA TBT.'VERSION' 0) ou (NON (TBT.'VAPEUR')))        ;

   Mess ' Version V0 ==> Loi d état gaz parfait pour la vapeur ';
   rho = Pt '*' ('INVE' (Rgp '*' (Tf '+' 273.15)))         ;
   rhot = Pt '*' ('INVE' (Rgp '*' (Tf '+' 273.15)))        ;
   tic.'PT' = tic.'PT' 'ET' ('PROG' Pt)                    ;
   Rebro = 0.                                              ;
   Mliq  = 0.                                              ;
   Mlq   = 0.                                              ;
  Sinon                                                    ;
*-----------------------------------------------------------------------
*  Mess ' Version V1 ==> Loi d état gaz réel pour la vapeur ';


 Si (NON (EXIST tic 'RAIR'))                               ;
 Rho  = tic.'RHO'                                          ;
 Rair = tic.'YAIR' * tic.'RHO'                             ;
 tic.'RAIR' = Rair                                         ;
 Finsi                                                     ;
 Rbro = tic.'RBRO'                                         ;
 Rair = tic.'RAIR'                                         ;
 Rhot = Rair + Rvp + Rhe + Rh2 + Ro2 + Rn2 + Rco2 + Rco - Rbro;

  Qcm Pt yvap cpvap Rhot Mliq Rebro
  = RETSAT tic ndl $vtf TBT 0.5 1.e-4 Rhot Tfmi Cvmnm      ;

*?? au cas où on veut tracer Econd = Econd + Econdm        ;
*?? au cas où on veut tracer Hcond = Hcond + Hcondm        ;
 Mair   = somt (Diag*tic.'RAIR')                           ;
 Rmairn = Mair/Vtotal                                      ;

 tic.'PT' = tic.'PT' 'ET' ('PROG' Pt)                      ;

 Mlq = Mlq + Mliq                                          ;


*.......................................................................
 Rbro  = tic.'RBRO'                                   ;
*Rovp  = tic.'RVP' - tic.'RBRO'                       ;
 Tf    = tic.'TF'                                     ;

* Fin traitement Gaz réel version V1
  Finsi                                                    ;

 Mlq = Mlq + (extr (dime tic.'Mliqpuis') tic.'Mliqpuis')   ;
 tic.'Mliqpuis'= tic.'Mliqpuis' 'ET' ('PROG' Mlq)          ;

* Fin traitement enceinte fermée
 Finsi ;
*µµµµµµµµ Calcul de la Densité au pas de temps N µµµµµµµµµµµµµµµµµµµµµµµ
 rho = 'KCHT' $vtf 'SCAL' 'SOMMET' rhot                  ;
 Rhomnt  = ('SOMT' (Diag '*' rho)) + (Rbrom*Vtotal)      ;
*mess ' Rhomn=' Rhomn '  Rhomnt=' Rhomn;
*-----------------------------
  dRho    = ((Rhomn '*' VTotal) '-' Rhomnt )  '/' Vtotal ;
  tic.'drho' = tic.'drho' 'ET' ( 'PROG' dRho )           ;

*---------- Recalcul pour bilan nul
*?rho1 = rho ;
  drot=rho - rhot;
  mess '%$$ Mini / Maxi drot=' (mini drot) (maxi drot);
  rho     = 'KCHT' $vtf 'SCAL' 'SOMMET' (rho '+' dRho)   ;
  rhot    = 'KCHT' $vtf 'SCAL' 'SOMMET'  rho             ;
*?mess ' Recalcul pour Bilan Nul' (somt (Diag'*' rho1))
*?(somt (Diag'*' rho)) (somt (Diag'*' tic.'RHO'))        ;

  tic.'RHO' = rho                                        ;
  Rhomnt  = 'SOMT' (Diag '*' rho)                        ;
  dRho    = dRho '*' Vtotal                              ;

*---------------------------------------------------------
* On corrige l'air apres le calcul de la masse total car
* dans le cas où on ne transporte pas l'air on en a besoin !!
'SI'((NON TBT.'TAIR') et (TBT.'VERSION' < 1))              ;
* On calcule la masse d'air
*mess 'Rho ' (type Rho) 'Rvp ' (type Rvp) 'rhe ' (type rhe);
*mess 'rh2 ' (type rh2) 'ro2 ' (type ro2) 'rco2 ' (type rco2);
*mess 'rco ' (type rco) ;
 Rair  =  Rho - Rvp - Rhe - Rh2 - Ro2 - Rn2 - Rco2 - Rco   ;
 tic.'RAIR' = Rair                                         ;
'SINON'                                                    ;
 Rair       =  tic.'RAIR'                                  ;
'FINSI'                                                    ;

*? Mair = somt (Diag*Rair)                                   ;

dRhoair    rair Rhomairt =  CORMASSE 'RAIR' Rmairn 'Mdrair';

*? mess '%$$ masse d air attendue ' (Rmairn '*' VTotal)
*?      'masse d air présente avant correction ' Mair
*?      'masse d air présente apres correction ' Rhomairt  ;

*---------------------------------------------------------
* Correction de la température pour vérifier l'énergie
* ATTENTION : Cv n'est pas reactualise pour l'instant
* N
*mess 'Cvmnm=' cvmnm  'mini maxi Tf ' (mini tf) (maxi tf) ;
*mess 'mini maxi rho ' (mini rho) (maxi rho) ;

  Remnt = Cvmnm '*' ( 'SOMT' (Diag '*' rho '*'
                       (Tf '+' 273.15)) )                ;

* On rajoute à l'énergie du mélange l'énergie du Brouillard
* Si il y en a
  Remnt = Remnt - rebro                                  ;

  dE = (Remn '*' Vtotal) '-' Remnt                       ;

*MESS '==> Erreur Energie = ' dE ' Joules'               ;

  Cvmn=Cvmnm                                             ;
  IndE = rho '*' Cvmn '*' (Tf '+' 273.15) '*' Diag
                            '/' Remnt                    ;
  dE = IndE '*' dE                                       ;

  dTf= ('INVE' (Diag '*' rho)) '*' (dE '/' Cvmn)         ;
  dTf = 'KCHT' $vtf 'SCAL' 'SOMMET' dTf                  ;

Si (NON (TBT.'CORTEMP'))                                 ;
*mess ' On supprime la correction sur Tf' ;
 dTf = 'KCHT' $vtf 'SCAL' 'SOMMET' 0. ;
FINsi ;

  mess '%$$ dtf ' (mini dtf) (maxi dtf) ;
  Tf = 'KCHT' $vtf 'SCAL' 'SOMMET' (Tf '+' dTf)          ;
  Tf = KOPS Tf '|<' Tfmi                                 ;
  tic.'TF'  = Tf                                         ;
  tic.'MdTf' = tic.'MdTf' 'ET' ( 'PROG' ('MAXI' dTf) )   ;
  tic.'mdTf' = tic.'mdTf' 'ET' ( 'PROG' ('MINI' dTf) )   ;

*'MESS' '==>>> Mini dTf = ' ('MINI' dTf) ' Maxi dTf '
*                 ( 'MAXI' dTf)                          ;

*--- Recalcul pour bilan nul
  Remnt = Cvmn '*' ( 'SOMT' (Diag '*' rho '*'
                (Tf '+' 273.15)) ) '/' Vtotal            ;
  dE = 'SOMT' ( Diag '*' dE  ) '/' VTotal                ;
  dTf= dE '/' Cvmn '/' ('SOMT'(Diag '*' rho) )          ;

*---------------------------------------------------------
**** Test sur la conservation energie dans le mur

'SI' TBT.'THERMP'                                        ;
 Diagp1 = 'DOMA' $vtp 'VOLUME'                           ;
 Vtotalp1 = 'SOMT' Diagp1                                ;
 tp01 = 'NOEL' $vtp Tp                                   ;
 Emurm = ( 'SOMT' (tic.'ROCP' '*' Diagp1 '*'
                    (tp01 '+' 273.15 ) ) )
                     '/' Vtotalp1                        ;
 tic.'TP'  = Tp                                          ;
'FINSI'                                                  ;

*---------------------------------------------------------
* Calcul de la Température moyenne fluide

  Tfm= (Remn '*' Vtotal)
     / ('SOMT' (Diag '*' (tic.'RHO') * Cvmn))            ;
  Tfm=Tfm - 273.15                                       ;
  Tfm = maxi (prog Tfm Tfmi)                             ;

  tic.'Tfm'= tic.'Tfm' 'ET' ('PROG' Tfm)                 ;

*---------------------------------------------------------
* Calcul de la Température moyenne paroi

'SI' TBT.'THERMP'                                        ;
  Tpm= 'SOMT' (GEO.'Diagp' '*' Tp) '/' GEO.'VTotalp'     ;
  tic.'Tpm'= tic.'Tpm' 'ET' ('PROG' Tpm)                 ;
'FINSI'                                                  ;

*---------------------------------------------------------
**** Actualisation des proprietes physiques **************
**** Calcul de la pression *******************************
**** et avancement en temps ******************************

* Calcul Cp (Tfm)
Cph2 Cphe Cpo2 Cpn2 Cpco2 Cpco Cpair = CALCP Tfm         ;
* CALCP on est en fin de boucle

* Calcul Mu (Tkm)
Tkm=Tfm '+' 273.15                                       ;
Muh2 Muhe Muo2 Mun2 Muco2 Muco Muvap Muair = CALMU Tkm   ;


*Dans ces conditions la masse totale est
* Ceci en vue de calculer des fractions massiques
* dont la somme vaut 1 qqst x
* 0<= Yi <= 1 parceque  les rair Rvp etc sont >0
* Rhot diffère de Rho dans sa distribution mais
* l'intégrale doit être la même

Si (TBT.'VERSION' '<' 1)                                 ;
Cpvap = TBT.'Cpvap'                                      ;
Rhot=rair + Rvp + rhe + rh2 + ro2 + rn2 + rco + rco2     ;
Finsi ;
* Sinon Rhot est donné par RETSAT (un peu plus haut)

ermas=somt ((Rho - Rhot)*Diag)                           ;

 'SI' ( TBT.'IMPR' >EG 2)                                ;
   MESS 'ERMAS=' ermas                                   ;
 'FINSI'                                                 ;

* Calcul fraction massique eau
'SI' TBT.'VAPEUR'                                        ;
  Yvap =  'KOPS' Rvp '/' Rhot                            ;
'SINON'                                                  ;
  Yvap = 0.                                              ;
'FINSI'                                                  ;
  tic.'YVAP'= Yvap                                       ;

* Calcul fraction massique de He
'SI' TBT.'THE'                                           ;
  Yhe  =  'KOPS' rhe '/' Rhot                            ;
'SINON'                                                  ;
  Yhe  = 0.                                              ;
'FINSI'                                                  ;
  tic.'YHE'= Yhe                                         ;

* Calcul fraction massique de H2
'SI' TBT.'TH2'                                           ;
  Yh2  =  'KOPS' rh2 '/' Rhot                            ;
'SINON'                                                  ;
  Yh2  = 0.                                              ;
'FINSI'                                                  ;
  tic.'YH2'= Yh2                                         ;

* Calcul fraction massique de O2
'SI' TBT.'TO2'                                           ;
  YO2  =  'KOPS' ro2 '/' Rhot                            ;
'SINON'                                                  ;
  Yo2  = 0.                                              ;
'FINSI'                                                  ;
  tic.'YO2'= Yo2                                         ;

* Calcul fraction massique de N2
'SI' TBT.'TN2'                                           ;
  YN2  =  'KOPS' rn2 '/' Rhot                            ;
'SINON'                                                  ;
  Yn2  = 0.                                              ;
'FINSI'                                                  ;
  tic.'YN2'= Yn2                                         ;

* Calcul fraction massique de CO2
'SI' TBT.'TCO2'                                          ;
  YCO2  =  'KOPS' rco2 '/' Rhot                          ;
'SINON'                                                  ;
  Yco2  = 0.                                             ;
'FINSI'                                                  ;
  tic.'YCO2'= Yco2                                       ;

* Calcul fraction massique de CO
'SI' TBT.'TCO'                                           ;
  YCO   =  'KOPS' rco  '/' Rhot                          ;
'SINON'                                                  ;
  Yco   = 0.                                             ;
'FINSI'                                                  ;
  tic.'YCO'= Yco                                         ;

* Calcul de la fraction massique d'air
  Yair = 'KOPS' rair '/' Rhot                            ;
  Yair = KCHT $vtf 'SCAL' 'SOMMET' Yair                  ;
  tic.'YAIR'= Yair                                       ;

* a= yair + yvap + yh2 + yhe + yn2 + yo2 + yco2 + yco    ;
* mess ' Controle de la somme des fractions massiques '
*(mini a) (maxi a) ;

* Calcul de la constante des gaz du mélange et du gamma
* du mélange
* Calcul du Cp du mélange
  Rgp  =  (Rgvap '*' Yvap) '+' (Rgair '*' Yair)
        '+' (Rghe '*' Yhe ) '+'  (Rgh2  '*' Yh2 )
        '+' (Rgo2 '*' Yo2 ) '+' (Rgn2 '*' Yn2 )
        '+' (Rgco '*' Yco ) '+' (Rgco2 '*' Yco2 )        ;

  Rgp  =  'KCHT' $vtf 'SCAL' 'SOMMET' Rgp                ;
  Rgpm = 'SOMT' (Diag '*' Rgp) '/' VTotal                ;
* Mess ' Rgpm = ' Rgpm ;

  Cp   =  (Cpvap '*' Yvap) '+' (Cpair '*' Yair)
        '+' (Cphe '*' Yhe ) '+' (Cph2  '*' Yh2 )
        '+' (Cpo2 '*' Yo2 ) '+' (Cpn2  '*' Yn2 )
        '+' (Cpco '*' Yco ) '+' (Cpco2 '*' Yco2 )        ;

  Cp   =  'KCHT' $vtf 'SCAL' 'SOMMET' Cp                 ;
  Cpm  = 'SOMT' (Diag '*' Cp) '/' VTotal                 ;
  Cvm  = Cpm '-' Rgpm                                    ;
  Gamm = Cpm '/' Cvm                                     ;

  Mu   =  (Muvap '*' Yvap) '+' (Muair '*' Yair)
        '+' (Muhe '*' Yhe ) '+' (Muh2  '*' Yh2 )
        '+' (Muo2 '*' Yo2 )  '+' (Mun2 '*' Yn2 )
        '+' (Muco '*' Yco ) '+' (Muco2 '*' Yco2 )        ;

  tic.'Mu' = Mu                                          ;

 tic.'Rgp'  = Rgp                                        ;
 tic.'Rgpm' = tic.'Rgpm' 'ET' ('PROG' Rgpm)              ;
 tic.'Cvm'  = tic.'Cvm'  'ET' ('PROG' Cvm)               ;
 tic.'Gamm' = tic.'Gamm' 'ET' ('PROG' Gamm)              ;
 tic.'Cpm'  = tic.'Cpm'  'ET' ('PROG' Cpm)               ;
*---------------------------------------------------------
* Calcul du terme source de l'equation energie

  stf       = DPDT '/' (Cpm '*' Rhomn)                   ;
  tic.'STF' = stf                                        ;

*---------------------------------------------------------
* Calcul de l'energie convective

  Tf=tic.'TF'                                            ;
Econvw = 0.0                                             ;
Econv1 = 0.0                                             ;
Econv2 = 0.0                                             ;
Econv3 = 0.0                                             ;
Econv0 = 0.0                                             ;


'SI'((TBT.'THERMP') et (TBT.'TPAROIF'))                  ;
  Tp=tic.'TP'                                            ;
* Energie extraite du gaz par convection
   Tfpw        = 'REDU' tic.'TF' GEO.'paroif'            ;
   Tbpw        = 'REDU' tic.'TP' GEO.'paroif'            ;
   Hconv      = KCHT GEO.'$paroif' SCAL CENTRE tic.'KHW' ;
   Hconv      = elno  GEO.'$paroif' Hconv                ;
   Econvw      = 'SOMT' ( GEO.'Diagpf' '*'
                        (Hconv '*' (Tfpw '-' Tbpw)))     ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP1'                                        ;
* Energie extraite du gaz par convection
   Tfp1        = 'REDU' Tf (GEO.'mtp1')                  ;
   Tbp1        = tic.'TBP1'                              ;
   Hconv      = KCHT GEO.'$mtp1'   SCAL CENTRE tic.'KH1' ;
   Hconv      = elno  GEO.'$mtp1'   Hconv                ;
*   Diagmp1 = 'DOMA' (GEO.'$mtp1') 'XXDIAGSI'             ;
   Econv1      = 'SOMT' ( GEO.'Diag1f' '*' (Hconv '*'
                             (Tfp1 '-' Tbp1)))           ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP2'                                        ;
* Energie extraite du gaz par convection
   Tfp2        = 'REDU' Tf (GEO.'mtp2')                  ;
   Tbp2        = tic.'TBP2'                              ;
   Hconv      = KCHT GEO.'$mtp2'   SCAL CENTRE tic.'KH2' ;
   Hconv      = elno  GEO.'$mtp2'   Hconv                ;
*   Diagmp2 = 'DOMA' (GEO.'$mtp2') 'XXDIAGSI'             ;
   Econv2      = 'SOMT' ( GEO.'Diag2f' '*' (Hconv '*'
                             (Tfp2 '-' Tbp2)))           ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP3'                                        ;
* Energie extraite du gaz par convection
   Tfp3        = 'REDU' Tf (GEO.'mtp3')                  ;
   Tbp3        = tic.'TBP3'                              ;
   Hconv      = KCHT GEO.'$mtp3'   SCAL CENTRE tic.'KH3' ;
   Hconv      = elno  GEO.'$mtp3'   Hconv                ;
*   Diagmp3 = 'DOMA' (GEO.'$mtp3') 'XXDIAGSI'             ;
   Econv3      = 'SOMT' ( GEO.'Diag3f' '*' (Hconv '*'
                             (Tfp3 '-' Tbp3)))           ;
'FINSI'                                                  ;

'SI' TBT.'TECHANP'                                       ;
* Energie extraite du gaz par convection
   Tfp0        = 'REDU' Tf (GEO.'mtp0')                  ;
   Tbp0        = tic.'TBP0'                              ;
   Hconv      = KCHT GEO.'$mtp0'   SCAL CENTRE tic.'KH0' ;
   Hconv      = elno  GEO.'$mtp0'   Hconv                ;
*   Diagmp3 = 'DOMA' (GEO.'$mtp3') 'XXDIAGSI'             ;
   Econv0      = 'SOMT' ( GEO.'Diag0f' '*' (Hconv '*'
                             (Tfp0 '-' Tbp0)))           ;
'FINSI'                                                  ;

   Econv = Econvw '+' Econv1 + Econv2 '+' Econv3 '+' Econv0 ;
   tic.'Econv' = tic.'Econv' 'ET' ('PROG' Econv)         ;

 Easp           = 0.0                                    ;
 Hasp           = 0.0                                    ;
 Qasp           = 0.0                                    ;

'SI' TBT.'ASPER '                                        ;
    Tf          = tic.'TF'                               ;
    Td          = tic.'TD'                               ;
    Hgas        = tic.'HGAS'                             ;
    Diagvtf     = doma $vtf 'XXDIAGSI'                   ;
    Easp        = (somt ( Diagvtf * (Hgas * (Td - Tf)))) *Rhomnm*Cpmnm;
    srvp        = tic.'SRVP'                             ;
    Qasp        = somt (srvp * Volvtf)                   ;
    Tfe         = noel $vtf tic.'TFNM'                   ;
    Hasp        = somt ((srvp * (tfe + 273.15) * Volvtf) * Cpvap) ;

*****modif 2005
* température goutte max et min
  Td          = tic.'TD'                                 ;
  maTd         =  'MAXI' Td                              ;
  tic.'Tdma' =  tic.'Tdma' et (prog maTd)                ;
  miTd         =  'MINI' Td                              ;
  tic.'Tdmi' =  tic.'Tdmi' et (prog miTd)                ;
*****************


'FINSI'                                                  ;

 tic.'Easpe'    = tic.'Easpe' et (prog Easp )            ;
 tic.'Haspe'    = tic.'Haspe' et (prog Hasp )            ;
 tic.'Qaspe'    = tic.'Qaspe' et (prog Qasp )            ;

*---------------------------------------------------------
*>9* Prediction de la condensation pour le pas suivant ***

  Qc=0. ; Econd=0. ; Hcond=0.                            ;



*tc mise en commentaires du sinon et du finsi la ligne au milieu
* l'etant deja
*'SINON'                                                  ;
*???? Qcm=0. ; Econdm=0. ; Hcondm=0.                          ;
*'FINSI'                                                  ;

'SI' (TBT.'VAPEUR')                                      ;
   tic.'Qcm'= tic.'Qcm' 'ET' ('PROG' Qcm)                ;
'FINSI'                                                  ;


*>9-2 Calcul des flux condenses  thermique paroi
'SI' (TBT.'VAPEUR' 'ET' (TBT.'TPAROIF'))                 ;
 KHcu = rxt.'ECHAN'                                      ;
Qcw Fcondw Econdw Hcondw KKC ROVI FHP  HT
 = CONDENS rxt (GEO.'$paroif') 'TP' 'TF' 'RVP' KHcu     ;
  tic.'KKCW' = KKC                                       ;
  tic.'ROVIW'= ROVI                                      ;
  tic.'FHPW' = FHP                                       ;
  tic.'KHW'  = HT                                        ;
  tic.'Fcondw'=Fcondw                                    ;
*'MESS' 'Calcul des flux condenses '  Qcw 'Kg/s'         ;
 Qc=Qc+Qcw                                               ;
 Econd= Econd + Econdw                                   ;
 Hcond= Hcond + Hcondw                                   ;
'SINON'                                                  ;
 Qcw=0. ; Econdw=0. ; Hcondw=0.                          ;
'FINSI'                                                  ;

* Calcul des flux condenses  Température imposée 1
'SI' (TBT.'VAPEUR' 'ET' TBT.'TTIMP1')                    ;
tic.'TPI1'=kcht (GEO.'$mtp1') scal sommet (tic.'TBP1')   ;
 KHcu=(rxt.'TIMP1'.'ECHAN')                              ;
Qc1 Fcond1 Econd1 Hcond1 KKC ROVI FHP  HT
 = CONDENS rxt (GEO.'$mtp1') 'TPI1' 'TF' 'RVP' KHcu     ;
  tic.'KKC1' = KKC                                       ;
  tic.'ROVI1'= ROVI                                      ;
  tic.'FHP1' = FHP                                       ;
  tic.'KH1'  = HT                                        ;
  tic.'Fcond1'=Fcond1                                    ;
 'SI' ( TBT.'IMPR' >EG 2)                                ;
 'FINSI'                                                 ;
 'SI' ( TBT.'IMPR' >EG 2)                                ;
*'MESS' 'Calcul des flux condenses '  Qc1 'Kg/s'         ;
 'FINSI'                                                 ;
 Qc=Qc+Qc1                                               ;
 Econd= Econd + Econd1                                   ;
 Hcond= Hcond + Hcond1                                   ;
'SINON'                                                  ;
 Qc1=0. ; Econd1=0. ; Hcond1=0.                          ;
'FINSI'                                                  ;

* Calcul des flux condenses  Température imposée 2
'SI' (TBT.'VAPEUR' 'ET' TBT.'TTIMP2')                    ;
tic.'TPI2'=kcht (GEO.'$mtp2') scal sommet (tic.'TBP2')   ;
 KHcu=(rxt.'TIMP2'.'ECHAN')                              ;
Qc2 Fcond2 Econd2 Hcond2 KKC ROVI FHP HT
 = CONDENS rxt (GEO.'$mtp2') 'TPI2' 'TF' 'RVP' KHcu      ;
  tic.'KKC2' = KKC                                       ;
  tic.'ROVI2'= ROVI                                      ;
  tic.'FHP2' = FHP                                       ;
  tic.'KH2'  = HT                                        ;
  tic.'Fcond2'=Fcond2                                    ;
 'SI' ( TBT.'IMPR' >EG 2)                                ;
*'MESS' 'Calcul des flux condenses '  Qc2 'Kg/s'         ;
 'FINSI'                                                 ;
 Qc=Qc+Qc2                                               ;
 Econd= Econd + Econd2                                   ;
 Hcond= Hcond + Hcond2                                   ;
'SINON'                                                  ;
 Qc2=0. ; Econd2=0. ; Hcond2=0.                          ;
'FINSI'                                                  ;

* Calcul des flux condenses  Température imposée 3
'SI' (TBT.'VAPEUR' 'ET' TBT.'TTIMP3')                    ;
tic.'TPI3'=kcht (GEO.'$mtp3') scal sommet (tic.'TBP3')   ;
 KHcu=(rxt.'TIMP3'.'ECHAN')                              ;
Qc3 Fcond3 Econd3 Hcond3 KKC ROVI FHP HT
 = CONDENS rxt (GEO.'$mtp3') 'TPI3' 'TF' 'RVP' KHcu      ;
  tic.'KKC3' = KKC                                       ;
  tic.'ROVI3'= ROVI                                      ;
  tic.'FHP3' = FHP                                       ;
  tic.'KH3'  = HT                                        ;
  tic.'Fcond3'=Fcond3                                    ;
 'SI' ( TBT.'IMPR' >EG 2)                                ;
*'MESS' 'Calcul des flux condenses '  Qc3 'Kg/s'         ;
 'FINSI'                                                 ;
 Qc=Qc+Qc3                                               ;
 Econd= Econd + Econd3                                   ;
 Hcond= Hcond + Hcond3                                   ;
'SINON'                                                  ;
 Qc3=0. ; Econd3=0. ; Hcond3=0.                          ;
'FINSI'                                                  ;

* Calcul des flux condenses
'SI' (TBT.'VAPEUR' 'ET' TBT.'TECHANP')                   ;
tic.'TPI0'=kcht (GEO.'$mtp0') scal sommet (tic.'TBP0')   ;
 KHcu=(rxt.'ECHANP'.'ECHAN')                             ;
Qc0 Fcond0 Econd0 Hcond0 KKC ROVI FHP HT
 = CONDENS rxt (GEO.'$mtp0') 'TPI0' 'TF' 'RVP' KHcu      ;
  tic.'KKC0' = KKC                                       ;
  tic.'ROVI0'= ROVI                                      ;
  tic.'FHP0' = FHP                                       ;
  tic.'KH0'  = HT                                        ;
  tic.'Fcond0'=Fcond0                                    ;
 'SI' ( TBT.'IMPR' >EG 2)                                ;
*'MESS' 'Calcul des flux condenses '  Qc0 'Kg/s'         ;
 'FINSI'                                                 ;
 Qc=Qc+Qc0                                               ;
 Econd= Econd + Econd0                                   ;
 Hcond= Hcond + Hcond0                                   ;
'SINON'                                                  ;
 Qc0=0. ; Econd0=0. ; Hcond0=0.                          ;
'FINSI'                                                  ;

**********************************************************
'SI' TBT.'ASPER '                                        ;
   asparam rxt                                           ;
'FINSI'                                                  ;


**********************************************************
**** Avancement en temps ************************************
*mess 'Avancement en temps' ;

* Calcul densité drho/rho pour le terme de flotabilite

 Mrho=somt (Diag*Rho);
 Mrhot=somt (Diag*Rhot);
 mess '%$$ Mrho=' Mrho ' Mrhot=' Mrhot ;
 mess '%$$ Mini/Maxi rho=' (mini rho)(maxi rho);
 mess '%$$ Mini/Maxi rhot=' (mini rhot)(maxi rhot);

*Rhop = (-1.) '*' (Rhomn '-' Rho) '*' (Rho **(-1.0))     ;
 Rhop = (-1.) '*' (Rhomn '-' Rhot) '*' (Rhot **(-1.0))   ;
 Rhop = 'KCHT' $vtf 'SCAL' 'SOMMET' Rhop                 ;
 rmc  = 'NOEL' $vtf Rhop                                 ;
 tic.'Rhop' = Rhop                                       ;
 'SI' DIM3D                                              ;
 rogx       = 'KCHT' $vtf 'SCAL' 'CENTRE' 0.0            ;
 rogy       = 'KCHT' $vtf 'SCAL' 'CENTRE' 0.0            ;
 rogz       = 'KCHT' $vtf 'SCAL' 'CENTRE' (-9.81 '*' rmc);
 rogx       = 'NOMC' 'UX' rogx 'NATU' 'DISCRET'          ;
 rogy       = 'NOMC' 'UY' rogy 'NATU' 'DISCRET'          ;
 rogz       = 'NOMC' 'UZ' rogz 'NATU' 'DISCRET'          ;
 tic.'ROG'=kcht $vtf 'VECT' 'CENTRE'
                (rogx 'ET' rogy 'ET' rogz)               ;
 'SINON'                                                 ;
 rogx       = 'KCHT' $vtf 'SCAL' 'CENTRE' 0.0            ;
 rogy       = 'KCHT' $vtf 'SCAL' 'CENTRE' (-9.81 '*' rmc);
 rogx       = 'NOMC' 'UX' rogx 'NATU' 'DISCRET'          ;
 rogy       = 'NOMC' 'UY' rogy 'NATU' 'DISCRET'          ;
 tic.'ROG'=kcht $vtf 'VECT' 'CENTRE'
               (rogx 'ET' rogy)                          ;
 'FINSI'                                                 ;

* Vitesse max
 un          = tic.'UN'                                  ;
 lcu=extr un 'COMP'                                      ;
 modu        = (un lcu 'PSCA' un lcu) '**' 0.5           ;
 mmu         =  'MAXI' modu                              ;
 tic.'LMAXU' =  tic.'LMAXU' 'ET' ('PROG' mmu)            ;

 tic.'Qc'    = tic.'Qc' 'ET' ('PROG' QC)                 ;
 Minj        = (Qj '+' Qj2 '+' Qj3 '+' Qlj '+' Qlj2 '+' Qlj3)
                                    '*' tic.'DT'         ;
 MinjT       = MinjT '+' Minj                            ;
 Mcond       = Qc '*' tic.'DT'                           ;
 McondT      = McondT '+' Mcond + Mliq                   ;
 Mrest       =(Qj  '+' Qj2  '+' Qj3  '-' Qc '+' Qasp)
                                      '*' tic.'DT'       ;
 MrestT      = MrestT '+' Mrest                          ;
 tic.'Minj'  = tic.'Minj'  'ET' ('PROG' MinjT)           ;
 tic.'Mcond' = tic.'Mcond' 'ET' ('PROG' McondT)          ;
'SI' TBT.'VAPEUR'                                        ;

'SI' TBT.'TPAROIF'                                       ;
 Mcondw      = Qcw '*' tic.'DT'                          ;
 McondTw     = McondTw '+' Mcondw                        ;
 tic.'Mcondw'= tic.'Mcondw' 'ET' ('PROG' McondTw)        ;
 tic.'Qcw'= tic.'Qcw' 'ET' ('PROG' Qcw)                  ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP1'                                        ;
 Mcond1      = Qc1 '*' tic.'DT'                          ;
 McondT1     = McondT1 '+' Mcond1                        ;
 tic.'Mcond1'= tic.'Mcond1' 'ET' ('PROG' McondT1)        ;
 tic.'Qc1'= tic.'Qc1' 'ET' ('PROG' Qc1)                  ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP2'                                        ;
 Mcond2      = Qc2 '*' tic.'DT'                          ;
 McondT2     = McondT2 '+' Mcond2                        ;
 tic.'Mcond2'= tic.'Mcond2' 'ET' ('PROG' McondT2)        ;
 tic.'Qc2'= tic.'Qc2' 'ET' ('PROG' Qc2)                  ;
'FINSI'                                                  ;

'SI' TBT.'TTIMP3'                                        ;
 Mcond3      = Qc3 '*' tic.'DT'                          ;
 McondT3     = McondT3 '+' Mcond3                        ;
 tic.'Mcond3'= tic.'Mcond3' 'ET' ('PROG' McondT3)        ;
 tic.'Qc3'= tic.'Qc3' 'ET' ('PROG' Qc3)                  ;
'FINSI'                                                  ;

'SI' TBT.'TECHANP'                                       ;
 Mcond0      = Qc0 '*' tic.'DT'                          ;
 McondT0     = McondT0 '+' Mcond0                        ;
 tic.'Mcond0'= tic.'Mcond0' 'ET' ('PROG' McondT0)        ;
 tic.'Qc0'= tic.'Qc0' 'ET' ('PROG' Qc0)                  ;
'FINSI'                                                  ;

'FINSI'                                                  ;

 tic.'Mrest' = tic.'Mrest' 'ET' ('PROG' MrestT)          ;
 tic.'Econd' = tic.'Econd' 'ET' ('PROG' Econd)           ;
* tic.'Econdw'= tic.'Econdw' 'ET' ('PROG' Econdw)         ;
* tic.'Econd1'= tic.'Econd1' 'ET' ('PROG' Econd1)         ;
* tic.'Econd2'= tic.'Econd2' 'ET' ('PROG' Econd2)         ;
* tic.'Econd3'= tic.'Econd3' 'ET' ('PROG' Econd3)         ;
 tic.'Hcond' = tic.'Hcond' 'ET' ('PROG' Hcond)           ;
* tic.'Hcondw'= tic.'Hcondw' 'ET' ('PROG' Hcondw)         ;
* tic.'Hcond1'= tic.'Hcond1' 'ET' ('PROG' Hcond1)         ;
* tic.'Hcond2'= tic.'Hcond2' 'ET' ('PROG' Hcond2)         ;
* tic.'Hcond3'= tic.'Hcond3' 'ET' ('PROG' Hcond3)         ;


Si( TBT.'IMPR' >EG 2)                                    ;
'MESS' ' ************* BILAN au temps ' Tps ' -> '
              &bcltps ' DT=' tic.'DT'
              ' ****'                                    ;
'SI' TBT.'Tbreche'                                       ;
'MESS' '________________________________________________';
'MESS' '-------- Paramètres Injection 1 ---------------' ;
'MESS' ' Débit Masse (Kg/s)               Qj=' Qj        ;
 'SI' TBT.'VAPEUR'                                       ;
 'MESS' ' Ksi (taux de vapeur injectée)   Ksi=' Ksi      ;
 'FINSI'                                                 ;
'MESS' ' Vitesse (m/s)                   guj=' guj       ;
'MESS' ' Densité à l injection (Kg/m**3) Roj=' Roj       ;
'MESS' ' R/M a l Injection (J/kg/K)      Rgj=' Rgj       ;
'MESS' ' Température d injection (oC)     Tj=' Tj        ;
'MESS' ' Enthalpie d injection (J/Kg)     Hj=' Hj        ;
'MESS' ' Energie injection  (J/Kg)        Ej=' Ej        ;
'MESS' ' Puissance à l injection (Watt)   Pj=' (Qj '*'Ej);
'MESS' '________________________________________________';
'FINSI'                                                  ;
'SI' TBT.'Tbreche2'                                      ;
'MESS' '-------- Paramètres Injection 2 ---------------' ;
'MESS' ' Débit Masse (Kg/s)               Qj=' Qj2       ;
 'SI' TBT.'VAPEUR'                                       ;
 'MESS' ' Ksi2 (taux de vapeur injectée) Ksi2=' Ksi2     ;
 'FINSI'                                                 ;
'MESS' ' Vitesse (m/s)                   guj=' guj2      ;
'MESS' ' Densité à l injection (Kg/m**3) Roj=' Roj2      ;
'MESS' ' R/M a l Injection (J/kg/K)      Rgj=' Rgj2      ;
'MESS' ' Température d injection (oC)     Tj=' Tj2       ;
'MESS' ' Enthalpie d injection (J/Kg)     Hj=' Hj2       ;
'MESS' ' Energie injection  (J/Kg)        Ej=' Ej2       ;
'MESS' ' Puissance à l injection (Watt)   Pj='(Qj2'*'Ej2);
'MESS' '________________________________________________';
'FINSI'                                                  ;
'SI' TBT.'Tbreche3'                                      ;
'MESS' '-------- Paramètres Injection 2 ---------------' ;
'MESS' ' Débit Masse (Kg/s)               Qj=' Qj3       ;
 'SI' TBT.'VAPEUR'                                       ;
 'MESS' ' Ksi3 (taux de vapeur injectée) Ksi3=' Ksi3     ;
 'FINSI'                                                 ;
'MESS' ' Vitesse (m/s)                   guj=' guj3      ;
'MESS' ' Densité à l injection (Kg/m**3) Roj=' Roj3      ;
'MESS' ' R/M a l Injection (J/kg/K)      Rgj=' Rgj3      ;
'MESS' ' Température d injection (oC)     Tj=' Tj3       ;
'MESS' ' Enthalpie d injection (J/Kg)     Hj=' Hj3       ;
'MESS' ' Energie injection  (J/Kg)        Ej=' Ej3       ;
'MESS' ' Puissance à l injection (Watt)   Pj='(Qj3'*'Ej3);
'MESS' '________________________________________________';
'FINSI'                                                  ;

'MESS' ' Pression corrigée  (Pa)         Pt =' Ptnm      ;
'MESS' '________________________________________________';
'MESS' '  '                                              ;
'SI' TBT.'VAPEUR'                                        ;
'MESS' '________________________________________________';
'MESS' '--------Bilan sur la vapeur--------------------' ;
'MESS' ' Débit masse condensée (kg/s)         QC=' Qc    ;
'MESS' ' Masse injectée (kg)                Minj=' Minj  ;
'MESS' ' Masse injectée totale (kg)        MinjT=' MinjT ;
'MESS' ' Masse condensée (kg)              Mcond=' Mcond ;
'SI' TBT.'TPAROIF'                                       ;
'MESS' ' Masse condensée (mur vtp) (kg) Mcondw=' Mcondw  ;
'MESS' ' Masse condensée totale (mur vtp) (kg) McondTw=' McondTw;
'FINSI';
'SI' TBT.'TTIMP1'                                        ;
'MESS' ' Masse condensée (mur Timp1) (kg) Mcond1=' Mcond1;
'MESS' ' Masse condensée totale (mur Timp1) (kg) McondT1=' McondT1;
'FINSI';
'SI' TBT.'TTIMP2'                                        ;
'MESS' ' Masse condensée (mur Timp2) (kg) Mcond2=' Mcond2;
'MESS' ' Masse condensée totale (mur Timp2) (kg) McondT2=' McondT2;
'FINSI';
'SI' TBT.'TTIMP3'                                        ;
'MESS' ' Masse condensée (mur Timp3) (kg) Mcond3=' Mcond3;
'MESS' ' Masse condensée totale (mur Timp3) (kg) McondT3=' McondT3;
'FINSI';
'MESS' ' Masse condensée totale (kg)      McondT=' McondT;
'MESS' ' Masse vapeur restante (kg)        Mrest=' Mrest ;
'MESS' ' Masse vapeur restante totale(kg) MrestT=' MrestT;
'MESS' ' Puissance condensation (Watt)     QC*Lv='
         (QC '*' Lv)                                     ;
'MESS' ' Energie extraite du gaz par condensation (J)'
         'Econd=' Econd                                  ;
'MESS' '________________________________________________';
'MESS' '  '                                              ;
'FINSI'                                                  ;
'MESS' '________________________________________________';
'MESS' '----- Grandeurs Moyennes ----------------------' ;
'MESS' ' Energie extraite du gaz par convection (J)   Econv= ' Econv ;
'MESS' ' Densité moyenne (kg/m3)                      Rhomn= ' Rhomn ;
'SI' TBT.'VAPEUR'                                                    ;
'MESS' ' Densité moyenne de vapeur(kg/m3)            Rhomvn= ' Rhomvn;
'FINSI'                                                              ;
'SI' TBT.'THE'                                                       ;
'MESS' ' Densité moyenne de helium(kg/m3)             Rmhen= ' Rmhen ;
'FINSI'                                                              ;
'SI' TBT.'TH2'                                                       ;
'MESS' ' Densité moyenne de Hydrogene(kg/m3)          Rmh2n= ' Rmh2n ;
'FINSI'                                                              ;
'SI' TBT.'TO2'                                                       ;
'MESS' ' Densité moyenne de oxygene (kg/m3)           Rmo2n= ' Rmo2n ;
'FINSI'                                                              ;
'SI' TBT.'TN2'                                                       ;
'MESS' ' Densité moyenne de azote(kg/m3)              Rmn2n= ' Rmn2n ;
'FINSI'                                                              ;
'SI' TBT.'TCO'                                                       ;
'MESS' ' Densité moyenne de CO (kg/m3)                Rmcon= ' Rmcon ;
'FINSI'                                                              ;
'SI' TBT.'TCO2'                                                      ;
'MESS' ' Densité moyenne de CO2 (kg/m3)              Rmco2n= ' Rmco2n;
'FINSI'                                                              ;
*? TCO2AIR Faut il un test ???
'SI' TBT.'TAIR'                                                      ;
'MESS' ' Densité moyenne de AIR (kg/m3)              Rmairn= ' Rmairn;
'FINSI'                                                              ;
'SI' TBT.'TPAROIF'                                                   ;
'MESS' ' Température moyenne des murs THERMP (oC)       Tpm= ' Tpm   ;
'SI' ('EGA' ('TYPE' tic.'KHW') 'FLOTTANT')                           ;
   KHWm=tic.'KHW'                                                    ;
'SINON'                                                              ;
   KHW1 = 'ELNO' GEO.'$paroif' (tic.'KHW')                           ;
   KHWm = 'SOMT' (GEO.'Diagpf' '*' KHW1) '/' GEO.'Sparoif'           ;
'FINSI'                                                              ;
'MESS' ' Coefficient echange convectif moyen (Watt/m**2/°C) KHWm='
                                                                KHWm ;
'FINSI'                                                              ;
'SI' TBT.'TTIMP1'                                                    ;
'MESS' ' Température paroi 1 (oC) (TIMP1)          TBP1= ' tic.'TBP1';
'SI' TBT.'VAPEUR'                                                    ;
 KH11 = 'ELNO' GEO.'$mtp1' (tic.'KH1')                               ;
 KH1m = 'SOMT' (GEO.'Diag1f' '*' KH11) '/' GEO.'Smtp1'               ;
'SINON'                                                              ;
 KH1m = tic.'KH1'                                                    ;
'FINSI'                                                              ;
'MESS' ' Coefficient echange convectif (Watt/m**2/°C) KH1m='
                                                                KH1m ;
'FINSI'                                                              ;
'SI' TBT.'TTIMP2'                                                    ;
'MESS' ' Température paroi 2 (oC) (TIMP2)          TBP2= ' tic.'TBP2';
'SI' TBT.'VAPEUR'                                                    ;
 KH21 = 'ELNO' GEO.'$mtp2' (tic.'KH2')                               ;
 KH2m = 'SOMT' (GEO.'Diag2f' '*' KH21) '/' GEO.'Smtp2'               ;
'SINON'                                                              ;
 KH2m = tic.'KH2'                                                    ;
'FINSI'                                                              ;
'MESS' ' Coefficient echange convectif (Watt/m**2/°C) KH2m='
                                                                KH2m ;
'FINSI'                                                              ;
'SI' TBT.'TTIMP3'                                                    ;
'MESS' ' Température paroi 3 (oC) (TIMP3)          TBP3= ' tic.'TBP3';
'SI' TBT.'VAPEUR'                                                    ;
 KH31 = 'ELNO' GEO.'$mtp3' (tic.'KH3')                               ;
 KH3m = 'SOMT' (GEO.'Diag3f' '*' KH31) '/' GEO.'Smtp3'               ;
'SINON'                                                              ;
 KH3m = tic.'KH3'                                                    ;
'FINSI'                                                              ;
'MESS' ' Coefficient echange convectif (Watt/m**2/°C) KH3m='
                                                                KH3m ;
'FINSI'                                                              ;
'MESS' ' Température fluide moyenne (oC)                Tfm= ' Tfm   ;
'MESS' ' Pression moyenne (Pa)                           Pt= ' Pt    ;
'MESS' ' Gamma moyen                                   Gamm= ' Gamm  ;
'MESS' ' Rgaz moyen (J/kg/K)                           Rgpm= ' Rgpm  ;
'MESS' ' Cv moyen (J/kg/K)                              Cvm= ' Cvm   ;
'MESS' ' Cp moyen (J/kg/K)                              Cpm= ' Cpm   ;
Si(EGA (TYPE Cpvap) 'FLOTTANT')                                      ;
'MESS' ' Cp vapeur moyen (J/kg/K)                     Cpvap= ' Cpvap ;
Sinon                                                                ;
'MESS' ' Cp vapeur moyen (J/kg/K)                     Cpvap= '
 (mini Cpvap) (maxi Cpvap)                                           ;
Finsi                                                                ;
'MESS' '____________________________________________________________';
'MESS' '  '                                                          ;
'MESS' '____________________________________________________________';
'MESS' '-------------------- Corrections -------------------------- ';
'MESS' ' dTf =' dTf ' K   dRho=' dRho ' Kg    dRhov = ' dRhov  ' Kg' ;
'MESS' ' dRhohe=' dRhohe ' Kg    dRhoh2=' dRhoh2 ' Kg';
  'SI' TBT.'TO2' ;
 'MESS' ' dRhoo2=' dRhoo2 ' Kg'; 'FINSI'                 ;
  'SI' TBT.'TN2' ;
 'MESS' ' dRhon2=' dRhon2 ' Kg'; 'FINSI'                 ;
  'SI' TBT.'TCO' ;
 'MESS' ' dRhoco=' dRhoco ' Kg'; 'FINSI'                 ;
  'SI' TBT.'TCO2' ;
 'MESS' ' dRhoco2=' dRhoco2 ' Kg'; 'FINSI'              ;
*? TCO2AIR Faut t il un test ??
  'SI' TBT.'TAIR' ;
 'MESS' ' dRhoair=' dRhoair ' Kg'; 'FINSI'              ;
'MESS' '____________________________________________________________';
'MESS' '___Bilans 0D_________Bilans MultiD _____ Erreur Relative (%)';

*---- Bilan masse
 M0D = Rhomn '*' Vtotal                                              ;
 MMD = Rhomnt                                                        ;
 'SI' TBT.'VAPEUR'                                                   ;
 MV0D = Rhomvn '*' Vtotal                                            ;
 MVMD =  Rhomvnt                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'THE'                                                      ;
 MHE0D = Rmhen '*' Vtotal                                            ;
 MHEMD = Rhomhet                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'TH2'                                                      ;
 MH20D = Rmh2n '*' Vtotal                                            ;
 MH2MD = Rhomh2t                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'TO2'                                                      ;
 MO20D = Rmo2n '*' Vtotal                                            ;
 MO2MD = Rhomo2t                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'TN2'                                                      ;
 MN20D = Rmn2n '*' Vtotal                                            ;
 MN2MD = Rhomn2t                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'TCO'                                                      ;
 MCO0D = Rmcon '*' Vtotal                                            ;
 MCOMD = Rhomcot                                                     ;
 'FINSI'                                                             ;
 'SI' TBT.'TCO2'                                                     ;
 MCO20D = Rmco2n '*' Vtotal                                          ;
 MCO2MD = Rhomco2t                                                   ;
 'FINSI'                                                             ;
*? TCO2AIR Faut il un test ??
 'SI' TBT.'TAIR'                                                     ;
 MAIR0D = Rmairn '*' Vtotal                                          ;
 MAIRMD = Rhomairt                                                   ;
 'FINSI'                                                             ;

*---- Bilan energie
 E0D = Remn                                                          ;
 EMD = Remnt                                                         ;
  'MESS' ' Masse   (Kg)  ' M0D '_______' MMD '________'
       (100. '*' (M0D '-' MMD) '/' M0D)                              ;
  'MESS' ' Energie (J/m3)' E0D '_______' EMD '________'
       (100. '*' (E0D '-' EMD) '/' E0D)                              ;

 'SI' (TBT.'VAPEUR' 'ET' ('NON' ('EGA' MV0D 0.0)))                   ;
  'MESS' ' M Vapeur(Kg)  ' MV0D '_______' MVMD '_______'
       (100. '*' (MV0D '-' MVMD) '/' MV0D)                           ;
 'FINSI'                                                             ;
 'SI' (TBT.'THE' 'ET' ('NON' ('EGA' MHE0D 0.0)))                     ;
  'MESS' ' M Helium (Kg)  ' MHE0D '_______' MHEMD '_______'
       (100. '*' (MHE0D '-' MHEMD) '/' MHE0D)                        ;
 'FINSI'                                                             ;
 'SI' (TBT.'TH2' 'ET' ('NON' ('EGA' MH20D 0.0)))                     ;
  'MESS' ' M Hydrogene (Kg)  ' MH20D '_______' MH2MD '_______'
       (100. '*' (MH20D '-' MH2MD) '/' MH20D)                        ;
 'FINSI'                                                             ;
 'SI' (TBT.'TO2' 'ET' ('NON' ('EGA' MO20D 0.0)))                     ;
  'MESS' ' M Oxygene (Kg)  ' MO20D '_______' MO2MD '_______'
       (100. '*' (MO20D '-' MO2MD) '/' MO20D)                        ;
 'FINSI'                                                             ;
 'SI' (TBT.'TN2' 'ET' ('NON' ('EGA' MN20D 0.0)))                     ;
  'MESS' ' M Azote (Kg)  ' MN20D '_______' MN2MD '_______'
       (100. '*' (MN20D '-' MN2MD) '/' MN20D)                        ;
 'FINSI'                                                             ;
 'SI' (TBT.'TCO' 'ET' ('NON' ('EGA' MCO0D 0.0)))                     ;
  'MESS' ' M CO (Kg)  ' MCO0D '_______' MCOMD '_______'
       (100. '*' (MCO0D '-' MCOMD) '/' MCO0D)                        ;
 'FINSI'                                                             ;
 'SI' (TBT.'TCO2' 'ET' ('NON' ('EGA' MCO20D 0.0)))                   ;
  'MESS' ' M CO2 (Kg)  ' MCO20D '_______' MCO2MD '_______'
       (100. '*' (MCO20D '-' MCO2MD) '/' MCO20D)                     ;
 'FINSI'                                                             ;
*? TCO2AIR
 'SI' (TBT.'TAIR' 'ET' ('NON' ('EGA' MAIR0D 0.0)))                   ;
  'MESS' ' M AIR (Kg)  ' MAIR0D '_______' MAIRMD '_______'
       (100. '*' (MAIR0D '-' MAIRMD) '/' MAIR0D)                     ;
 'FINSI'                                                             ;
 'MESS' '___________________________________________________________';
 'SI' TBT.'THERMP'                                                   ;
 'MESS' ' Energie Stockée Mur (J) ' Emurn    Emurm
        (100. '*' (Emurn '-' Emurm) '/' Emurn)                       ;
 'MESS' '___________________________________________________________';
 'FINSI'                                                             ;
 'MESS' ' *** Volumes'                                               ;
 'MESS' ' VTotal=' VTotal ' m3'                                      ;
 Si (TBT.'Tbreche');
 'MESS' ' Facteur Geometrique BRECHE (>1) =' GEO.'facgeo'            ;
 Finsi ;
 Si (TBT.'Tbreche2');
 'MESS' ' Facteur Geometrique BRECHE2 (>1) =' GEO.'facgeo2'          ;
 Finsi ;
 Si (TBT.'Tbreche3');
 'MESS' ' Facteur Geometrique BRECHE3 (>1) =' GEO.'facgeo3'          ;
 Finsi ;
 'SI' TBT.'THERMP'                                                   ;
  Sparoif = GEO.'Sparoif'                                            ;
 'MESS' ' VTotal paroi =' GEO.'VTotalp' ' m3' ' Sparoif=' Sparoif ' m2';
 'FINSI'                                                             ;
 'SI' TBT.'TTIMP1'                                                   ;
 'MESS' ' Surface T imposée (TIMP1)  =' GEO.'Smtp1' ' m2'            ;
 'FINSI'                                                             ;
 'SI' TBT.'TTIMP2'                                                   ;
 'MESS' ' Surface T imposée (TIMP2)  =' GEO.'Smtp2' ' m2'            ;
 'FINSI'                                                             ;
 'SI' TBT.'TTIMP3'                                                   ;
 'MESS' ' Surface T imposée (TIMP3)  =' GEO.'Smtp3' ' m2'            ;
 'FINSI'                                                             ;
'SI' (TBT.'Tbreche')                                                 ;
 'MESS' ' Sbreche=' Sbreche ' m2'                                    ;
'FINSI'                                                              ;
 'MESS' ' **********************************************************';

'FINSI'                                                  ;

*************************************************************


*-----------------------------------------------------------------

 tic.'UNM'   = un                                            ;
 tic.'RHONM' = Rho                                           ;
*---- Modèle K-Epsilon EFM1 --------------------------------
'SI'((EGA TBT.'MODTURB' 'KEPSILON') et (EGA TBT.'FEF' 'EFM1'));
 tic.'KNM'   = tic.'KN'                                      ;
 tic.'ENM'   = tic.'EN'                                      ;
'FINSI'                                                      ;
*---- Modèle K-Epsilon EFM1 -- FIN -------------------------
 'SI' TBT.'VAPEUR'                                           ;
 tic.'RVPNM' = Rvp                                           ;
 'FINSI'                                                     ;
 'SI' TBT.'THE'                                              ;
 tic.'RHEM'  = Rhe                                           ;
 'FINSI'                                                     ;
 'SI' TBT.'TH2'                                              ;
 tic.'RH2M'  = Rh2                                           ;
 'FINSI'                                                     ;
 'SI' TBT.'TO2'                                              ;
 tic.'RO2M'  = Ro2                                           ;
 'FINSI'                                                     ;
 'SI' TBT.'TN2'                                              ;
 tic.'RN2M'  = Rn2                                           ;
 'FINSI'                                                     ;
 'SI' TBT.'TCO2'                                             ;
 tic.'RCO2M'  = Rco2                                         ;
 'FINSI'                                                     ;
 'SI' TBT.'TAIR'                                             ;
 tic.'RAIRM'  = Rair                                         ;
 'FINSI'                                                     ;
 'SI' TBT.'TCO'                                              ;
 tic.'RCOM'  = Rco                                           ;
 'FINSI'                                                     ;
 tic.'TFNM'  = Tf                                            ;
 'SI' TBT.'THERMP'                                           ;
 tic.'TPNM'  = Tp                                            ;
 'FINSI'                                                     ;
'SI' TBT.'ASPER '                                            ;
   tic.'VNM' = tic.'VN'                                      ;
   tic.'XDM' = tic.'XD'                                      ;
   tic.'TDM' = tic.'TD'                                      ;
   tic.'DDM' = tic.'DD'                                      ;
'FINSI'                                                      ;
*-----------------------------------------------------------


   'SI' (EGA TBT.'FEF' 'EFM1')                               ;
     DTDIFU=rv.'PASDETPS'.'DTDIFU'                           ;
     DTCONV=rv.'PASDETPS'.'DTCONV'                           ;
     DTEXPL= (MINI (PROG DTDIFU DTCONV)) * 0.5               ;
*    mess 'DTEXPL='  DTEXPL ;
     DTM1 = tic.'DT'                                         ;

     ect=(DTEXPL - tic.'DT') / DTEXPL                        ;
     Si (ect > 0.1 )                                         ;
     tic.'DT' = (0.3 * DTEXPL) + (0.7 * tic.'DT')            ;
     Finsi                                                   ;

     Si (ect < 0.1 )                                         ;
     tic.'DT' = DTEXPL                                       ;
     Finsi                                                   ;

     Si(rxt.'DT0' < DTEXPL)                                  ;
     tic.'DT' = rxt.'DT0'                                    ;
     Finsi                                                   ;

     rv.'PASDETPS'.'NUPASDT' = tic.'NUPADT'                  ;
     rv.'PASDETPS'.'DELTAT-1'= DTM1                          ;
     rv.'PASDETPS'.'DELTAT'  = 1.e30                         ;
     rv.'PASDETPS'.'TPS'     = tic.'Tps'                     ;

   'FINSI'                                                   ;
*   Mess ' Fin BclTPS tic.DT=' tic.'DT'                      ;
'FIN' BCLTPS                                               ;
*>10'FIN' BCLTPS

'SI' ('ET' (TBT.'DETMAT') ('>' nbit 0))                                ;

  matvide = 0                                                          ;

  rvm = TBT.'RV'.'METHINV'                                             ;
  rvm.'TABRES' = matvide                                               ;
  rvm.'MATASS' = matvide                                               ;
  rvm.'MAPREC' = matvide                                               ;
  rvm = 'ENLE' rvm 'TABRES'                                            ;
  rvm = 'ENLE' rvm 'MATASS'                                            ;
  rvm = 'ENLE' rvm 'MAPREC'                                            ;
  TBT.'RV'.'METHINV' = rvm                                             ;

  'SI' ('EXIS' TBT.'RV' 'PROJ')                                        ;
    rvprm = TBT.'RV'.'PROJ'.'METHINV'                                  ;
    rvprm.'TABRES' = matvide                                           ;
    rvprm.'MATASS' = matvide                                           ;
    rvprm.'MAPREC' = matvide                                           ;
    rvprm = 'ENLE' rvprm 'TABRES'                                      ;
    rvprm = 'ENLE' rvprm 'MATASS'                                      ;
    rvprm = 'ENLE' rvprm 'MAPREC'                                      ;
    TBT.'RV'.'PROJ'.'METHINV' = rvprm                                  ;
    rvpr = TBT.'RV'.'PROJ'                                             ;
    rvpr.'MATP' = matvide                                              ;
    rvpr.'MATC' = matvide                                              ;
    rvpr = 'ENLE' rvpr 'MATP'                                          ;
    rvpr = 'ENLE' rvpr 'MATC'                                          ;
    TBT.'RV'.'PROJ' = rvpr                                             ;
    rv = TBT.'RV'                                                      ;
    rv = 'ENLE' rv 'rvpd'                                              ;
    TBT.'RV' = rv                                                      ;
  'FINSI'                                                              ;

  rtfm = TBT.'RTF'.'METHINV'                                           ;
  rtfm.'TABRES' = matvide                                              ;
  rtfm.'MATASS' = matvide                                              ;
  rtfm.'MAPREC' = matvide                                              ;
  rtfm = 'ENLE' rtfm 'TABRES'                                          ;
  rtfm = 'ENLE' rtfm 'MATASS'                                          ;
  rtfm = 'ENLE' rtfm 'MAPREC'                                          ;
  TBT.'RTF'.'METHINV' = rtfm                                           ;

  'SI' TBT.'THERMP'                                                    ;
    rtpm = TBT.'RTP'.'METHINV'                                         ;
    rtpm.'TABRES' = matvide                                            ;
    rtpm.'MATASS' = matvide                                            ;
    rtpm.'MAPREC' = matvide                                            ;
    rtpm = 'ENLE' rtpm 'TABRES'                                        ;
    rtpm = 'ENLE' rtpm 'MATASS'                                        ;
    rtpm = 'ENLE' rtpm 'MAPREC'                                        ;
    TBT.'RTP'.'METHINV' = rtpm                                         ;
  'FINSI'                                                              ;

  'SI' TBT.'VAPEUR'                                                    ;
    Rrvapm = TBT.'Rrvap'.'METHINV'                                     ;
    Rrvapm.'TABRES' = matvide                                          ;
    Rrvapm.'MATASS' = matvide                                          ;
    Rrvapm.'MAPREC' = matvide                                          ;
    Rrvapm = 'ENLE' Rrvapm 'TABRES'                                    ;
    Rrvapm = 'ENLE' Rrvapm 'MATASS'                                    ;
    Rrvapm = 'ENLE' Rrvapm 'MAPREC'                                    ;
    TBT.'Rrvap'.'METHINV' = Rrvapm                                     ;
  'FINSI'                                                              ;

  'SI' TBT.'THE' ;
    Rrhem = TBT.'Rrhe'.'METHINV'                                       ;
    Rrhem.'TABRES' = matvide                                           ;
    Rrhem.'MATASS' = matvide                                           ;
    Rrhem.'MAPREC' = matvide                                           ;
    Rrhem = 'ENLE' Rrhem 'TABRES'                                      ;
    Rrhem = 'ENLE' Rrhem 'MATASS'                                      ;
    Rrhem = 'ENLE' Rrhem 'MAPREC'                                      ;
    TBT.'Rrhe'.'METHINV' = Rrhem                                       ;
  'FINSI' ;

  'SI' TBT.'TH2'                                                       ;
    Rrh2m = TBT.'Rrh2'.'METHINV'                                       ;
    Rrh2m.'TABRES' = matvide                                           ;
    Rrh2m.'MATASS' = matvide                                           ;
    Rrh2m.'MAPREC' = matvide                                           ;
    Rrh2m = 'ENLE' Rrh2m 'TABRES'                                      ;
    Rrh2m = 'ENLE' Rrh2m 'MATASS'                                      ;
    Rrh2m = 'ENLE' Rrh2m 'MAPREC'                                      ;
    TBT.'Rrh2'.'METHINV' = Rrh2m                                       ;
  'FINSI'                                                              ;

  'SI' TBT.'TO2'                                                       ;
    Rro2m = TBT.'Rro2'.'METHINV'                                       ;
    Rro2m.'TABRES' = matvide                                           ;
    Rro2m.'MATASS' = matvide                                           ;
    Rro2m.'MAPREC' = matvide                                           ;
    Rro2m = 'ENLE' Rro2m 'TABRES'                                      ;
    Rro2m = 'ENLE' Rro2m 'MATASS'                                      ;
    Rro2m = 'ENLE' Rro2m 'MAPREC'                                      ;
    TBT.'Rro2'.'METHINV' = Rro2m                                       ;
  'FINSI'                                                              ;

  'SI' TBT.'TN2'                                                       ;
    Rrn2m = TBT.'Rrn2'.'METHINV'                                       ;
    Rrn2m.'TABRES' = matvide                                           ;
    Rrn2m.'MATASS' = matvide                                           ;
    Rrn2m.'MAPREC' = matvide                                           ;
    Rrn2m = 'ENLE' Rrn2m 'TABRES'                                      ;
    Rrn2m = 'ENLE' Rrn2m 'MATASS'                                      ;
    Rrn2m = 'ENLE' Rrn2m 'MAPREC'                                      ;
    TBT.'Rrn2'.'METHINV'  = Rrn2m                                      ;
  'FINSI'                                                              ;

  'SI' TBT.'TCO2'                                                      ;
    Rrco2m = TBT.'Rrco2'.'METHINV'                                     ;
    Rrco2m.'TABRES' = matvide                                          ;
    Rrco2m.'MATASS' = matvide                                          ;
    Rrco2m.'MAPREC' = matvide                                          ;
    Rrco2m = 'ENLE' Rrco2m 'TABRES'                                    ;
    Rrco2m = 'ENLE' Rrco2m 'MATASS'                                    ;
    Rrco2m = 'ENLE' Rrco2m 'MAPREC'                                    ;
    TBT.'Rrco2'.'METHINV' = Rrco2m                                     ;
  'FINSI'                                                              ;

  'SI' TBT.'TAIR'                                                      ;
    Rrairm = TBT.'Rrair'.'METHINV'                                     ;
    Rrairm.'TABRES' = matvide                                          ;
    Rrairm.'MATASS' = matvide                                          ;
    Rrairm.'MAPREC' = matvide                                          ;
    Rrairm = 'ENLE' Rrairm 'TABRES'                                    ;
    Rrairm = 'ENLE' Rrairm 'MATASS'                                    ;
    Rrairm = 'ENLE' Rrairm 'MAPREC'                                    ;
    TBT.'Rrair'.'METHINV' = Rrairm                                     ;
  'FINSI'                                                              ;

  'SI' TBT.'TCO'                                                       ;
    Rrcom = TBT.'Rrco'.'METHINV'                                       ;
    Rrcom.'TABRES'= matvide                                            ;
    Rrcom.'MATASS'= matvide                                            ;
    Rrcom.'MAPREC'= matvide                                            ;
    Rrcom = 'ENLE' Rrcom 'TABRES'                                      ;
    Rrcom = 'ENLE' Rrcom 'MATASS'                                      ;
    Rrcom = 'ENLE' Rrcom 'MAPREC'                                      ;
    TBT.'Rrco'.'METHINV' = Rrcom                                       ;
  'FINSI'                                                              ;

  'SI' TBT.'ASPER'                                                     ;
    rvnm = TBT.'RVN'.'METHINV'                                         ;
    rvnm.'TABRES'= matvide                                             ;
    rvnm.'MATASS'= matvide                                             ;
    rvnm.'MAPREC'= matvide                                             ;
    rvnm = 'ENLE' rvnm 'TABRES'                                        ;
    rvnm = 'ENLE' rvnm 'MATASS'                                        ;
    rvnm = 'ENLE' rvnm 'MAPREC'                                        ;
    TBT.'RVN'.'METHINV' = rvnm                                         ;
    rxdm = TBT.'RXD'.'METHINV'                                         ;
    rxdm.'TABRES'= matvide                                             ;
    rxdm.'MATASS'= matvide                                             ;
    rxdm.'MAPREC'= matvide                                             ;
    rxdm = 'ENLE' rxdm 'TABRES'                                        ;
    rxdm = 'ENLE' rxdm 'MATASS'                                        ;
    rxdm = 'ENLE' rxdm 'MAPREC'                                        ;
    TBT.'RXD'.'METHINV' = rxdm                                         ;
    rddm = TBT.'RDD'.'METHINV'                                         ;
    rddm.'TABRES'= matvide                                             ;
    rddm.'MATASS'= matvide                                             ;
    rddm.'MAPREC'= matvide                                             ;
    rddm = 'ENLE' rddm 'TABRES'                                        ;
    rddm = 'ENLE' rddm 'MATASS'                                        ;
    rddm = 'ENLE' rddm 'MAPREC'                                        ;
    TBT.'RDD'.'METHINV' = rddm                                         ;
    rtdm = TBT.'RTD'.'METHINV'                                         ;
    rtdm.'TABRES'= matvide                                             ;
    rtdm.'MATASS'= matvide                                             ;
    rtdm.'MAPREC'= matvide                                             ;
    rtdm = 'ENLE' rtdm 'TABRES'                                        ;
    rtdm = 'ENLE' rtdm 'MATASS'                                        ;
    rtdm = 'ENLE' rtdm 'MAPREC'                                        ;
    TBT.'RTD'.'METHINV' = rtdm                                         ;
  'FINSI'                                                              ;

'FINSI'                                                                ;

*-----------------------------------------------------------
*----- FIN de la boucle principale sur les pas de temps ----
*-----------------------------------------------------------

*==============================================================
Si TBT.'GRAPH'                                                    ;
*******************************************************************
******** Post Graphique de controle
*******************************************************************

 tic  = rxt.'TIC'                                                 ;
 $vtf = GEO.'$vtf'                                                ;
 Si (Exist tic 'LTPSC')                                           ;
  ltpsc= tic.'LTPSC'                                              ;
  ltps = extr (tic.'LTPS') (tic.'LTPSC')                          ;
 Sinon                                                            ;
  ltps = tic.'LTPS'                                               ;
  ltpsc= lect 1 pas 1 (dime ltps)                                 ;
 Finsi                                                            ;

 tab1 = table ;
 tab1.1 = 'MARQ CROI REGU' ;
 tab1.2 = 'MARQ TRIA REGU' ;
 tab1.3 = 'MARQ LOSA REGU' ;
 tab1.'TITRE' = table ;

 mvtf= 'DOMA' $vtf maillage                          ;

 un = tic.'UN' ;
 lcu=extr un 'COMP'                                     ;
 modu= (un lcu 'PSCA' un lcu) ** 0.5 ; mmu= 'MAXI' modu ;
 'MESS' ' MAXI module de U ********* ' mmu ;

**************************************************************
* Débit injection / Débit condensation

 evsrcv=EVOL VERT  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qj' ltpsc);

 evqc  = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc' ltpsc);


 tab1.'TITRE'. 1 = 'MOT' 'Q_cond Kg/s' ;
 tab1.'TITRE'. 2 = 'MOT' 'Q_inj Kg/s' ;

 evsrcv=evsrcv et (EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr (tic.'Qj2') ltpsc)) ;
 tab1.'TITRE'. 3 = 'MOT' 'Q_inj2 Kg/s' ;

 evsrcv=evsrcv et (EVOL TURQ  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr (tic.'Qj3') ltpsc)) ;
 tab1.'TITRE'. 4 = 'MOT' 'Q_inj3 Kg/s' ;

 evtq=evqc et evsrcv;

 Si TBT.'ASPER ' ;
* ASPER dessin
 lqQas = tic.'Qaspe' ;
 evQas = EVOL JAUNE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr lqQas ltpsc) ;
 tab1.'TITRE'. 5 = 'MOT' 'Q_aspe Kg/s' ;
 evtq=evtq et evqas ;
 dess evtq
LEGE TAB1 DATE MIMA TITR ' Débit injection/condensé/aspersion' ;
 Sinon ;
 dess evtq
LEGE TAB1 DATE MIMA TITR ' Débit injection/condensé' ;
 Finsi ;

**************************************************************
**************************************************************
* Taux d'injection de la vapeur
'SI' (TBT.'VAPEUR')                                          ;


*.............................................................
 Si ('EGA'(dime tic.'Tinj') (dime ltpsc));
 evtinj =EVOL VERT  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Tinj' ltpsc);

 Si ('EGA'(dime tic.'Tinj2') (dime ltpsc));
 evtinj=evtinj et (EVOL BLEU  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Tinj2' ltpsc));
 Finsi ;

 Si ('EGA'(dime tic.'Tinj3') (dime ltpsc));
 evtinj=evtinj et (EVOL BLEU  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Tinj3' ltpsc));
 Finsi ;

 tab1.'TITRE'. 1 = 'MOT' 'Tinj ' ;
 tab1.'TITRE'. 2 = 'MOT' 'Tinj2' ;
 tab1.'TITRE'. 3 = 'MOT' 'Tinj3' ;

 dess evtinj
LEGE TAB1 DATE MIMA TITR ' Température d injection aux brèches' ;
 Finsi                                                       ;

*.............................................................

*.............................................................
 Si ('EGA'(dime tic.'Ksi') (dime ltpsc));
 evksi =EVOL VERT  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Ksi' ltpsc);

 Si ('EGA'(dime tic.'Ksi2') (dime ltpsc));
 evksi=evksi et (EVOL BLEU  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Ksi2' ltpsc));
 Finsi ;

 Si ('EGA'(dime tic.'Ksi3') (dime ltpsc));
 evksi=evksi et (EVOL BLEU  'MANU' 'Temps en sec' ltps '%'
 (extr tic.'Ksi3' ltpsc));
 Finsi ;

 tab1.'TITRE'. 1 = 'MOT' 'Ksi ' ;
 tab1.'TITRE'. 2 = 'MOT' 'Ksi2' ;
 tab1.'TITRE'. 3 = 'MOT' 'Ksi3' ;

 dess evksi
LEGE TAB1 DATE MIMA TITR ' Taux d injection de la vapeur aux brèches' ;
 Finsi                                                       ;

*.............................................................

* Trace des Debits liquide vapeur et total aux breches

 tab1.1 = 'MARQ CROI REGU' ;
 tab1.2 = 'MARQ CROI REGU TIRM' ;
 tab1.3 = 'MARQ CROI REGU TIRC' ;
 tab1.4 = 'MARQ TRIA REGU' ;
 tab1.5 = 'MARQ TRIA REGU TIRM' ;
 tab1.6 = 'MARQ TRIA REGU TIRC' ;
 tab1.7 = 'MARQ LOSA REGU' ;
 tab1.8 = 'MARQ LOSA REGU TIRM' ;
 tab1.9 = 'MARQ LOSA REGU TIRC' ;

 Si ('EGA'(dime tic.'Qlj') (dime ltpsc));
 evql =EVOL VERT  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qlj' ltpsc);
 Sinon                                                       ;
 evql=(EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/s'
 (prog (dime ltpsc)*0.));
 Finsi                                                       ;
 qt= (extr evql 'ORDO');
 qt= qt + (extr tic.'Qj' ltpsc);
 evqlj=(EVOL VERT  'MANU' 'Temps en sec' ltps 'Kg/s' qt);
 evqlj=evqlj et evql;
 evqlj=evqlj et (EVOL VERT  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qj' ltpsc));

 tab1.'TITRE'. 1 = 'MOT' 'Qjtot' ;
 tab1.'TITRE'. 2 = 'MOT' 'Qlj ' ;
 tab1.'TITRE'. 3 = 'MOT' 'Qj ';

 Si ('EGA'(dime tic.'Qlj2') (dime ltpsc));
 evql=(EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qlj2' ltpsc));
 Sinon ;
 evql=(EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s'
 (prog (dime ltpsc)*0.));
 Finsi ;
 qt= (extr evql 'ORDO');
 qt= qt + (extr tic.'Qj2' ltpsc);
 evqlj=evqlj et (EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s' qt);
 evqlj=evqlj et evql ;
 evqlj=evqlj et (EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qj2' ltpsc));
 tab1.'TITRE'. 4 = 'MOT' 'Qj2tot';
 tab1.'TITRE'. 5 = 'MOT' 'Qlj2';
 tab1.'TITRE'. 6 = 'MOT' 'Qj2';

 Si ('EGA'(dime tic.'Qlj3') (dime ltpsc));
 evql=(EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qlj3' ltpsc));
 Sinon ;
 evql=(EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (prog (dime ltpsc)*0.));
 Finsi ;
 qt= (extr evql 'ORDO');
 qt= qt + (extr tic.'Qj3' ltpsc);
 evqlj=evqlj et (EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s' qt);
 evqlj=evqlj et evql ;
 evqlj=evqlj et (EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qj3' ltpsc));
 tab1.'TITRE'. 7 = 'MOT' 'Qj3tot' ;
 tab1.'TITRE'. 8 = 'MOT' 'Qlj3' ;
 tab1.'TITRE'. 9 = 'MOT' 'Qj3'  ;

 dess evqlj
LEGE TAB1 DATE MIMA
 TITR ' Debits injection liquide/vapeur aux brèches' ;

 tab1.1 = 'MARQ CROI REGU' ;
 tab1.2 = 'MARQ TRIA REGU' ;
 tab1.3 = 'MARQ LOSA REGU' ;

*.............................................................

'FINSI'                                                      ;
**************************************************************
**************************************************************
* Débits condensations Total et détails
Si (TBT.'VAPEUR');

 tab2 = table ;
 tab2.1 = 'MARQ CROI REGU' ;
 tab2.2 = 'MARQ TRIA REGU' ;
 tab2.3 = 'MARQ LOSA REGU' ;
 tab2.4 = 'MARQ CARR REGU' ;
 tab2.5 = 'MARQ TRIB REGU' ;
 tab2.'TITRE' = table ;

 evsrcv=EVOL VERT  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc' ltpsc);
 evtq = evsrcv ;
 tab2.'TITRE'. 1 = 'MOT' 'Q_cond Kg/s' ;

 Numero = 1 ;
 Si('EXIST' tic 'Qc1') ;
 Numero = Numero + 1 ;
 evqc1 = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc1' ltpsc);
 evtq=evtq et evqc1 ;
 tab2.'TITRE'. Numero = 'MOT' 'Qc1 Kg/s' ;
 Finsi ;

 Si('EXIST' tic 'Qc2') ;
 Numero = Numero + 1 ;
 evqc2 = EVOL JAUNE 'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc2' ltpsc);
 evtq=evtq et evqc2 ;
 tab2.'TITRE'. Numero = 'MOT' 'Qc2 Kg/s' ;
 Finsi ;

 Si('EXIST' tic 'Qc3') ;
 Numero = Numero + 1 ;
 evqc3 = EVOL ROSE  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc3' ltpsc);
 evtq=evtq et evqc3 ;
 tab2.'TITRE'. Numero = 'MOT' 'Qc3 Kg/s' ;
 Finsi ;

 Si('EXIST' tic 'Qcw') ;
 Numero = Numero + 1 ;
 evqcw = EVOL TURQ  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qcw' ltpsc);
 evtq=evtq et evqcw ;
 tab2.'TITRE'. Numero = 'MOT' 'Qcw Kg/s' ;
 Finsi ;

 Si('EXIST' tic 'Qc0') ;
 Numero = Numero + 1 ;
 evqc0 = EVOL TURQ  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qc0' ltpsc);
 evtq=evtq et evqc0 ;
 tab2.'TITRE'. Numero = 'MOT' 'Qc0 Kg/s' ;
 Finsi ;

 Si('EXIST' tic 'Qcm') ;
 Numero = Numero + 1 ;
 evqcm = EVOL BLEU  'MANU' 'Temps en sec' ltps 'Kg/s'
 (extr tic.'Qcm' ltpsc);
 evtq=evtq et evqcm ;
 tab2.'TITRE'. Numero = 'MOT' 'Qcm Kg/s' ;
 Finsi ;

 dess evtq

LEGE TAB2 DATE MIMA TITR ' Débits condensés détails' ;
Finsi                                                ;
**************************************************************

*******************************************************************

 evsrhv=EVOL VERT    'MANU' 'Temps en sec' ltps 'Htot'
 (extr tic.'Hj' ltpsc);
 lqe   = tic.'Remn' ;
 evqe  = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Hj-Em '
 (extr lqe ltpsc) ;
 tab1.'TITRE'. 2 = 'MOT' 'Hj  J/Kg' ;
 tab1.'TITRE'. 1 = 'MOT' 'Em  J/kg' ;
 Si('EXIST' tic 'Hj2') ;
 evsrhv= evsrhv et (EVOL BLEU 'MANU' 'Temps en sec' ltps 'HVap'
 (extr (tic.'Hj2') ltpsc) ) ;
 tab1.'TITRE'. 3 = 'MOT' 'Hj2 J/kg' ;
 Finsi ;
 Si('EXIST' tic 'Hj3') ;
 evsrhv= evsrhv et (EVOL TURQ 'MANU' 'Temps en sec' ltps 'HVap'
 (extr (tic.'Hj3') ltpsc) ) ;
 tab1.'TITRE'. 4 = 'MOT' 'Hj3 J/kg' ;
 Finsi ;

 dess (evqe et evsrhv)
 LEGE TAB1 DATE MIMA TITR
 ' Enthalpie(s) à la (aux) brèche(s) / énergie moyenne' ;
*******************************************************************


 lqEcd = tic.'Econd' ;
 evEcd = EVOL VERT 'MANU' 'Temps en sec' ltps 'Ecd' (extr lqEcd ltpsc);

 lqEcv = tic.'Econv' ;
 evEcv = EVOL BLEU 'MANU' 'Temps en sec' ltps 'Ecv' (extr lqEcv ltpsc);


 'SI' TBT.'VAPEUR'                                       ;
 tab1.'TITRE'. 1 = 'MOT' 'Ecv Joule' ;
   dess  evEcd
 LEGE TAB1 DATE MIMA TITR ' Energie de condensation ' ;
   dess  evEcv
 LEGE TAB1 DATE MIMA TITR ' Energie echange convectif';
 'FINSI'      ;

 lqMinj = extr tic.'Minj' ltpsc ;
 evMinjv = EVOL BLEU 'MANU' 'Temps en sec' ltps 'Minj-Mcond' lqMinj ;
 lqMcond = extr tic.'Mcond' ltpsc ;
 evMcond = EVOL VERT 'MANU' 'Temps en sec' ltps 'Minj-Mcond' lqMcond ;
 lqMrest = extr tic.'Mrest' ltpsc ;
 evMrest = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Minj-Mcond' lqMrest ;
 Si (EGA (dime tic.'Mliqpuis') (dime ltpsc));
 lqMpuis = extr tic.'Mliqpuis' ltpsc ;
 Sinon;
 lqMpuis=prog (dime ltpsc)*0.;
 Finsi;
 evMpuis = EVOL JAUNE 'MANU' 'Temps en sec' ltps 'Minj-Mcond' lqMpuis ;

********************************************************************
 tab1.'TITRE'. 1 = 'MOT' 'M_inj Kg'  ;
 tab1.'TITRE'. 2 = 'MOT' 'M_cond Kg' ;
 tab1.'TITRE'. 3 = 'MOT' 'M_rest Kg' ;
 tab1.'TITRE'. 4 = 'MOT' 'M_puis Kg' ;
 dess (evMinjv et evMcond et evMrest et evMpuis)
LEGE TAB1 DATE MIMA
 TITR ' Masses injectées/ condensées/ restantes/ Puisard' ;
********************************************************************

Si ( 'EXIST' tic 'guj' ) ;
*******************************************************************
* Vitesse max / Vitesse injection brèche 1
 evmaxu= EVOL VERT 'MANU' 'Temps en sec' ltps 'M / s '
 (extr tic.'LMAXU' ltpsc);
 evgj  = EVOL ROSE 'MANU' 'Temps en sec' ltps 'M / s '
 (extr tic.'guj' ltpsc) ;
 tab1.'TITRE'. 1 = 'MOT' 'Max u m/s' ;
 tab1.'TITRE'. 2 = 'MOT' 'U inj m/s' ;
 dess (evmaxu et evgj)
 LEGE TAB1 DATE MIMA TITR ' Vitesse max / Vitesse inject brèche 1 ' ;
*******************************************************************
Finsi ;

Si ( 'EXIST' tic 'guj2' ) ;
*******************************************************************
* Vitesse max / Vitesse injection brèche 2
 evgj2 = EVOL ROSE 'MANU' 'Temps en sec' ltps 'M / s '
 (extr tic.'guj2' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Max u m/s' ;
 tab1.'TITRE'. 2 = 'MOT' 'U inj m/s' ;
 dess (evmaxu et evgj2)
 LEGE TAB1 DATE MIMA TITR ' Vitesse max / Vitesse inject brèche 2 ' ;
*******************************************************************
Finsi ;

Si ( 'EXIST' tic 'guj3' ) ;
*******************************************************************
* Vitesse max / Vitesse injection brèche 3
 evgj3 = EVOL ROSE 'MANU' 'Temps en sec' ltps 'M / s '
 (extr tic.'guj3' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Max u m/s' ;
 tab1.'TITRE'. 2 = 'MOT' 'U inj m/s' ;
 dess (evmaxu et evgj3)
 LEGE TAB1 DATE MIMA TITR ' Vitesse max / Vitesse inject brèche 3 ' ;
*******************************************************************
Finsi ;

*******************************************************************
* Densités
 evrhom= EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhom' ltpsc) ;
 tab1.'TITRE'. 1 = 'MOT' 'Rhom Kg/m3' ;
 evdens = evrhom ;

 ID = 1 ;
 'SI' TBT.'VAPEUR'                                       ;
 ID = ID + 1 ;
 evrhomv= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomv' ltpsc) ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_vap Kg/m3' ;
 evdens = evdens et evrhomv ;
 evrhomvg= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomvg' ltpsc) ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_vg Kg/m3' ;
 evdens = evdens et evrhomvg ;
 'FINSI' ;

 'SI' TBT.'THE';
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_He Kg/m3' ;
 evrhomhe=EVOL JAUNE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomhe' ltpsc) ;
 evdens = evdens et evrhomhe ;
 'FINSI' ;

 'SI' TBT.'TH2' ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_H2 Kg/m3' ;
 evrhomh2=EVOL BLEU 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomh2' ltpsc) ;
 evdens = evdens et evrhomh2 ;
 'FINSI' ;

 'SI' TBT.'TO2';
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_O2 Kg/m3' ;
 evrhomo2=EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomo2' ltpsc) ;
 evdens = evdens et evrhomo2 ;
 'FINSI' ;

 'SI' TBT.'TN2';
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_N2 Kg/m3' ;
 evrhomn2=EVOL ROSE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomn2' ltpsc);
 evdens = evdens et evrhomn2 ;
 'FINSI' ;

 'SI' TBT.'TCO' ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_CO Kg/m3' ;
 evrhomco=EVOL JAUN 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomco' ltpsc);
 evdens = evdens et evrhomco ;
 'FINSI' ;

 'SI' TBT.'TCO2' ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_CO2 Kg/m3' ;
 evrco2 =EVOL ROSE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomco2' ltpsc);
 evdens = evdens et evrco2 ;
 'FINSI' ;

*? TCO2AIR
 'SI' TBT.'TAIR' ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID = 'MOT' 'Rhom_AIR Kg/m3' ;
 evrair =EVOL JAUNE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomair' ltpsc);
 evdens = evdens et evrair ;
 'FINSI' ;

 dess evdens
 LEGE TAB1 DATE MIMA TITR ' Densités mélange / vapeur / incondensables';
*******************************************************************

*******************************************************************
* Densités et correction 0D
 evrhom= EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhom' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom Kg/m3' ;
 evrho  = evrhom ;

 evdrho  = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'drho' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'dRho Kg/m3' ;
 evrho  = evrho  et evdrho ;

 dess evrho
 LEGE TAB1 DATE MIMA TITR ' Densité mélange et correction ' ;

 'SI' TBT.'VAPEUR'                                       ;
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomv' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_VAP Kg/m3' ;
 evrhov = evrhomv;

 evrhomvg  = EVOL TURQ 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomvg' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Rhom_H2O Kg/m3' ;
 evrhov = evrhov  et evrhomvg;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrvap' ltpsc);
 tab1.'TITRE'. 3 = 'MOT' 'Maxi dRho_H2O Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité vapeur et correction ' ;
 'FINSI' ;

 'SI' TBT.'THE';
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomhe' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_He Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrhe' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_He Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Helium et correction ' ;
 'FINSI' ;

 'SI' TBT.'TH2' ;
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomh2' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_H2 Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrh2' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_H2 Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Hydrogène et correction ' ;
 'FINSI' ;

 'SI' TBT.'TO2';
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomo2' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_o2 Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdro2' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_o2 Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Oxygène et correction ' ;
 'FINSI' ;


 'SI' TBT.'TN2';
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomn2' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_N2 Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrn2' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_N2 Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Azote et correction ' ;
 'FINSI' ;

 'SI' TBT.'TCO';
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomco' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_Co Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrco' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_Co Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Co et correction ' ;
 'FINSI' ;

*? TCO2AIR Pas fait !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 'SI' TBT.'TCO2';
 evrhomv   = EVOL VERT 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Rhomco2' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Rhom_Co2 Kg/m3' ;
 evrhov = evrhomv;

 evdrhov1= EVOL ROUGE 'MANU' 'Temps en sec' ltps 'Kg/m3'
 (extr tic.'Mdrco2' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dRho_Co2 Kg/m3' ;
 evrhov  = evrhov  et evdrhov1 ;

 dess evrhov
 LEGE TAB1 DATE MIMA TITR ' Densité Co2 et correction ' ;
 'FINSI' ;

*******************************************************************

*******************************************************************
* Pression moyenne
 evPT=EVOL BLEU 'MANU' 'Temps en sec' ltps 'Pt'
 (extr tic.'PT' ltpsc) ;
 tab1.'TITRE'. 1 = 'MOT' 'Pmoy Pa' ;
 dess evPT
 LEGE TAB1 DATE MIMA TITR ' Pression moyenne ';
*******************************************************************

*******************************************************************
* Températures Fluides paroi etc
 evtpf = EVOL ROUGE 'MANU' 'Temps en sec' ltps 'oC '
 (extr tic.'Tfm' ltpsc);
 tab1.'TITRE'. 1 = 'MOT' 'Tfm oC' ;
 evtpf1= EVOL BLEU 'MANU' 'Temps en sec' ltps 'oC'
 (extr tic.'MdTf' ltpsc);
 tab1.'TITRE'. 2 = 'MOT' 'Maxi dTf oC' ;
 evtpf  = evtpf  et evtpf1 ;
 evtpf2= EVOL ROSE 'MANU' 'Temps en sec' ltps 'oC'
 (extr tic.'mdTf' ltpsc);
 tab1.'TITRE'. 3 = 'MOT' 'Mini dTf oC' ;
 evtpf  = evtpf  et evtpf2 ;

 ID = 3 ;
 'SI' TBT.'THERMP' ;
 ID = ID + 1 ;
 tab1.'TITRE'. ID= 'MOT' 'Tfp oC' ;
 evTfp = EVOL VERT  'MANU' 'Temps en sec' ltps 'oC '
 (extr tic.'Tpm' ltpsc);
 evtpf = evtpf et evTfp ;
 'FINSI' ;
  'SI' TBT.'TTIMP1' ;
  ID = ID + 1 ;
  tab1.'TITRE'. ID= 'MOT' 'Tfpc1 oC' ;
  evTfpc1= EVOL TURQ  'MANU' 'Temps en sec' ltps 'oC '
  (extr tic.'Ltbp1' ltpsc);
  evtpf = evtpf et evTfpc1 ;
  'FINSI' ;
  'SI' TBT.'TTIMP2' ;
  ID = ID + 1 ;
  tab1.'TITRE'. ID= 'MOT' 'Tfpc2 oC' ;
  evTfpc2= EVOL TURQ  'MANU' 'Temps en sec' ltps 'oC '
  (extr tic.'Ltbp2' ltpsc);
  evtpf = evtpf et evTfpc2 ;
  'FINSI' ;
  'SI' TBT.'TTIMP3' ;
  ID = ID + 1 ;
  tab1.'TITRE'. ID= 'MOT' 'Tfpc3 oC' ;
  evTfpc3= EVOL TURQ  'MANU' 'Temps en sec' ltps 'oC '
  (extr tic.'Ltbp3' ltpsc);
  evtpf = evtpf et evTfpc3 ;
  'FINSI' ;
  dess evtpf
  LEGE TAB1 DATE MIMA TITR ' Températures moyennes Fluide / Parois';


Finsi                                                    ;
*==============================================================
'FINPROC' ;










