$$$$ NSCLIM
* NSCLIM    PROCEDUR  MAGN      05/07/25    21:15:01     5133
'DEBPROC' NSCLIM                                                       ;

 ARGU tit*'MOT' KIMPR/'LOGIQUE' NOMQ*'MOT'                             ;

 Si (Exist KIMPR)                                                      ;
 TIMPR = KIMPR                                                         ;
 Sinon                                                                 ;
 TIMPR = VRAI                                                          ;
 FinSi                                                                 ;

 Si TIMPR                                                              ;
 mess '#### NSCLIM #######################################'
      '#########################'                                      ;
 FinSi                                                                 ;

 lnomq = mots 'DEBIT' 'VITESSE' 'TEMPERATURE' 'ADHERENCE'              ;
 Si (NON (EXIST lnomq nomq))                                           ;
 Mess '*********************************************************'      ;
 Mess ' ERREUR   ERREUR   ERREUR   ERREUR   ERREUR   ERREUR     '      ;
 Mess '                                                         '      ;
 Mess 'L entree ' NOMQ   ' n existe pas '                              ;
 Mess 'Choisir : VITESSE ou DEBIT ou TEMPERATURE ou ADHERENCE   '      ;
 Mess '*********************************************************'      ;
 erreur 21                                                             ;
 quitter NSCLIM                                                        ;
 Finsi                                                                 ;

 Si((EGA NOMQ 'VITESSE') ou (EGA NOMQ 'DEBIT')
                         ou (EGA NOMQ 'TEMPERATURE') )     ;
  ARGU Udebt/'EVOLUTION'                                   ;
  Si(NON (Exist Udebt))                                    ;
  ARGU Udeb/'FLOTTANT'                                     ;
  FinSi                                                    ;

  ARGU    NCO*'MOT'             Tps*'FLOTTANT'             ;

  SWIRL=FAUX                                               ;
  Si(EGA NCO 'SWIRL')                                      ;
  SWIRL=VRAI                                               ;
  asw = tps                                                ;
  ARGU    NCO*'MOT'             Tps*'FLOTTANT'             ;
  Finsi                                                    ;

  ARGU
  $mf*'MMODEL'   $sentr*'MMODEL'    clim/'CHPOINT'  NOMG*'MOT'
  NOMM/'MOT'  sgm/'FLOTTANT' portee/'FLOTTANT'             ;

  Si (EXIST NOMM)                                          ;
  NOMT = NOMM                                              ;
  Sinon                                                    ;
  NOMT='XXXX'                                              ;
  FinSi                                                    ;
 FinSi                                                     ;

 Si(EGA NOMQ 'ADHERENCE')                                 ;
  ARGU    NCO*'MOT'
  $mf*'MMODEL'   $sentr*'MMODEL'    clim/'CHPOINT'  NOMG*'MOT' ;
 FinSi                                                     ;

 lnomg = mots 'LARGEMENT' 'STRICTEMENT'                     ;
 Si (NON (EXIST lnomg nomg))                                ;
 Mess '*********************************************************' ;
 Mess ' ERREUR   ERREUR   ERREUR   ERREUR   ERREUR   ERREUR     ' ;
 Mess '                                                         ' ;
 Mess 'L entree ' NOMG   ' n existe pas '                         ;
 Mess 'Choisir : LARGEMENT ou STRICTEMENT                       ' ;
 Mess '*********************************************************' ;
 erreur 21 ;
 quitter NSCLIM ;
 Finsi ;

*
*  NOMQ = DEBIT        Débit imposé    (Débit entrant >0)
*         VITESSE      Vitesse imposée (Vitesse entrante >0)
*         <SWIRL> alfa  swirl
*         TEMPERATURE  Température imposée (ou scalaire)
*         ADHERENCE    u=v=w=0     imposées
*         FPAROI       u.n=0  et Fparoi
*         SYMETRIE     u.n=0 et rien si vitesse rien si Température
*         SORTIE       -> p=0
*         PRESSION     -> p=p0
*  NCO    nom de la composante
*
*  NOMG = STRICTEMENT
*         LARGEMENT
*
*  NOMT = SGE
*         XXXXXXXXX
*
*

*!!!!!!! Petites vérifications !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

* 1/ sentr doit être inclus dans mf
* 2/ Faire le 2D
* 3/ Traiter les cas des TRI7 -> ELNO QUAD ou MSOMMET
* 5/ Objet Chargement
* 6/ Completer les CL FPAROI SYMETRIE SORTIE PRESSION
* 7/ Dans le cas Strictement le débit est faux

*!!!!!!! Petites vérifications !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

*##############################################################
* Préparation géométrie calcul normales et tangentes
 AT = doma $sentr 'TABLE'                                   ;
 Si (EXIST AT 'nx' )                                        ;


   nx = AT.'nx'                                             ;
   ny = AT.'ny'                                             ;

   tx = AT.'tx'                                             ;
   ty = AT.'ty'                                             ;

  Si(EGA (VALE DIME) 3)                                     ;
   nz = AT.'nz'                                             ;
   tz = AT.'tz'                                             ;

   ax = AT.'ax'                                             ;
   ay = AT.'ay'                                             ;
   az = AT.'az'                                             ;
  FinSi                                                     ;

 Sinon                                                      ;

 mess tit ': Préparation géométrie : calcul normales et tangentes';

   vol   = doma $mf maillage                                ;
   Sentr = doma $sentr maillage                             ;
   volr = vol elem 'APPUYE' 'LARGEMENT' Sentr               ;
   sent = Sentr                                             ;
   inefmd = (doma $mf 'TABLE').'INEFMD';                    ;
   mess 'inefmd=' inefmd ;
   Si (ega inefmd 3)                                        ;
    $volr = model volr 'NAVIER_STOKES' 'MACRO'              ;
    volr = doma $volr maillage                              ;
    $sentr= model sentr 'NAVIER_STOKES' 'MACRO'             ;
    sent = doma $sentr maillage                             ;
    volr = volr elem 'APPUYE' 'LARGEMENT' Sent              ;
   FinSi                                                    ;
   mo   = mode volr mecanique elastique                     ;
   chp = pres mass mo Sent  1.                              ;
   Si (EGA (vale mode) 'AXIS' )                             ;
   fx = 'FR'                                                ;
   fy = 'FZ'                                                ;
   Sinon                                                    ;
   fx = 'FX'                                                ;
   fy = 'FY'                                                ;
   finSi                                                    ;
   chnm = (((exco chp fx)**2)+((exco chp fy)**2))           ;
  Si(EGA (VALE DIME) 3)                                     ;
   chnm = chnm + ((exco chp fz)**2)                         ;
  FinSi                                                     ;
   chnm = chnm **0.5                                        ;
   chn = chp / chnm                                         ;

   nx = (exco fx chn) ;
   ny = (exco fy chn) ;

  Si(EGA (VALE DIME) 3)                                     ;
   nz = (exco fz chn) ;
*
   ax = (maxi (coor 1 sent)) - (mini (coor 1 sent));
   ay = (maxi (coor 2 sent)) - (mini (coor 2 sent));
   az = (maxi (coor 3 sent)) - (mini (coor 3 sent));
   av = ax ay az;
   nav = norm av ;
   av = av * (1./nav) ;
   ax = manu chpo sent 'SCAL' (coor 1 av);
   ay = manu chpo sent 'SCAL' (coor 2 av);
   az = manu chpo sent 'SCAL' (coor 3 av);
*
   tx = (ny * az) - (nz * ay) nomc 'UX' ;
   ty = (nz * ax) - (nx * az) nomc 'UY' ;
   tz = (nx * ay) - (ny * ax) nomc 'UZ' ;
   cht = tx + ty + tz ;
   ncht = PSCA cht cht (MOTS 'UX' 'UY' 'UZ') (MOTS 'UX' 'UY' 'UZ');
   nicht = inve ncht ;
   tx = (tx nomc 'SCAL') * nicht ;
   ty = (ty nomc 'SCAL')* nicht ;
   tz = (tz nomc 'SCAL') * nicht ;
*
   ax = (ny * tz) - (nz * ty) ;
   ay = (nz * tx) - (nx * tz) ;
   az = (nx * ty) - (ny * tx) ;
*
   nx = nomc 'UX' nx ;
   ny = nomc 'UY' ny ;
   nz = nomc 'UZ' nz ;
*
   tx = nomc 'UX' tx ;
   ty = nomc 'UY' ty ;
   tz = nomc 'UZ' tz ;
*
   ax = nomc 'UX' ax ;
   ay = nomc 'UY' ay ;
   az = nomc 'UZ' az ;
*
   AT.'nx' = nx                                  ;
   AT.'ny' = ny                                  ;
   AT.'nz' = nz                                  ;
   MNC=1                                         ;
   Si( ((ABS nx MAXI) > (ABS ny MAXI)) et
   ((ABS nx MAXI) > (ABS nz MAXI)) ); MNC=1;FinSi;
   Si( ((ABS ny MAXI) > (ABS nx MAXI)) et
   ((ABS ny MAXI) > (ABS nz MAXI)) ); MNC=2;FinSi;
   Si( ((ABS nz MAXI) > (ABS ny MAXI)) et
   ((ABS nz MAXI) > (ABS nx MAXI)) ); MNC=3;FinSi;
   AT.'MNC' = MNC                                ;

   AT.'tx' = tx                                  ;
   AT.'ty' = ty                                  ;
   AT.'tz' = tz                                  ;

   AT.'ax' = ax                                  ;
   AT.'ay' = ay                                  ;
   AT.'az' = az                                  ;

   AT.'chn'  = nx + ny + nz                      ;
   AT.'cht'  = tx + ty + tz                      ;
   AT.'cha'  = ax + ay + az                      ;
  FinSi                                          ;

  Si(EGA (VALE DIME) 2)                          ;
   tx = nomc 'UX' ny                             ;
   ty = nomc 'UY' nx ;                           ;
   nx = nomc 'UX' nx                             ;
   ny = nomc 'UY' ny                             ;
   MNC=1                                         ;
   Si( ((MAXI nx) > (MAXI ny)) ); MNC=2; FinSi   ;
   AT.'MNC' = MNC                                ;

   AT.'tx' = tx                                  ;
   AT.'ty' = ty                                  ;
   AT.'nx' = nx                                  ;
   AT.'ny' = ny                                  ;

   AT.'chn'  = nx + ny                           ;
   AT.'cht'  = tx + ty                           ;
  FinSi                                          ;

   AT.'Sentr'=Sentr                              ;
   AT.'Sentr1'= chan Sentr  'POI1'               ;
   Si (EGA (VALE DIME) 3)                        ;
   CSentr = cont Sentr coul VERTE                           ;
   Sinon                                                    ;
   CSentr = MANU 'SEG2'
              (Sentr POINT 'INITIAL')  (Sentr POINT 'FINAL');
   FinSi                                                    ;
   CSentr =  CSentr COUL ROUGE                              ;
   CSentr1= chan CSentr 'POI1' COUL ROUGE                   ;
   Si('EGA' (VALE MODE ) 'AXIS')                            ;
   xstr1= coor 1 CSentr1                                    ;
   dr =((maxi xstr1) - (mini xstr1))/(nbel CSentr1)/100.    ;
   pax = (CSentr1 'POINT' 'DROIT' (0. 0.) (0. 1.e5) dr)     ;
   Csentr1= diff pax Csentr1                                ;
   FinSi                                                    ;

   Sentro = diff CSentr1 AT.'Sentr1' COUL VERT              ;
   AT.'Sentro' = Sentro                                     ;
   AT.'Csentr1'= Csentr1                                    ;
   AT.'Cgrav'  = bary (Sentro et  Csentr1)                  ;

   Si TIMPR                                                 ;
   trace  (Sentro et Csentr1) TITR
   (chai tit '  Intérieur et contour')                      ;
   trace  (AT.'Cgrav' et Csentr1) TITR
   (chai tit '  Centre de gravité et contour')              ;
   FinSi                                                    ;

 Si(EGA (nbel Sentro) 0 )                                 ;
 Mess '*********************************************************' ;
 Mess ' ERREUR   ERREUR   ERREUR   ERREUR   ERREUR   ERREUR     ' ;
 Mess '                                                         ' ;
 Mess tit '  L intérieur est vide                               ' ;
 Mess '*********************************************************' ;
 erreur 21 ;
 quitter NSCLIM                                             ;
 Finsi ;

* On en déduit que connaissant q on a u = q*q1              ;
   Setr   = mesu Sentr                                      ;
   AT.'Setr' = Setr                                         ;
* Calcul du facteur géométrique EF
*  list AT.'chn';
   v1 = kcht $Sentr vect sommet (redu (AT.'chn') Sentro)    ;
*  v1 = kcht $Sentr vect sommet (0. 0. 1.)   ;
*  list v1 ;
*  ung = vect v1 0.1 ux uy uz jaune ;
*  trace ung (doma $Sentr maillage)  ;
*
   q1 = dbit $Sentr v1 'IMPR'                               ;
*  trace (doma $Sentr maillage) TITR 'Sentr';
*  list q1 ;
   AT.'facgeo' = Setr/q1 'ABS'                              ;
   mess tit ' Surface = ' Setr
                     ' Facteur géométrique '   AT.'facgeo'  ;
   AT.'Sentro' = Sentro                                     ;
   AT.'CSentr' = CSentr                                     ;

 FinSi                                                      ;
*##############################################################

   Sentr   = AT.'Sentr'                                     ;
   Setr    = AT.'Setr'                                      ;

 Si(NON(EGA NOMQ 'ADHERENCE'))                              ;
     IK1=0                                                  ;
   Si (NON (EXIST Udebt))                                   ;
     Ud = Udeb                                              ;
     IK1 = IK1 + 1                                          ;
   FinSi                                                    ;
   Si (EXIST Udebt)                                         ;
     t  = extr Udebt 'ABSC'                                 ;
     u  = extr Udebt 'ORDO'                                 ;
     Ud = 'IPOL' tps t  u                                   ;
     IK1 = IK1 + 1                                          ;
   FinSi                                                    ;

   Si (NON (EGA IK1 1 ))                                    ;
     ERREUR 5                                               ;
     QUITTER NSCLIM                                         ;
   FinSi                                                    ;
 FinSi                                                      ;


 Si(EGA NOMQ 'DEBIT')                                       ;
   Qd = Ud                                                  ;
   Ud = Ud / Setr                                           ;
   Si (EGA NOMG 'STRICTEMENT'); Ud = Ud * AT.'facgeo';FinSi ;
 FinSi                                                      ;
 Si(EGA NOMQ 'VITESSE')                                     ;
   Qd = Ud * Setr                                           ;
 FinSi                                                      ;
 Si(EGA NOMQ 'TEMPERATURE')                                 ;
   Qd = ' '                                                 ;
 FinSi                                                      ;

 Si TIMPR                                                   ;
 mess '**** Conditions limites ***** ' tit '  ' NOMQ ' ' NCO
                              ' Ud = ' Ud  'Qd = ' Qd       ;
 FinSi                                                      ;

***************************************************************
*  Imposition d'une fluctuation

 Si (EGA NOMT 'SGE')                                        ;
 Si TIMPR                                                   ;
 mess ' Modèle SGE : Imposition d une fluctuation :'
 ' Ecart type ' sgm '  portée ' portee                      ;
 FinSi                                                      ;

* Ne concerne que VITESSE et DEBIT
 Si(NON ((EGA NOMQ 'VITESSE') ou (EGA NOMQ 'DEBIT')))       ;
 Mess '*********************************************************' ;
 Mess ' ERREUR   ERREUR   ERREUR   ERREUR   ERREUR   ERREUR     ' ;
 Mess '                                                         ' ;
 Mess 'L imposition d une fluctuation ne concerne que           ' ;
 Mess ' VITESSE ou DEBIT                                        ' ;
 Mess '*********************************************************' ;
 erreur 21 ;
 quitter NSCLIM                                             ;
 Finsi ;

* La portee doit être > 0
 Si (portee '<EG' 0.)                                       ;
 ERREUR 5                                                   ;
 QUITTER NSCLIM                                             ;
 FinSi                                                      ;

    sgp = sgm / 2.                                          ;

   Si (NON (EXIST AT 'unct1' ))                             ;
* initialisation unct1,uncn1,unca1
  unct2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgp 'MOYENNE' Ud 'LAMBDA' portee            ;
  unct2=(unct2 - Ud)                                        ;
*   trace unct2 Sentr TITR 'unct2'                          ;

  uncn2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgm 'MOYENNE' Ud 'LAMBDA' portee            ;

*   trace uncn2 Sentr TITR 'uncn2'                          ;

  unca2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgp  'MOYENNE' Ud 'LAMBDA' portee           ;
  unca2=(unca2 - Ud)                                        ;
*   trace unca2 Sentr TITR 'unca1'               ;

   AT.'unct2' = unct2                            ;
   AT.'uncn2' = uncn2                            ;
   AT.'unca2' = unca2                            ;
   AT.'t1'    = 0.                               ;
   AT.'t2'    = 0.1*Tps                          ;
   FinSi                                           ;

    t1  = AT.'t1'                                ;
    t2  = AT.'t2'                                ;
    alf = (Tps - t1)/(t2 - t1)                   ;

   Si (ALF >EG 1.)                                 ;
    alf = 0.                                     ;
    AT.'unct1'=AT.'unct2'                        ;
    AT.'uncn1'=AT.'uncn2'                        ;
    AT.'unca1'=AT.'unca2'                        ;
    t1 = Tps                                     ;
    t2 = Tps + (portee / (abs Ud))               ;
    AT.'t1'= t1                                  ;
    AT.'t2'= t2                                  ;

  unct2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgp 'MOYENNE' Ud 'LAMBDA' portee ;
  unct2=(unct2 - Ud);
*   trace unct2 Sentr TITR 'unct2'               ;

  uncn2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgm 'MOYENNE' Ud 'LAMBDA' portee ;

*   trace uncn2 Sentr TITR 'uncn2'               ;

  unca2='ALEA' 'BANDES_TOURNANTES' Sentr 'EXPO'
        'SIGMA' sgp 'MOYENNE' Ud 'LAMBDA' portee ;
  unca2=(unca2 - Ud);
*   trace unca2 Sentr TITR 'unca2'               ;

   AT.'unct2' = unct2                            ;
   AT.'uncn2' = uncn2                            ;
   AT.'unca2' = unca2                            ;

   FinSi ;

 unct1=AT.'unct1'                                ;
 unct2=AT.'unct2'                                ;
 uncn1=AT.'uncn1'                                ;
 uncn2=AT.'uncn2'                                ;
 unca1=AT.'unca1'                                ;
 unca2=AT.'unca2'                                ;

 unct = (alf * unct1) + ((1. - alf) * unct2);
 uncn = (alf * uncn1) + ((1. - alf) * uncn2);
 unca = (alf * unca1) + ((1. - alf) * unca2);

   Si TIMPR                                            ;
 tt=chai tit ' uncn' ' Tps=' Tps ' t1=' t1 ' t2=' t2   ;
 trace uncn Sentr TITR tt                              ;
 tt=chai tit ' unca'             ' Alf=' alf           ;
 trace unca Sentr TITR tt                              ;
 trace unct Sentr TITR (chai tit ' unct')              ;
   FinSi                                               ;
 Sinon                                                 ;
***************************************************************
  uncn = Ud                                            ;
  unct = 0.                                            ;
  unca = 0.                                            ;
 FinSi                                                 ;
***************************************************************


Si((EGA NOMQ 'VITESSE') ou (EGA NOMQ 'DEBIT'))         ;
NC1 = chai 1 NCO                                       ;
NC2 = chai 2 NCO                                       ;
NC3 = chai 3 NCO                                       ;
LNC = MOTS NC1 NC2                                     ;
UCxyzn=         (nomc NC1 (uncn*nx) 'NATU' 'DISCRET')
             et (nomc NC2 (uncn*ny) 'NATU' 'DISCRET')  ;

UCxyzt=         (nomc NC1 (unct*tx) 'NATU' 'DISCRET')
             et (nomc NC2 (unct*ty) 'NATU' 'DISCRET')  ;


  Si(EGA (VALE DIME) 3)                                ;
UCxyza=         (nomc NC1 (unca*ax) 'NATU' 'DISCRET')
             et (nomc NC2 (unca*ay) 'NATU' 'DISCRET')  ;

UCxyzn=UCxyzn et (nomc NC3 (uncn*nz) 'NATU' 'DISCRET') ;
UCxyzt=UCxyzt et (nomc NC3 (unct*tz) 'NATU' 'DISCRET') ;
UCxyza=UCxyza et (nomc NC3 (unca*az) 'NATU' 'DISCRET') ;
LNC = LNC et (MOTS NC3)                                ;
Si SWIRL                                               ;
 mess ' SWIRL : ' asw ' * Ud'                          ;
  xyzw = extr uncn maillage                            ;
  xw   = (coor 1 xyzw) - (coor 1 AT.'Cgrav') ;
  yw   = (coor 2 xyzw) - (coor 2 AT.'Cgrav') ;
  zw   = (coor 3 xyzw) - (coor 3 AT.'Cgrav') ;
  GM   =        (nomc 'UX' xw 'NATU' 'DISCRET')
             et (nomc 'UY' yw 'NATU' 'DISCRET')
             et (nomc 'UZ' zw 'NATU' 'DISCRET')        ;
  AM   =        (nomc 'UX' ax 'NATU' 'DISCRET')
             et (nomc 'UY' ay 'NATU' 'DISCRET')
             et (nomc 'UZ' az 'NATU' 'DISCRET')        ;
  TM   =        (nomc 'UX' tx 'NATU' 'DISCRET')
             et (nomc 'UY' ty 'NATU' 'DISCRET')
             et (nomc 'UZ' tz 'NATU' 'DISCRET')        ;
  xa = PSCA GM (MOTS 'UX' 'UY' 'UZ') AM (MOTS 'UX' 'UY' 'UZ');
  ya = PSCA GM (MOTS 'UX' 'UY' 'UZ') TM (MOTS 'UX' 'UY' 'UZ');
  R    = (xw*xw)+(yw*yw)+(zw*zw) **0.5                       ;
  R0   = maxi R                                              ;
  sw = (Ud/R0)*asw                                           ;
UCxyza= UCxyza et (nomc NC1 (ya*ax*sw) 'NATU' 'DISCRET')
               et (nomc NC2 (ya*ay*sw) 'NATU' 'DISCRET')
               et (nomc NC3 (ya*az*sw) 'NATU' 'DISCRET')     ;

UCxyzt= UCxyzt et (nomc NC1 (xa*tx*(-1.)*sw) 'NATU' 'DISCRET')
               et (nomc NC2 (xa*ty*(-1.)*sw) 'NATU' 'DISCRET')
               et (nomc NC3 (xa*tz*(-1.)*sw) 'NATU' 'DISCRET') ;

FinSi                                                  ;
  FinSi                                                ;

  UCxyz = UCxyzn et UCxyzt                             ;
  Si(EGA (VALE DIME) 3)                                ;
  UCxyz = UCxyz et UCxyza                              ;
  FinSi                                                ;
* UCxyz = (UCxyzn*0.) et UCxyzt et UCxyza;

 Si (EGA NOMG 'LARGEMENT')                             ;
***************************************************
* NNC=chai AT.'MNC' NCO                                ;
* UCc = EXCO (REDU UCxyzn (AT.'CSentr')) NNC NNC       ;
* Sur la paroi seule la composante normale est retenue
* Il semblerait plus simple et correct de faire comme suit
***************************************************
  UCc =       REDU UCxyzn (AT.'CSentr')                ;
  UCxyz=(REDU UCxyz (AT.'Sentro')) et UCc              ;
 FinSi                                                 ;

  Si (EGA NOMG 'STRICTEMENT')                          ;
  UCxyz= REDU UCxyz (AT.'Sentro')                      ;
  FinSi                                                ;
   Si TIMPR                                            ;
   Si(EGA (VALE DIME) 3)                               ;
   ung = vect UCxyz 0.05 NC1 NC2 NC3 jaune             ;
   Sinon                                               ;
   ung = vect UCxyz 0.05 NC1 NC2 jaune                 ;
   FinSi                                               ;
   trace ung (AT.'CSentr')      TITR tit               ;
   FinSi                                               ;

FinSi                                                  ;

Si(EGA NOMQ 'TEMPERATURE')                             ;
LNC = MOTS NCO                                         ;
UCxyz= MANU 'CHPO' Sentr 'NATU' 'DISCRET' NCO uncn     ;
  Si (EGA NOMG 'STRICTEMENT')                          ;
  UCxyz = REDU UCxyz (AT.'Sentro')                     ;
  FinSi                                                ;
   Si TIMPR                                            ;
   titt = chai tit ' composante : ' NCO                ;
   trace UCxyz Sentr      TITR titt                    ;
   FinSi                                               ;
FinSi                                                  ;

Si(EGA NOMQ 'ADHERENCE')                               ;
NC1 = chai 1 NCO                                       ;
NC2 = chai 2 NCO                                       ;
NC3 = chai 3 NCO                                       ;
LNC = MOTS NC1 NC2                                     ;
UCxyz= (MANU 'CHPO' Sentr 'NATU' 'DISCRET' NC1 0.)
    et (MANU 'CHPO' Sentr 'NATU' 'DISCRET' NC2 0.)     ;
  Si(EGA (VALE DIME) 3)                                ;
UCxyz=UCxyz
et (MANU 'CHPO' Sentr 'NATU' 'DISCRET' NC3 0.)         ;
LNC = LNC et (MOTS NC3)                                ;
  FinSi                                                ;
  Si (EGA NOMG 'STRICTEMENT')                          ;
  UCxyz = REDU UCxyz (AT.'Sentro')                     ;
  FinSi                                                ;
FinSi                                                  ;


 Si(EXIST CLIM)                                        ;
    unc=exco LNC (redu CLIM Sentr)      'NOID'         ;
    unc = nomc LNC LNC unc ;
    RESU = (CLIM - unc ) + UCxyz                       ;
 Sinon                                                 ;
    RESU = UCxyz                                       ;
 FinSi                                                 ;

 Si TIMPR                                              ;
 mess '#### FIN NSCLIM ###################################'
      '#########################'                                      ;
 FinSi                                                 ;
 FINPROC RESU                                                          ;



