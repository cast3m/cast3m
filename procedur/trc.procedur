$$$$ TRC
* TRC       PROCEDUR  PV        18/06/11    21:15:18     9842
'DEBP' TRC      MODTHE*'MMODEL' MATPHAS*'MCHAML' TPHASE*'TABLE'
                TINI*FLOTTANT TFIN*FLOTTANT LISTREF*LISTREEL ;
************************************************************************
* PROCEDURE TRC (voir TRC.notice)
* - Permet de retrouver un diagramme TRC à partir des evolutions
*   des proportions de phase en métallurgie.
*
*   En entrée :
*  ------------
*   MODTHE : Modèle THERMIQUE sur lequel porte le changement de phase
*   MATPHAS: Matériau contenant les propriétés thermiques des phases
*   TPHASE : TABLE    contenant la description des changements de phase
*            ==> A terme contenu dans le MATERIAUX
*   TINI   : FLOTTANT donnant la temperature haute de depart
*   TFIN   : FLOTTANT donnant la temperature basse
*   LISTREF: LISTREEL donnant les vitesses de refroidissement a simuler
************************************************************************

************************************************************************
*  Pour faire des beaux DESSINS
************************************************************************
* LISTMOTS contenant les couleurs
  LESCOUL = 'MOTS' 'VIOL' 'VERT' 'CYAN' 'BRIQ' 'BOUT' 'JAUN' 'OLIV'
                   'ORAN' 'ROUG' 'BLEU' 'BRUN' 'CARA' 'GRIS' 'NOIR' ;
  NBCOUL  = 'DIME' LESCOUL;

* LISTMOTS contenant les marques dans DESS
  LESMARQ = 'MOTS' 'CROI' 'PLUS' 'MOIN' 'BARR' 'ETOI' 'CARR'
                   'LOSA' 'ROND' 'TRID' 'TRIU' 'TRIL' 'TRIR';
  NBMARQ  = 'DIME' LESMARQ;
************************************************************************

* Nombre de vitesses de refroidissement a simuler
  NBVI = 'DIME' LISTREF;

* Extration d'un seul element et réduction du du MMODEL
  ELEM1    ='ELEM' 1 ('EXTR' MODTHE 'MAIL');
  MODTHE   ='REDU' MODTHE ELEM1;

* Necessaire pour que TRANSNON soit en Thermique Transitoire
  MATBIDON ='MATE' MODTHE 'K' 0.D0 'RHO' 0.D0 'C' 0.D0 ;

* TEMPERATURE INITIALE
  CHPTINI  ='MANU' 'CHPO' ELEM1 1 'T' TINI 'NATU' 'DIFFUS' ;

* Creation du MCHAML de proportion de phase INITIALE
  CTYP   ='MOT'  'SCALAIRE';
  MCHPHA ='MANU' 'CHML' MODTHE 'MB  ' 0. 'MART' 0. 'BAIN' 0.
                               'FERR' 0. 'AUST' 1.
                 'TYPE' CTYP 'NOEUD' ;

* CLs
* TEMPERATURE IMPOSE PARTOUT
  CLTOT   ='BLOQ' 'T' ELEM1   ;
  TEMBAS  ='DEPI'  1. CLTOT   ;

* Initialisations pour le POST-TRAITEMENT
  LISCOM ='EXTR' MCHPHA 'COMP' ;
  NBCOMP ='DIME' LISCOM        ;
  TABTRC ='TABL';
  REPE SURVIT NBVI;
    II = &SURVIT;
    TABTRC . II ='TABL' ;
    TABPHA = TABTRC . II;
    REPE SURPHA NBCOMP;
      IPH = &SURPHA;
      NOMP='EXTR' LISCOM IPH;
      Pi  ='EXTR' MCHPHA NOMP 1 1 1 ;
      TABPHA . IPH ='VIDE' 'LISTREEL' ;
    FIN SURPHA;
  FIN SURVIT;

  EVTPS            ='VIDE' 'EVOLUTIO';
  EVTPSP           ='VIDE' 'EVOLUTIO';
  TDESS2           ='TABL' ;
  TDESS2 . 'TITRE' ='TABL' ;
  NBGRAPH          = 0     ;
  REPE SURVIT NBVI;
*   Boucle sur les differentes vitesses de refroidissement
    II = &SURVIT;

    VREFROI='EXTR' LISTREF II ;
    TIT1   ='CHAI' 'Vit. de Ref. : ' ('ENTI' 'PROC' VREFROI)'[Deg.s-1]';
    TPSFIN = -1. * (TFIN - TINI) / VREFROI ;

    TPS0   = 1.D0          ;
    TPS1   = TPSFIN + 1.D0 ;
    DELTAt = TPS1   - TPS0 ;

*   CHARGEMENT de TEMPERATURE imposee
    LTPSCHA ='PROG'  TPS0  TPS1 ;
    LTCHA   ='PROG'  TINI TFIN  ;
    EVT     ='EVOL' 'MANU' LTPSCHA LTCHA;
    CHARTOT ='CHAR' 'TIMP' TEMBAS EVT ;

*   TEMPS_CALCULES
    LTCAL   ='PROG' TPS0 'PAS' (DELTAt / 88.) TPS1 ;

    TPASAP                          ='TABL'           ;
    TPASAP.'MODELE'                 = MODTHE          ;
    TPASAP.'CARACTERISTIQUES'       = MATBIDON        ;
    TPASAP.'BLOCAGES_THERMIQUES'    = CLTOT           ;
    TPASAP.'CHARGEMENT'             = CHARTOT         ;
    TPASAP.'TEMPS_CALCULES'         = LTCAL           ;

    TPASAP.'TEMPS'                  ='TABL'           ;
    TPASAP.'TEMPERATURES'           ='TABL'           ;
    TPASAP.'PROPORTIONS_PHASES'     ='TABL'           ;
    TPASAP.'TEMPS'              . 0 =('EXTR' LTCAL 1) ;
    TPASAP.'TEMPERATURES'       . 0 = CHPTINI         ;
    TPASAP.'PROPORTIONS_PHASES' . 0 = MCHPHA          ;

*   PROCEDURES Utilisateurs
    TPASAP.'PROCEDURE_PARATHER'     = VRAI            ;
    TPASAP.'PROCEDURE_CHARTHER'     = VRAI            ;

*   Option PERSO pour l'integration du COMPORTEMENT des PHASES
    TPASAP.'PRECISION'              = 1.D-8    ; COMM 'Critere Relatif';
    TPASAP.'PTOL'                   = 1.D-8    ; COMM 'Critere Absolu ';
    TPASAP.'NITERPHASE_MAX'         = 100      ; COMM 'Voir CHARTHER'  ;
    TPASAP.'IGNORE_NON_CONV'        = VRAI     ; COMM 'Voir CHARTHER'  ;

    PASAPAS TPASAP ;

************************************************************************
*   POST-TRAITEMENT
************************************************************************
*    LRTPSL= ('LOG' LTCAL) / ('LOG' 10);
    LRT   = TINI + ((TFIN - TINI) / DELTAt * (LTCAL - TPS0)) ;
    EVTPS = EVTPS  'ET' ('EVOL' 'MANU' 'Temp' LTCAL 'T' LRT) ;
    EVTPSP= EVTPSP 'ET' ('EVOL' 'MANU' 'Temp' LTCAL 'T' LRT) ;
    NBGRAPH                    = NBGRAPH + 1    ;
    TDESS2 . NBGRAPH           ='CHAI' 'TIRR'   ;
    TDESS2 . 'TITRE' . NBGRAPH ='CHAI' ('ENTI' 'PROC' VREFROI) ' C/s' ;

    LTPS ='VIDE' 'LISTREEL';

    TABPHA = TABTRC . II;
    REPE BLOC0 ('DIME' TPASAP.'TEMPS') ;
      I      = &BLOC0  - 1                     ;
      CHT    = TPASAP.'TEMPERATURES'      . I  ;
      CHPHA  = TPASAP.'PROPORTIONS_PHASES'. I  ;
      LTPS   = LTPS 'ET' (TPASAP.'TEMPS'  . I) ;

*     Extraction pour chaque phase de la valeur courante
      REPE SURPHA NBCOMP;
        IPH = &SURPHA;
        NOMP='EXTR' LISCOM IPH;
        Pi  ='EXTR' CHPHA NOMP 1 1 1 ;
        TABPHA . IPH = TABPHA . IPH 'ET' Pi;
      FIN SURPHA;
    FIN BLOC0 ;

*   Reconstitution des EVOL
    EVTOTa           ='VIDE' 'EVOLUTIO';
    TDESS1           ='TABL' ;
    TDESS1 . 'TITRE' ='TABL' ;
    REPE SURPHA NBCOMP;
      IPH          = &SURPHA;
      NOMP         ='EXTR' LISCOM IPH;
      Pi           ='EXTR' CHPHA NOMP 1 1 1 ;
      ICOUL        = @MOD  IPH NBCOUL;
      COUL1        ='EXTR' LESCOUL ICOUL;
      Lpi          = TABPHA. IPH ;
      TABPHA . IPH ='EVOL' COUL1 'MANU' 'TEMP' LTPS NOMP Lpi;
      EVTOTa       = EVTOTa 'ET' TABPHA . IPH ;
      TABPHA . IPH = TABPHA . IPH 'ET'
                   ('EVOL' COUL1 'MANU' 'T' LRT  NOMP Lpi);
      IMARQ        = @MOD   IPH NBMARQ;
      LAMAR        ='EXTR'  IMARQ LESMARQ;
      TDESS1 . IPH ='CHAI' 'MARQ' ' ' LAMAR ' ' 'REGU';
    FIN SURPHA;
    TDESS1 . 'TITRE' . 1 ='CHAI' '1-Metal de base';
    TDESS1 . 'TITRE' . 2 ='CHAI' '2-Martensite   ';
    TDESS1 . 'TITRE' . 3 ='CHAI' '3-Bainite      ';
    TDESS1 . 'TITRE' . 4 ='CHAI' '4-Ferrite      ';
    TDESS1 . 'TITRE' . 5 ='CHAI' '5-Austenite    ';
    'OPTI' 'TRAC' 'PSC';
    'DESS' EVTOTa 'LEGE' TDESS1 'TITR' TIT1;
    EVTPSP = EVTPSP 'ET' EVTOTa;
  FIN SURVIT;

* Construction des domaines par phases
  TSEUIL1 ='TABL';
  TSEUIL2 ='TABL';
  REPE SURPHA (NBCOMP - 1);
    IPH = &SURPHA;
    TSEUIL1 . IPH        ='TABL' ;
    TSEUIL1 . IPH.'Ltps' ='VIDE' 'LISTREEL';
    TSEUIL1 . IPH.'LT'   ='VIDE' 'LISTREEL';
    TSEUIL2 . IPH = TABL;
    TSEUIL2 . IPH.'Ltps' ='VIDE' 'LISTREEL';
    TSEUIL2 . IPH.'LT'   ='VIDE' 'LISTREEL';
  FIN SURPHA;

  Seuil1  = 5.D-3 ;
  REPE SURVIT NBVI;
    II     = &SURVIT    ;
    TABPHA = TABTRC . II;
    REPE SURPHA (NBCOMP - 1);
      IPH    = &SURPHA            ;
      NOMP   ='EXTR' LISCOM IPH   ;
      EVO1   = TABPHA . IPH       ;
      LTPS   ='EXTR' EVO1 'ABSC' 1;
      LT     ='EXTR' EVO1 'ABSC' 2;
      LPi    ='EXTR' EVO1 'ORDO' 1;

*     Definition des Seuil
*      Seuil2 = (('MAXI' LPi) * (1.D0 - Seuil1)) + (Seuil1 ** 2) ;
*      Seuil2 = ( 'MAXI' LPi) * (1.D0 - Seuil1) ;
      Seuil2 = ( 'MAXI' LPi) - Seuil1 ;

      SI (('MAXI' LPi) '>' Seuil1);
        tpsS1  ='IPOL' Seuil1 ('ORDO' LPi 'CROI')  LTPS ;
        TS1    ='IPOL' tpsS1          LTPS         LT   ;

        SI (TS1 '>' TFIN);
*         Si la phase en question apparait

*         Recherche de la fin d'apparition de la phase en question
          tpsS2='IPOL' Seuil2 ('ORDO' LPi 'CROI') LTPS ;
          TS2  ='IPOL' tpsS2          LTPS        LT   ;
          SI (TS2 '<' TS1);
            TSEUIL1. IPH.'Ltps' = TSEUIL1. IPH.'Ltps' 'ET' tpsS1;
            TSEUIL1. IPH.'LT'   = TSEUIL1. IPH.'LT'   'ET' TS1;
            TSEUIL2. IPH.'Ltps' = TSEUIL2. IPH.'Ltps' 'ET' tpsS2;
            TSEUIL2. IPH.'LT'   = TSEUIL2. IPH.'LT'   'ET' TS2;
          FINS;
        FINS;
      FINS;
    FIN SURPHA;
  FIN SURVIT;

  EVTPS3 ='VIDE' 'EVOLUTIO';
  TDESS3           ='TABL' ;
  TDESS3 . 'TITRE' ='TABL' ;
  NBGRA3 = 0 ;
  REPE SURPHA (NBCOMP - 1);
    IPH    = &SURPHA;
    NOMP   ='EXTR' LISCOM IPH    ;
    Ltsp1  = TSEUIL1 . IPH.'Ltps';
    ICOUL  = @MOD  IPH     NBCOUL;
    COUL1  ='EXTR' LESCOUL ICOUL ;
    SI (('DIME' Ltsp1) '>' 2);
*      Ltpslog1=('LOG' Ltsp1) / ('LOG' 10);
      LT1     = TSEUIL1 . IPH.'LT'       ;
      EVTPS   = EVTPS  'ET' ('EVOL' COUL1 'MANU' Ltsp1 LT1);
      EVTPS3  = EVTPS3 'ET' ('EVOL' COUL1 'MANU' Ltsp1 LT1);
      NBGRAPH = NBGRAPH + 1        ;
      NBGRA3  = NBGRA3  + 1        ;
      TDESS2 . 'TITRE' . NBGRAPH ='CHAI' NOMP ' Debut';
      TDESS3 . 'TITRE' . NBGRA3  ='CHAI' NOMP ' Debut';

      Ltsp2   = TSEUIL2 . IPH.'Ltps'     ;
*      Ltpslog2=('LOG' Ltsp2) / ('LOG' 10);
      LT2     = TSEUIL2 . IPH.'LT'       ;
      EVTPS   = EVTPS  'ET' ('EVOL' COUL1 'MANU' Ltsp2 LT2);
      EVTPS3  = EVTPS3 'ET' ('EVOL' COUL1 'MANU' Ltsp2 LT2);
      NBGRAPH = NBGRAPH + 1      ;
      NBGRA3  = NBGRA3  + 1        ;
      TDESS2 . 'TITRE' . NBGRAPH ='CHAI' NOMP ' Fin';
      TDESS3 . 'TITRE' . NBGRA3  ='CHAI' NOMP ' Fin';
    FINS;
  FIN SURPHA;

  'OPTI' 'SORT'  'TRC.csv'    ;
  'SORT' 'EXCE'   EVTPS            ;
  'OPTI' 'SORT'  'TRC_PHASES.csv';
  'SORT' 'EXCE'   EVTPSP              ;

  'OPTI' 'EPTR'   10          ;
  'OPTI' 'TRAC'  'PSC'        ;
   TIT1 = 'CHAI' 'Diagramme TRC';
  'DESS'  EVTPS  'LOGX' 'TITR' TIT1 'LEGE' TDESS2;
  'DESS'  EVTPS3 'LOGX' 'TITR' TIT1 'LEGE' TDESS3;

*  Pour fermer l'unité logique de TRACE
  'OPTI' 'FTRA' 'BIDON.ps'    ;

'FINP' ;
$$$$



