$$$$ BIF
* BIF       PROCEDUR  MAGN      15/07/27    21:15:02     8592

  debproc bif   rx*table                                            ;

* Operateur BIF
* -------------
*
* Description: The BIF operator computes the qdm and energy
*              interactions coefficients between a gas and a
*              'particles fluid'
*
* qdm:         Bif computes Kp and Kg. The terms Ip and Ig are
*              assembled via FROT.
*
*              Ig   : gas      qdm source term
*              Ip   : particle qdm source term
*              [Ig] = [Ip] = m/s^2 (force/unit mass)
*              Ig   = Kg * (Upart - Ugas)
*              Ip   = Kp * (Ugas  - Upart)
*              Kg   = Fd * alpha
*              Kp   = Fd * rhog / rhop
*              Fd   = (36/2) * nug * (1 + 0.150 * Re^0.681) /Dp^2
*
* energy:      Bif computes Hp and Hg. The terms Qp and Qg are
*              assembled via ECHI.
*
*              Qg   : gas      energy source term
*              Qp   : particle energy source term
*              [Qg] = [Qp] = K/s
*              Qg   = Hg * Volume * (Tpart - Tgas)
*              Qp   = Hp * Volume * (Tgas  - Tpart)
*              Hg   = H  * 6 * alpha / Dp / rhoCpg / Volume
*              Hp   = H  * 6 / Dp / rhoCpp / Volume
*              H    = Nu * lambdag / Dp
*
* Syntax (EQEX) :
*
*         BIF TABBIF

* tabbif           TABLE
* tabbif.'RHOF'    FLOTTANT Fluid density
* tabbif.'RHOP'    FLOTTANT Particle density
* tabbif.'DPART'   FLOTTANT Particle diameter
* tabbif.'NUF'     FLOTTANT Fluid kinematic viscosity
* tabbif.'ALPHA'   MOT     CHPOINT (SCAL SOMMET) in table INCO for alpha
* tabbif.'UFLUID'  MOT     CHPOINT (VECT SOMMET) in table INCO for Uflui
* tabbif.'UPART'   MOT     CHPOINT (VECT SOMMET) in table INCO for Upart
* tabbif.'KFLUID'  MOT     CHPOINT (VECT CENTRE) in table INCO for Kf
* tabbif.'KPART'   MOT     CHPOINT (VECT CENTRE) in table INCO for Kp
*
* The following only in case of thermal analysis
*
* tabbif.'HPART'   MOT     CHPOINT (SCAL CENTRE) in table INCO for Hp
* tabbif.'HFLUID'  MOT     CHPOINT (SCAL CENTRE) in table INCO for Hf
* tabbif.'LAMBDAF' FLOTTANT Fluid thermal conductivity
* tabbif.'ROCPF'   FLOTTANT Fluid thermal capacity (rho * Cp)
* tabbif.'ROCPP'   FLOTTANT Particle thermal capacity (rho * Cp)
* tabbif.'TGASN'   MOT     CHPOINT (SCAL SOMMET) in table INCO for Tgas
* tabbif.'TGASE'   MOT     CHPOINT (SCAL CENTRE) in table INCO for Tgas
* tabbif.'TPARTN'  MOT     CHPOINT (SCAL SOMMET) in table INCO for Tpart
* tabbif.'TPARTE'  MOT     CHPOINT (SCAL CENTRE) in table INCO for Tpart
*
* note: Bif checks the existence of tabbif.'HPART'
*       if tabbif.'HPART' exists         ====> computes Kp, Kg, Hp, Hg
*       if tabbif.'HPART' does not exist ====> computes Kg, Kp
*

* Reading the arguments

  tb      = rx.arg1                                                  ;
  nug     = tb.'NUF'                                                 ;
  Dp      = tb.'DPART'                                               ;
  uname   = tb.'UFLUID'                                              ;
  vname   = tb.'UPART'                                               ;
  aname   = tb.'ALPHA'                                               ;
  kfname  = tb.'KFLUID'                                              ;
  kpname  = tb.'KPART'                                               ;
  rop     = tb.'RHOP'                                                ;
  rog     = tb.'RHOF'                                                ;
  coef    = rog/rop                                                  ;
  rv      = rx.eqex                                                  ;
  ug      = rv.inco.uname                                            ;
  up      = rv.inco.vname                                            ;
  alpha   = rv.inco.aname                                            ;
  tdom    = rx.'DOMZ'                                                ;
* Reynolds

  ur      = kops up      '-'   ug                                    ;
  lcur    = extr ur 'COMP'                                           ;
  ur2     = ur lcur 'PSCA' ur lcur                                   ;
  urn     = kops ur2    '**'  0.5                                    ;
  Re      = kops urn     '*'  (Dp/nug)                               ;

* Fd

  Fd      = (kops 1.0 '+' (kops 0.150 '*' (kops Re '**' 0.687)))     ;
  Fd      =  kops Fd  '*' (18.0*nug/Dp/Dp)                           ;
* Fd      = 18.0*nug*(1.0+(0.150*(Re**0.687)))/(Dp*Dp)               ;

* Sf and Sp

  Sg      = kcht tdom scal sommet (Fd * alpha)                       ;
  Sp      = kcht tdom scal sommet (Fd * coef)                        ;

  Sgx     = nomc 'UX'     Sg                                         ;
  Sgy     = nomc 'UY'     Sg                                         ;
  Sgv     = Sgx et Sgy                                               ;
  Spx     = nomc 'UX'     Sp                                         ;
  Spy     = nomc 'UY'     Sp                                         ;
  Spv     = Spx et Spy                                               ;

  rv.inco.kfname = kcht tdom vect centre (noel tdom Sgv)             ;
  rv.inco.kpname = kcht tdom vect centre (noel tdom Spv)             ;

* Thermal analysis

  si (exist rx arg1 'HPART')                                         ;

* Reading the arguments for the thermal analysis

  hfname  = tb.'HFLUID'                                              ;
  hpname  = tb.'HPART'                                               ;
  lambdag = tb.'LAMBDAF'                                             ;
  rocpp   = tb.'ROCPP'                                               ;
  rocpg   = tb.'ROCPF'                                               ;
  tgnname = tb.'TGASN'                                               ;
  tgename = tb.'TGASE'                                               ;
  tpnname = tb.'TPARTN'                                              ;
  tpename = tb.'TPARTE'                                              ;

*   Prandtl and Nusselt

    Pr      = nug*rocpg/lambdag                                      ;

    Nu      = (kops Re '**' 0.5)                                     ;
    Nu      =  kops 2.0 '+' (kops (0.6*(Pr**0.333)) '*' Nu)          ;
*   Nu      = (2.0+(0.6*(Pr**0.333)*(Re**0.5)))                      ;

*   Heat transfer coefficient H

    H       = kops Nu '*' (lambdag / Dp)                             ;
    Hg      = kops H  '*' (kops alpha '*' (6.0/Dp/rocpg))            ;
    Hp      = kops H  '*'                 (6.0/Dp/rocpp)             ;

    rv.inco.Hfname = kcht tdom scal centre (noel tdom Hg)            ;
    rv.inco.Hpname = kcht tdom scal centre (noel tdom Hp)            ;

    rv.inco.tgename = noel tdom (rv.inco.tgnname)                    ;
    rv.inco.tpename = noel tdom (rv.inco.tpnname)                    ;

  finsi                                                              ;

 as2 ama1  = 'KOPS' 'MATRIK'                                         ;
 finproc as2 ama1                                                    ;



