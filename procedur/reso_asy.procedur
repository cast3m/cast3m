$$$$ RESO_ASY
* RESO_ASY  PROCEDUR  DELA      92/10/14    21:15:34     725
'DEBPROC'  RESO_ASY  RIGI_ASY*'RIGIDITE'  CHP_FORC*'CHPOINT '  ;
*--------------------------------------------------------------------*
*                                                                    *
*      Proc{dure de r{solution de matrice asym{trique.               *
*                                                                    *
*                        K * U  =  F                                 *
*                                                                    *
*      La rigidit{ RIGI_ASY est donn{e sous la forme d'un objet      *
*   RIGIDITE contenant des matrices sym{triques et des matrices      *
*   antisym{triques.                                                 *
*                                                                    *
*                          K  =  S  +  A                             *
*                                                     t              *
*              matrice sym{trique :  S = 0.5 * ( K + K )             *
*                                                                    *
*                                                     t              *
*          matrice antisym{trique :  A = 0.5 * ( K - K )             *
*                                                                    *
*                                                                    *
*   Donn{es :                                                        *
*   -------                                                          *
*      RIGI_ASY : objet de type RIGIDITE, contenant des matrices     *
*                 sym{triques et antisym{triques                     *
*      CHP_FORC : objet de type CHPOINT, le champ de force           *
*                                                                    *
*   Sortie :                                                         *
*   ------                                                           *
*      CHP_DEPL : objet de type CHPOINT, le champ de d{placement     *
*                                                                    *
*                                                                    *
*   Remarque :                                                       *
*   --------                                                         *
*      CASTEM2000 utilise un solveur sym{trique.                     *
*      Pour r{soudre ce type de probl}me, il faut que la matrice     *
*   sym{trique soit pr{dominant devant la matrice antisym{trique.    *
*                                                                    *
*                                                                    *
*   Auteur et date :                                                 *
*   ----------------                                                 *
*      L. VIVAN , le 12 juin 1991                                    *
*                                                                    *
*--------------------------------------------------------------------*
*
*   On s{pare les matrices {l{mentaires
*
MAT_SYME = 'EXTRAIRE'  RIGI_ASY  'SYME' ;
MAT_ANTI = 'EXTRAIRE'  RIGI_ASY  'ANTI' ;
*
CONV_OUI = FAUX ;
*
*   Nombre d'it{rations permises
*
NB_IT_PE = 30 ;
*
*   Crit}re de convergence
*
CRIT_CON = 1.E-6  ;
*
*   Initialisation de l'algorithme
*
CHP_DEPL = 'RESO'  MAT_SYME  CHP_FORC  ;
*
*   R{solution it{rative
*
CORRECTI = CHP_DEPL ;
II = 0 ;
'REPETER' BOUC_ITE NB_IT_PE ;
   II = II + 1 ;
   CHP_I = MAT_ANTI '*' CORRECTI ;
   CORRECTI = 'RESO' MAT_SYME ( -1.0 '*' CHP_I ) ;
   CHP_DEPL = CHP_DEPL '+' CORRECTI ;
   X_MIN = 'MAXI' 'ABS' CORRECTI ;
   'SI' ( X_MIN '<' CRIT_CON ) ;
      'MESSAGE' ' ' ;
      'MESSAGE' ' convergence apr}s' II 'it{rations' ;
      'MESSAGE' ' ' ;
      CONV_OUI = VRAI ;
      'QUITTER' BOUC_ITE ;
   'FINSI' ;
'FIN' BOUC_ITE ;
'SI' ( 'NON' CONV_OUI ) ;
   'MESSAGE' ' ' ;
   'MESSAGE' ' pas de convergence apr}s' II  'it{rations' ;
   'MESSAGE' ' ' ;
'FINSI' ;
*
'FINPROC' CHP_DEPL ;
