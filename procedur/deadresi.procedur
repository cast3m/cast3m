$$$$ DEADRESI
* DEADRESI  PROCEDUR  GOUNAND   18/10/24    21:15:02     9970
************************************************************************
* NOM         : DEADRESI
* DESCRIPTION : Le résidu à annuler (Huang)
*
*
*
* LANGAGE     : GIBIANE-CAST3M
* AUTEUR      : Stéphane GOUNAND (CEA/DEN/DM2S/SFME/LTMF)
*               mél : gounand@semt2.smts.cea.fr
**********************************************************************
* VERSION    : v1, 30/04/2007, version initiale
* HISTORIQUE : v1, 30/04/2007, création
* HISTORIQUE : 2018/01/22 : chgt nom composante hors diago G21 au lieu
*                           de G12
* HISTORIQUE : 2018/10/10 : NLINP au lieu de NLIN
* HISTORIQUE :
* HISTORIQUE :
************************************************************************
* Prière de PRENDRE LE TEMPS de compléter les commentaires
* en cas de modification de ce sous-programme afin de faciliter
* la maintenance !
************************************************************************
*
*
'DEBPROC' DEADRESI ;
'ARGUMENT' _mt*'MAILLAGE' ;
'ARGUMENT' gdisc*'MOT' ;
'ARGUMENT' methgau*'MOT' ;
'ARGUMENT' theta*'FLOTTANT' ;
'ARGUMENT' gamma*'FLOTTANT' ;
'ARGUMENT' dpdua*'LISTMOTS' ;
*
dpdis = gdisc ;
*
idim  = 'VALEUR' 'DIME' ;
vdim  = DEADUTIL 'DIMM' _mt ;
*
'ARGUMENT' met/'CHPOINT' ;
lmet = 'EXISTE' met ;
'SI' lmet ;
   'ARGUMENT' metdisc*'MOT' ;
'SINON' ;
   metdisc = 'CSTE' ;
'FINSI' ;
*
debloi = 'CHAINE' 'AHU' ;
ncmet  = '/' ('*' idim ('+' idim 1)) 2 ;
loi = 'CHAINE' debloi 'R' ;
*
'ARGUMENT' idir/'ENTIER' ;
'SI' ('EXISTE' idir) ;
   ldir = 'LECT' idir ;
'SINON' ;
   'ARGUMENT' ldir/'LISTENTI' ;
   'SI' ('NON' ('EXISTE' ldir)) ;
      ldir = 'LECT' 1 'PAS' 1 idim ;
   'FINSI' ;
'FINSI' ;
*
* Calcul du résidu
*
nldir = 'DIME' ldir ;
*
numop  = '*' nldir vdim ;
numder = vdim ;
numvar = 1 ;
numdat = 0 ;
numcof = 0 ;
*
   A = ININLIN numop numvar numdat numcof numder ;
   A . 'VAR' . 1 . 'NOMDDL' = 'MOTS' 'DUMM' ;
   A . 'VAR' . 1 . 'DISC'   = 'CSTE' ;
   A . 'VAR' . 1 . 'VALEUR' = 1.D0 ;
*
   numvar = idim ;
   numdat = '+' ncmet 2 ;
   numcof = '*' nldir vdim ;
   B = ININLIN numop numvar numdat numcof numder ;
   'REPETER' ivar numvar ;
      B . 'VAR' . &ivar . 'NOMDDL' = 'MOTS' ('EXTRAIRE' dpdua &ivar) ;
      B . 'VAR' . &ivar . 'DISC'   = dpdis ;
   'FIN' ivar ;
*
  idat = 0 ;
   'REPETER' idi idim ;
      nomdat = 'CHAINE' 'G' &idi &idi ;
*         'MESSAGE' ('CHAINE' 'nomdat=' nomdat) ;
      idat = '+' idat 1 ;
      B . 'DAT' . idat . 'NOMDDL' = 'MOTS' nomdat ;
      B . 'DAT' . idat . 'DISC'   = metdisc ;
      'SI' lmet ;
         B . 'DAT' . idat . 'VALEUR' = 'EXCO' nomdat met nomdat ;
      'SINON' ;
         B . 'DAT' . idat . 'VALEUR' = 1.D0 ;
      'FINSI' ;
   'FIN' idi ;
   'REPETER' idi idim ;
      nj = '-' idim &idi ;
*      'MESSAGE' ('CHAINE' 'nj=' nj) ;
      'SI' ('>EG' nj 1) ;
         'REPETER' jdi nj ;
* Mise en cohérence avec Castem
*            nomdat = 'CHAINE' 'G' &idi ('+' &idi &jdi) ;
            nomdat = 'CHAINE' 'G' ('+' &idi &jdi) &idi ;
*               'MESSAGE' ('CHAINE' 'nomdat=' nomdat) ;
            idat = '+' idat 1 ;
            B . 'DAT' . idat . 'NOMDDL' = 'MOTS' nomdat ;
            B . 'DAT' . idat . 'DISC'   = metdisc ;
            'SI' lmet ;
               B . 'DAT' . idat . 'VALEUR' = 'EXCO' nomdat met nomdat ;
            'SINON' ;
               B . 'DAT' . idat . 'VALEUR' = 0.D0 ;
            'FINSI' ;
         'FIN' jdi ;
      'FINSI' ;
   'FIN' idi ;
   lisdat = 'LECT' 1 'PAS' 1 'NPAS' ('-' numdat 1) ;
   idat = '+' idat 1 ;
   B . 'DAT' . idat . 'NOMDDL' = 'MOTS' 'DUMM' ;
   B . 'DAT' . idat . 'DISC'   = 'CSTE' ;
   B . 'DAT' . idat . 'VALEUR' = theta ;
   idat = '+' idat 1 ;
   B . 'DAT' . idat . 'NOMDDL' = 'MOTS' 'DUMM' ;
   B . 'DAT' . idat . 'DISC'   = 'CSTE' ;
   B . 'DAT' . idat . 'VALEUR' = gamma ;
*
   iop = 0 ;
   'REPETER' k nldir ;
      idir = 'EXTRAIRE' ldir &k ;
      'REPETER' l vdim ;
         iop = '+' iop 1 ;
         A . iop . 1 . 0  = 'LECT' ;
         nomloi = 'CHAINE' loi idir &l ;
*         'MESSAGE' ('CHAINE' 'Nomloi=' nomloi) ;
         B . 'COF' . iop . 'COMPOR' = nomloi ;
         B . 'COF' . iop . 'LDAT'   = lisdat ;
         B . iop . idir . &l  = 'LECT' iop ;
      'FIN' l ;
   'FIN' k ;
*
res = NLINP gdisc _mt A B 'EREF' methgau ;
*
'RESPRO' res ;
*
* End of procedure file DEADRESI
*
'FINPROC' ;




