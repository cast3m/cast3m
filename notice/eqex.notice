$$$$ EQEX     NOTICE  GOUNAND   18/08/24    21:15:01     9892
                                             DATE     18/08/24

     Operateur EQEX                          Voir aussi : NAVI EXEC
     --------------


Section : Multi-physique Multi-physique
Section : Fluides Modele

FRAN=================================================================


     Objet :
     _______

     Cree une TABLE contenant les informations necessaires a la solution
     solution explicite ou implicite d'une ou plusieurs E.D.P. effectuee
     par la procedure EXEC.

     Cette table est a completer par une table 'INCO' contenant les
     inconnues.

     On peut aussi ajouter des tables 'HIST' et 'INCO'.'HIST' pour
     sauvegarder des historiques.



     Syntaxe :
     _________


     RV = EQEX (RV)  -->--+
                          |
     +------<------<------+------<------<------<------<------+
     |                                                       |
     v   (OPTIONS APPLIQUEES AUX OPERATEURS PLACES APRES)    |
     |                                                       ^
     +---> ('OPTI' opt1 opt2 opt3 ...)  -->--+               |
                                             |               |
          +------<------<------<------<------+               |
          |                                                  ^
          v    (OPERATEUR QUI SERA APPELE A CHAQUE P.D.T)    |
          |                                                  |
          +---> 'ZONE' nomz 'OPER' nomo (arg1 arg2 ...) -->--+
          |                ('INCO' nom1 nom2 ...)            |
          ^                                                  v
          |                                                  |
          +-------<------<------<------<------<------<-------+
                                                             |
                                                             |
     +------<------<------<------<------<------<------<------+
     |
     v      (DEFINITION DES CONDITIONS AUX LIMITES)
     |
     +---> 'CLIM' inc1 comp1 mail1 val1 ...
                        ... inc2 comp2 mail2 val2 ...   -->--+
                                                             |
                                                             |
     +------<------<------<------<------<------<------<------+
     |
     +---> ('ITMA' itma) ('NITER' nite) --->---+
                                               |    (PARAMETRES
     +------<------<------<------<------<------+     TEMPORELS DE
     |                                               LA SIMULATION)
     +---> ('ALFA' alfa) ('OMEGA' omeg) --->---+
                                               |
                                               |
                                               v

                                   (autres directives parmi :
                                       DUMP  FIDT NISTO
                                       NOMVI TPSI TFINAL )


     Directive DUMP
     ==============
     Cette directive est utile pour la mise au point du jeu de donnees
     => on imprime le deroulement du decodage de EQEX


     Directive ITMA
     ==============
     itma (ENTIER) : nombre maximum de pas de temps (defaut 1)


     Directive ALFA
     ==============
     alfa (FLOTTANT) : tolerance (0. < alfa < 1.) sur le pas de temps
                       (defaut 1.)


     Directive FIDT
     ==============
     fidt (ENTIER) : frequence d'impression des pas de temps (defaut 20)


     Directive NISTO
     ===============
     nisto (ENTIER) : frequence de sauvegarde de l'historique d'une
     grandeur en un point dans la table RV.'HIST' (defaut 20)


     Directive NOMVI
     ===============
     nomvi (MOT) : nom du champ de vitesse servant au calcul de la
     pression pour l'algorithme semi-explicite (par defaut 'UN')


     Directive TPSI
     ==============
     tpsi (flottant) : temps initial


     Directive TFINAL
     ================
     tfinal (flottant) : temps final (defaut 1.e30)


     Directive NITER
     ===============
     niter (entier) : nombre d'iterations internes a un pas de temps
     pour resoudre une non linearite (defaut 1)


     Directive OMEGA
     ===============
     omega (flottant) : facteur de relaxation (0 < omega < 1) pour
     resoudre une non linearite (defaut 1.)


     Directive IMPR
     ==============
     impr (entier) : niveau global d'impression ecran (0 par defaut)


     Directive OPTI
     ==============
     Elle sert a preciser les options de tous les operateurs places
     dans les directives OPER situees apres

     LISTE DES OPTIONS
     -------------+------+---------------------------------------------
     Formulations | EFM1 | Elements finis sous integre + correction
                  |      | (a la Gresho) disponible uniquement dans
                  |      | l'algorithme semi explicite
                  | EF   | Elements finis Galerkin ou Petrov-Galerkin
                  | VF   | Volumes finis
     -------------+------+--+------------------------------------------
     Decentrement | CENTREE | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPGDC  | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPG    | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPGH   | uniquement EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | CNG     | uniquement EF      SEMI           2D/3D
                  | PSI     | uniquement operateur TSCA EFM1 EXPL 2D
                  | JOHNSON | uniquement operateur TSCA EFM1 EXPL 2D
                  | UPWIND  | uniquement VF EXPL 2D
                  | GODUNOV | uniquement VF EXPL 2D
                  | VANLEER | uniquement VF EXPL 2D
                  | VLH     | uniquement VF EXPL 2D
                  | HUSVL   | uniquement VF EXPL 2D
                  | HUSVLH  | uniquement VF EXPL 2D
                  | AUSM    | uniquement VF EXPL 2D
                  |         |
                  | CMD     | Coef. multiplicateur du decentrement
                  |         | uniquement pour SUPG,SUPGDC,SUPGH en EF
                  |         | Par defaut, la valeur est 0.2
     -------------+---------+----+-------------------------------------
     Formulation  | IMPL         | implicite
     temporelle   | EXPL         | explicite
                  | SEMI beta    | semi implicite  (0. < beta < 1.)
     (ne concerne | SEMI 0.5     | schema de Crank-Nicolson
      que DFDT)   | SEMI 0.5 CNG | Crank-Nicolson generalise (Donea)
                  | BDF2         | schema arriere en temps a 3 points
                  |              | ordre 2 (inconditionellement stable)
     -------------+---------+----+-------------------------------------
     Formulation  | CONS    | formulation conservative
     des termes   | NOCONS  | formulation non conservative
     de transport | NODIV   | le terme de stabilisation 1/2 T Div U est
                  |         | omis (non conservatif NOCONS seulement)
     (ne concerne |         |
      que KONV NS |         |
      NSKE TSCA)  |         |
     -------------+---------+------------------------------------------
     Formul. des  | MUVARI  | formulation en Laplacien Vecteur
     contraintes  | FTAU    | formulation en contrainte visqueuse
     visqueuses   | MUCONS  | les gradients de Viscosite sont negliges
                  |         | sur l'element (defaut)
     -------------+---------+-+----------------------------------------
     Support des  | INCOP spg | spg est a choisir dans la liste :
     inconnues    | INCOD spg |    SOMMET   FACE     CENTRE
     primales ou  |           |    CENTREP1 CENTREP0 MSOMMET
     duales       |           |
     -------------+-----------+----------------------------------------
     Type Matrice | MMPLEINE  | matrice masse consistante
     masse        | MMDIAGO   | matrice masse diagonale
                  | MMPG      | matrice masse Petrov-Galerkin
     -------------+-----------+----------------------------------------
     Modele de turbulence particulier RNG K-epsilon
                  | RNG       | uniquement pour NSKE EFM1 EXPLICITE
     -------------+-----------+----------------------------------------
     Formulation ALE pour l'operateur NS EFM1 EXPLICITE
                  | ALE       |
     -------------+-----------+----------------------------------------
     Formulation  | EULER     | mono-espece
     IDEUL (VF    | EULERMS   | multi-especes
     uniquement)  | EULERMST  | multi-especes "thermally perfect"
     -------------+-----------+----------------------------------------


     Directives ZONE et OPER
     =======================

     nomz : Objet MMODEL (type 'NAVIER_STOKES') ou table DOMAINE
            sur lequel va porter l'operateur

     nomo : Objet de type MOT donnant le nom de l'operateur de
            discretisation (ou de la PROCEDURe) a executer.
            A choisir dans la liste (nono exhaustive) ci-dessous :
            FIMP FPU FROT LAPN TSCA NS NSKE ECHI DFDT KONV MDIA ...

     arg1 arg2 ... : arguments de l'operateur (voir la notice de
                     l'operateur concerne)
            Les arguments lus sont places dans la table associee a
            l'operateur aux indices 'ARG1', 'ARG2', etc...

     nom1 nom2 ... : noms des indices dans la table des inconnues ou
                     se trouveront les inconnues sur lesquelles
                     l'operateur s'appuiera
            Cette table est a creer independemment et a placer dans la
            a l'indice 'INCO' de la table RV creee par EQEX
            Exemple :

            RV.'INCO'=TABLE 'INCO' ;
            RV.'INCO'.'UN'=KCHT $MA 'VECT' 'SOMMET' (0. 0.) (U1 ET U2) ;
            RV.'INCO'.'TN'=KCHT $MA 'SCAL' 'SOMMET' 1. T2 ;


     Directive CLIM
     ==============

     Cette directive permet de preciser ou de surcharger les conditions
     limites de type valeur imposee (Dirichlet) qui seront appliquees a
     chacune des inconnues.

     inc1 inc2 ... : MOT designant une inconnue qui doit deja figurer
                     dans une des listes nom1 nom2 ... et donc dans la
                     table 'INCO'

     comp1 comp2 ... : MOT precisant sur quelle composante appliquer
                       la condition limite, a choisir parmi :

                       UIMP=inconnue vectorielle, composante suivant Ox
                       VIMP=inconnue vectorielle, composante suivant Oy
                       WIMP=inconnue vectorielle, composante suivant Oz
                       TIMP=inconnue scalaire

     mail1 mail2 ... : MAILLAGE d'application de la condition à la
                       limite

     val1 val2 ... : valeurs attribuees, de type FLOTTANT ou CHPOINT



     Commentaires :
     ______________

     a) Si une table RV est specifiee derriere EQEX, elle sera completee
        ou modifiee par les instuctions suivantes (ceci permet de
        contourner la limitation GIBIANE sur la longueur d'une
        instruction).


     b) Pour chaque operateur (directive OPER) est creee une TABLE dont
        le nom est celui de l'operateur prefixe par le numero d'ordre de
        l'operateur. Cette table contient le nom de l'operateur, l'objet
        MAILLAGE sur lequel il porte, les arguments qu'on lui associe
        (indices 'ARG1', 'ARG2', etc...) et la liste des noms des
        inconnues sur lequel il porte.

        C'est cette TABLE qui est passee en argument a l'operateur ou a
        la procedure lors de son appel par EXEC. La TABLE RV y est
        situee a l'indice 'EQEX'.


     c) Un certain nombre de parametres generaux sont initialises
        par EQEX :

           ITMA=1
           FIDT=20  frequence d'impression des pas de temps
           ALFA=1.  coefficient de tolerance sur le pas de temps
                    (usuellement on peut prendre de 0.5 a 0.8)


     d) L'indice 'LISTOPER' de la table RV contient la liste des
        operateurs appeles, dans l'ordre ou ils sont appeles.


     e) POUR CREER DES HISTORIQUES :

        + EVOLUTION temporelle en un point d'une grandeur de RV.'INCO'

          Il faut rajouter dans RV une entree RV.'HIST' contenant une
          TABLE construite par l'operateur KHIS (voir la notice de cet
          operateur). La frequence de sauvegarde est definie grace a
          la directive NISTO.

        + Stockage des objets CHPOINT contenus dans RV.'INCO' pour
          differents pas de temps

          If faut creer une entree RV.'INCO'.'HIST' de type TABLE,
          contenant pour chaque grandeur a sauvegarder un objet LISTCHPO
          vide (operateurs SUIT ou VIDE) dont le nom est le meme que
          celui qui a ete defini dans la table 'INCO'.

          Il est aussi possible de sauvegarder le temps en creant un
          LISTREEL vide (operateurs PROG ou VIDE) a l'indice 'TPS' de
          RV.'INCO'.'HIST'

          Le premier pas de sauvegarde est indique a l'indice 'IDEB' de
          RV.'INCO'.'HIST' ; le dernier pas de temps est indique a
          l'indice 'IFIN' ; enfin, la frequence de sauvegarde est donnee
          par l'indice 'IPAS'.


     f) Une entree RV.'METHINV' (type TABLE) est automatiquement creee
        pour definir la methode de resolution de systeme qui sera
        utilisee. Par defaut, une resolution directe (robuste mais
        couteuse en memoire) de type Crout est utilisee. Il est possible
        de specifier une methode iterative de type gradient conjugue, a
        condition de bien SAVOIR ce que l'on fait.

        La syntaxe des entrees de la table RV.'METHINV' est explicitee
        dans la notice de l'operateur KRES.

        En sortie, RV.'METHINV'.'CONVINV' contient l'historique (type
        LISTREEL) de la norme du residu en fonction du nombre
        d'iterations.


     g) A tout instant, le CHPOINT contenant les conditions limites
        de type Dirichlet est stocke a l'indice RV.'CLIM'

ANGL=================================================================


     Description :
     _____________

     Creates a TABLE containing the data required for the explicit or
     implicit solution of one or several P.D.E. performed in the EXEC
     procedure.

     This table must contain a INCO table containing the unknowns.

     Tables 'HIST' and 'INCO'.'HIST' can also be added in order to
     store the history of the simulation.



     Syntax :
     ________


     RV = EQEX (RV)  -->--+
                          |
     +------<------<------+------<------<------<------<------+
     |                                                       |
     v      (OPTIONS APPLIED TO THE FOLLOWING OPERATORS)     |
     |                                                       ^
     +---> ('OPTI' opt1 opt2 opt3 ...)  -->--+               |
                                             |               |
          +------<------<------<------<------+               |
          |                                                  ^
          v (OPERATOR THAT WILL BE CALLED AT EVERY TIMESTEP) |
          |                                                  |
          +---> 'ZONE' nomz 'OPER' nomo (arg1 arg2 ...) -->--+
          |                ('INCO' nom1 nom2 ...)            |
          ^                                                  v
          |                                                  |
          +-------<------<------<------<------<------<-------+
                                                             |
                                                             |
     +------<------<------<------<------<------<------<------+
     |
     v      (DEFINITION OF THE BOUNDARY CONDITIONS)
     |
     +---> 'CLIM' inc1 comp1 mail1 val1 ...
                        ... inc2 comp2 mail2 val2 ...   -->--+
                                                             |
                                                             |
     +------<------<------<------<------<------<------<------+
     |
     +---> ('ITMA' itma) ('NITER' nite) --->---+
                                               |   (TIME PARAMETERS
     +------<------<------<------<------<------+    OF THE SIMULATION)
     |
     +---> ('ALFA' alfa) ('OMEGA' omeg) --->---+
                                               |
                                               |
                                               v

                                   (another keyword among :
                                       DUMP  FIDT NISTO
                                       NOMVI TPSI TFINAL )


     DUMP instruction
     ================
     This instruction is useful for checking out the set of data
     => the decoding flow of EQEX is printed


     ITMA instruction
     ================
     itma (ENTIER): specifies the maximum number of time steps
                    (default 1)


     ALFA instruction
     ================
     alfa (FLOTTANT): tolerance (0. < alfa < 1.) on the time step
                      (default 1.)


     FIDT instruction
     ================
     fidt (ENTIER): printing frequency of the time steps (default 20)


     NISTO instruction
     =================
     nisto (ENTIER): storage frequency of a particular unknown in
     RV.'HIST' (default 20)


     NOMVI instruction
     =================
     nomvi (MOT): name of velocity field used for the pressure
     computation in the semi explicite algorithm (default 'UN')


     TPSI instruction
     ================
     tpsi (FLOTTANT): initial computational time


     TFINAL instruction
     ==================
     tfinal (FLOTTANT): final computational time (default 1.e30)


     NITER instruction
     =================
     niter (INTEGER): internal iterations count needed to solve a non
     linearity (defaut 1)


     OMEGA instruction
     =================
     omega (FLOTTANT): relaxation factor (0. < omega < 1.)
                       (defaut 1.)


     IMPR instruction
     ================
     impr (ENTIER) : standard output global printing level (default 0)


     OPTI instruction
     ================
     It allows to precise the general options of all the operators
     placed after

     LIST OF OPTIONS
     -------------+------+---------------------------------------------
     Formulations | EFM1 | Finite Element (one point quadrature and
                  |      | Gresho-style correction) only available with
                  |      | the semi explicit algorithm
                  | EF   | Finite Element Galerkin or Petrov-Galerkin
                  | VF   | Finite Volume
     -------------+------+--+------------------------------------------
     Upwinding    | CENTREE | only with  EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPGDC  | only with  EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPG    | only with  EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | SUPGH   | only with  EF/EFM1 IMPL/EXPL/SEMI 2D/3D
                  | CNG     | only with  EF      SEMI           2D/3D
                  | PSI     | only with  operators TSCA EFM1 EXPL 2D
                  | JOHNSON | only with  operators TSCA EFM1 EXPL 2D
                  | UPWIND  | only with  VF EXPL 2D
                  | GODUNOV | only with  VF EXPL 2D
                  | VANLEER | only with  VF EXPL 2D
                  | VLH     | only with  VF EXPL 2D
                  | HUSVL   | only with  VF EXPL 2D
                  | HUSVLH  | only with  VF EXPL 2D
                  | AUSM    | only with  VF EXPL 2D
                  |         |
                  | CMD     | Tuning coefficient for upwinding
                  |         | Only SUPG,SUPGDC,SUPGH in EF are concerned
                  |         | Default value is 0.2
     -------------+---------+----+-------------------------------------
     Time         | IMPL         | implicit
     formulation  | EXPL         | explicit
                  | SEMI beta    | semi implicit   (0. < beta < 1.)
     (only DFDT   | SEMI 0.5     | Crank Nicolson scheme
     is concerned)| SEMI 0.5 CNG | generalized Crank Nicolson (Donea)
                  | BDF2         | Backward 3 points, second order, time
                  |              | integration (unconditionally stable)
     -------------+---------+----+-------------------------------------
     Transport    | CONS    | conservative form
     formulation  | NOCONS  | non conservative form
                  | NODIV   | the stabilisation term 1/2 T Div U is
     (only with   |         | omitted (non conservative form only)
      KONV NS     |         |
      NSKE TSCA)  |         |
                  |         |
     -------------+---------+------------------------------------------
     Viscous      | MUVARI  | corresponds to the 'Laplacian Vector'
     stresses     | FTAU    | formulation in viscous stress
     formulation  | MUCONS  | the viscosity gradients are neglected over
                  |         | the element (default)
     -------------+---------+-+----------------------------------------
     Underlying   | INCOP spg | spg has to be taken in the list below :
     spaces for   | INCOD spg |    SOMMET   FACE     CENTRE
     primal or    |           |    CENTREP1 CENTREP0 MSOMMET
     dual unknowns|           |
     -------------+-----------+----------------------------------------
     Mass Matrix  | MMPLEINE  | consistant mass matrix CM
     type         | MMDIAGO   | lumped (diagonal) mass matrix LM
                  | MMPG      | Petrov-Galerkin mass matrix
     -------------+-----------+----------------------------------------
     Turbulence model RNG K-epsilon
                  | RNG       | only with NSKE EFM1 EXPL
     -------------+-----------+----------------------------------------
     ALE formulation for operator NS EFM1 EXPL
                  | ALE       |
     -------------+-----------+----------------------------------------
     IDEUL        | EULER     | mono-species
     formulation  | EULERMS   | multi-species
     (VF only)    | EULERMST  | "thermally perfect" multi-species
     -------------+-----------+----------------------------------------


     ZONE and OPER instructions
     ==========================

     nomz : MMODEL object (type NAVIER-STOKES) or DOMAINE table on
            which the operator will apply

     nomo : MOT type object, name of the discretization operator (or of
            the PROCEDURe) to be executed. Chosen for instance among the
            list below :
            FIMP FPU FROT LAPN TSCA NS NSKE ECHI DFDT KONV MDIA ...

     arg1 arg2 ... : operator arguments (see the operator manual)
            Once read, the arguments are stored in the table associated
            with the operator in the reading order at the 'ARG1' 'ARG2'
            etc... indices

     nom1 nom2 ... : names of indices in the table of unknowns
                     containing the unknowns on which the operator will
                     apply
            This table will have to be created separately and stored at
            the 'INCO' index in the RV table created by EQEX
            Example :

            RV.'INCO'=TABLE 'INCO' ;
            RV.'INCO'.'UN'=KCHT $MA 'VECT' 'SOMMET' (0. 0.) (U1 ET U2) ;
            RV.'INCO'.'TN'=KCHT $MA 'SCAL' 'SOMMET' 1. T2 ;


     CLIM instruction
     ================

     This instruction makes it possible to specify the boundary
     conditions of imposed value type (Dirichlet) that will be applied
     to each unknown.

     inc1 inc2 ... : MOT referring to an unknown that must already be
                     included in a list nom1 nom2 ... thus in the 'INCO'
                     table

     comp1 comp2 ... : is a keyword specifying the component on which
                       the condition will be applied, chosen from :

                       UIMP = vectorial unknown according to Ox
                       VIMP = vectorial unknown according to Oy
                       WIMP = vectorial unknown according to Oz
                       TIMP = scalar unknown

     mail1 mail2 ... : mesh (MAILLAGE type) where the boundary condition
                       is applied

     val1 val2 ... : specified values, of type FLOTTANT or CHPOINT



     Commentaires :
     ______________

     a) If a table RV is specified behind EQEX this table will be
        augmented/modified by the following parameters. It allows to
        circumvent the limit upon the instruction length in GIBIANE.


     b) A table is created for each operator (OPER instruction) ; its
        name is that of the operator preceded by the number of order of
        the operator. This table contains the name of the operator, the
        MAILLAGE object on which it applies, the parameters which are
        associated with it ('ARG1' 'ARG2' ... indices ) and the list of
        the names of unknowns on which it applies.

        This TABLE is passed as an argument to the operateur or the
        procedure whenever it is called from EXEC. The RV TABLE is
        available at the 'EQEX' index.


     c) Some general parameters are initialized by EQEX :

           ITMA=1
           FIDT=20  frequence d'impression des pas de temps
           ALFA=1.  tolerance coefficient on the time step
                    (usually 0.5 to 0.8)


     d) The 'LISTOPER' index contains the list of the operators called,
        in the order in which they are called.


     e) IN ORDER TO STORE THE HISTORY OF THE SIMULATION :

        + temporal EVOLUTION at a given point of an unknown in RV.'INCO'

         You must add an RV.'HIST' entry containing a TABLE constructed
         by the KHIS operator (refer to this operator manual). The
         storage frequency is specified thanks to the NISTO instruction.

        + Storage of CHPOINT objects contained in RV.'INCO' for certain
          time steps

          You must create an entry RV.'INCO'.'HIST' (TABLE type) which
          contains an empty LISTCHPO (SUIT or VIDE operators) named as
          in the 'INCO' table, for each unknown that you want to store.

          It is possible to save also the time step by creating an empty
          LISTREEL (PROG or VIDE operators) placed at the 'TPS' index
          of RV.'INCO'.'HIST'

          The first saved time step is defined by the 'IDEB' index in
          RV.'INCO'.'HIST' ; the last one is defined by 'IFIN' ; at last
          the step with which data is recorded comes from 'IPAS'.


     f) An entry of TABLE type is automatically created in RV.'METHINV'
        It defines the inversion method used to solve linear systems.
        The default is a direct solver (Crout) which is robust but
        memory-consuming. It is possible to use an iterative solver
        (conjugate gradient alike) instead, but you NEED to know what
        you are doing.

        The RV.'METHINV' TABLE syntax is described in help of the KRES
        operator.

        RV.'METHINV'.'CONVINV' outputs the residual norm history
        (LISTREEL type object) as a function of the number of
        iterations performed.


     g) At any time, the CHPOINT containing the boundary conditions of
        Dirichlet type is available at the RV.'CLIM' index

$$$$



