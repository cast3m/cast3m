$$$$ EXIS     NOTICE  AM        17/09/25    21:15:05     9566
                                             DATE     17/09/25

    Operateur EXISTE                         Voir aussi : TABL DANS
    ----------------

    LOG1(,LOG2,...) =  EXISTE  |  NOM1                            |  ;
                               |  TAB1     OBJ1                   |
                               |  OBJ1     OBJ2                   |
                               |  %        OBJ2                   |
                               |  CH1      MOT1                   |
                               |  CH1      OBJ1                   |
                               |  LMOTS1 | MOT1                |  |
                               |         | LMOTS2  ('ET'/'OU') |  |
                               |  LENTI1   ENTI1                  |
                               |  LREEL1   FLOT1   (FLOT2)        |
                               |  SOL1     'CONT'                 |
                               |  NUAG1    MOT1                   |
                               |  CHAR1  | MOT1          |        |
                               |         | 'LIBR'/'LIE ' |        |
                               |  MODL1    MOT1     MOT2          |



Section : Langage Base

FRAN==========================================================
    Objet :
    _______

    L'operateur EXISTE permet de verifier l'existence d'objets.


    Commentaires :
    ______________

    Dans tous les cas qui suivent, LOG1(,LOG2,...) sont des  objets de
    type LOGIQUE valant VRAI si l'existence est averee, FAUX sinon.


    1)  Lorsqu'un unique argument NOM1 est present, l'operateur permet
        de savoir si un objet portant un tel nom existe.

        ATTENTION : on estime qu'un objet n'EXISte pas seulement s'il
                    est de type 'ANNULE'. En effet, tout nom NOM1 non
                    attribue est vu comme un objet existant de type MOT.


    2)  Dans le cas d'une table TAB1 (type TABLE), il permet de savoir
        si l'indice OBJ1 de la table existe (type ENTIER, FLOTTANT, MOT,
        LOGIQUE, PROCEDUR...).


    3)  Dans le cas d'un OBJET OBJ1, il permet se savoir si l'indice
        OBJ2 existe. A l'interieur d'une methode s'appliquant sur
        l'objet, % remplace le nom de l'objet.


    4)  Dans le cas d'un champ CH1 (type CHPOINT ou MCHAML), il permet
        de savoir si la composante de nom MOT1 (type MOT) existe.
        Dans le cas d'un champ CH1 (type MCHAML), il permet de savoir
        si une zone s'appuie sur l'objet OBJ1 (type MAILLAGE ou
        MMODEL). La verification porte aussi sur le constituant et
        la phase pour le type MMODEL.


    5)  Dans le cas d'une liste de mots LMOTS1 (type LISTMOTS), il
        permet de savoir si le mot MOT1 (type MOT) existe. On peut
        aussi fournir une seconde liste de mots a rechercher LMOTS2
        (type LISTMOTS). Dans ce cas, LOG1 est VRAI si TOUS les mots de
        LMOTS2 sont dans LMOTS1 (mot-cle 'ET') ou bien si AU MOINS UN
        des mots de LMOTS2 est trouve dans LMOTS1 (mot-cle 'OU'). En
        l'absence de mot-cle, on sort autant d'objets LOG1, LOG2, ...
        qu'il y a de mots a tester dans LMOTS2.


    6)  Dans le cas d'une liste d'entiers LENTI1 (type LISTENTI), il
        permet de savoir si l entier ENTI1 (type ENTIER) existe.


    7)  Dans le cas d'une liste de reels LREEL1 (type LISTREEL), il
        permet de savoir si le reel FLOT1 (type FLOTTANT) existe. Il
        est possible de fournir la tolerance FLOT2 (type FLOTTANT)
        utilisee pour tester les egalites entre nombres reels.


    8)  Dans le cas d'un objet SOL1 (type SOLUTION), il permet de savoir
        si les contraintes (mot-cle 'CONT') sont incluses.


    9)  Dans le cas d'un objet NUAG1 (type NUAGE), il permet de savoir
        si le mot MOT1 (type MOT) est un nom de composante du NUAGE.


    10) Dans le cas de CHAR1 (type CHARGEMENT), il permet de savoir si
        le mot MOT1 (type MOT) est le nom d'un chargement elementaire,
        ou bien s'il existe des sous-objets CHARGEMENT de nature libre
        (mot-cle 'LIBRE') ou liee (mot-cle 'LIE') dans CHAR1.


    11) Dans le cas d'un objet MODL1 (type MMODEL), les deux arguments
        MOT1 et MOT2 (type MOT) permettent de savoir :

        a) S'il existe des zones du MMODEL correspondant a une
           formulation donnee. Dans ce cas MOT1 est alors 'FORM' et
           MOT2 est un ou plusieurs mots definissant la formulation.

        b) S'il existe des zones du MMODEL correspondant a un ou
           plusieurs constituants donnes. Dans ce cas MOT1 est alors
           'CONS' et MOT2 est un ou plusieurs mots definissant les
           constituants.

        c) S'il existe des zones du MMODEL correspondant a un ou
           plusieurs elements finis donnes. Dans ce cas MOT1 est alors
           'ELEM' et MOT2 est un ou plusieurs mots definissant les
           elements finis.

        d) S'il existe des zones elementaires du MMODEL dont la liste
           de mots qui definit le comportement du materiau contient
           le(s) mot(s) MOT2. Pour cela, on specifiera 'MATE' pour MOT1.

        e) S'il existe des zones du MMODEL correspondant a une
           mise en oeuvre non locale donnee. Dans ce cas MOT1
           est alors 'NON_LOCAL' et MOT2 est un mot définissant
           la mise en oeuvre non locale.



ANGL==========================================================
    Description :
    _____________

    The EXISTE operator checks the existence of various objects.


    Contents :
    __________

    In any of the cases below, LOG1(,LOG2,...) are logical values (type
    LOGIQUE) which equal to VRAI (true) when the existence is verified,
    FAUX (false) otherwise.


    1)  Whenever a single parameter NOM1 is provided, the operator
        checks whether an object with such a name exists.

        CAUTION : an object is considered not to exist only if its type
                  is 'ANNULE'. Indeed, any name NOM1 which has not been
                  allocated yet is seen as an existing MOT-typed object.


    2)  For a TAB1 table (TABLE type), it allows to know whether the
        table index OBJ1 exists (type ENTIER, FLOTTANT, MOT, LOGIQUE,
        PROCEDUR...).


    3)  For an object OBJ1 (OBJET type), it allows to know whether the
        object index OBJ2 exists. Inside a method acting on the object,
        % replaces the name of the OBJET.


    4)  For a CH1 field (CHPOINT or MCHAML type), it makes possible to
        know whether a component named MOT1 (type MOT) exists.
        For a CH1 field (MCHAML type), it makes possible to
        know whether a area is included in the OBJ1 (MAILLAGE or
        MMODEL type). The constituent and phase are also checked in the
        MMODEL type.


    5)  For a list of words LMOTS1 (LISTMOTS type), it allows to know
        whether the word MOT1 (type MOT) exists. Several searches can
        be performed at one time by providing a second list of words
        LMOTS2. In this case, LOG1 is true if ALL the words of LMOTS2
        are also in LMOTS1 (keyword 'ET') or if AT LEAST ONE of the
        words of LMOTS2 is found in LMOTS1 (keyword 'OU'). If no
        keyword is specified, there will be as many returned objects
        LOG1, LOG2, ... as there are words in LMOTS2.


    6)  For a list of integers LENTI1 (LISTENTI type), it enables the
        user to know whether the integer ENTI1 (type ENTIER) exists.


    7)  For a list of reals LREEL1 (LISTREEL type), it enables the user
        to know whether the real number FLOT1 (type FLOTTANT) exists. It
        is possible to set the tolerance FLOT2 (type FLOTTANT) used for
        the test.


    8)  For a SOLUTION SOL1 object, it allows to know whether the
        stresses (keyword 'CONT') are included in the object.


    9)  For a NUAGE object, it enables the user to know whether the word
        MOT1 (type MOT) is a component name of the NUAGE object.


    10) For a CHARGEMENT object, it allows to know whether the word MOT1
        (type MOT) is an elementary loading (sub-object) of CHAR1, or
        whether any of the them is of the free (keyword 'LIBRE') or
        linked (keyword 'LIE') type.


    11) For a MMODEL MODL1 object, the two MOT-typed parameters MOT1
        and MOT2 make it possible to check :

        a) If some regions of the MMODEL correspond to a given
           formulation. In that case, MOT1 is 'FORM' and MOT2 is one or
           several words defining the formulation.

        b) If some regions of the MMODEL correspond to one or several
           given constituents. In that case, MOT1 is 'CONS' and MOT2
           is one or several words defining the constituents.

        c) If some regions of the MMODEL correspond to one or several
           given finite elements. In that case, MOT1 is 'ELEM' and MOT2
           is one or several words defining the finite elements.

        d) If among the list of words that defines the material
           behaviour of each region of the MMODEL, one contains the
           word(s) MOT2. To this purpose MOT1 will be 'MATE'.

        e) If some regions of the MMODEL correspond to a given
           non local implementation. In that case, MOT1 is 'NON_LOCAL'
           and MOT2 is one word defining the non local implementation.








