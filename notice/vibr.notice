$$$$ VIBR     NOTICE  BP208322  17/10/03    21:16:57     9580
                                             DATE     17/10/03

    Operateur VIBRATION                      Voir aussi : VIBC,DIAG
    -------------------

                      |'PROCHE'     ... |
    SOL1 = VIBRATION  |'INTERVALLE' ... |   RIG1 MASS1  (AMO1) ...
                      |'SIMULTANE'  ... |
                      |'IRAM'       ... |

                       ...  ('IMPR')  (LOG1) ;


Section : Mathematiques Autres
Section : Dynamique Dynamique

FRAN==========================================================
    Objet :
    _______

    L'operateur VIBRATION recherche les valeurs propres w et les modes
propres X d'un systeme physique represente par :
 - sa rigidite K
 - sa masse M
 - son amortissement C (uniquement possible avec l'option IRAM)

Autrement dit, il resoud :
   [K - (2*pi*w)**2 M] X = 0
     ou
   [K + (2*j*pi*w)*C - (2*pi*w)**2 M] X = 0


    Commentaire :
    _____________

    SOL1         : objet resultat contenant les valeurs et les modes
                   propres (de TYPE TABLE).

    RIG1         : matrice de rigidite K du systeme physique
                   (type RIGIDITE, sous-type RIGIDITE)

    MASS1        : matrice de masse du M systeme physique
                   (type RIGIDITE, sous-type MASSE)

    AMO1         : matrice d'amortissement C du systeme physique
                   (type RIGIDITE, sous-type AMORTISS)

    'IMPR'       : mot-cle indiquant que l'on veut des impressions
                   intermediaire

    LOG1         : indique quel traitement adopter pour les valeurs
                   propres negatives (type LOGIQUE, par defaut VRAI).
                   - si VRAI, pour lambda = (2*pi*w)**2  negatif,
                     la frequence propre retournee sera :
                     sign(lambda)*|w|
                   - si FAUX, la frequence retournee sera : |w|


    Suivant le mot-cle ('PROCHE', 'INTERVALLE', 'SIMULTANE', ou 'IRAM'),
    la recherche des modes propres est effectuee de plusieurs manieres :


    --------------------------------------------------------------------
    |                1ere possibilite  :   'PROCHE'                    |
    --------------------------------------------------------------------

ANGL==========================================================
    Description :
    _____________

    The VIBRATION operator searches for the eigenvalues w and eigenmodes
X of a physical system represented by :
- its stiffness K,
- its mass M,
- its damping C (only avaiblable with IRAM option)

Then it solves :
   [K - (2*pi*w)**2 M] X = 0
     or
   [K + (2*j*pi*w)*C - (2*pi*w)**2 M] X = 0


    Contents :
    __________

    SOL1         : generated object containing the eigen values and
                   eigen modes (TABLE TYPE)

    RIG1         : physical system stiffness matrix K
                   (RIGIDITE type, RIGIDITE subtype)

    MASS1        : physical system mass matrix M
                   (RIGIDITE type, MASSE subtype)

    AMO1         : physical system dampnig matrix C
                   (RIGIDITE type, AMORTISS subtype)

    'IMPR'       : key word indicating that intermediate printings
                   are requested

    LOG1         : indicates what to do with negative eigenvalues
                   (LOGIQUE type, VRAI by default)
                   - If VRAI, for a negative lambda = (2*pi*w)**2 found,
                     the returned frequency if : sign(lambda)*|w|
                   - If FAUX, the returned frequency if : |w|


    The search for the eigen modes is carried out differently according
    to the key word ('PROCHE', 'INTERVALLE', 'SIMULTANE', or 'IRAM') :


    --------------------------------------------------------------------
    |                 1st possibility :   'PROCHE'                     |
    --------------------------------------------------------------------

==========================================================

    SOL1 = VIBRATION 'PROCHE' LREEL1 ( LENTI1 ) RIG1 MASS1 ;

FRAN==========================================================
    L'option 'PROCHE' correspond a la methode des iterations inverses
sur sous-espace. Cet algorithme robuste peut s'averer couteux
lorsqu'un tres grand nombre de modes est recherche.
    Pour chaque reel FREQ de LREEL1 (type LISTREEL) et pour chaque
entier N de LENTI1 ( type LISTENTI ) on recherche les N  modes propres
dont les frequences sont les plus proches de FREQ. Les listes doivent
donc etre de meme taille !


    --------------------------------------------------------------------
    |              2eme possibilite  :   'INTERVALLE'                  |
    --------------------------------------------------------------------

ANGL==========================================================
    The option 'PROCHE' corresponds to the subspace inverse iteration
method. This algorithm is robust but can become costly when a large
number of modes are sought.
    For each real FREQ from LREEL1 (LISTREEL type) and each integer N
from LENTI1 ( LISTENTI type ) the N eigenvectors which frequencies are
the closest to FREQ are computed. This lists must have the same length.


    --------------------------------------------------------------------
    |               2nd possibility :   'INTERVALLE'                   |
    --------------------------------------------------------------------

==========================================================
                                               |'BASSE'|
    SOL1 = VIBRATION 'INTERVALLE' FLOT1 FLOT2 (|       | N1)
                                               |'HAUTE'|

                                  RIG1  MASS1 ( 'MULT' )


FRAN==========================================================
    L'option 'INTERVALLE' correspond a la methode de la bissection. Cet
algorithme se revele generalement tres couteux par rapport aux autres.
    On recherche les modes propres dont les frequences sont contenues
dans l'intervalle [FLOT1,FLOT2]. FLOT1 et FLOT2 sont de type FLOTTANT.
    On peut limiter la recherche aux N1 (type ENTIER) plus basses
(option 'BASSE') ou hautes (option 'HAUTE') frequences dans
l'intervalle donne. Les modes multiples peuvent etre obtenus avec
l'option 'MULT'.


    --------------------------------------------------------------------
    |              2eme possibilite  :   'SIMULTANE'                   |
    --------------------------------------------------------------------

ANGL==========================================================
    The option 'INTERVALLE' corresponds to the bissection method. This
algorithm is usually very costly compared to the others.
    The eigen modes which frequencies are contained in the
 (FLOT1,FLOT2) interval are requested. FLOT1 and FLOT2 are of
 FLOTTANT type.
    The search may be restricted to the N1 (ENTIER type) lowest
 frequencies ('BASSE' option) or highest frequencies ('HAUTE' option)
 in the given interval. Multiple eigenvectors could be found with
the 'MULT' option.


    --------------------------------------------------------------------
    |               3rd possibility :   'INTERVALLE'                   |
    --------------------------------------------------------------------

==========================================================
    SOL1 = VIBRATION 'SIMULTANE' FLOT1 N1 RIG1 MASS1 ;

FRAN==========================================================
    L'option 'SIMULTANE' correspond a la methode de Lanczos avec re-
orthogonalisation. Cet algorithme est particulierement efficace
lorsqu'un tres grand nombre de modes est recherche.
    On recherche une serie de N1 (type ENTIER) modes propres dont les
frequences sont voisines d'une valeur FLOT1 (type FLOTTANT).


    --------------------------------------------------------------------
    |                4eme possibilite  :   'IRAM'                      |
    --------------------------------------------------------------------

ANGL==========================================================
    The option 'SIMULTANE' corresponds to the Lanczos method with re-
orthogonalization. This algorithm is quite efficient when a large
number of modes are sought.
    A sequence of N1 (ENTIER type) eigen modes whose frequencies are
 close to a FLOT1 value (FLOTTANT type) is requested.


    --------------------------------------------------------------------
    |                 4th possibility :   'IRAM'                       |
    --------------------------------------------------------------------

==========================================================
    SOL1 = VIBRATION 'IRAM' FLOT1 N1 RIG1 MASS1 (AMO1) (MOTRI);

FRAN==========================================================

    L'option 'IRAM' correspond à la méthode d'Arnoldi avec redémarrage
implicite.

La librairie libre ARPACK (Copyright (c) 1996-2008 Rice University.
Developed by D.C. Sorensen, R.B. Lehoucq, C. Yang, and K. Maschhoff.
All rights reserved.) est utilisee.
Cette dernière utilise également les libraires LAPACK ET BLAS.

Elle permet de traiter différents types de problèmes :
  - Hermitiens et non-Hermitiens
  - Linéaires ou quadratiques

On recherche une serie de N1 (type ENTIER) modes propres dont les
frequences sont voisines d'une valeur FLOT1 (type FLOTTANT).


    MOTRI : MOT correspondant à l'option de tri utilisée pour les
            valeurs propres. A choisir parmi :

         'LM' - Extraction des modes avec les valeurs propres les plus
         proches - en module - de du décalage spectral (option par
         défaut)

         'SM' - Extraction des modes avec les valeurs propres les plus
         éloignées du décalage spectral

         'LR' - Extraction des modes avec les valeurs propres à la plus
         grande partie réélle

         'SR' - Extraction des modes avec les valeurs propres à la plus
         petite partie réélle

         'LI' - Extraction des modes avec les valeurs propres à la plus
         grande partie imaginaire

         'SI' - Extraction des modes avec les valeurs propres à la plus
          petite partie imaginaire

         'LA' - Extraction des modes avec les valeurs propres les plus
          grandes (algébrique)

         'SA' - Extraction des modes avec les valeurs propres les plus
         petites (algébrique)

         'BE' - Extraction des modes avec des valeurs propres de chaque
          coté de la valeur de décalage spectral


ANGL==========================================================
    The option 'IRAM' corresponds to the Implicitly Restarted Arnoldi
Method.

    The free library ARPACK (Copyright (c) 1996-2008 Rice University.
Developed by D.C. Sorensen, R.B. Lehoucq, C. Yang, and K. Maschhoff.
All rights reserved.) is used for the computation.

The librairies LAPACK and BLAS are also used.

Different problems can be solved :
 - Hermitian / Non Hermitian
 - Linear / Quadratic

A sequence of N1 (ENTIER type) eigen modes whose frequencies are
close to a FLOT1 value (FLOTTANT type) is requested.

    MOTRI : MOT corresponding to the filter which is used to select
            eigenpairs. It can be:

         'LM' - Select the eigenpairs with eigenvalues which are
         the closest - in modulus - to the shift (default)

         'SM' - Select the eigenpairs with eigenvalues which are
         the farthest to the shift

         'LR' - Select the eigenpairs with eigenvalues which have
         the biggest real part

         'SR' - Select the eigenpairs with eigenvalues which have
         the smallest real part

         'LI' - Select the eigenpairs with eigenvalues which have
         the biggest imaginary part

         'SI' - Select the eigenpairs with eigenvalues which have
         the smallest imaginary part

         'LA' - Select the eigenpairs with eigenvalues which are
         the biggest (in algebraic)

         'SA' - Select the eigenpairs with eigenvalues which are
         the smallest (in algebraic)

         'BE' - Select the eigenpairs with eigenvalues which are
         at both ends


FRAN==========================================================


REMARQUES:
_________

  1.    Les frequences seront calculees dans une unite coherente avec
        celles utilisees pour le calcul des matrices en arguments de
        VIBR.


  2.    Structure de l'objet SOL1 avec le mot cle 'TBAS' en fonction
        de la nature des modes propres (paires reelles ou complexes) :


        ----------------------- PAIRES REELLES -----------------------

        SOL1 objet de type TABLE
        SOL1.'SOUSTYPE' = 'BASE_MODALE'
        SOL1.'MODES' = TAB2  (objet de type TABLE)
          TAB2.'SOUSTYPE' = 'BASE_DE_MODES'
          TAB2.'MAILLAGE' = MAIL1
            MAIL1 : support geometrique des modes (type MAILLAGE)
          TAB2.IMOD = TAB3 (objet de type TABLE)
            IMOD  : nombre (ENTIER) variant de 1 au nombre de modes
                    calcules
            TAB3.'SOUSTYPE' = 'MODE'
            TAB3.'POINT_REPERE' = PT1
               PT1   : POINT servant a reperer le  mode
            TAB3.'NUMERO_MODE' = NUMOD
               NUMOD : ENTIER numero du mode
            TAB3.'FREQUENCE' = FLOT1
               FLOT1 : FLOTTANT valeur de la frequence propre
            TAB3.'MASSE_GENERALISEE' = FLOT2
               FLOT2 : FLOTTANT valeur de la masse generalisee
            TAB3.'DEFORMEE_MODALE' = CH1
               CH1   : vecteur propre (CHPOINT)
            TAB3.'DEPLACEMENTS_GENERALISES' = TAB4 (objet de type TABLE)
               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
               TAB4.1 = FLOT3
               TAB4.2 = FLOT4
               TAB4.3 = FLOT5
               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur du
               deplacement generalise dans la direction X (resp. Y et Z)


        ----------------------- PAIRES COMPLEXES -----------------------

        SOL1 objet de type TABLE
        SOL1.'SOUSTYPE' = 'BASE_MODALE'
        SOL1.'MODES' = TAB2  (objet de type TABLE)
          TAB2.'SOUSTYPE' = 'BASE_DE_MODES'
          TAB2.'MAILLAGE' = MAIL1
             MAIL1 : support geometrique des modes (type MAILLAGE)
          TAB2.IMOD = TAB3 (objet de type TABLE)
            IMOD  : nombre (ENTIER) variant de 1 au nombre de modes
                    calcules
            TAB3.'SOUSTYPE' = 'MODE'
            TAB3.'POINT_REPERE' = PT1
               PT1   : POINT servant a reperer le  mode
            TAB3.'NUMERO_MODE' = NUMOD
               NUMOD : ENTIER numero du mode
            TAB3.'FREQUENCE_REELLE' = FLOT1
               FLOT1 : FLOTTANT valeur de la partie reelle de la
                       frequence propre
            TAB3.'MASSE_GENERALISEE_REELLE' = FLOT2
               FLOT2 : FLOTTANT valeur de la partie reelle de la masse
                       generalisee
            TAB3.'DEFORMEE_MODALE_REELLE' = CH1
               CH1   : vecteur propre (CHPOINT)
            TAB3.'DEPLACEMENTS_GENERALISES_REELS' = TAB4 (objet de type TABLE)
               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
               TAB4.1 = FLOT3
               TAB4.2 = FLOT4
               TAB4.3 = FLOT5
               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur de la
                     partie reelle du deplacement generalise dans la
                     direction X (resp. Y et Z)
            TAB3.'FREQUENCE_IMAGINAIRE' = FLOT1
               FLOT1 : FLOTTANT valeur de la partie imaginaire de la
                       frequence propre
            TAB3.'MASSE_GENERALISEE_IMAGINAIRE' = FLOT2
               FLOT2 : FLOTTANT valeur de la partie imaginaire de la
                       masse generalisee
            TAB3.'DEFORMEE_MODALE_IMAGINAIRE' = CH1
               CH1   : vecteur propre (CHPOINT)
            TAB3.'DEPLACEMENTS_GENERALISES_IMAGINAIRES' = TAB4 (objet
                                                          de type TABLE)
               TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
               TAB4.1 = FLOT3
               TAB4.2 = FLOT4
               TAB4.3 = FLOT5
               FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT valeur de la
                 partie imaginaire du deplacement generalise dans la
                 direction X (resp. Y et Z)


ANGL==========================================================


REMARKS:
________

  1. The frequencies are computed with a unity which is consistent with
     respects to the input parameters of VIBR


  2. SOL1 structure with the key word 'TBAS' depending on the nature of
     the solution (real or complex eigenpairs):


        ----------------------- REAL EIGENPAIRS -----------------------

        SOL1 TABLE type object
        SOL1.'SOUSTYPE' = 'BASE_MODALE'
        SOL1.'MODES' = TAB2  (TABLE type object)
           TAB2.'SOUSTYPE' = 'BASE_DE_MODES'
           TAB2.'MAILLAGE' = MAIL1
              MAIL1 : modes geometrical support (MAILLAGE type)
           TAB2.IMOD = TAB3 (TABLE type object)
              IMOD  : number (ENTIER) varying from 1 to the number of
                      calculated modes
              TAB3.'SOUSTYPE' = 'MODE'
              TAB3.'POINT_REPERE' = PT1
                 PT1   : POINT used to identify the mode
              TAB3.'NUMERO_MODE' = NUMOD
                 NUMOD : ENTIER number of the mode
              TAB3.'FREQUENCE' = FLOT1
                 FLOT1 : FLOTTANT eigenfrequency value
              TAB3.'MASSE_GENERALISEE' = FLOT2
                 FLOT2 : FLOTTANT generalized mass value
              TAB3.'DEFORMEE_MODALE' = CH1
                 CH1   : eigenvector (CHPOINT)
              TAB3.'DEPLACEMENTS_GENERALISES' = TAB4 (TABLE type object)
                 TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
                 TAB4.1 = FLOT3
                 TAB4.2 = FLOT4
                 TAB4.3 = FLOT5
                 FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT value of
              the generalized displacement in the direction X
              (resp. Y and Z)


        ---------------------- COMPLEX EIGENPAIRS ----------------------

        SOL1 TABLE type object
        SOL1.'SOUSTYPE' = 'BASE_MODALE'
        SOL1.'MODES' = TAB2  (TABLE type object)
           TAB2.'SOUSTYPE' = 'BASE_DE_MODES'
           TAB2.'MAILLAGE' = MAIL1
              MAIL1 : modes geometrical support (MAILLAGE type)
           TAB2.IMOD = TAB3 (TABLE type object)
              IMOD  : number (ENTIER) varying from 1 to the number of
                      calculated modes
              TAB3.'SOUSTYPE' = 'MODE'
              TAB3.'POINT_REPERE' = PT1
                 PT1   : POINT used to identify the mode
              TAB3.'NUMERO_MODE' = NUMOD
                 NUMOD : ENTIER number of the mode
              TAB3.'FREQUENCE_REELLE' = FLOT1
                 FLOT1 : FLOTTANT real part of the eigenfrequency value
              TAB3.'MASSE_GENERALISEE_REELLE' = FLOT2
                 FLOT2 : FLOTTANT real part of the generalized mass value
              TAB3.'DEFORMEE_MODALE_REELLE' = CH1
                 CH1   : real part of the eigenvector (CHPOINT)
              TAB3.'DEPLACEMENTS_GENERALISES_REELS' = TAB4 (TABLE type
                                                            object)
                 TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
                 TAB4.1 = FLOT3
                 TAB4.2 = FLOT4
                 TAB4.3 = FLOT5
                 FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT value of the
                   real part of the generalized displacement in the
                   direction X (resp. Y and Z)
              TAB3.'FREQUENCE_IMAGINAIRE' = FLOT1
                 FLOT1 : FLOTTANT imaginary part of the eigenfrequency
                         value
              TAB3.'MASSE_GENERALISEE_IMAGINAIRE' = FLOT2
                 FLOT2 : FLOTTANT imaginary part of the generalized mass
                         value
              TAB3.'DEFORMEE_MODALE_IMAGINAIRE' = CH1
                 CH1   : imaginary part of the eigenvector (CHPOINT)
              TAB3.'DEPLACEMENTS_GENERALISES_IMAGINAIRES' = TAB4 (TABLE
                                                            type object)
                 TAB4.'SOUSTYPE' = 'DEPLACEMENTS_GENERALISES'
                 TAB4.1 = FLOT3
                 TAB4.2 = FLOT4
                 TAB4.3 = FLOT5
                 FLOT3, (resp. FLOT4 et FLOT5) : FLOTTANT value of the
                   imaginary part of the generalized displacement in the
                   direction X (resp. Y and Z)






