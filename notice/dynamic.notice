$$$$ DYNAMIC  NOTICE  MB234859  17/10/02    21:15:09     9577
                                             DATE     17/10/02

    Procedure DYNAMIC                       Voir aussi : DYNE  PASAPAS
    -----------------

    TAB2 = DYNAMIC TAB1 ;


Section : Mecanique Dynamique

FRAN==========================================================
    Objet :
    _______

    Cette procedure permet d'effectuer un calcul dynamique pas a pas.

    Elle peut utiliser les algorithmes :
    - Newmark centre (schema de l'acceleration moyenne) (par defaut)
    - HHT
    - alpha-generalise

    Les arguments d'entree et de sortie de la procedure sont des tables
    definies ci-apres.


    Commentaire :
    _____________


    +----------------------------------------------------------+
    | TAB1 : Objet de type TABLE contenant les donnes d'ENTREE |
    +----------------------------------------------------------+

      DONNEES DU PROBLEME
      ###################

      TAB1 . 'DEPL'   : deplacement initial     [CHPOINT]
      TAB1 . 'VITE'   : vitesse initiale        [CHPOINT]
      TAB1 . 'CHAR'   : chargement              [CHARGEME]
      TAB1 . 'RIGI'   : raideur                 [RIGIDITE]
      TAB1 . 'MASS'   : masse                   [RIGIDITE]
    ( TAB1 . 'AMOR' ) : amortissement           [RIGIDITE]


      TEMPS DE CALCUL
      ###############

      TAB1 . 'TEMPS_CALCULES' : [LISTREEL] strictement croissant
                                contenant tous les instants de
                                calcul (dont l'instant initial)


      PARAMETRES DE SAUVEGARDE
      ########################

      SORTIE GIBIANE
      --------------

    | TAB1 . 'PAS_SAUVES'       : [ENTIER] indiquant la cadence de la
    |                             sauvegarde ou [MOT] valant 'TOUS' ou
 OU |                             'FINAL' (par defaut, on conserve 1
    |                             pas de temps sur 4)
    | TAB1 . 'TEMPS_SAUVES'     : [LISTREEL] des instants a sauver

    ( TAB1 . 'MAILLAGE_SAUVE' ) : [MAILLAGE] pouvant etre fourni pour
                                  limiter le support geometrique des
                                  donnees sauvegardees

    ( TAB1 . 'SAUV' ) : VRAI si l'on souhaite SAUVER a chaque pas
                        de maniere incrementale dans le fichier
                        a definir prealablement par la commande :
                        "OPTI 'SAUV' nomfic ;"

    ( TAB1 . 'ECON' ) : VRAI si l'on souhaite FANTomiser les resultats
                        sauvegardes sur disque


      SORTIE VTK (PARAVIEW) => OPTIONNELLE
      ---------------------

    | TAB1 . 'PAS_SAUVES_VTK'   : idem ci-dessus
 OU | TAB1 . 'TEMPS_SAUVES_VTK'   (par defaut : aucune sortie VTK)

      TAB1 . 'MAILLAGE_VTK'     : objet [MAILLAGE] ou [TABLE] passe a
                                  l'operateur SORT 'VTK' definissant la
                                  ou les geometries a sauvegarder
                                  (seulement si l'un des 2 indices
                                   ci-dessus est present)

    ( TAB1 . 'FICHIER_VTK' )    : [MOT] indiquant l'emplacement ou
                                  seront ecrits les fichiers VTK
                                  Beaucoup de fichiers peuvent etre
                                  crees => on recommande de les placer
                                  dans un sous-repertoire (par defaut,
                                  tout est dans le dossier courant)


      SORTIE CSV (TABLEUR) => OPTIONNELLE
      --------------------

    | TAB1 . 'PAS_SAUVES_CSV'   : idem ci-dessus
 OU | TAB1 . 'TEMPS_SAUVES_CSV'   (par defaut : aucune sortie CSV)

      TAB1 . 'MAILLAGE_CSV'     : objet [MAILLAGE] contenant les noeuds
                                  ou seront enregistrees les donnees
                                  (seulement si l'un des 2 indices
                                   ci-dessus est present)

    ( TAB1 . 'COMPOSANTES_CSV' ): [LISTMOTS] des composantes a conserver
                                  (par defaut, on conserve toutes les
                                   composantes disponibles)

    ( TAB1 . 'FICHIER_CSV' )    : [MOT] indiquant l'emplacement ou
                                  sera cree le fichier CSV (par defaut,
                                  on n'ecrit rien sur le disque)


      APPEL A DES PROCEDURES SPECIFIQUES
      ##################################

    ( TAB1 . 'CHARMECA' ) : VRAI si appelle la procedure CHARMECA
                            definie par ailleurs par l'utilisateur et
                            qui renvoie une table TCHAR avec un ou
                            plusieurs indices parmi :

                              'ADDI_MATRICE' => ajout a l'operateur
                              'ADDI_SECOND'  => ajout au second membre
                                                (composantes FLX)
                              'ADDI_KNL'     => ajout a la raideur
                              'ADDI_CNL'     => ajout a l'amortissement
                              'ADDI_FNL'     => ajout au second membre
                                                (composantes hors FLX)

    ( TAB1 . 'VITEUNIL' ) : correction des vitesses lors d'un impact
                            (VRAI par defaut, seulement possible avec
                             le schema de Newmark acceleration moyenne)


      SCHEMA D'INTEGRATION TEMPORELLE => OPTIONNEL
      ###############################

    | TAB1 . 'ALPHA_F'  : active le schema HHT et donne son parametre
    |                     \alpha
 OU |
    | TAB1 . 'RHO_INF'  : active le schema alpha-generalise et donne
    |                     son parametre \rho^{\intfy} (rayon spectral
    |                     a l'infini)



    +-----------------------------------------------------------------+
    | TAB2 : Objet de type TABLE (aussi stocke dans TAB1.'RESULTATS') |
    |        contenant les objets GIBIANE sauvegardes a chaque pas de |
    |        temps demande                                            |
    +-----------------------------------------------------------------+

      TAB2 . I . 'TEMP' : temps        [FLOTTANT]
      TAB2 . I . 'DEPL' : deplacement  [CHPOINT]
      TAB2 . I . 'VITE' : vitesse      [CHPOINT]



    +-----------------------------------------------------------------+
    | Un objet de type TABLE est stocke dans TAB1.'RESULTATS_CSV'     |
    | contenant autant de LISTREEL que de grandeurs demandees dans la |
    | sortie CSV (ainsi qu'un LISTREEL pour le temps)                 |
    +-----------------------------------------------------------------+



ANGL==========================================================
    Description :
    ____________

    This procedure enables the user to carry out a step by step
    dynamic analysis.

    It uses one of the algorithm:

    - the average acceleration Newmark method
    - the HHT scheme
    - the alpha-generalized algorithm

    The input and output arguments for this procedure are tables
    described below.


    Contents :
    _________


    +----------------------------------------------------+
    | TAB1 : TABLE type object containing the INPUT data |
    +----------------------------------------------------+

      DATA OF THE MECHANICAL PROBLEM
      ##############################

      TAB1 . 'DEPL'   : initial displacement    [CHPOINT]
      TAB1 . 'VITE'   : initial velocity        [CHPOINT]
      TAB1 . 'CHAR'   : loading                 [CHARGEME]
      TAB1 . 'RIGI'   : stiffness               [RIGIDITE]
      TAB1 . 'MASS'   : mass                    [RIGIDITE]
    ( TAB1 . 'AMOR' ) : damping                 [RIGIDITE]


      COMPUTATION TIMES
      #################

      TAB1 . 'TEMPS_CALCULES' : [LISTREEL] in strictly ascending order
                                containing the time steps to be computed
                                (including the initial time)


      STORAGE CONFIGURATION
      #####################

      GIBIANE OUTPUT
      --------------

    | TAB1 . 'PAS_SAUVES'   : integer N ([ENTIER] type, 4 by default)
    |                         indicating that 1 timestep out of N
    |                         will be kept or the [MOT] 'TOUS' for all
 OR |                         timesteps or the [MOT] 'FINAL' for only
    |                         the last one
    | TAB1 . 'TEMPS_SAUVES' : [LISTREEL] of the times to be stored

    ( TAB1 . 'MAILLAGE' )   : [MAILLAGE] object which may be used to
                              restrict the geometrical support of the
                              saved data

    ( TAB1 . 'SAUV' ) : VRAI if each step has to be saved (by SAUVER
                        command) incrementally in the file previously
                        defined by the command : "OPTI 'SAUV' nomfic ;"

    ( TAB1 . 'ECON' ) : VRAI in order to erase the saved results
                        from the memory space (FANT operator)


      VTK OUTPUT (PARAVIEW) => OPTIONAL
      ---------------------

    | TAB1 . 'PAS_SAUVES_VTK'
 OU |                           : see above (default : no VTK output)
    | TAB1 . 'TEMPS_SAUVES_VTK'

      TAB1 . 'MAILLAGE_VTK'     : [MAILLAGE] or [TABLE] type object
                                  directly passed to the SORT 'VTK'
                                  operator defining which geometries
                                  must be stored (only when one of the
                                  two indexes above are present)

    ( TAB1 . 'FICHIER_VTK' )    : [MOT] indicating the folder where
                                  VTK files will be written => it is
                                  recommended to use a sub-folder (by
                                  default all the files are placed in
                                  the active folder)


      CSV OUTPUT (SPREADSHEET) => OPTIONAL
      ------------------------

    | TAB1 . 'PAS_SAUVES_CSV'
 OU |                           : see above (default : no VTK output)
    | TAB1 . 'TEMPS_SAUVES_CSV'

      TAB1 . 'MAILLAGE_CSV'     : [MAILLAGE] type object containing
                                  the nodes where data is recorded
                                  (only when one of the two indexes
                                   above are present)

    ( TAB1 . 'COMPOSANTES_CSV' ) : [LISTMOTS] of the components of
                                   interest (by default all the
                                   available components are kept)

    ( TAB1 . 'FICHIER_CSV' )    : [MOT] indicating the folder where
                                  the CSV file will be written (by
                                  default no CSV file is created)


      CALL TO EXTERNAL PROCEDURES
      ###########################

    ( TAB1 . 'CHARMECA' ) : VRAI if the CHARMECA procedure has to be
                            called. The user must then define it so
                            that it gives back a table TCHAR with at
                            least one index among :

                            'ADDI_MATRICE' => added to main matrix
                            'ADDI_SECOND'  => added to R.H.S.
                                              (FLX components)
                            'ADDI_KNL'     => added to stiffness matrix
                            'ADDI_CNL'     => added to damping matrix
                            'ADDI_FNL'     => added to R.H.S.
                                              (except FLX components)

    ( TAB1 . 'VITEUNIL' ) : correction of the velocities when an impact
                            occurs (VRAI by default, only possible with
                            the Newmark average acceleration scheme)


      TEMPORAL INTEGRATION SCHEME
      ###########################

    | TAB1 . 'ALPHA_F'  : activates the HHT scheme and provides its
    |                     \alpha parameter
 OU |
    | TAB1 . 'RHO_INF'  : activates the alpha-generalise scheme and
    |                     provides its \rho^{\intfy} parameter (rayon
    |                     spectral a l'infini)



    +-------------------------------------------------------------+
    | TAB2 : TABLE type object (also stored in TAB1.'RESULTATS')  |
    |        containing the GIBIANE objects saved for each of the |
    |        required timesteps                                   |
    +-------------------------------------------------------------+

      TAB2 . I . 'TEMP' : time          [FLOTTANT]
      TAB2 . I . 'DEPL' : displacement  [CHPOINT]
      TAB2 . I . 'VITE' : velocity      [CHPOINT]



    +------------------------------------------------------------------+
    | A TABLE type object is stored in TAB1.'RESULTATS_CSV' containing |
    | as many LISTREEL as required for the CSV output (as well as a    |
    | LISTREEL for time)                                               |
    +------------------------------------------------------------------+

$$$$


