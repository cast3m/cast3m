$$$$ CHAN     NOTICE  BP208322  18/04/04    21:15:01     9796
                                             DATE     18/04/04

    Operateur CHANGER                        Voir aussi :


Section : Langage Objets
Section : Langage Caracteres

FRAN==========================================================
    Cet operateur permet de changer un attribut ou le type d'un objet.
    Sa syntaxe generale est la suivante :

ANGL==========================================================
    This operator can change an attribute or the type of an object.
    Its general syntax is the following :

==========================================================
    OBJET1 = CHAN (MOT1) OBJET2 (OBJET3)(OBJET4) (OBJET..) (MOT2) (MOT3);

FRAN==========================================================
PART{Tableau de synthese des options}

ANGL==========================================================
PART{Options summary table}

==========================================================
+-----------+------------+----------+----------+-------------+---------+
|           |            |          |          |             |         |
|  OBJET1   |  MOT1      | OBJET2   | OBJET3   |    MOT2     | MOT3    |
|           |            |          |          |             |         |
+-----------+------------+----------+----------+-------------+---------+
|  MAILLAGE | (TYPE)     | MAILLAGE  (LISTENTI)                        |
------------------------------------------------------------------------
|  CHPOINT  |  'CHPO'    | CHPOINT  | (MMODEL)                         |
|  CHPOINT  |  'CHPO'    | MCHAML   |  MMODEL  | ('MOYE')              |
|                                              | ('SOMM')              |
|                                              | ('SUPP')              |
------------------------------------------------------------------------
|  CHPOINT  | 'ATTRIBUT' | CHPOINT  |          |'NATURE'    | 'INDETER'|
|                                                           | 'DIFFUS' |
|                                                           | 'DISCRET'|
------------------------------------------------------------------------
|  CHPOINT  | 'COMP'     | CHPOINT  | MOT1              |  ...         |
|                                   | LISTMOT1 LISTMOT2 |              |
|                                         ...  | ( 'NATU' | 'INDETER'  |
|                                                         | 'DIFFUS'   |
|                                                         | 'DISCRET') |
------------------------------------------------------------------------
|  CHPOINT  | 'TITR'     | CHPOINT  | MOT1                             |
------------------------------------------------------------------------
|  MCHAML   | 'NOEUD'    | MCHAML   | MMODEL                           |
|           | 'GRAVITE'  |                                             |
|           | 'RIGIDITE' |                                             |
|           | 'MASSE'    |                                             |
|           | 'STRESSES' |                                             |
------------------------------------------------------------------------
|  MCHAML   | 'CHAM'     | MCHAML   | MMODEL   | ('NOEUD')   | (TYP1)  |
|                        | CHPOINT  | MMODEL   | ('GRAVITE') |         |
|                                              | ('RIGIDITE')|         |
|                                              | ('MASSE'   )|         |
|                                              | ('STRESSES')|         |
|  MCHAML   | 'CHAM'     | CHPOINT  | MAILLAGE                         |
------------------------------------------------------------------------
|  MCHAML   | 'COMP'     | MOT1              | CHE1                    |
|                        | LISTMOT1 LISTMOT2 |                         |
------------------------------------------------------------------------
|  MCHAML   |  'TYPE'    | MCHAML   |          |   TYP1                |
------------------------------------------------------------------------
|  MCHAML   |  'CONS'    | MCHAML   |          |   MOT1                |
------------------------------------------------------------------------
|  MMODEL   |  'CONS'    | MMODEL   |          |   MOT1                |
------------------------------------------------------------------------
|  MATRIK   |  'INCO'    |  MATRIK  | LMOT1  LMOT2  LMOT3  LMOT4       |
------------------------------------------------------------------------
|  RIGIDITE |  'INCO'    | RIGIDITE | LMOT1  LMOT2  LMOT3  LMOT4  ...  |
|                                   |             'COMPL'              |
|            ...  | ('SYME') |                                         |
|                 | ('ANTI') | ('MULT')                                |
|                 | ('QUEL') |                                         |
------------------------------------------------------------------------
|  RIGIDITE | 'TYPE'     |  RIGIDITE |         |   MOT1                |
------------------------------------------------------------------------
|  RIGIDITE | 'DEPE'     |  RIGIDITE                                   |
------------------------------------------------------------------------
| RIG1 RIG2 | 'COND'     | RIGIDITE                                    |
------------------------------------------------------------------------
|  CHARGEME | 'TABL'     | CHARG1  MOT1      |                         |
------------------------------------------------------------------------
|  MOT      | 'MAJU'     | MOT               |                         |
|           | 'MINU'     |                                             |
------------------------------------------------------------------------
|  EVOLUTIO | 'TITR'     | EVOL1    |   -    | MOT1                    |
|           | 'LEGE'     |          |  (k)   |                         |
|           | 'NOMABS'   |          |  (k)   |                         |
|           | 'NOMORD'   |          |  (k)   |                         |
------------------------------------------------------------------------

FRAN==========================================================

PART{Resultat de type MAILLAGE}

   -----------------> pour changer le type d'élément

     GEO2 = CHAN (TYPE) GEO1 (LENTI1) ;

   L'operateur CHAN construit un MAILLAGE GEO2 equivalent au MAILLAGE
   GEO1, mais forme d'elements du type demande TYPE (type MOT). Par
   defaut, on prend le type courant (cf OPTION).
   Si GEO1 est constitue d'elements quadratiques pour les fluides
   (complets) , TYPE peut prendre une des valeurs suivantes 'TRI3',
   'QUA4', 'TET4', 'PYR5', 'CUB8'.

   Si on donne pour TYPE le mot 'LIGNE', le maillage resultat est
   constitue uniquement de lignes.
   Si on donne pour TYPE le mot 'SURFACE', le maillage resultat est
   constitue uniquement d'elements triangulaires ou quadrangulaires,
   correspondant aux facettes des elements de GEO1.
   Si on donne pour TYPE le mot 'LINEAIRE' chaque element quadratique
   est remplace par un element lineaire.
   Si on donne pour TYPE le mot 'QUADRATIQUE' chaque element lineaire
   est remplace par un element quadratique.
   Si on donne pour TYPE le mot 'QUAF' chaque element 'QUADRATIQUE' est
   remplace par un element quadratique pour les fluides c'est a dire
   complet : TRI6 -> TRI7, QUA8 -> QUA9 CU20 -> CU27 etc.

   LENTI1  : Connectivite a etablir (type LISTENTI). GEO1 doit être de
             type POI1. GEO2 sera constitue d'autant d'elements que de
             N-uplets de connectivite dans LENTI1.


PART{Resultat de type CHPOINT}

   -----------------> a partir d'un MCHAML

    CHP2 = CHAN  'CHPO'  MODL1 CHAM1 ( 'MOT1' );

   En presence du mot cle 'CHPO', l'operateur CHAN construit le CHPOINT
   CHPO2 a partir d'un nouveau champ par element CHAM1 (type MCHAML).

   Ce CHPOINT sera appuye sur les noeuds du maillage, sous-jacent au
   modele MODL1 (type MMODEL), en calculant :
   - la moyenne des valeurs aux noeuds des elements adjacents
     si MOT1 est egal a 'MOYE' (option par defaut),
   - ou la somme des contributions de chaque element aux noeuds
     si MOT1 vaut 'SOMM'.
   Ces valeurs aux noeuds sont determinees soit par extrapolation a
   partir des valeurs connues a l'interieur de l'element en cas de
   champ de sous-type SCALAIRE, en utilisant une methode de moindres
   carres et les fontions de forme de l'element, soit par moyenne
   directe de ces valeurs pour les champs de tout autre type.
   Le CHPOINT resultat est de nature diffuse.

   Si MOT1 vaut 'SUPP', alors le CHPOINT cree sera appuye sur les points
   d'integration supportant le MCHAML. Aucune extrapolation n'intervient
   alors dans son calcul.


   -----------------> pour changer la TITRE d'un CHPOINT

    CHP2 = CHANGER  'TITRE' CHP1 MOT1 ;


   En presence du mot cle 'TITRE' l'operateur CHANGER cree un champ
   de point (type CHPOINT) CHP2 identique a CHP1 mais dont le titre
   a ete change en MOT1 (72 caracteres maxi.)



   -----------------> pour changer la NATURE d'un CHPOINT

    CHP2 = CHANGER  'ATTRIBUT' CHP1  'NATURE'    | 'INDETER'  |
                                                 | 'DIFFUS'   |
                                                 | 'DISCRET'  | ;


   En presence du mot cle 'ATTRIBUT' l'operateur CHANGER cree un champ
   de point (type CHPOINT) CHP2 identique a CHP1 mais dont les attributs
   peuvent etre modifies par les autres mots cles de la commande
   (par exemple 'NATURE' et 'DIFFUS' ).
   Il est conseille de respecter la position des termes de la commande.


   -----------------> pour changer les noms de COMPosante d'un CHPOINT

    CHPO2 = CHAN 'COMP' | MOT1              | CHPO1 ('NATU' |'INDETER'
                        | LISTMOT1 LISTMOT2 |               |'DIFFUS'
                                                            |'DISCRET');

   En presence du mot-cle 'COMP' l operateur cree un nouveau champ par
   points en changeant eventuellement le nom de certaines composantes.

   Le champ par elements ne doit comporter qu'un constituant.
   On utilise la syntaxe specifiant un mot dans les cas ou le champ par
   points, ou le champ par elements, possede une composante. Dans les
   autres cas, on precise la liste des composantes a renommer selon une
   seconde liste.

    CHPO1   : champ par points (type CHPOINT)
    MOT1    : nouveau nom attribue a la composante (type MOT)
    LISMOT1 : liste des composantes a renommer (type LISTMOTS)
    LISMOT2 : liste des nouvelles composantes (type LISTMOTS)
    CHPO2   : objet resultat (type CHPOINT)

   Remarques :

    1. Les noms de composantes font 4 caracteres.

    2. La liste LISMOT1 des composantes a remplacer dans CHPO1 peut
       n'etre qu'une sous-liste de la liste de toutes les composantes
       de CHPO1. La i-eme composante de LISMOT1 sera remplacee par la
       i-eme composante de LISMOT2 (ces deux listes doivent avoir la
       meme longueur, celle-ci etant inferieure ou egale au nombre de
       composantes).


PART{Resultat de type MCHAML}

   -----------------> pour changer le support d'un MCHAML

    CHAM2 = CHAN  | 'NOEUD'    |  MODL1  CHAM1 (TYP1) ;
                  | 'GRAVITE'  |
                  | 'RIGIDITE' |
                  | 'MASSE'    |
                  | 'STRESSES' |

   En presence  de l'un  des  mots-cles  'NOEUD', 'GRAVITE', 'RIGIDITE',
   'MASSE', 'STRESSES', l'operateur CHAN construit a partir du champ par
   element CHAM1 (type MCHAML) et d'un objet modele MODL1 (type MMODEL),
   un champ par  element CHAM2 de  meme type que  CHAM1 (ou de type TYP1
   (type MOT)) appuye respectivement aux noeuds, aux centres de gravite,
   aux points d'integration de  la raideur, aux points  d'integration de
   la  masse  aux points  de calcul  des  contraintes  des  elements. On
   utilise pour cela une methode  de moindres carres et les fonctions de
   forme de l'element.


   -----------------> a partir d'un CHPOINT

    CHAM1 = CHAN  'CHAM'  CHPO1  | GEO1  ;
                                 | MODL1 | ('NOEUD')  ) | (TYP1) ;
                                         | ('GRAVITE' ) |
                                         | ('RIGIDITE') |
                                         | ('MASSE'   ) |
                                         | ('STRESSES') |

   En presence du mot-cle 'CHAM', l'operateur CHAN cree un champ par
   element CHAM1 (type MCHAML) a partir d'un champ par point CHPO1
   (type CHPOINT) appuye sur un MAILLAGE GEO1 ou sur un modele MODL1
   (type MMODEL).  On peut alors dans ce dernier cas indiquer le lieu
   on l'on souhaite que le MCHAML soit appuye : aux noeuds ( option
   par defaut ), au centre de gravite, aux points d'integration de la
   raideur, aux points d'integration de la masse, aux points de calcul
   des contraintes dans les elements et on peut egalement indiquer un
   sous-type TYP1 (type MOT) pour le MCHAML resultat (mis a blanc par
   defaut).
   Dans le cas d'un champ de temperature defini sur des coques avec
   integration dans l'epaisseur, T en chaque point de Gauss est calculee
   en fonction de T,TINF,TSUP suivant une variation parabolique dans
   l'epaisseur.


   -----------------> pour changer les noms de COMPosante d'un MCHAML

    CHE2 = CHAN 'COMP' | MOT1              | CHE1  ;
                       | LISTMOT1 LISTMOT2 |

   En presence du mot-cle 'COMP' l operateur cree un nouveau champ par
   elements en changeant eventuellement le nom de certaines composantes.

   Le champ par elements ne doit comporter qu'un constituant.
   On utilise la syntaxe specifiant un mot dans les cas ou le champ par
   points, ou le champ par elements, possede une composante. Dans les
   autres cas, on precise la liste des composantes a renommer selon une
   seconde liste.

    CHE1    : champ par elements (type MCHAML)
    MOT1    : nouveau nom attribue a la composante (type MOT)
    LISMOT1 : liste des composantes a renommer (type LISTMOTS)
    LISMOT2 : liste des nouvelles composantes (type LISTMOTS)
    CHE2   : objet resultat (type MCHAML)

   Remarques :

    1. Les noms de composantes font 4 caracteres.

    2. La liste LISMOT1 des composantes a remplacer dans CHE1 peut
       n'etre qu'une sous-liste de la liste de toutes les composantes
       de CHE1. La i-eme composante de LISMOT1 sera remplacee par la
       i-eme composante de LISMOT2 (ces deux listes doivent avoir la
       meme longueur, celle-ci etant inferieure ou egale au nombre de
       composantes).


   -----------------> pour changer le TYPE d'un MCHAML

    CHAM2 = CHAN  'TYPE'  CHAM1   TYP1  ;

   En presence du mot-cle 'TYPE' ,l'operateur CHAN cree un nouveau
   champ par element CHAM2 (type MCHAML) avec le sous-type  decrit par
   le chaine de caracteres TYP1 a partir d'un nouveau champ par element
   CHAM1 (type MCHAML) .


   -----------------> pour changer le CONStituant d'un MCHAML

    CHAM2 = CHAN  'CONS'  CHAM1   MOT1  ;

   En presence du mot-cle 'CONS' ,l'operateur CHAN cree un nouveau
   champ par element CHAM2 (type MCHAML) dont les sous zones ont
   pour noms de constituants MOT1. Le champ CHAM1 ne doit avoir qu'un
   seul nom de constituant.


PART{Resultat de type MMODEL}

   -----------------> pour changer le CONStituant d'un MMODEL

    MOD2 = CHAN  'CONS'  MOD1   MOT1  ;

   En presence du mot-cle 'CONS', l'operateur CHAN cree un nouveau
   objet modele MODE2 (type MMODEL) dont les sous zones ont pour
   nom de constituant MOT1. MOD1 (type MMODEL) ne doit avoir qu'un
   seul nom de constituant.


PART{Resultat de type MATRIK}

   -----------------> pour changer les INCOnnues d'une MATRIK

    cf. remarque pour les objets de type RIGIDITE


PART{Resultat de type RIGIDITE}

   -----------------> pour changer les INCOnnues d'une RIGIDITE

    RIG2  = CHAN  'INCO'  RIG1 | LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 ...
                               | 'COMPL'

          ... | ('SYME') |  | ('MULT') | ;
              | ('ANTI') |  | ('DUPL') |
              | ('QUEL') |

   RIG1 :  objet rigidite
   LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 : objets listmots

   Si on veut  changer le nom des composantes primales et duales
   d'une matrice. LISTMOT1 et LISTMOT2, de meme longueur, donnent
   respectivement les noms initiaux des inconnues primales et
   leurs nouveaux noms. LISTMOT3 et LISTMOT4  agissent sur les
   inconnues duales.

   Si le mot COMPLEXE est founit a la place des LISTMOTS on fait
   preceder chaque nom d'inconnues par la lettre I.

   Si necessaire, on peut changer le type de matrice a l'aide des
   mots cles 'SYME' (matrice symetrique), 'ANTI' (matrice
   antisymetrique) ou 'QUEL' (matrice quelconque). Par defaut,
   RIG2 est de nature QUELconque.

   En effet, dans le cas de couplages multi-physiques, les matrices
   blocs du système peuvent etre symétriques sans que le système
   assemblé ne le soit, ce qui engendre une erreur au moment de la
   résolution.  Ce choix par défaut permet d'éviter cette erreur.

   Attention, au niveau de la resolution, la recuperation des
   multiplicateurs de Lagrange ne peut se faire que si les noms
   d'inconnues sur lesquelles ils agissent soient reperes au
   prealable. C'est le cas pour les noms generes par COMPLEXE
   mais ce n'est pas le cas de la majorite des noms.

   Le mot cle 'MULT' permet de forcer le changement de nom de
   composantes des multiplicateurs de Lagrange.

   Le mot-cle 'DUPL' permet de creer un nouveau noeud support
   associe a chaque multiplicateurs de Lagrange LX de la rigidite.
   Exemple :
   Rel1 = BLOQ UX p1;
   Rel2 = CHAN 'INCO' Rel1 (mots UX LX) (mots FX FLX)
                           (mots UY LX) (mots FY FLX) 'DUPL';
   --> Rel2 est ainsi une matrice de relation similaire a celle qu'on
       obtiendrait avec la commande : Rel2 = BLOQ UY p1;


   -----------------> pour changer le TYPE d'une RIGIDITE

    RIG2  = CHAN  'TYPE'  RIG1 MOT1 ;

   En présence du mot-clé 'TYPE', CHANger crée une rigidité RIG2
   identique à RIG1 mais avec un sous-type différent précisé par MOT1
   ('RIGIDITE', 'AMORTISS', ou 'MASSE' par exemple).


   -----------------> pour creer une RIGIDITE de DEPEndance

    rig2 = CHAN  'DEPE'   RIG1   ;

   rig1 : matrice  de relations ( rela accro)
   rig2 : matrice  de dependance

   Transformation d une matrice de relations en matrice de dependances
   Permet d'operer une condensation  elimination  des ddl liees (voir
   utilisation dans CMCT).
   Si cette matrice est passee a RESOU avec les raideurs normales
   a la place des relations dont elle est issue, le resultat est
   identique mais la resolution  est faite sur une matrice de taille
   reduite


   -----------------> pour creer les RIGIDITE de CONDensation et duales

    rig2 rig3 = CHAN  'COND'   RIG1   ;

   rig1 : matrice de relations ( rela accro )
   rig2 : matrice de condensation
   rig3 : matrice duale de rig2

   Si on veut  operer une condensation en dehors de RESOU par
   CMCT puis une resolution, le second membre doit etre egalement
   condense par :

             chpo3 = chpo2 * rig3

    remontee sur les ddl elimines apres resolution

             chpo4 = solution * rig2 ;


PART{Resultat de type CHARGEMENT}

   -----------------> pour changer la forme d'un CHARGEMEnt

      CHARG1= 'CHAN' 'TABL' CHARG2  MOTYP;

   Il s'agit de mettre sous la forme d'un chargement defini
   par deux tables tous les chargements de CHARG2 de type
   MOTYP ('MECA' ...)  dans le but de reduire le temps d'acces
   par l'operateur TIRE. Ceci est utile dans le cas ou le nombre de
   chargement est tres eleve par exemple en seisme.

   CHARG2  : objet chargement

   MOTYP   : objet mot contenant le typer du chargement considere

   CHARG1  : objet resulat de type chargement equivallent a charg2 sauf
             pour la presentation sous forme table-table du type MOTYP


PART{Resultat de type MOT}

   -----------------> pour changer la casse d'un mot


      MOT2 = 'CHAN'  | 'MAJU' | MOT1 ;
                     | 'MINU' |

   Change la casse d'une chaine de caracteres.
   Avec l'option 'MAJU', les lettres minuscules sont mises en
   majuscules.
   Avec l'option 'MINU', les lettres majuscules sont mises en
   majuscules.

   MOT2  : objet de type MOT resultat
   MOT1  : objet de type MOT operande

PART{Resultat de type EVOLUTION}

   -----------------> pour changer le titre d'une evolution

      EVOL2 = CHAN 'TITR' EVOL1  MOT1;

   MOT1 : nouveau titre general des courbes de l'objet evolution


   -----------------> pour changer le titre de la legende d'une courbe
                      contenue dans une evolution

      EVOL2 = CHAN 'LEGE' EVOL1 k MOT1;

   k    : numero de la courbe a traiter (par defaut, toutes les courbes
          seront traitees)
   MOT1 : nouveau titre de legende de la k ieme courbe


   -----------------> pour changer le nom de l'abscisse d'une courbe
                      contenue dans une evolution

      EVOL2 = CHAN 'NOMABS' EVOL1 k MOT1;

   k    : numero de la courbe a traiter (par defaut, toutes les courbes
          seront traitees)
   MOT1 : nouveau nom de l'abscisse de la k ieme courbe


   -----------------> pour changer le nom de l'ordonnee d'une courbe
                      contenue dans une evolution

      EVOL2 = CHAN 'NOMORD' EVOL1 k MOT1;

   k    : numero de la courbe a traiter (par defaut, toutes les courbes
          seront traitees)
   MOT1 : nouveau nom de l'ordonnee de la k ieme courbe



ANGL==========================================================

PART{MAILLAGE type result}

   -----------------> to change the type of elements

    GEO2 = CHAN (TYPE) GEO1 (LENTI1) ;

   The CHAN operator constructs a MESH GEO2 which is identical to
   the MESH GEO1, but composed of elements of the requested type TYPE
   (MOT type). By default, the current type is taken into account (see
   OPTION).
   If GEO1 is made of full quadratic elements, TYPE can take one of the
   following values : 'TRI3', 'QUA4', 'TET4', 'PYR5', 'CUB8'.

   If the word 'LIGNE' is provided as TYPE, the generated mesh will
   consists solely of lines.
   If the word 'SURFACE' is provided as TYPE, the generated mesh will
   consists solely of triangular and quadrangular elements : the faces of
   GEO1's elements.
   If the word 'LINEAIRE' is provided as TYPE, each quadratic element
   of the mesh will be replaced by a linear one.
   If the word 'QUADRATIQUE' is provided as TYPE, each linear element
   of the mesh will be replaced by a quadratic one.
   If the word 'QUAF' is provided as TYPE,  each 'QUADRATIQUE' element
   of the mesh will be replaced by a full quadratic one needed for
   fluid : TRI6 -> TRI7, QUA8 -> QUA9  CU20 -> CU27 etc.


   LENTI1  : Connectivity to make (LISTENTI type). GEO1 must be made of
             POI1 type element. GEO2 will have as many element as
             N-uplets of connectivity in LENTI1.

PART{CHPOINT type result}

   -----------------> from a MCHAML

    CHP2 = CHAN  'CHPO'  MODL1 CHAM1 ( 'MOT1' );

   The keyword 'CHPO' will bring about the CHAN operator to create
   the CHPOINT CHPO2 from the field CHAM1 defined at the element level
   (MCHAML type).
   This new CHPOINT lies on the mesh nodes embedded in the MODL1
   model (MMODEL type), by :
   - either averaging the values at the adjacent element nodes
     if the word MOT1 is equal 'MOYE' or is omitted,
   - or by summing the contributions of each element if MOT1 is 'SOMM'.
   These values are defined by extrapolation at nodes from known values
   at the integration points for a field of SCALAIRE subtype by using a
   least squares method and the shape functions of the element, or by
   averaging directly those values for the fields of any other type.
   The nature of the CHPOINT CHP2 is 'diffus'.

   If MOT1 is equal to 'SUPP', then the created CHPOINT is built on the
   supporting point of integration of the input MCHAML. Hence, for this
   option, no extrapolation is needed in its computation.



   -----------------> to change the TITRE of a CHPOINT

    CHP2 = CHANGER  'TITRE' CHP1 MOT1 ;


   With the key word 'TITRE', the operator will create a new field by
   point (CHPOINT type) identical to the field by point chp1 (CHPOINT
   type) except for its title, which is changed to MOT1 (72 char. max.)



   -----------------> to change the NATURE of a CHPOINT

    CHP2 = CHANGER  'ATTRIBUT' CHP1  'NATURE'    | 'INDETER'  |
                                                 | 'DIFFUS'   |
                                                 | 'DISCRET'  |  ;

   With the key word 'ATTRIBUT', the operator will create a new field by
   point (CHPOINT type) identical to the field by point chp1 (CHPOINT
   type) except for its attribut ,which can be modified by the other key
   word of the command (For instance 'NATURE' and 'DIFFUS').
   It is advised to keep the same order of the terms in the command, as
   specified in the above.


   -----------------> pour changer les noms de COMPosante d'un CHPOINT

    CHPO2 = CHAN 'COMP' | MOT1              | CHPO1 ('NATU' |'INDETER'
                        | LISTMOT1 LISTMOT2 |               |'DIFFUS'
                                                            |'DISCRET');

    With the keyword 'COMP', the operator creates a new field
    by points, and renames some components. When the field is one
    component, the syntax specifiing an object MOT is used.
    In the other cases,  the names included in the first sublist of
    components are replaced by those of the second one.

    CHPO1   : field by points (CHPOINT type)
    MOT1    : new name allocated to the component (MOT type)
    LISMOT1 : list of components to replace  (type LISTMOTS)
    LISMOT2 : list of new components (type LISTMOTS)
    CHPO2   : generated object (CHPOINT type)

    Notes :

    1. The components names are 4-characters-strings.

    2. The list LISMOT1 of components to replace can be only a sublist
       of the list of all components. The i-th component of LISMOT1 will
       be replaced with the i-th component of LISMOT2 (these lists are
       supposed to have the same length, which is inferior or equal to
       the number of components).


PART{MCHAML type result}

   -----------------> to change the support of a MCHAML

    CHAM2 = CHAN  | 'NOEUD'    |  MODL1  CHAM1 (TYP1) ;
                  | 'GRAVITE'  |
                  | 'RIGIDITE' |
                  | 'MASSE'    |
                  | 'STRESSES' |


   With one of the following  key words  'NOEUD', 'GRAVITE', 'RIGIDITE',
   'MASSE', or 'STRESSES', the CHAN operator build from an element field
   CHAM1 (MCHAML type) and from  a model  object MODL1 (MCHAML type), an
   element field CHAM2 whith the same type as CHAM1(or TYP1 (MOT type)),
   defined on the nodes,  gravity center,  stiffness integration points,
   mass integration  points, and element  stress calculation points. For
   this purpose, a least squares  method is used together with the shape
   functions of the element.


   -----------------> from a CHPOINT

    CHAM1 = CHAN  'CHAM'  CHPO1  | GEO1  ;
                                 | MODL1 | ('NOEUD')  ) | (TYP1) ;
                                         | ('GRAVITE' ) |
                                         | ('RIGIDITE') |
                                         | ('MASSE'   ) |
                                         | ('STRESSES') |


   The keyword 'CHAM' will bring about the CHAN operator to create
   a new field by element CHAM1 (MCHAML type) from a field by point
   CHPO1 (CHPOINT type) lying on a MESH GEO1 or on a MMODEL MODL1.
   For this last case, the user may indicate the place where he wishes
   the MCHAML to lie: at the nodes (option by default), on the centre
   of gravity, on the stiffness integration points, on the mass
   integration points, on the stress calculation points in the elements.
   The user may also indicate a TYP1 subtype (MOT type) for the
   generated MCHAML (a blank by default).
   In the case of temperature field with shell elements integrated in
   thickness, T is calculated from T,TINF and TSUP with a parabolic
   variation of temperature in thickness.


   -----------------> to change the COMPonents' name of a MCHAML

    CHE2 = CHAN 'COMP' | MOT1              | CHE1  ;
                       | LISTMOT1 LISTMOT2 |

    With the keyword 'COMP', the operator creates a new field
    by elements,and renames some components. The field by elements must
    be one constituant. When the field is one component, the syntax
    specifiing an object MOT is used. In the other cases, the names
    included in the first sublist of components are replaced by those of
    the second one.

    CHE1    : field by points (MCHAML type)
    MOT1    : new name allocated to the component (MOT type)
    LISMOT1 : list of components to replace  (type LISTMOTS)
    LISMOT2 : list of new components (type LISTMOTS)
    CHPE    : generated object (MCHAML type)

    Notes :

    1. The components names are 4-characters-strings.

    2. The list LISMOT1 of components to replace can be only a sublist
       of the list of all components. The i-th component of LISMOT1 will
       be replaced with the i-th component of LISMOT2 (these lists are
       supposed to have the same length, which is inferior or equal to
       the number of components).


   -----------------> to change the TYPE of a MCHAML

    CHAM2 = CHAN  'TYPE'  CHAM1   TYP1  ;

   The key word 'TYPE' will bring about the CHAN operator to create
 a new field by element CHAM2 (MCHAML type) with the subtype
 described by the string TYP1 from a new field by element CHAM1
 (MCHAML type).


   -----------------> to change the CONStituant of a MCHAML

    CHAM2 = CHAN  'CONS'  CHAM1   MOT1  ;

   The key word 'TYPE' will bring about the CHAN operator to create a
   new field by element CHAM2 (MCHAML type) whose subzones constituant
   name is MOT1. The field CHAM1 must have only one name of constituant.


PART{MMODEL type result}

   -----------------> to change the CONStituant of a MMODEL

    MOD2 = CHAN  'CONS'  MOD1   MOT1  ;

   The key word 'TYPE' will bring about the CHAN operator to create
   a new object MOD2 (MCHAML type) whose subzones constituant name
   is MOT1. MOD1 (MMODEL type) must have only one name of constituant.



PART{MATRIK type result}

   -----------------> to change the unknowns of MATRIK

    cf. remark about objects of type RIGIDITE


PART{RIGIDITE type result}

   -----------------> to change the unknowns of a RIGIDITE

    RIG2  = CHAN  'INCO'  RIG1 | LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 ...
                               | 'COMPL'

          ... | ('SYME') |  | ('MULT') | ;
              | ('ANTI') |  | ('DUPL') |
              | ('QUEL') |

   RIG1 :  object rigidite
   LISTMOT1 LISTMOT2 LISTMOT3 LISTMOT4 : objects listmots


   To change names of primal or dual unknowns of a matrix. LISTMOT1
   and LISTMOT2, with same length, are actual names of primal unknows
   and new names. LISTMOT3 and LISTMOT4 act on dual names of unknows.

   If the word COMPLEX is used, each names of unknowns is prefixed
   with the letter I.

   If necessary, the nature of the stiffness matrix can be modified
   with 'SYME' (symetrical matrix), 'ANTI'(antisymetrical matrix) or
   'QUEL' (full matrix). By default, the nature of RIG2 is QUEL.

   Indeed, in case of multi-physics couplings, bloc matrices can be
   symetric while the global matrix is not. The assembly of symetric
   matrices (ET operator) will give a global stiffness matrix of the
   same nature while it is not. The RESOlution operator will then
   generate an error. The default option is chosen to avoid this error.

   Attention, in order to compute the Lagrange multipliers, names of
   unknowns must be in a pre-defined list. This is the case of the
   unknowns generated by COMPLEX.

   Keyword 'MULT' allows one to change the name of the Lagrange
   multiplier unknowns from LX to another arbirary name.

   Keyword 'DUPL' allows to create a new node for each Lagrange
   multiplier LX of the rigidite
   Example :
   Rel1 = BLOQ UX p1;
   Rel2 = CHAN 'INCO' Rel1 (mots UX LX) (mots FX FLX)
                           (mots UY LX) (mots FY FLX) 'MULT';
   --> Rel2 is then a matrix of relationship similar to that which would
       be obtained with the command : Rel2 = BLOQ UY p1;


   -----------------> to change the TYPE of a RIGIDITE

    RIG2  = CHAN  'TYPE'  RIG1 MOT1 ;

   With the keyword 'TYPE', CHANger create a rigidité RIG2
   identical to RIG1 but with the subtype given by the word MOT1
   ('RIGIDITE', 'AMORTISS', or 'MASSE' by example).


   -----------------> to create a dependence RIGIDITE

    rig2 = CHAN  'DEPE'   RIG1   ;

   rig1 : relations matrix  (rela accro)
   rig2 : dependence matrix

   A relation matrix is changed in dependence matrix .Allows to
   condense  by elimination of slaves d.o.f. ( see use of CMCT)
   If this matrix is passed in RESOU whith others matrix and border
   conditions matrix  instead of the matrix relation from which it is
   derived , the result is identical but solving has been performed
   on a matrix ol smaller size


   -----------------> to create RIGIDITE of CONDensation and duales

    rig2 rig3 = CHAN  'COND'   RIG1   ;

   rig1 : relations matrix ( rela accro )
   rig2 : condensation matrix
   rig3 : duale matrix of rig2

   If a condensation  outside RESOU is needed by CMCT operator
   folowed by a resolution  the rigth hand side must be
   also condensed by :

           chpo3 = chpo2 * rig3

   back substitution  on eliminated d.o.f.

           chpo4 = solution * rig2 ;


PART{CHARGEMENT type result}

   -----------------> to change the shape of CHARGEMEnt

      CHARG1= 'CHAN' 'TABL' CHARG2  MOTYP;

   The purpose of this option is to describe the object "CHARGEME"
   with the description Table-Table (and not Chpoint-Evolution)
   in order to reduce the access time by TIRE operator. This is
   usefull in case of very high number of elementary "chargement"
   by example for seismic analysis.

   Il s'agit de mettre sous la forme d'un chargement defini
   par deux tables tous les chargements de CHARG2 de type
   MOTYP ('MECA' ...)  dans le but de reduire le temps d'acces
   par l'operateur TIRE. Ceci est utile dans le cas ou le nombre de
   chargement est tres eleve par exemple en seisme.

   CHARG2 : object of type "CHARGEME" ( loads)

   MOTYP  : oject of type "MOT" (word) defining the type of loads

   CHARG1 : result object of type "CHARGEME" which is the duplication of
            charg1 but presented differently.



PART{MOT type result}

   -----------------> to change the case of a word


      MOT2 = 'CHAN'  | 'MAJU' | MOT1 ;
                     | 'MINU' |


   Change a character string's case.
   Using 'MAJU' keyword, lowercase letters are upcased.
   Using 'MINU' keyword, upcase letters are downcased.

   MOT2  : MOT type object (output)
   MOT1  : MOT type object (input)


PART{EVOLUTION type result}

   -----------------> to change the title of an evolution

      EVOL2 = CHAN 'TITR' EVOL1  MOT1;

   MOT1 : new main title of the curves of the evolution


   -----------------> to change the legend title of an curve
                      embedded in an evolution

      EVOL2 = CHAN 'LEGE' EVOL1 k MOT1;

   k    : number of the curve to work on (by default, every curves
          will be treated)
   MOT1 : new legend title of the k th curve


   -----------------> to change the nom of l'abscisse of an curve
                      embedded in an evolution

      EVOL2 = CHAN 'NOMABS' EVOL1 k MOT1;

   k    : number of the curve to work on (by default, every curves
          will be treated)
   MOT1 : new name of abscissa of the k th curve


   -----------------> to change the nom of l'ordonnee of an curve
                      embedded in an evolution

      EVOL2 = CHAN 'NOMORD' EVOL1 k MOT1;

   k    : number of the curve to work on (by default, every curves
          will be treated)
   MOT1 : new name of ordinate of the k th curve

$$$$


