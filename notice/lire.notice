$$$$ LIRE     NOTICE  CB215821  18/02/06    21:15:01     9735
                                             DATE     18/02/06

1.  Directive LIRE                           Voir aussi : SORT
    --------------

     LIRE | (GEO1)             | ;
          | 'PROC' FIC1 (MOT1) | ;


2.  Operateur LIRE
    --------------

     TAB1 = LIRE  | 'AVS'      | ;
                  | 'MED' FIC1 |
                  | 'UNV' FIC1 |
                  | 'FEM' FIC1 |
                  | 'NAS' FIC1 |
                  | 'CSV' FIC1   ('DEBU' ENTI1) ('SEPA' MOT1);


     MAIL1= LIRE    'STL' FIC1 ;


Section : Entree-Sortie Entree-Sortie

FRAN====================================================================
    Objet :
    _______


+------------------------+
| 1. Directive 'LIRE'    |
+------------------------+
CHAP{'LIRE' utilise comme une directive}
PART{LIRE un MAILLAGE}
1.1. La directive LIRE lit un MAILLAGE sur le fichier d'unite logique N1
     definie  par la directive OPTION :

         OPTION LECT N1;    (N1 = 4 par defaut)

    Tous les sous-objets presents dans le fichier sont egalement lus.
    Si le nom GEO1 du maillage est fourni, on verifie qu'il existe bien
    sur le fichier.

PART{LIRE une PROCEDUR}
1.2. La directive LIRE cree une ou plusieurs procedures en important
     le contenu du fichier FIC1.

     Deux alternatives sont offertes :

     a) La syntaxe du fichier FIC1 est telle que celle adoptee pour
        charger des procedures via le fichier UTILPROC (voir la notice
        de l'operateur UTIL) :

        - Chaque procedure est encapsulee dans un bloc delimite par
          les instructions DEBP et FINP

        - Chacun de ces blocs est precede d'une ligne commençant par
          "$$$$ xxxxxxxx" où le mot xxxxxxxx est un nom GIBIANE valide.
          Ce nom doit etre identique a celui que l'on trouve derriere
          l'instruction DEBP correspondante (la casse est indifferente)

        Si MOT1 est fourni, alors seule la procedure de FIC1 portant ce
        nom sera importee (si elle existe).

     b) Le fichier est un jeu de donnees (suite d'instructions GIBIANE).
        Dans ce cas, un objet PROCEDUR de nom MOT1 est cree et le
        contenu de FIC1 y est charge. Cela signifie en particulier que
        la directive DEBP ne doit apparaitre nulle part dans FIC1.

+------------------------+
| 2. Operateur 'LIRE'    |
+------------------------+
CHAP{'LIRE' utilise comme un operateur}

PART{LIRE au format 'AVS'}
2.1 En presence du mot-cle 'AVS' LIRE devient un operateur, qui lit le
    fichier d'unite logique N1 definie  par la directive OPTION :

         OPTION LECT N1;    (N1 = 4 par defaut)

    On suppose que le fichier est de format AVS UCD (Unstructured
    Cell Data) ASCII.
    Les objets trouves dans ce fichier sont loges dans la table TAB1.
    La structure de cette table est la suivante (tous les indices sont
    de type MOT) :

    --------------------------------------------------------------------
    Indice   |   Contenu
    --------------------------------------------------------------------
    MAILSUPP | Objet de type MAILLAGE compose de points (POI1) et
             | contenant tous les noeuds. Cet objet consitue le support
             | du champ nodal (objet de type CHPOINT) si celui-ci
             | existe. Il est toujours cree. Il peut etre utilise pour
             | visualiser differentes parties du maillage par rapport au
             | maillage entier.
    --------------------------------------------------------------------
    LEMAILLA | Objet de type MAILLAGE contenant tous les elements
             | trouves dans le fichier AVS. C'est un objet compose de
             | sous-maillages elementaires, dont chacun est homogene du
             | point de vue du type d'element et du numero du materiau.
             | Il est toujours cree.
    --------------------------------------------------------------------
    SOUMAILA | Objet de type TABLE. Cette table contient les sous-
             | maillages elementaires qui sont indices par des nombres
             | entiers, allant de 1 jusqu'au nombre de ces sous-
             | maillages. Cette table est toujours creee.
    --------------------------------------------------------------------
    LECHPOIN | Objet de type CHPOINT. Il n'est cree que lorsque le
             | fichier AVS contient le champ nodal. Il s'appuie sur le
             | maillage MAILSUPP.
    --------------------------------------------------------------------
    LEMCHAML | Objet de type MCHAML. Il n'est cree que lorsque le
             | fichier AVS contient le champ par element. Il est compose
             | de sous-champs elementaires dont chacun s'appuie sur un
             | sous-maillage elementaire.
    --------------------------------------------------------------------
     tout    | Objet de type FLOTTANT (un nombre reel). Chaque
     autre   | composante du champ global (s'il existe) apparait dans la
     nom     | table sous son propre nom (tronque a 4 caracteres).
    --------------------------------------------------------------------

    Plusieurs structures UCD peuvent etre lues (par exemple dans un
    fichier cree avec la directive SORT 'AVS' ... 'SUIT') si on repete
    l'ordre de lecture plusieurs fois (voir soravs.dgibi).


PART{LIRE au format 'MED' (Salome)}
2.2 En  presence du mot-cle 'MED',  LIRE devient un  operateur qui place
    les OBJETS MAILLAGE ou les champs de résultats, lus dans le fichier
    MED 3.2, dans une TABLE avec son nom comme indice.

    Dans le cas où les champs contiennent des valeurs nodales, ils
    sont lus dans Cast3M sous forme d'un objet de type CHPOINT.

    Dans le cas où les champs contiennent des valeurs aux éléments, ils
    sont lus dans Cast3M sous forme d'un objet de type MCHAML
    Les points support du champ actuellement lisibles sont :
     - NOEUD
     - GRAVITE

    Si les champs sont définis sur plusieurs pas de temps, une sous-table
    sera crée et contiendra autant de CHPOINT ou MCHAML que de pas de temps.

PART{LIRE au format 'UNV'}
2.3 En presence du mot-cle 'UNV', LIRE devient un operateur qui lit le
    fichier de nom FIC1 (type MOT) au format Ascii UNV (pour UNiVersal).

    Les informations lues dans les DATASET de numero 2411, 2412, 2470 et
    2477 sont stockees sous forme d'objets de type MAILLAGE dans l'objet
    de type TABLE nomme TAB1 dont le contenu est decrit ci-dessous.
    Les  donnees stockees dans les DATASETs de numero 151 et 164 sont
    lues et affichees a titre purement informatif.
    Les autres numeros de DATASET sont ignores lors de leur lecture.

    LA DIMEsion du probleme est mise a jour si necessaire suite a la
    lecture des coordonnees des noeuds (DATASET 2411) en accord avec
    la dimension initiale (avant lecture du fichier).

    --------------------------------------------------------------------
      Indice    |          Contenu
    (type MOT)  |        (type MAILLAGE)
    --------------------------------------------------------------------
     'NOEUDS'   |  Objet de type MAILLAGE compose de points (POI1) et
                |  contenant tous les noeuds lus (DATASET 2411)
    --------------------------------------------------------------------
     'MAILLAGE' |  Objet de type MAILLAGE contenant tous les elements
                |  lus dans le fichier UNV (DATASET 2412)
    --------------------------------------------------------------------
     '@elti'    |  Objet de type MAILLAGE correspondant a un maillage
                |  elementaire constitue de tous les elements du type
                |  'elti' lus dans le fichier UNV (DATASET 2412)
                |  (Par ex. : '@SEG2','@TRI3','@CUB8'...)
                |  Le maillage a l'indice 'MAILLAGE' est constitue de
                |  l'union des maillages elementaires stockes dans les
                |  indices de type '@elti'.
    --------------------------------------------------------------------
     'grelti'   |  Objet de type MAILLAGE contenant le maillage lu dans
                |  le fichier UNV (DATASET 2470) correspondant au groupe
                |  d'elements associe a la propiete physique de nom
                |  'grelti'
                |  Attention : L'indice 'grelti' est une transcription
                |  fidele du nom lu, il peut donc contenir des espaces,
                |  ainsi que des minuscules et majuscules a prendre en
                |  consideration !
    --------------------------------------------------------------------
     'permai'   |  Objet de type MAILLAGE contenant le maillage lu dans
                |  le fichier UNV (DATASET 2477) correspondant au groupe
                |  dit permanent de nom 'permai'
                |  Remarque : Si le groupe permanent lu est constitue et
                |  d'un groupe de noeuds et d'un groupe d'elements alors
                |  l'indice 'permai' contient le maillage des elements
                |  et l'indice 'permai_GN' le maillage (POI1) des noeuds
                |  Attention : L'indice 'permai' est une transcription
                |  fidele du nom lu, il peut donc contenir des espaces,
                |  ainsi que des minuscules et majuscules a prendre en
                |  consideration !
    --------------------------------------------------------------------

PART{LIRE au format 'FEM' (ALTAIR OptiStruct)}
2.4 En presence  du mot-cle 'FEM', LIRE devient un operateur qui lit le
    fichier  de nom FIC1 (type MOT) au  format ASCII  FEM (Format lu et
    ecrit par le profil  OptiStruct de Hypermesh distribue  par ALTAIR
    http://www.altair.com).

    Liste des Entites OptiStruct relues :
      - 'Components' : Objets de type MAILLAGES
      - 'NodeSets'   : Objets de type MAILLAGES
      - 'ElemSets'   : Objets de type MAILLAGES

    Remarque : Version d'HyperMesh necessaire >= 12.0


PART{LIRE au format 'NAS' (Bulk Nastran)}
2.5 En presence  du mot-cle 'NAS', LIRE devient un operateur qui lit le
    fichier  de nom FIC1 (type MOT) au  format ASCII  NASTRAN
    Liste des Entites OptiStruct relues :
      - 'MAILLAGES'    : Objets de type MAILLAGE
      - 'SYSTEMES'     : Objets de type MAILLAGE
      - 'RBE2'         : Objets de type MAILLAGE de POI1
                         Noeud 1 ==> Noeud Maitre
      - 'BLOCAGES'     : Objets de type MAILLAGE de POI1
      - 'TEMPERATURES' : Objets de type CHPOINT
      - 'FORCES'       : Objets de type CHPOINT
      - 'MOMENTS'      : Objets de type CHPOINT


PART{LIRE au format 'CSV'}
2.6 En presence  du mot-cle 'CSV', LIRE devient un operateur qui lit  le
    fichier ASCII de nom FIC1 (type MOT) au  format 'CSV'.
    La table  TAB1 comporte autant  de LISTREEL que de colonnes dans  le
    fichier. Ils sont indices de 1 a N dans la table.
      'DEBU' : Le  fichier est  lu a  partir de  la ligne  specifiee par
               l'ENTIER ENTI1.
      'SEPA' : Possibilite de preciser le separateur dans le fichier lu.
               MOT1 doit être un MOT de 1 caractere.
               Par defaut, le separateur est ';'.


PART{LIRE au format 'STL' (Stereolithographie)}
2.7 En presence  du mot-cle 'STL', LIRE  devient un operateur qui lit le
    fichier  de nom FIC1  (type MOT) au  format  ASCII / binaire STL. Le
    resultat MAIL1 est un MAILLAGE de 'TRI3'. L'utilisateur  doit penser
    a utiliser la  directive ELIM suite  a la lecture pour fusionner les
    noeuds en doubles.

ANGL====================================================================
    Description :
    ____________


+------------------------+
| Directive 'LIRE'       |
+------------------------+
CHAP{'LIRE' used as a directive}
PART{Read a MAILLAGE type object (MESH) un MAILLAGE}
1.  The LIRE instruction reads a mesh on the logical unit file
    N1 defined by the OPTION instruction:

         OPTION LECT N1;    (N1 = 4 by default)

    All the subobjects in the file are read too.
    If the name GEO1 of the mesh is provided, it is checked that it
    indeed does exist in the file.


PART{Read a PROCEDUR type object}
1.2. The LIRE instruction creates one or several PROCEDUR objects based
     on the content of the file FIC1.

     Two options are available :

     a) The syntax of the file FIC1 is the same as the one used to load
        procedures from UTILPROC (see the manual of UTIL) :

        - Each procedure is encapsulated in a block opened by DEBP and
          closed by FINP

        - Each of these blocks is preceded by a line beginning by
          "$$$$ xxxxxxxx" where the word xxxxxxxx must be a valid
          GIBIANE name, identical to the one specified after the
          associated DEBP instruction (case insensitive)

        If MOT1 is given, then only the procedure with such a name will
        be loaded from FIC1 (if it ever exists).

     b) The file is a batch of GIBIANE instructions. In this case, an
        object of type PROCEDUR is created and the content of FIC1 is
        loaded in it. Therefore, the instruction DEBP must not appear
        anywhere in the file.

+------------------------+
| Operator  'LIRE'       |
+------------------------+
CHAP{'LIRE' used as an Operator}
PART{Reader for 'AVS' format}
2.1 When the 'AVS' keyword is present LIRE becomes an operator. It
    reads the file of logical unit number N1, N1 being defined by the
    directive OPTION :

         OPTION LECT N1;    (N1 = 4 by default)

    It is supposed that the file has the AVS UCD (Unstructured Cell
    Data) ASCII format.
    The objects found in the file are put to the TAB1 array (of type
    TABLE). The contents of this array are following (all the indices
    are of MOT (i.e. word) type) :

    --------------------------------------------------------------------
    Index    |   Contents
    --------------------------------------------------------------------
    MAILSUPP | A mesh (MAILLAGE type) composed of points (POI1) and
             | containing all the nodes in the file. It serves as the
             | support of the nodal field (CHPOINT type) if the latter
             | is present. It is always created. It may be used as a
             | background to find out the positions of different parts
             | in the whole mesh.
    --------------------------------------------------------------------
    LEMAILLA | The mesh (MAILLAGE type) containing all the elements
             | found in the AVS file. It is composed of elementary sub-
             | meshes. Every such a sub-mesh is composed of one type of
             | elements and all its elements have the same material
             | number. It is always created.
    --------------------------------------------------------------------
    SOUMAILA | It is an array (TABLE type). This array contains all the
             | elementary sub-meshes, which are pointed by the integer
             | indexes ranging from 1 to the number of the sub-meshes.
             | It is always created.
    --------------------------------------------------------------------
    LECHPOIN | Nodal field (CHPOINT type). It is created only when the
             | AVS file contains such a field. The MAILSUPP mesh is its
             | support.
    --------------------------------------------------------------------
    LEMCHAML | Element type field (MCHAML). It is created only when the
             | AVS file contains such a field. It is composed of
             | elementary fields. The sub-meshes contained in SOUMAILLA
             | are the supports of these elementary fields.
    --------------------------------------------------------------------
    anything | A real number. All components of the global field (if it
    else     | exists) appear in the table with their name (truncated to
             | 4 caracters) as the index.
    --------------------------------------------------------------------

    Several UCD structures may be read from the same file (ex. created
    with the SORT 'AVS' ... 'SUIT' directive) if the LIRE 'AVS' operator
    is used several times (see soravs.dgibi).


PART{Reader for 'MED' format (Salome)}
2.2 When the keyword 'MED' is used, LIRE becomes an operator which reads
    the  MAILLAGE OBJETS or the results fields in the MED 3.2 file and
    place them in a TABLE with their name as index.

    In the read field contains nodal values, it will be stocked in Cast3M
    as a CHPOINT object.

    If the read field contains elementary values, it will be stocked in
    Cast3M as a MCHAML object.
    Compatible supports for MCHAML objects :
     - NOEUD
     - GRAVITE

    If the field is defined in more than one time step, a table will be
    created. This table will contain as much CHPOINT or MCHAML as time
    steps.

PART{Reader for 'UNV' format}
2.3 When the keyword 'UNV' is used, LIRE becomes an operator which is
    able to read an ASCII file whose name is FIC1 (MOT type) and whose
    format is UNV (stands for UNiVersal).

    The information read in the DATASET wich have the key number 2411,
    2412, 2470 and 2477 are stored as MAILLAGE type objects in the TABLE
    type objet named TAB1 and described below.
    The data contained in the DATASET whose key number are 151 and 164
    are read and printed only for user information.
    The other DATASET key numbers are ignored when they are read.

    The  DIMEnsion problem  is updated if  necessary  following the read
    of the  nodes coordinates  (DATASET 2411)  according to  the initial
    dimension.

    --------------------------------------------------------------------
      Index     |          Contents
    (MOT type)  |        (MAILLAGE type)
    --------------------------------------------------------------------
     'NOEUDS'   |  The mesh (MAILLAGE type object) composed of points
                |  (POI1) including all the read nodes (DATASET 2411)
    --------------------------------------------------------------------
     'MAILLAGE' |  The mesh (MAILLAGE type object) containing all the
                |  elements read from the UNV file (DATASET 2412)
    --------------------------------------------------------------------
     '@elti'    |  The created mesh (MAILLAGE type object) correspond to
                |  an elementary mesh constituted by all the elements
                |  type '@elti' read in the UNV file (DATASET 2412).
                |  (Example : '@SEG2', '@TRI3', '@CUB8', ...)
                |  The mesh with the name 'MAILLAGE' is constituted by
                |  the union of the elementary meshes saved into the
                |  different indices '@elti'.
    --------------------------------------------------------------------
     'grelti'   |  The mesh (MAILLAGE type) read in the UNV file which
                |  corresponds to the element set linked to the physical
                |  properties whose name is 'grelti' (DATASET 2470)
                |  Caution : The 'grelti' index is totally identical to
                |  the read name as stored in the file. So it can
                |  contains spaces and also lower and upper letters
                |  that have to be considered different !
    --------------------------------------------------------------------
     'permai'   |  The mesh (MAILLAGE type) read in the UNV file which
                |  corresponds to the so-called "permanent group" set
                |  whose name is 'permai' (DATASET 2477)
                |  Remark: If the read permanent group is a set of one
                |  node groupe and one element set, then the 'permai'
                |  index contains the read elements (MAILLAGE type) and
                |  the 'permai_GN' one contains the iread node POI1 mesh
                |  Caution: The 'permai' index is totally identical to
                |  the read name as stored in the file. So it can
                |  contains spaces and also lower and upper letters
                |  that have to be considered different !
    --------------------------------------------------------------------

PART{Reader for 'FEM' format (ALTAIR OptiStruct)}
2.4 When the keyword 'FEM'  is used, LIRE becomes an operator which read
    an  ASCII FEM  file named FIC1  (MOT type) (FEM is a  format read an
    written in the OptiStruct Profile of HyperMesh distributed by ALTAIR
    http://www.altair.com).

    HyperMesh entity list read in Cast3M  :
      - 'Components' : MAILLAGE Objects
      - 'NodeSets'   : MAILLAGE Objects
      - 'ElemSets'   : MAILLAGE Objects

    Note : Version of HyperMesh needed >= 12.0


PART{Reader for 'NAS' format (Bulk Nastran)}
2.5 When the keyword 'NAS'  is used, LIRE becomes an operator which read
    an  ASCII NASTRAN  file named FIC1  (MOT type)

    List of entities read :
      - 'MAILLAGES'    : MAILLAGE Objects
      - 'SYSTEMES'     : MAILLAGE Objects
      - 'RBE2'         : MAILLAGE Objects (POI1 type)
                         Node 1 ==> Master Node
      - 'BLOCAGES'     : MAILLAGE Objects (POI1 type)
      - 'TEMPERATURES' : CHPOINT  Objects
      - 'FORCES'       : CHPOINT  Objects
      - 'MOMENTS'      : CHPOINT  Objects


PART{Reader for 'CSV' format}
2.6 When the keyword 'CSV'  is used, LIRE becomes an operator which read
    an  ASCII  file  named FIC1 (MOT type) with the 'CSV'  format.
    TAB1 table contains as much LISTREEL object than colons in the file.
    They are indiced from 1 to N in the table.
      'DEBU' : The  file is read from  the line specified by the INTEGER
               ENTI1.
      'SEPA' : It's  possible to  precise  the separator  in  the  file.
               MOT1 must be a 1 character length of type MOT.
               By default, the separator is ';'.


PART{Reader for 'STL' format (Stereolithography)}
2.7 When the keyword 'STL'  is used, LIRE becomes an operator which read
    an ASCII / binary STL file named FIC1  (MOT type). The  result MAIL1
    is a MAILLAGE  type object  (Mesh) composed  of 'TRI3' elements. The
    user should  use the ELIM  directive on  MAIL1 to  suppress multiple
    nodes.

$$$$


