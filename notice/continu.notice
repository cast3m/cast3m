$$$$ CONTINU  NOTICE  FD218221  17/10/18    21:15:03     9590
                                             DATE     17/10/18


    Procedure CONTINU                       Voir aussi : PASAPAS HBM
    ______________                                       CON_CALC AFT


Section : Mecanique Resolution
Section : Mecanique Dynamique


      CONTINU TAB1;


FRAN==========================================================
    Objet :
    ______

    La procedure CONTINU propose de resoudre des problemes non-lineaires
    poses sous la forme d'equations algebriques (1) qui dependent
    d'un parametre (pseudo-temps noté t)
    par une methode de continuation par pseudo-longueur d'arc.

      R(U,t)  =  Fext(t) + Fnl(U) - Fint(U,\sigma)  = 0           (1.a)
      R(U,t)  =  Fext(t) + Fnl(U) + Z(t) U          = 0           (1.b)

    avec :

      R    : vecteur Residu
      U    : vecteur des inconnues
      Fext : vecteur des forces exterieures
      Fint : vecteur des forces internes (=\int B^T \sigma)
      Fnl  : vecteur des forces non-lineaires
      Z    : matrice de raideur dynamique (voir la procedure HBM)
      t    : pseudo-temps


    Le calcul est realise en 2 etapes :

    1. Pas predicteur :

       A partir d'une precedente position (U_n, t_n), le probleme
       linearise est resolu (2) et une nouvelle position (U_p, t_p) est
       trouvee en imposant la longueur de l'increment (3) egale a ds.

          dR/dU * dU_p = - dR/dt * dt_p                             (2)
          ds^2 = dt_p^2/dt_ref^2 + dU_p^T*dU_p / dU_ref^2           (3)

       avec :
          dU_p = U_p - U_n
          dt_p = t_p - t_n
          ds   = 1 initialement, mais de valeur adaptative
                 selon la difficulte de convergence

    2. Pas correcteurs :

       A partir de la position predite (U_p, t_p), des corrections
       successives (4) sont realisees dans le plan orthognal a la
       prediction jusqu'a  rendre le residu inferieur a une tolerance
       donnee.

          [ dR/dU  dR/dt ] * (dU^(i))  =  (-R^(i-1))                (4)
          [ dU_p   dt_p  ]   (dt^(i))     ( 0      )



    Entree :    (on indique entre parentheses les entrees valables
    _______      uniquement avec les problemens de type a ou b)

    TABHBM  =  TABLE

       . 'HBM'                        = VRAI pour indiquer que l'on
                                        souhaite resoudre un probleme
                                        du type (b)
                                        (FAUX par defaut)
       . 'MODELE'                     = modele mecanique utilise (a)
       . 'CARACTERISTIQUES'           = materiau et caracteristiques (a)
       . | 'RIGIDITE_CONSTANTE' (a) | = raideur K (hors modele)
         | 'RIGIDITE_HBM'       (b) |
       . | 'AMORTISSEMENT_CONSTANT' (a)| = amortissement C
         | 'AMORTISSEMENT_HBM'      (b)|
       . | 'MASSE_CONSTANTE' (a) |    = masse M
         | 'MASSE_HBM'       (b) |
       . | 'BLOCAGES_MECANIQUES' (a) |= Kblocages (hors modele)
         | 'BLOCAGES_HBM'        (b) |
       . 'CHARGEMENT'                 = Fext(t)

       . 'MAXI_DEPLACEMENT'           = dU_ref
       . 'TEMPS_CALCULES'             = listreel de la discretisation
                                        souhaitee pour les pseudo-pas de
                                        temps t
                                        (les temps rellements converges
                                        seront differents et stockes a
                                        l'indice TEMPS_PROG)
       . 'FREQUENCE' (b)              = evolution de la frequence
                                        fondamentale du probleme w(t)
                                        (w(t)=t par defaut)
                                        voir remarque 1 pour les unites

       . 'GRANDS_DEPLACEMENTS'        = VRAI en grand deplacements (a)
       . 'PROCEDURE_CHARMECA'         = VRAI si forces non-lineaires
                                        a: pression suiveuse
                                        b: terme Fnl(U)
                                        voir remarque 2
       . 'PROCEDURE_FREQUENCE_TEMPS' (b) = 'AFT' pour l'utilisation de
                                        la procedure AFT lors du calcul
                                        des efforts et Jacobienne non-
                                        lineaires
       . 'N_PT_TFR' (b)               = 2**N_PT_TFR points seront
                                        utilises pour la discretisation
                                        temporelle lors de l'AFT

       . 'PAS_SAUVES'                 = entier N indiquant de sauver les
                                        resultats (U,t,\sigma) dans une
                                        table tous les N pas

       . 'STABILITE'                  = listmots de mots-cles parmi :
                                      + DIAG pour sauver le nombre de
                                        termes diagonaux negatifs
                                        comptes lors de la factorisation
                                      + FLOQ pour le calcul des
                                        exposants de Floquet (b)
       . |'RESULTATS'     (a) |       = table des resultats attendus
         |'RESULTATS_HBM' (b) |
            . i . 'POINT_MESURE'
                . 'COMPOSANTES'
                . 'COULEUR'
                . 'TITRE'

       . 'MAXITERATION'               = nombre maxi d'iterations par pas
                                        (24 par defaut)
       . 'NB_ITERATION'               = nombre d'iterations juge ideal
                                        (6 par defaut)
       . 'MAXIPAS'                    = nombre maxi de pas
                                        (1000 par defaut)
       . 'PRECISION'                  = tolerance relative sur le residu
                                        (1.E-6 par defaut)
       . 'COMPOSANTES'
            . | 'FORCE'     (a) |     = listmots des composantes a uti-
            . | 'FORCE_HBM' (b) |       -liser dans le produit scalaire
                                        definissant la norme du residu


    Sortie :
    _______

    TABHBM
       . 'TEMPS'                      = table des pseudo-temps t
       . 'DEPLACEMENTS'               = table des inconnues    U
       . 'CONTRAINTES'                = table des contraintes \sigma (a)
       . 'RESULTATS_STABILITE'
            . 'DIAG'                  = listreel des resultats de
                                        DIAG(dR/dU)
            . 'FLOQ'
                . 'EXPOSANT_REEL'    |= table des parties relles et
                . 'EXPOSANT_IMAG'    |  imaginaires des exposants
                                        de Floquet (b)
       . 'TEMPS_PROG'              = listreel des pseudo-temps calcules
       . | 'RESULTATS_HBM' (a) |
         | 'RESULTATS'     (b) |
            . j . 'RESULTATS'      = listreel des resultats
                . 'RESULTATS_EVOL' = evolution associee


    Remarque 1 : probleme de type (b)
    ___________

    Les matrices ***_HBM peuvent etre generees par la procedure HBM.
    La frequence par defaut est en rad/s. Pour travailler en Hz, il faut
    multiplier AMORTISSEMENT_HBM par 2*pi et MASSE_HBM par (2*pi)**2.


    Remarque 2 :
    ___________

    Le calcul des differents termes (Residu, Raideur et leur derivee)
    est realise par la procedure CON_CALC definie dans le jeu de
    donnees dgibi.
    Si PROCEDURE_CHARMECA = VRAI, CON_CALC appelle l'une des
    procedures suivantes pour le calcul des termes non-lineaires :
    - CHARMECA (par defaut)
    - AFT      (si 'PROCEDURE_FREQUENCE_TEMPS' = mot 'AFT';) qui appelle
      a son tour CHARMECA qui realise le calcul des termes non-lineaires
      dans le domaine temporel.


ANGL==========================================================
    Description :
    ____________

    The procedur CONTINU aims at solving non-linear problems
    formulated as a set of algebraic equations (1) depending
    on a given parameter (t in 1.a and w in 1.b)
    by a continuation method by pseudo-arclength.

      R(U,t)  =  Fext(t) - Fint(U,\sigma)                         (1.a)
      R(U,w)  =  Fext(w) + Fnl(U) + Z(w) U  =  0                  (1.b)

    with :

      R    : Residual vector
      U    : vector of unknown
      Fext : vector of external forces
      Fint : vector of internal forces (=\int B^T \sigma)
      Fnl  : vector of non-linear forces
      Z(w) : dynamic stiffness (see also HBM procedur)
      t    : pseudo-time
      w    : excitation frequency (also referred as t in what following)


    The computation is done in 2 steps :

    1. Prediction step :

       From a givent previous position (U_n, t_n), the linearized
       problem is solved (2) to get a new position (U_p, t_p)
       found by imposing the arclength (3) equal to ds.

          dR/dU * dU_p = - dR/dt * dt_p                             (2)
          ds^2 = dt_p^2/dt_ref^2 + dU_p^T*dU_p / dU_ref^2           (3)

       with :
          dU_p = U_p - U_n
          dt_p = t_p - t_n
          ds   = 1 initially, but adaptative according to the
                 convergence difficulty

    2. Correction steps :

       From the predicted position (U_p, t_p), successive corrections
       (4) are performed  in the orthognal plane to the prediction
       up to obtain a residual less than the prescribed tolerance.

          [ dR/dU  dR/dt ] * (dU^(i))  =  (-R^(i-1))                (4)
          [ dU_p   dt_p  ]   (dt^(i))     ( 0      )



    Input :    (when an entry is possible for only a type of problem
    ______      it is indicated in brackets)

    TABHBM  =  TABLE

       . 'HBM'                        = VRAI to solve a type (b)
                                        problem (FAUX by default)
       . 'MODELE'                     = mecanical model (a)
       . 'CARACTERISTIQUES'           = material (a)
       . | 'RIGIDITE_CONSTANTE' (a) | = stiffness K (execpt model)
         | 'RIGIDITE_HBM'       (b) |
       . | 'AMORTISSEMENT_CONSTANT' (a)| = damping C
         | 'AMORTISSEMENT_HBM'      (b)|
       . | 'MASSE_CONSTANTE' (a) |    = mass M
         | 'MASSE_HBM'       (b) |
       . | 'BLOCAGES_MECANIQUES' (a) |= Kconstraint (except model)
         | 'BLOCAGES_HBM'        (b) |
       . 'CHARGEMENT'                 = Fext(t)
       . 'MAXI_DEPLACEMENT'           = dU_ref
       . 'TEMPS_CALCULES'             = listreel of the time steps
                                        discretization wished
                                        (actually computed time step
                                        will be different and recorded
                                        at the TEMPS_PROG index)
       . 'MAXITERATION'               = maximal number of iterations
                                        (24 by default)
       . 'NB_ITERATION'               = ideal number of iterations
                                        (6 by default)
       . 'MAXIPAS'                    = maximal number of steps
                                        (1000 by default)
       . 'PRECISION'                  = relative tolerance for the
                                        residual (1.E-6 by default)
       . 'STABILITE'                  = listmots of keywords among :
                                      + DIAG to save the number of
                                        negative terms on the diagonal
                                        when factorization
                                      + FLOQ to compute the Floquet
                                        exponents (b)
       . |'RESULTATS'     (a) |       = table of results asked for
         |'RESULTATS_HBM' (b) |
            . i . 'POINT_MESURE'
                . 'COMPOSANTES'
                . 'COULEUR'
                . 'TITRE'
       . 'PAS_SAUVES'                 = integer N indicating to save the
                                        results (U,t,\sigma) in a table
                                        every N step
       . 'GRANDS_DEPLACEMENTS'        = VRAI if large displacements (a)
       . 'PROCEDURE_CHARMECA'         = VRAI if non-linear forces
                                        a: following pressure
                                        b: Fnl(U) term
                                        see remark 2
        . 'COMPOSANTES'
            . | 'FORCE'     (a) |     = listmots of the components to
            . | 'FORCE_HBM' (b) |       use in scalar product defining
                                        the norm of the residual


    Output :
    _______

    TABHBM
       . 'TEMPS'                      = table of pseudo-time t
       . 'DEPLACEMENTS'               = table of unknowns U
       . 'CONTRAINTES'                = table of stresses \sigma (a)
       . 'RESULTATS_STABILITE'
            . 'DIAG'                  = listreel of results of
                                        DIAG(dR/dU)
            . 'FLOQ'
                . 'EXPOSANT_REEL'    |= table of real and imaginary part
                . 'EXPOSANT_IMAG'    |  of Floquet exponents (b)
       . 'TEMPS_PROG'              = listreel of computed times
       . | 'RESULTATS_HBM' (a) |
         | 'RESULTATS'     (b) |
            . j . 'RESULTATS'      = listreel of results
                . 'RESULTATS_EVOL' = associated evolution


    Remark 1 : problem of type (b)
    _________

    The matrix ***_HBM may be created with th HBM procedur


    Remark 2 :
    _________

    Some terms (as the Residual, stiffness and their derivatives)
    are computed within the CON_CALC procedur.
    If PROCEDURE_CHARMECA = VRAI, CON_CALC calls one of the following
    procedure for the computation of non-linear terms :
    - CHARMECA  (by default)
    - AFT       (if PROCEDURE_FREQUENCE_TEMPS = mot 'AFT';)





