C REPICO    SOURCE    PV        16/11/17    22:01:21     9180
      SUBROUTINE REPICO(IMATB,IMATC,CHPOD,
     $     ICOGLO,ICPRIB,ICDUAB,ICPRIC,ICDUAC,ICPRID,
     $     IMPR,IRET)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8 (A-H,O-Z)
C***********************************************************************
C NOM         : REPICO
C DESCRIPTION :  Repérage global des inconnues : ICOGLO (LISTMOTS)
C      Noms des inconnues primales et duales de B et C exprimées
C      dans ce repérage : IC{PRI,DUA}{B,C}
C      (Eventuellement, si CHPOD.NE.0) :
C      Noms des inconnues de CHPOD dans ce repérage
C
C LANGAGE     : ESOPE
C AUTEUR      : Stéphane GOUNAND (CEA/DRN/DMT/SEMT/LTMF)
C               mél : gounand@semt2.smts.cea.fr
C***********************************************************************
C APPELES          : CUNIQ, CREPER
C APPELES (E/S)    : ECRCHA, ECROBJ
C APPELE PAR       : PROMAT
C***********************************************************************
C ENTREES            : IMATB, IMATC, CHPOD
C SORTIES            : ICOGLO, ICPRIB, ICDUAB, ICPRIC, ICDUAC, ICPRID
C CODE RETOUR (IRET) : = 0 si tout s'est bien passé
C***********************************************************************
C VERSION    : v1, 28/01/2000, version initiale
C HISTORIQUE : v1, 28/01/2000, création
C HISTORIQUE :
C HISTORIQUE :
C***********************************************************************
C Prière de PRENDRE LE TEMPS de compléter les commentaires
C en cas de modification de ce sous-programme afin de faciliter
C la maintenance !
C***********************************************************************
-INC CCOPTIO
-INC SMLMOTS
      INTEGER JGN,JGM
      POINTEUR ICOGLO.MLMOTS
      POINTEUR GPINCS.MLMOTS
      POINTEUR MLPRID.MLMOTS
-INC SMLENTI
      INTEGER JG
      POINTEUR ICPRIB.MLENTI
      POINTEUR ICDUAB.MLENTI
      POINTEUR ICPRIC.MLENTI
      POINTEUR ICDUAC.MLENTI
      POINTEUR ICPRID.MLENTI
-INC SMCHPOI
      POINTEUR CHPOD.MCHPOI
-INC SMMATRIK
      POINTEUR IMATB.IMATRI
      POINTEUR IMATC.IMATRI
*
      INTEGER IMPR,IRET
*
      INTEGER LNMOTS
      PARAMETER (LNMOTS=8)
*
      INTEGER NBMB,NBMC,NBMD,NIPRID,NIUNIQ
      INTEGER IBMB,IBMC,IBMD,IIPRID,IINC
*
*
* Executable statements
*
      IF (IMPR.GT.1) WRITE(IOIMP,*) 'Entrée dans repico.eso'
* Enumération de tous les noms d'inconnues
* Extraction éventuelles des composantes du chpoint
* avec modif. pour qu'ils fassent 8 lettres
      IF (CHPOD.NE.0) THEN
         CALL ECRCHA('COMP')
         CALL ECROBJ('CHPOINT ',CHPOD)
         CALL EXTRAI
         CALL LIROBJ('LISTMOTS',MLPRID,1,IRET)
         IF (IRET.EQ.0) THEN
            WRITE(IOIMP,*) 'erreur extraction des composantes chpod'
            GOTO 9999
         ENDIF
         SEGACT MLPRID*MOD
         NIPRID=MLPRID.MOTS(/2)
         JGN=LNMOTS
         JGM=NIPRID
         SEGADJ,MLPRID
         DO 1 IIPRID=1,NIPRID
            MLPRID.MOTS(IIPRID)=
     $           MLPRID.MOTS(IIPRID)(1:4)//'    '
 1       CONTINUE
      ELSE
         MLPRID=0
      ENDIF
      SEGACT IMATB
      SEGACT IMATC
      NBMB=IMATB.LISPRI(/2)
      NBMC=IMATC.LISPRI(/2)
      JGN=LNMOTS
      JGM=2*(NBMB+NBMC)
      IF (MLPRID.NE.0) THEN
         NBMD=MLPRID.MOTS(/2)
         JGM=JGM+NBMD
      ENDIF
*
      SEGINI GPINCS
      IINC=0
      DO 2 IBMB=1,NBMB
         IINC=IINC+1
         GPINCS.MOTS(IINC)=IMATB.LISPRI(IBMB)
 2    CONTINUE
      DO 3 IBMC=1,NBMC
         IINC=IINC+1
         GPINCS.MOTS(IINC)=IMATC.LISPRI(IBMC)
 3    CONTINUE
      DO 4 IBMB=1,NBMB
         IINC=IINC+1
         GPINCS.MOTS(IINC)=IMATB.LISDUA(IBMB)
 4    CONTINUE
      DO 5 IBMC=1,NBMC
         IINC=IINC+1
         GPINCS.MOTS(IINC)=IMATC.LISDUA(IBMC)
 5    CONTINUE
      IF (MLPRID.NE.0) THEN
         DO 6 IBMD=1,NBMD
            IINC=IINC+1
            GPINCS.MOTS(IINC)=MLPRID.MOTS(IBMD)
 6       CONTINUE
      ENDIF
* Elimination des doublons dans les noms
      JGN=LNMOTS
      JGM=IINC
      SEGINI ICOGLO
      CALL CUNIQ(GPINCS.MOTS,LNMOTS,IINC,
     $     ICOGLO.MOTS,NIUNIQ,
     $     IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      JGN=LNMOTS
      JGM=NIUNIQ
      SEGADJ,ICOGLO
      SEGSUP GPINCS
* Noms des inconnues primales et duales de B et C exprimées
* dans le repérage défini par ICOGLO : IC{PRI,DUA}{B,C}
      JG=NBMB
      SEGINI ICPRIB
      CALL CREPER(LNMOTS,NBMB,NIUNIQ,
     $     IMATB.LISPRI,ICOGLO.MOTS,
     $     ICPRIB.LECT,
     $     IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      SEGDES ICPRIB
      JG=NBMB
      SEGINI ICDUAB
      CALL CREPER(LNMOTS,NBMB,NIUNIQ,
     $     IMATB.LISDUA,ICOGLO.MOTS,
     $     ICDUAB.LECT,
     $     IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      SEGDES ICDUAB
      JG=NBMC
      SEGINI ICPRIC
      CALL CREPER(LNMOTS,NBMC,NIUNIQ,
     $     IMATC.LISPRI,ICOGLO.MOTS,
     $     ICPRIC.LECT,
     $     IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      SEGDES ICPRIC
      JG=NBMC
      SEGINI ICDUAC
      CALL CREPER(LNMOTS,NBMC,NIUNIQ,
     $     IMATC.LISDUA,ICOGLO.MOTS,
     $     ICDUAC.LECT,
     $     IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      SEGDES ICDUAC
      IF (MLPRID.NE.0) THEN
         JG=NBMD
         SEGINI ICPRID
         CALL CREPER(LNMOTS,NBMD,NIUNIQ,
     $        MLPRID.MOTS,ICOGLO.MOTS,
     $        ICPRID.LECT,
     $        IMPR,IRET)
         IF (IRET.NE.0) GOTO 9999
         SEGDES ICPRID
         SEGSUP MLPRID
      ELSE
         ICPRID=0
      ENDIF
      SEGDES ICOGLO
      SEGDES IMATC
      SEGDES IMATB
*
* Normal termination
*
      IRET=0
      RETURN
*
* Format handling
*
*
* Error handling
*
 9999 CONTINUE
      IRET=1
      WRITE(IOIMP,*) 'An error was detected in subroutine repico'
      RETURN
*
* End of subroutine REPICO
*
      END







