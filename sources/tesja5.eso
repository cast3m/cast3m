C TESJA5    SOURCE    GOUNAND   05/12/21    21:37:13     5281
      SUBROUTINE TESJA5(MYLRFS,MYPGS,
     $     IMPR,IRET)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
C***********************************************************************
C NOM         : TESJA5
C PROJET      : Noyau linéaire NLIN
C DESCRIPTION : On vérifie le calcul de la matrice jacobienne et de son
C               déterminant sur un segment en 3D...
C
C LANGAGE     : ESOPE
C AUTEUR      : Stéphane GOUNAND (CEA/DRN/DMT/SEMT/LTMF)
C               mél : gounand@semt2.smts.cea.fr
C***********************************************************************
C APPELES          :
C APPELES (E/S)    :
C APPELES (BLAS)   :
C APPELES (CALCUL) :
C APPELE PAR       : TESTJA
C***********************************************************************
C SYNTAXE GIBIANE    :
C ENTREES            :
C ENTREES/SORTIES    :
C SORTIES            :
C***********************************************************************
C VERSION    : v1, 16/08/99, version initiale
C HISTORIQUE : v1, 16/08/99, création
C HISTORIQUE :
C HISTORIQUE :
C***********************************************************************
C Prière de PRENDRE LE TEMPS de compléter les commentaires
C en cas de modification de ce sous-programme afin de faciliter
C la maintenance !
C***********************************************************************
-INC CCOPTIO
-INC CCREEL
CBEGININCLUDE SELREF
      SEGMENT ELREF
      CHARACTER*(LNNOM)  NOMLRF
      CHARACTER*(LNFORM) FORME
      CHARACTER*(LNTYPL) TYPEL
      CHARACTER*(LNESP)  ESPACE
      INTEGER DEGRE
      REAL*8 XCONOD(NDIMEL,NBNOD)
      INTEGER NPQUAF(NBDDL)
      INTEGER NUMCMP(NBDDL)
      INTEGER QUENOD(NBDDL)
      INTEGER ORDDER(NDIMEL,NBDDL)
      POINTEUR MBPOLY.POLYNS
      ENDSEGMENT
      SEGMENT ELREFS
      POINTEUR LISEL(0).ELREF
      ENDSEGMENT
CENDINCLUDE SELREF
      POINTEUR MYLRFS.ELREFS
      POINTEUR MYLRF.ELREF
CBEGININCLUDE SPOGAU
      SEGMENT POGAU
      CHARACTER*(LNNPG)  NOMPG
      CHARACTER*(LNTPG)  TYPMPG
      CHARACTER*(LNFPG)  FORLPG
      INTEGER NORDPG
      REAL*8 XCOPG(NDLPG,NBPG)
      REAL*8 XPOPG(NBPG)
      ENDSEGMENT
      SEGMENT POGAUS
      POINTEUR LISPG(0).POGAU
      ENDSEGMENT
CENDINCLUDE SPOGAU
      POINTEUR MYPGS.POGAUS
      POINTEUR MYPG.POGAU
CBEGININCLUDE SMCHAEL
      SEGMENT MCHAEL
      POINTEUR IMACHE(N1).MELEME
      POINTEUR ICHEVA(N1).MCHEVA
      ENDSEGMENT
      SEGMENT MCHEVA
      REAL*8 VELCHE(NBLIG,NBCOL,N2LIG,N2COL,NBPOI,NBELM)
      ENDSEGMENT
      SEGMENT LCHEVA
      POINTEUR LISCHE(NBCHE).MCHEVA
      ENDSEGMENT
CENDINCLUDE SMCHAEL
      INTEGER NBLIG,NBCOL,N2LIG,N2COL,NBPOI,NBELM
      POINTEUR JCOOR.MCHEVA
      POINTEUR JMAJAC.MCHEVA
      POINTEUR JMIJAC.MCHEVA
      POINTEUR JDTJAC.MCHEVA
      POINTEUR FFGPG.MCHEVA
      POINTEUR DFFGPG.MCHEVA
*
      INTEGER IMPR,IRET
*
      REAL*8 JXX(3,1)
      REAL*8 X1,X2
      REAL*8 Y1,Y2
      REAL*8 Z1,Z2
      REAL*8 DETJXX,DETA,JXXA,XERR
      REAL*8 XERREL
      INTEGER NPG,INPG,ILIG,INBTES
      LOGICAL LERJ
*
* Executable statements
*
      WRITE(IOIMP,*) 'Entrée dans tesja5'
*
* On teste sur un segment à deux noeuds en 3D (D&T p.215 pour le 2D)
* avec cinq points de Gauss (sens direct et indirect pour le segment).
* Dimension des espaces de référence et réels : 1, 3
*
      CALL FILRF('H1D1SE2',MYLRFS,MYLRF,IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      CALL FIPG('GAC1-9-5',MYPGS,MYPG,IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      CALL KFNREF(MYLRF,MYPG,FFGPG,DFFGPG,IMPR,IRET)
      IF (IRET.NE.0) GOTO 9999
      DO 3 INBTES=1,2
         IF (INBTES.EQ.1) THEN
            X1=2.D0*XPI
            Y1=XPI
            Z1=3.D0*XPI
            X2=-1.D0
            Y2=-2.D0
            Z2=-3.D0
         ELSEIF (INBTES.EQ.2) THEN
            X2=2.D0*XPI
            Y2=XPI
            Z2=3.D0*XPI
            X1=-1.D0
            Y1=-2.D0
            Z1=-3.D0
         ELSE
            WRITE(IOIMP,*) 'Erreur dans le nombre de tests'
            GOTO 9999
         ENDIF
         NBELM=1
         NBPOI=1
         N2COL=3
         N2LIG=1
         NBCOL=2
         NBLIG=1
         SEGINI JCOOR
         JCOOR.VELCHE(1,1,1,1,1,1)=X1
         JCOOR.VELCHE(1,1,1,2,1,1)=Y1
         JCOOR.VELCHE(1,1,1,3,1,1)=Z1
         JCOOR.VELCHE(1,2,1,1,1,1)=X2
         JCOOR.VELCHE(1,2,1,2,1,1)=Y2
         JCOOR.VELCHE(1,2,1,3,1,1)=Z2
         SEGDES JCOOR
         IF (IMPR.GT.3) THEN
            WRITE(IOIMP,*) 'JCOOR'
            CALL PRCHVA(JCOOR,IMPR,IRET)
            IF (IRET.NE.0) GOTO 9999
         ENDIF
         LERJ=.FALSE.
         CALL GEOLIN(DFFGPG,JCOOR,NBELM,
     $        JMAJAC,JMIJAC,JDTJAC,LERJ,
     $        IMPR,IRET)
         IF (IRET.NE.0) GOTO 9999
*
*     Test sur les valeurs de la matrice jacobienne et de son
*     déterminant aux points de Gauss...
*
         SEGACT MYPG
         SEGACT JMAJAC
         SEGACT JDTJAC
         NPG=MYPG.XCOPG(/2)
         JXX(1,1)=(X2-X1)/2.D0
         JXX(2,1)=(Y2-Y1)/2.D0
         JXX(3,1)=(Z2-Z1)/2.D0
         DETJXX=SQRT(JXX(1,1)*JXX(1,1)
     $        +JXX(2,1)*JXX(2,1)+JXX(3,1)*JXX(3,1))
         DO INPG=1,JMAJAC.VELCHE(/5)
            DO 322 ILIG=1,3
               JXXA=JMAJAC.VELCHE(1,1,ILIG,1,INPG,1)
               XERR=XERREL(JXX(ILIG,1),JXXA)
               IF (XERR.GT.10.D0*XZPREC) THEN
                  WRITE(IOIMP,*) 'Erreur calcul mat. jac.'
                  WRITE(IOIMP,*) 'XERR=',XERR, ' XZPREC=',XZPREC
                  WRITE(IOIMP,*) 'JXX=',JXX(ILIG,1)
                  WRITE(IOIMP,*) 'JXXA=',JXXA
                  GOTO 9999
               ENDIF
 322        CONTINUE
         ENDDO
         DO INPG=1,JDTJAC.VELCHE(/5)
            DETA=JDTJAC.VELCHE(1,1,1,1,INPG,1)
            XERR=XERREL(DETJXX,DETA)
            IF (XERR.GT.0.1D0) THEN
               WRITE(IOIMP,*) 'Erreur calcul det. mat. jac.'
               WRITE(IOIMP,*) 'XERR=',XERR, ' XZPREC=',XZPREC
               WRITE(IOIMP,*) 'DETJXX=',DETJXX
               WRITE(IOIMP,*) 'DETA=',DETA
               GOTO 9999
            ENDIF
         ENDDO
         SEGDES MYPG
         SEGDES JDTJAC
         SEGDES JMAJAC
         IF (IMPR.GT.3) THEN
            WRITE(IOIMP,*) 'JMAJAC'
            CALL PRCHVA(JMAJAC,IMPR,IRET)
            IF (IRET.NE.0) GOTO 9999
*            WRITE(IOIMP,*) 'JMIJAC'
*            CALL PRCHVA(JMIJAC,IMPR,IRET)
*            IF (IRET.NE.0) GOTO 9999
            WRITE(IOIMP,*) 'JDTJAC'
            CALL PRCHVA(JDTJAC,IMPR,IRET)
            IF (IRET.NE.0) GOTO 9999
         ENDIF
         WRITE(IOIMP,*) 'Test',INBTES,' successful'
 3    CONTINUE
*
* Normal termination
*
      IRET=0
      RETURN
*
* Format handling
*
*
* Error handling
*
 9999 CONTINUE
      IRET=1
      WRITE(IOIMP,*) 'An error was detected in subroutine tesja5'
      RETURN
*
* End of subroutine tesja5
*
      END


