C RVCEPE    SOURCE    STRU      08/12/22    21:15:31     6246
c     Sous-Programme du module MISTRAL0
C     --------------------------------------------------------------------------
      SUBROUTINE RVCEPE (VEPSE, TT,FI,PSI, SEQ,RR,RR0,EPSE,EPSEQ,
     &                   IDP, NDPI,NDVP, PRVCE, NPRVCE, EPSEQP,EPEQP0)
C     --------------------------------------------------------------------------
C     Calcul des termes EPSEQP et EPEQP0 de l'expression suivante de la
C     derivee par rapport au temps de la deformation equivalente EPSEQ
C     relative aux deformations plastiques de nature IDP :
C                dEPSEQ/dt = EPSEQP + ( EPEQP0*VEPSE(0) )
C     en fonction :
C     - de la vitesse de deformation equivalente VEPSE(IDP),
C     - de la temperature TT,
C     - du flux de neutrons rapides FI,
C     - de la variable de durcissement du a l'irradiation PSI *,
C     - de la contrainte equivalente SEQ *,
C     - des contraintes seuil eventuelles RR et RR0(EPSEQ=0) *,
C     - des deformations equivalentes EPSE et EPSEQ *,
C     (*  relatives aux deformations plastiques de nature IDP)
C     - des vitesses de deformation equivalente VEPSE(IDPP) pour les autres
C     natures de deformations (allant de 1-NDPI a NDVP),
C     - des parametres du materiau transmis dans PRVCE,
C     NPRVCE (incremente ici) etant en entree le nombre de ceux
C     correspondant aux deformations de natures IDPP < IDP.
C     --------------------------------------------------------------------------
      IMPLICIT INTEGER (I-N)
      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER ( NPTTM = 5 , NPPSIM = 6 )
      PARAMETER ( NPEDIM = 13+6*NPTTM+NPPSIM )
c     (NPEDIM = 49)
      PARAMETER ( NVM=2 , NPATDM = 14 , NPFIM = 9 )
      PARAMETER ( NPERVM = 11+NVM*(NPEDIM+2*NPATDM+NPFIM+11) )
c     (NPERVM = 205)
      DIMENSION VEPSE(0:*)
      DIMENSION PRVCE(1:*)
      DIMENSION PERV(1:NPERVM)
C     ------------------------------------------------------------------
      IF (IDP.EQ.0) THEN
       EPSEQP = 0.
       EPEQP0 = 1.
      ELSE
       EPSEQP = VEPSE(IDP)
       EPEQP0 = 0.
      END IF
C     -----------------------
C     Restauration eventuelle
C
      NPRVCE = NPRVCE+1
      KR = NINT(PRVCE(NPRVCE))
      IF (KR.NE.0) THEN
       NPRVCE = NPRVCE+1
       NPERV = NINT(PRVCE(NPRVCE))
       DO IP = 1,NPERV
        PERV(IP) = PRVCE(NPRVCE+IP)
       END DO
       NPRVCE = NPRVCE+NPERV
       IF (KR.EQ.1) THEN
        S = EPSEQ
        R = 0.
       ELSE
        S = RR
        R = RR0
       END IF
       IF (S.GT.R) THEN
        CALL ECOREV (S,R,EPSE,TT,FI,PSI, PERV, EPEQPR)
        EPSEQP = EPSEQP-EPEQPR
       END IF
      END IF
C     -----------------------
C     Vieillissement eventuel
C
      NPRVCE = NPRVCE+1
      KV = NINT(PRVCE(NPRVCE))
      IF (KV.NE.0) THEN
       NPRVCE = NPRVCE+1
       NPERV = NINT(PRVCE(NPRVCE))
       DO IP = 1,NPERV
        PERV(IP) = PRVCE(NPRVCE+IP)
       END DO
       NPRVCE = NPRVCE+NPERV
       CALL ECOREV (SEQ,0.D0,EPSEQ,TT,FI,PSI, PERV, EPEQPV)
       EPSEQP = EPSEQP+EPEQPV
      END IF
C     -------------------
C     Couplages eventuels
C
      NPRVCE = NPRVCE+1
      KC = NINT(PRVCE(NPRVCE))
      IF (KC.NE.0) THEN
       DO IDPP = 1-NDPI,NDVP
        IF (IDPP.NE.IDP) THEN
         NPRVCE = NPRVCE+1
         IF (IDPP.EQ.0) THEN
          EPEQP0 = PRVCE(NPRVCE)
         ELSE
          EPSEQP = EPSEQP+PRVCE(NPRVCE)*VEPSE(IDPP)
         END IF
        END IF
       END DO
      END IF
C     ------------------------------------------------------------------
      RETURN
      END

