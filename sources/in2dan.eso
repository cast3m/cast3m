C IN2DAN    SOURCE    JC220346  16/11/29    21:15:21     9221
      LOGICAL FUNCTION IN2DAN(IP1,IP2,I1,I2,I3,PM1,PM2)
*
*  verifie si le segment ip1 ip2 passe a l'interieur du triangle
*  i1,i2,i3.   pm1 et pm2 sont les produits mixes deja calcules
*
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
-INC CCREEL
-INC CCOPTIO
-INC TDEMAIT
      in2dan = .false.
      if (abs(pm2-pm1).lt.xpetit) then
        in2dan=.true.
        return
      endif
*  calcul du point d'intersection :
      xp=(pm2*xyz(1,ip1)-pm1*xyz(1,ip2))/(pm2-pm1)
      yp=(pm2*xyz(2,ip1)-pm1*xyz(2,ip2))/(pm2-pm1)
      zp=(pm2*xyz(3,ip1)-pm1*xyz(3,ip2))/(pm2-pm1)
*     write (6,*) ' in2dan pt inter ',xp,yp,zp
*     write (6,*) ' in2dan i1 ',xyz(1,i1),xyz(2,i1),xyz(3,i1)
*     write (6,*) ' in2dan i2 ',xyz(1,i2),xyz(2,i2),xyz(3,i2)
*     write (6,*) ' in2dan i3 ',xyz(1,i3),xyz(2,i3),xyz(3,i3)
*  calcul des produits scalaires par rapport au trois cotes
      xv1=xyz(1,i1)-xp
      yv1=xyz(2,i1)-yp
      zv1=xyz(3,i1)-zp
      xv2=xyz(1,i2)-xp
      yv2=xyz(2,i2)-yp
      zv2=xyz(3,i2)-zp
      xv3=xyz(1,i3)-xp
      yv3=xyz(2,i3)-yp
      zv3=xyz(3,i3)-zp
*  vecteur normal
      xn=(yv2-yv1)*(zv3-zv2)-(zv2-zv1)*(yv3-yv2)
      yn=(zv2-zv1)*(xv3-xv2)-(xv2-xv1)*(zv3-zv2)
      zn=(xv2-xv1)*(yv3-yv2)-(yv2-yv1)*(xv3-xv2)
*     write (6,*) ' in2dan vct norm ',xn,yn,zn
*  produits mixtes
      sc1=xn*(yv2*zv3-yv3*zv2)+yn*(zv2*xv3-zv3*xv2)+zn*(xv2*yv3-xv3*yv2)
      sc2=xn*(yv3*zv1-yv1*zv3)+yn*(zv3*xv1-zv1*xv3)+zn*(xv3*yv1-xv1*yv3)
      sc3=xn*(yv1*zv2-yv2*zv1)+yn*(zv1*xv2-zv2*xv1)+zn*(xv1*yv2-xv2*yv1)
*  tests
*      if (sc1*sc2.gt.1e-30.and.sc2*sc3.gt.1e-30)  then
      if (sc1*sc2.gt.1e-30.and.sc2*sc3.gt.xpetit)  then
*      write (6,*) 'in2dan rate'
       in2dan = .true.
      endif
      return
      end






