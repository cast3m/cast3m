C TYCOMP    SOURCE    CB215821  18/09/21    21:16:54     9930

C----------------------------------------------------------------------C
C
C         Ce ss-programme identifie le type d'un MCHAML
C         associe au nom de sa composante MOT1
C         dans le SEGMENT NOMID du MMODEL IPMOD1
C         (voir notice REDU)
C
C Entrees :
C         IPMOD1 : pointeur su SEGMENT NOMID, suppose actif en entree
C         MOT1   : nom de composante a identifier
C
C Sorties :
C         TYPE   : type du MCHAML identifie
C         LTYP   : longueur de la chaine de caractere "TYPE"
C
C----------------------------------------------------------------------C
      SUBROUTINE TYCOMP(IPMOD1,MOT1,TYPE,LTYP)

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT INTEGER(I-N)

-INC CCOPTIO
-INC SMCHAML
-INC SMMODEL

      PARAMETER (NMOT=12,NNOMID=14,NPAR=4)
      CHARACTER*(50) TYPE
      CHARACTER*(25) LISTIT(NMOT)
      INTEGER        LONTIT(NMOT)
      CHARACTER*(8)  MOCP,MOT,MOT1
      CHARACTER*(4)  NOMPAR(NPAR)
      DIMENSION      INOMID(NNOMID)

      DATA LISTIT / 'DEPLACEMENTS', 'FORCES'      , 'TEMPERATURES',
     &              'GRADIENT'    , 'DEFORMATIONS',
     &              'CONTRAINTES' , 'CONTRAINTES PRINCIPALES',
     &              'DEFORMATIONS INELASTIQUES', 'VARIABLES INTERNES',
     &              'CARACTERISTIQUES','GRADIENT DE FLEXION',' '/
      DATA LONTIT / 12,6,12,
     &              8,12,
     &              11,23,
     &              25,18,
     &              16,19,1/

C  On identifie le numero dans la liste de NOMID au type dans LISTIT
*                    'DEPLACEM', 'FORCES  ', 'GRADIENT', 'CONTRAIN',
      DATA INOMID /       1    ,     2     ,     4     ,     6     ,
*                    'DEFORMAT', 'MATERIAU', 'CARACTER', 'TEMPERAT',
     &                    5    ,    10     ,     10    ,     3     ,
*                    'PRINCIPA', 'VARINTER', 'GRAFLEXI', 'VINMETAL',
     &                    7    ,     9     ,     11    ,    12     ,
*                    'DEFINELA', 'PARAMEXT'/
     &                    8    ,    12/
C
C Cas particuliers, type : SCALAIRE...
      DATA NOMPAR /  'SCAL','MAHO','MIDL','SURF'/
*                        1 ,    2 ,    3 ,    4 /

C Verifications elementaires
C Pas de soucis pour renvoyer valeurs pas defaut
      IF (IPMOD1.EQ.0) RETURN

      LM1 = 0
      DO II = 8,1,-1
        IF(MOT1(II:II) .NE. ' ')THEN
          LM1=II
          GOTO 100
        ENDIF
      ENDDO
      RETURN

 100  CONTINUE

      IMODEL = IPMOD1
      NNO    = IMODEL.LNOMID(/1)
C     write(6,*) 'IMODEL, NNO =',IMODEL, NNO
C     write(6,*) 'IMODEL.LNOMID =',(IMODEL.LNOMID(ii),ii=1,14)
      IF (NNO.EQ.0) RETURN

C Boucle sur les NOMID

      MOCP = MOT1
      TYPE = ' '
      LTYP = 0

      DO INO=1,NNO
         NOMID = IMODEL.LNOMID(INO)
         IF (NOMID.NE.0) THEN
            SEGACT, NOMID
C
            nobl=nomid.lesobl(/2)
            DO iobl=1,nobl
               mot=lesobl(iobl)
               IF (mot(1:4).EQ.mocp(1:4)) THEN
                  indno=INOMID(ino)
                  type =LISTIT(indno)
                  ltyp =LONTIT(indno)
                  GOTO 9000
               ENDIF
            ENDDO
C
            nfac=nomid.lesfac(/2)
            DO ifac=1,nfac
               mot=lesfac(ifac)
               IF (mot(1:4).EQ.mocp(1:4)) THEN
                  indno=INOMID(ino)
                  type=LISTIT(indno)
                  ltyp=LONTIT(indno)
                  GOTO 9000
               ENDIF
            ENDDO
C
         ENDIF
      ENDDO
 9000 CONTINUE
C
C Traitement des cas particuliers :
C
      if (ltyp.eq.0) then
          CALL PLACE(NOMPAR,NPAR,JSP,MOCP(1:4))
          IF (IERR.NE.0) RETURN
C
C 1/ Type SCALAIRE         : mocp = 'SCAL'
C
          IF (JSP.EQ.1) THEN
             type='SCALAIRE'
             ltyp=8

C 2/ Type MATRICE DE HOOKE : mocp = 'MAHO'
C
          ELSEIF (JSP.EQ.2) THEN
             type='MATRICE DE HOOKE'
             ltyp=16

C 3/ Type MATRICE DE RAYONNEMENT : mocp = 'MIDL' ou 'SURF'
C
          ELSEIF (JSP.EQ.3.OR.JSP.EQ.4) THEN
             type='MATRICE DE RAYONNEMENT'
             ltyp=22
          ENDIF

      endif

      END


