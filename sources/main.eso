C MAIN      SOURCE    CB215821  18/09/24    21:15:03     9931
CCC
C     PROGRAMME GIBI   MAIN     INITIALISATIONS VARIEES
C
      PROGRAM CAST3M
-INC CCOPTIO
-INC SMCOORD
-INC CCREDLE
-INC CCASSIS
      CHARACTER*1 AREA
      INTEGER     ICODE
C    PAGE DE TITRE
C    TEST ENVIRONNEMENT
      CALL GIBECO(ICONV)
      IOGRA=ICONV+1
      IF (ICONV.EQ.1) IOGRA=3
      IECHO=1-ICONV
      ICONV=0
      IF (IOGRA.GT.1) GOTO 2
      CALL PAGE
C   DATE
      CALL VDATE
   2  CONTINUE
C    INITIALISATION
      CALL DEPMAC
*    SI LECTURE AUTOMATIQUE DE DONNEES ECHO
      IF (IOLEC.EQ.3) IECHO=1

*     DEFINITION DU NOMBRE DE THREADS
      icp=1
      call getcpu(icp)
      icp=max(icp,1)
*     test combien d'entier par REAL*8
      CALL INTPDO(IREP)
      if (IREP .EQ. 2) icp=min(30,icp)
      if (IREP .EQ. 1) icp=min(62,icp)

      CALL INIthread(icp)
      nbthrs=icp
*  augmentation de la taille des fichiers de sauvegarde si 64 bits
      if (irep.eq.1) dimfic=4e9
C    DEFINITION ET IMPRESSION DE LA DATE DE LA VERSION
      CALL DEFDAT(icp)
C    DEFINITION DU TRAITEMENT DES ERREURS CORRECTIBLES
      CALL ERRCOR
C   INITIALISATION des threads intra operateur
C    INITIALISATION GEMAT
      oot=0
      CALL OOOSSG
      if (oot.eq.0) OOT=OOU
      CALL OOOXDS(1000,1000)
C    INITIALISATION REDLEC
      CALL INIRED(SREDLE)
      IREDLE=SREDLE
C   OUVERTURE DU FICHIER INFO
      CALL INFOPN(ICODE)
C   INITIALISATION DE LA PILE DE COMMUNICATION ET DE LA TABLE DES OBJETS
      CALL INILIR
C  INITIALISATION DES VARIABLES PREDEFINIES
      CALL INIALI
C  initialisation xpetit xgrand
      CALL INIREE
C  OUVERTURE DU FICHIER ERREUR
      CALL INIERR
C   CREATION SEGMENT DES POSITIONS
      NBPTS=0
      SEGINI MCOORD

C   Initialisation verrou
      CALL VERROU(1)

C   NOUVELLES
      CALL JOURNA
C   OUVERTURE DU FICHIER PROCEDURE
      CALL PROCPN(AREA,ICODE)
C   DERNIERE INITIALISATION : LISTE DES SEGMENTS PERMANENTS
      CALL INIMEN
C   INITIALISATION ASSISTANTS reportee a la premiere utilisation de ASSI
        nbescr=icp
        nbesc=0
* il est necessaire d'initialiser les thread esope, meme si il y en a 0
**        call iniass(nbesc)
C   FIN DES INITIALISATIONS
      CALL PILOT
      CALL FIN
      STOP
      END


