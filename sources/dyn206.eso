C DYN206    SOURCE    BP208322  16/06/06    21:15:05     8944
      SUBROUTINE DYN206(I,ITLB,ITYP,KTLIAB,NPLB)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
*--------------------------------------------------------------------*
*                                                                    *
*     Opérateur DYNE : algorithme de Fu - de Vogelaere               *
*     ________________________________________________               *
*                                                                    *
*     Remplissage des tableaux de description des liaisons sur       *
*     la base à partir des informations contenues dans la            *
*     table ILIB (liaison de type ..._PLAN).                         *
*     Liaison POINT_PLAN avec ou sans amortissement                  *
*     Liaison POINT_PLAN_FROTTEMENT avec ou sans amortissement       *
*     Liaison CERCLE_PLAN_FROTTEMENT avec ou sans amortissement      *
*     Liaison POINT_PLAN_FLUIDE                                      *
*                                                                    *
*     Paramètres:                                                    *
*                                                                    *
* e   I       Numéro de la liaison.                                  *
* e   ITLB    Table rassemblant la description d'une liaison.        *
* e   ITYP    Type de la liaison.                                    *
*  s  KTLIAB  Segment descriptif des liaisons sur base B.            *
* e   NPLB    Nombre total de points.                                *
*                                                                    *
*                                                                    *
*     Auteur, date de création:                                      *
*                                                                    *
*     Samuel DURAND, le 18 Octobre 1996.                             *
*                                                                    *
*--------------------------------------------------------------------*
-INC CCOPTIO
-INC SMCOORD
-INC SMELEME
-INC SMCHPOI
*
      SEGMENT MTLIAB
         INTEGER IPALB(NLIAB,NIPALB),IPLIB(NLIAB,NPLBB),JPLIB(NPLB)
         REAL*8 XPALB(NLIAB,NXPALB)
         REAL*8 XABSCI(NLIAB,NIP),XORDON(NLIAB,NIP)
      ENDSEGMENT
*
      SEGMENT MLIGNE
         INTEGER KPLIB(NPLB)
      ENDSEGMENT
*
      LOGICAL L1,L0
      CHARACTER*8 MONAMO,MONESC,MONREC,MONJEU,CMOT,CMOT1,MONSYM,CHARRE
*
      MTLIAB = KTLIAB
      SEGINI MLIGNE
*
* --- choc élémentaire LIGNE_LIGNE_FROTTEMENT
*            avec ou sans amortissement
*
         CALL ACCTAB(ITLB,'MOT',I0,X0,'LIGNE_MAITRE',L0,IP0,
     &                    'MAILLAGE',I1,X1,'  ',L1,IMAI)
         IF (IERR.NE.0) RETURN
         MONESC = ' '
         CALL ACCTAB(ITLB,'MOT',I0,X0,'LIGNE_ESCLAVE',L0,IP0,
     &                    MONESC,I1,X1,CHARRE,L1,IESC)
         IF (IERR.NE.0) RETURN
         CALL ACCTAB(ITLB,'MOT',I1,X0,'RAIDEURS',L0,IP0,
     &                    'CHPOINT',I0,X1,'  ',L1,IRAIES)
         IF (IERR.NE.0) RETURN
         CALL ACCTAB(ITLB,'MOT',I1,X0,'COEFFICIENT_GLISSEMENT',L0,IP0,
     &                    'FLOTTANT',I0,XGLIS,'  ',L1,IP1)
         IF (IERR.NE.0) RETURN
         CALL ACCTAB(ITLB,'MOT',I1,X0,'COEFFICIENT_ADHERENCE',L0,IP0,
     &                    'FLOTTANT',I0,XADHE,'  ',L1,IP1)
         IF (IERR.NE.0) RETURN
         CALL ACCTAB(ITLB,'MOT',I1,X0,'RAIDEUR_TANGENTIELLE',L0,IP0,
     &                    'FLOTTANT',I0,XRAIT,'  ',L1,IP1)
         IF (IERR.NE.0) RETURN
         CALL ACCTAB(ITLB,'MOT',I1,X0,'AMORTISSEMENT_TANGENTIEL',L0,
     &                    IP0,'FLOTTANT',I0,XAMOT,'  ',L1,IP1)
         IF (IERR.NE.0) RETURN
*
         MONAMO = ' '
         CALL ACCTAB(ITLB,'MOT',I0,X0,'AMORTISSEMENTS',L0,IP0,
     &                    MONAMO,I1,X1,CHARRE,L1,IAMOES)
         IF (IERR.NE.0) RETURN
*
         MONREC = ' '
         CALL ACCTAB(ITLB,'MOT',I0,X0,'RECHERCHE',L0,IP0,
     &                    MONREC,I1,X1,CMOT,L1,IP1)
         IF (IERR.NE.0) RETURN
*
         MONJEU = ' '
         CALL ACCTAB(ITLB,'MOT',I1,X0,'JEU',L0,IP0,
     &                    MONJEU,I0,XJEU,CHARRE,L1,IP1)
         IF (IERR.NE.0) RETURN
*
*bp,2016 petit message informatif pour ceux qui, comme moi, n'auraient
*        pas lu la notice jusqu'au bout :
         IF(XRAIT.LT.0.D0) THEN
           IF(XAMOT.LE.0D0.OR.IIMPI.GT.0) THEN
           WRITE(IOIMP,*) 'Liaison elementaire ..._FROTTEMENT numero',I
           WRITE(IOIMP,*)
     &      'utilisation du modele de frottement regularise d ODEN'
           ENDIF
           IF(XAMOT.LE.0D0) THEN
c             ERREUR:  %m1:8 = %r1 inferieur a %r2
              MOTERR(1:8)='AMOR*_T*'
              REAERR(1)=XAMOT
              REAERR(2)=0.D0
              CALL ERREUR(41)
              RETURN
           ENDIF
         ENDIF

         IPALB(I,1) = ITYP
         IPALB(I,3) = IDIM
         XPALB(I,3) = XGLIS
         XPALB(I,4) = XADHE
         XPALB(I,5) = XRAIT
         XPALB(I,6) = XAMOT
*
         IF (MONAMO.EQ.'CHPOINT') THEN
            IPALB(I,1) = 36
            ID1 = 7
         ELSE
            ID1 = 6
         ENDIF
*   Normale au plan
         IF (IDIM.EQ.3) THEN
            CALL ACCTAB(ITLB,'MOT',I0,X0,'NORMALE',L0,IP0,
     &                    'POINT',I1,X1,'  ',L1,INOR)
            IF (IERR.NE.0) RETURN
            IPNO  = (IDIM + 1) * (INOR - 1)
            PS = 0.D0
            DO 80 ID = 1,IDIM
               XC = XCOOR(IPNO + ID)
               PS = PS + XC * XC
 80         CONTINUE
*        end do
            IF (PS.LE.0.D0) THEN
               CALL ERREUR(162)
               RETURN
            ENDIF
            DO 81 ID=1,IDIM
               XPALB(I,ID1+ID) = XCOOR(IPNO + ID) / SQRT(PS)
 81         CONTINUE
         ELSE
            DO 82 ID=1,IDIM
               XPALB(I,ID1+ID) = 0.D0
 82         CONTINUE
         ENDIF
         IF (MONJEU.EQ.'FLOTTANT') THEN
            XPALB(I,2) = XJEU
         ELSE
            XPALB(I,2) = 0.D0
         ENDIF
*   La recherche s'effectue par défaut localement
         IF (MONREC.EQ.'MOT') THEN
            IF (CMOT(1:7).EQ.'GLOBALE') THEN
                IPALB(I,23) = 1
            ELSE
                IPALB(I,23) = 0
            ENDIF
         ELSE
            IPALB(I,23) = 0
         ENDIF
*
*   Coordonnées du maillage_maitre
         MELEME = IMAI
         SEGACT MELEME
*   Pour savoir si le contour est fermé
         NELEMA = NUM(/2)
         IF (NUM(1,1).EQ.NUM(2,NELEMA)) THEN
            NNOEMA = NELEMA
            IFERMA = 1
         ELSE
            NNOEMA = NELEMA +1
            IFERMA = 0
         ENDIF
         IPALB(I,21) = NNOEMA
         IPALB(I,24) = IFERMA
         ID2 = ID1 + 4*IDIM
         IPT = NUM(1,1)
         INPT = (IDIM+1)*(IPT-1)
         CALL PLACE2(JPLIB,NPLB,IPLAC,IPT)
         IPLIB(I,1) = IPLAC
         KPLIB(1) = IPT
         DO 84 ID=1,IDIM
            XPALB(I,ID2+ID) = XCOOR(INPT+ID)
 84         CONTINUE
         DO 85 IE=1,(NNOEMA-1)
            IPT = NUM(2,IE)
            INPT = (IDIM+1)*(IPT-1)
            CALL PLACE2(JPLIB,NPLB,IPLAC,IPT)
            IPLIB(I,IE+1) = IPLAC
            KPLIB(IE+1) = IPT
            IDIE = ID2 + IE*IDIM
            DO 86 ID=1,IDIM
                XPALB(I,IDIE+ID) = XCOOR(INPT+ID)
 86             CONTINUE
 85         CONTINUE
         SEGDES MELEME
*
*   Maillage_esclave
         ID3 = ID2 + NNOEMA*IDIM
         IF (MONESC.EQ.'POINT') THEN
* La ligne esclave est un point
            NNOEES=1
            IFERES=0
            ISYMET=-1
* Lecture des coordonnées
            IPESC = (IDIM+1)*(IESC-1)
            CALL PLACE2(JPLIB,NPLB,IPLAC,IESC)
            IPLIB(I,NNOEMA+1)  = IPLAC
            KPLIB(NNOEMA+1) = IESC
            DO 90 ID = 1,IDIM
               XPALB(I,ID3+ID) = XCOOR(IPESC+ID)
 90         CONTINUE
*
            IPALB(I,22) = NNOEES
            IPALB(I,25) = IFERES
            IPALB(I,26) = ISYMET
         ELSE
         IF (MONESC.EQ.'MAILLAGE') THEN
*    La ligne esclave est un maillage
            MELEME = IESC
            SEGACT MELEME
*   Pour savoir si le contour est fermé
            NELEES = NUM(/2)
            IF (NUM(1,1).EQ.NUM(2,NELEES)) THEN
               NNOEES = NELEES
               IFERES = 1
            ELSE
               NNOEES = NELEES +1
               IFERES = 0
            ENDIF
            IPALB(I,22) = NNOEES
            IPALB(I,25) = IFERES
*   Coordonnées du maillage_esclave
            IPT = NUM(1,1)
            INPT = (IDIM+1)*(IPT-1)
            CALL PLACE2(JPLIB,NPLB,IPLAC,IPT)
            IPLIB(I,NNOEMA+1) = IPLAC
            KPLIB(NNOEMA+1) = IPT
            DO 94 ID=1,IDIM
               XPALB(I,ID3+ID) = XCOOR(INPT+ID)
 94         CONTINUE
            DO 95 IE=1,(NNOEES-1)
               IPT = NUM(2,IE)
               INPT = (IDIM+1)*(IPT-1)
               CALL PLACE2(JPLIB,NPLB,IPLAC,IPT)
               IPLIB(I,NNOEMA+IE+1) = IPLAC
               KPLIB(NNOEMA+IE+1) = IPT
               IDIE = ID3 + IE*IDIM
               DO 96 ID=1,IDIM
                  XPALB(I,IDIE+ID) = XCOOR(INPT+ID)
 96            CONTINUE
 95         CONTINUE
            SEGDES MELEME
            MONSYM=' '
            CALL ACCTAB(ITLB,'MOT',I0,X0,'SYMETRIE',L0,IP0,
     &                    MONSYM,I1,X1,CMOT1,L1,IP1)
*   Le traitement symétrique par défaut ne s'effectue pas
            IF (MONSYM.EQ.'MOT') THEN
               IF (CMOT1(1:7).EQ.'LOCALE') THEN
                  IPALB(I,26) = 1
               ELSE
                  IF (CMOT1(1:4).EQ.'VRAI'.OR.
     &CMOT1(1:7).EQ.'GLOBALE') THEN
                     IPALB(I,26) = 0
                  ELSE
                     IPALB(I,26) = -1
                  ENDIF
               ENDIF
            ELSE
               IPALB(I,26) = -1
            ENDIF
         ELSE
* La ligne esclave n'est ni un point ni un maillage
*           CALL ERREUR(...)
            RETURN
         ENDIF
         ENDIF
* Lecture des chpoints de raideur et d amortissement
* Raideurs des noeuds esclaves  et maitres
         ID4=ID1+(2*(NNOEMA+NNOEES)+4)*IDIM
         MCHPOI=IRAIES
         SEGACT,MCHPOI
         NSOUP=IPCHP(/1)
         DO 100 IPC=1,NSOUP
             MSOUPO=IPCHP(IPC)
             SEGACT,MSOUPO
             MELEME = IGEOC
             SEGACT,MELEME
             MPOVAL = IPOVAL
             SEGACT,MPOVAL
             NNN = NUM(/2)
             DO 110 INN=1,NNN
               IPT = NUM(1,INN)
               CALL PLACE2(KPLIB,NPLB,IPLAC,IPT)
               IF (IPLAC.NE.0) THEN
                  XPALB(I,ID4+IPLAC)=VPOCHA(INN,1)
               ENDIF
 110         CONTINUE
             SEGDES,MPOVAL,MELEME
             SEGDES MSOUPO
 100     CONTINUE
         SEGDES,MCHPOI
*  Amortissement des noeuds esclaves et maitres
         ID5=ID4+NNOEMA+NNOEES
         IF (IPALB(I,1).EQ.36) THEN
              MCHPOI=IAMOES
              SEGACT,MCHPOI
              NSOUP = IPCHP(/1)
              DO 120 IPC=1,NSOUP
                 MSOUPO=IPCHP(IPC)
                 SEGACT,MSOUPO
                 MELEME = IGEOC
                 SEGACT,MELEME
                 MPOVAL = IPOVAL
                 SEGACT,MPOVAL
                 NNN=NUM(/2)
                 DO 130 INN=1,NNN
                    IPT = NUM(1,INN)
                    CALL PLACE2(KPLIB,NPLB,IPLAC,IPT)
                    IF (IPLAC.NE.0) THEN
                        XPALB(I,ID5+IPLAC)=VPOCHA(INN,1)
                    ENDIF
 130             CONTINUE
                 SEGDES MPOVAL,MELEME
                 SEGDES MSOUPO
 120           CONTINUE
               SEGDES MCHPOI
         ENDIF
         SEGSUP MLIGNE
*        end do
*
*
* --- choc élémentaire ..._PLAN...
*
*     ELSE IF (ITYP.EQ.  ) THEN
*        ...
*        ...
*
      END




