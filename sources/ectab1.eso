C ECTAB1    SOURCE    BP208322  16/09/13    13:11:44     9083

************************************************************************
*
*     OBJET :       Impression recursive d'une table
*     APPELEE PAR : ECTABL
*     Creation :    BP, 2016-09-12
*
************************************************************************

      SUBROUTINE ECTAB1(ITAB1,NMAX)


*---- Declarations -----------------------------------------------------

      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8 (A-H,O-Z)
      EQUIVALENCE (IENT,REEL)
-INC CCOPTIO
-INC SMTABLE
-INC CCNOYAU
-INC CCASSIS
      CHARACTER*8  ITYPE,ITYP
      CHARACTER*20 IWRI,IWRV
      REAL*8  XR,XRET
      LOGICAL BRET
      PARAMETER(NI=10)
      INTEGER IDEB(NI),ITAB(NI)

  601 FORMAT(2X,'.',1X,A20,9X,': ',A8,2X,A20)
  602 FORMAT(4X,'.',1X,A20,7X,': ',A8,2X,A20)
  603 FORMAT(6X,'.',1X,A20,5X,': ',A8,2X,A20)
  604 FORMAT(8X,'.',1X,A20,3X,': ',A8,2X,A20)
  605 FORMAT(10X,'.',1X,A20,1X,': ',A8,2X,A20)
  606 FORMAT(12X,'.',1X,A20,1X,': ',A8,2X,A20)
  607 FORMAT(14X,'.',1X,A20,1X,': ',A8,2X,A20)
  608 FORMAT(16X,'.',1X,A20,1X,': ',A8,2X,A20)
  609 FORMAT(18X,'.',1X,A20,1X,': ',A8,2X,A20)
  610 FORMAT(20X,'.',1X,A20,1X,': ',A8,2X,A20)


*---- Initialisations --------------------------------------------------

      IF(NMAX.GT.NI) THEN
c c       Nombre inacceptable %i1
c         INTERR(1)=NMAX
c         CALL ERREUR(36)
        WRITE(IOIMP,*) 'La profondeur est limitee a ',NI
        NMAX=NI
      ENDIF

      DO I=1,NI
        IDEB(I)=0
        ITAB(I)=0
      ENDDO
      IPROF=1
      ITAB(IPROF)=ITAB1


c---- boucle sur les profondeurs de la table ---------------------------

  100 CONTINUE
      MTABLE=ITAB(IPROF)
      SEGACT,MTABLE
      NB=MLOTAB
c       IF(IDEB(IPROF).EQ.0) THEN
c         WRITE(*,*) '#100 >>>>>>>> Niveau ',IPROF,MTABLE,NB
c       ENDIF


c---- boucle sur les indices -------------------------------------------
c     de la IPROF ieme table

  200 CONTINUE
      IDEB(IPROF)=IDEB(IPROF)+1
      IJ=IDEB(IPROF)
c       WRITE(*,*) '#200      >>>>>>>>>>> Niveau, indice ',IPROF,IJ,NB

c     on a atteint le dernier indice
      IF(IJ.GT.NB) THEN
        SEGDES,MTABLE
        IPROF=IPROF-1
c       on a atteint le dernier niveau : on a fini
        IF(IPROF.EQ.0) RETURN
        GOTO 100
      ENDIF

c     IJieme  Indice
      ITYPE=MTABTI(IJ)
      IRET=MTABII(IJ)
      XRET=RMTABI(IJ)
      IWRI=' '
      IF(ITYPE.EQ.'MOT     '.OR.ITYPE.EQ.'METHODE ') THEN
        ID=IPCHAR(IRET)
        IFI=IPCHAR(IRET+1)
        IL=IFI-ID
        IL=MIN(IL,20)
        IWRI(1:IL)=ICHARA(ID:ID+IL-1)
      ELSEIF(ITYPE.EQ.'ENTIER  ') THEN
        IV=IRET
c         WRITE(IWRI(1:8),FMT='(I8)') IV
c       bp : petite modif pour aligner a gauche les nombres
        IF(IV.LT.10) THEN
          WRITE(IWRI(1:8),FMT='(I1)') IV
        ELSEIF(IV.LT.100) THEN
          WRITE(IWRI(1:8),FMT='(I2)') IV
        ELSEIF(IV.LT.1000) THEN
          WRITE(IWRI(1:8),FMT='(I3)') IV
        ELSEIF(IV.LT.10000) THEN
          WRITE(IWRI(1:8),FMT='(I4)') IV
        ELSEIF(IV.LT.100000) THEN
          WRITE(IWRI(1:8),FMT='(I5)') IV
        ELSEIF(IV.LT.1000000) THEN
          WRITE(IWRI(1:8),FMT='(I6)') IV
        ELSEIF(IV.LT.10000000) THEN
          WRITE(IWRI(1:8),FMT='(I7)') IV
        ELSE
          WRITE(IWRI(1:8),FMT='(I8)') IV
        ENDIF
      ELSEIF(ITYPE.EQ.'FLOTTANT') THEN
        XR=XRET
        WRITE(IWRI(1:15),FMT='(E15.8)') XR
      ELSEIF(ITYPE.EQ.'LOGIQUE')THEN
        BRET=IPLOGI(IRET)
        IF(BRET) IWRI(1:4)='VRAI'
        IF(.NOT.BRET) IWRI(1:4)='FAUX'
      ELSE
        WRITE(IWRI(1:8),FMT='(I8)') IRET
      ENDIF

c     IJieme Valeur
      ITYP=MTABTV(IJ)
      IRET=MTABIV(IJ)
      XRET=RMTABV(IJ)
      IWRV=' '
      IF(ITYP.EQ.'MOT     ') THEN
        ID=IPCHAR(IRET)
        IFI=IPCHAR(IRET+1)
        IL=IFI-ID
        IL=MIN(IL,20)
        IWRV(1:IL)=ICHARA(ID:ID+IL-1)
      ELSEIF(ITYP.EQ.'ENTIER  ') THEN
        IV=IRET
        WRITE(IWRV(1:8),FMT='(I8)') IV
      ELSEIF(ITYP.EQ.'FLOTTANT')THEN
        XR=XRET
        WRITE(IWRV(1:15),FMT='(E15.8)') XR
      ELSEIF(ITYP.EQ.'LOGIQUE')THEN
        BRET=IPLOGI(IRET)
        IF(BRET) IWRV(1:4)='VRAI'
        IF(.NOT.BRET) IWRV(1:4)='FAUX'
      ELSE
        WRITE(IWRV(1:8),FMT='(I8)') IRET
      ENDIF

c     on ecrit la IJieme ligne :
      IF(IPROF.EQ.1)  WRITE(IOIMP,601) IWRI,ITYP,IWRV
      IF(IPROF.EQ.2)  WRITE(IOIMP,602) IWRI,ITYP,IWRV
      IF(IPROF.EQ.3)  WRITE(IOIMP,603) IWRI,ITYP,IWRV
      IF(IPROF.EQ.4)  WRITE(IOIMP,604) IWRI,ITYP,IWRV
      IF(IPROF.EQ.5)  WRITE(IOIMP,605) IWRI,ITYP,IWRV
      IF(IPROF.EQ.6)  WRITE(IOIMP,606) IWRI,ITYP,IWRV
      IF(IPROF.EQ.7)  WRITE(IOIMP,607) IWRI,ITYP,IWRV
      IF(IPROF.EQ.8)  WRITE(IOIMP,608) IWRI,ITYP,IWRV
      IF(IPROF.EQ.9)  WRITE(IOIMP,609) IWRI,ITYP,IWRV
      IF(IPROF.EQ.10) WRITE(IOIMP,610) IWRI,ITYP,IWRV

c     Cas D'une TABLE : on l'explore si pas trop profond
      IF(ITYP.EQ.'TABLE') THEN
c       trop profond : on ne va pas plus loin
        IF(IPROF.GE.NMAX) THEN
c           WRITE(*,*) 'trop profond ! ',IPROF,' > ou = a',NMAX
          GOTO 200
        ENDIF
c       on change de table courante
        IPROF=IPROF+1
        ITAB(IPROF)=IRET
        IDEB(IPROF)=0
        GOTO 100
      ENDIF

      GOTO 200
c---- fin de boucle sur les indices ------------------------------------


      RETURN
      END

