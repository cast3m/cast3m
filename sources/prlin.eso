C PRLIN     SOURCE    BP208322  16/11/18    21:20:11     9177
      SUBROUTINE PRLIN()
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
C***********************************************************************
C NOM         : PRLIN
C DESCRIPTION : Lecture des données et écriture des résultats
C               pour nlin
C
C LANGAGE     : ESOPE
C AUTEUR      : Stéphane GOUNAND (CEA/DRN/DMT/SEMT/LTMF)
C               mél : gounand@semt2.smts.cea.fr
C***********************************************************************
C APPELES          : PRLIN2
C APPELES (E/S)    : LIROBJ, ECROBJ
C APPELE PAR       : PILOT ou KOPS
C***********************************************************************
C SYNTAXE GIBIANE    :
C ENTREES            :
C SORTIES            : * MATLIN (type MATRIK) : matrice de rigidité.
C***********************************************************************
C VERSION    : v3.1, 30/07/04, possiblité de travailler
C                              dans l'espace de référence
C VERSION    : v3, 10/05/04, refonte complète (modif SMPOUET)
C                            lois de comportement
C VERSION    : v2, 22/09/03, refonte complète (modif SMPOUET)
C VERSION    : v1, 22/08/03, version initiale
C HISTORIQUE : v1, 22/08/03, création
C HISTORIQUE :
C HISTORIQUE :
C***********************************************************************
C Prière de PRENDRE LE TEMPS de compléter les commentaires
C en cas de modification de ce sous-programme afin de faciliter
C la maintenance !
C***********************************************************************
-INC CCGEOME
-INC CCOPTIO
-INC SMELEME
      POINTEUR CGEOM2.MELEME
      POINTEUR CSGEO2.MELEME
-INC SMTABLE
      POINTEUR TABCPR.MTABLE
      POINTEUR TABCDU.MTABLE
C-INC SMLMOTS
C      POINTEUR MOTSCL.MLMOTS
-INC SMRIGID
      POINTEUR MATLIN.MRIGID
-INC SMCHPOI
      POINTEUR CHPLIN.MCHPOI
*
*dbg      INTEGER OOOVAL
*
      CHARACTER*4 LGDISC
      CHARACTER*4 METING
      INTEGER LAXI
      INTEGER LERF
      LOGICAL LERJ
      INTEGER IMPR,IRET
*
      PARAMETER (NMOT0=2,NMOT1=2,NMOT2=1,NMOT3=2,NMOT4=1)
      CHARACTER*4 MOTCL0(NMOT0),MOTCL1(NMOT1)
      CHARACTER*4 MOTCL2(NMOT2),MOTCL3(NMOT3)
      CHARACTER*4 MOTCL4(NMOT4)
      DATA MOTCL0/'TJAC','TPG '/
      DATA MOTCL1/'EREF','ERF1'/
      DATA MOTCL2/'ERRJ'/
      DATA MOTCL3/'CRES','MATK'/
*      DATA MOTCL4/'MREG','NMRE'/
      DATA MOTCL4/'MREG'/
*
* Executable statements
*
      IMPR=0
      IF (IMPR.GT.1) WRITE(IOIMP,*) 'Entrée dans prlin'
*dbg      NSEGAV=OOOVAL(2,1)
*
* Lecture du mot-cle pour les subroutines de test
* Pas à destination des utilisateurs
*
      CALL LIRMOT(MOTCL0,NMOT0,IRAN,0)
      IF (IRAN.EQ.1) THEN
         CALL TESTJA
         RETURN
      ELSEIF (IRAN.EQ.2) THEN
         CALL TESTPG
         RETURN
      ENDIF
*
* Lecture de la famille d'espaces de discrétisations
* pour la géométrie
*
      CALL LIRCHA(LGDISC,1,IRET)
      IF (IRET.NE.4) GOTO 9999
*
* Lecture du maillage de QUAF
*
      CALL LIROBJ('MAILLAGE',CGEOM2,1,IRET)
      IF (IRET.EQ.0) GOTO 9999
*
* Lecture du maillage surfacique de QUAF (optionnel)
*
      CALL LIROBJ('MAILLAGE',CSGEO2,0,IRET)
      IF (IRET.EQ.0) THEN
         CSGEO2=0
      ENDIF
*
* Lecture de la table des coefficients du système d'équations
* pour la variable primale
      CALL LIROBJ('TABLE   ',TABCPR,1,IRET)
      IF (IRET.EQ.0) GOTO 9999
* Lecture de la table des coefficients du système d'équations
* pour la variable duale
      CALL LIROBJ('TABLE   ',TABCDU,1,IRET)
      IF (IRET.EQ.0) GOTO 9999
C*
C* Lecture du mot-cle pour l'axisymétrique
C* Inutile, on peut l'introduire explicitement avec
C* les coefficients. Ca paraît plus propre
C*
C      JGM=3
C      JGN=4
C      SEGINI MOTSCL
C      MOTSCL.MOTS(1)='AXIS'
C      MOTSCL.MOTS(2)='AXI1'
C      MOTSCL.MOTS(3)='AXI2'
C      CALL LIRMOT(MOTSCL.MOTS,MOTSCL.MOTS(/2),IRAN,0)
C      IF (IFOMOD.EQ.0.AND.IRAN.EQ.0) THEN
C         WRITE(IOIMP,*) 'En axi, on attend un des mots-cles :'
C         SEGPRT,MOTSCL
C         GOTO 9999
C      ELSEIF (IFOMOD.NE.0.AND.IRAN.NE.0) THEN
C         WRITE(IOIMP,*) 'Le mot-cle ',MOTSCL.MOTS(IRAN),
C     $        ' necessite OPTI MODE AXIS.'
C         GOTO 9999
C      ENDIF
C      LAXI=IRAN
C      SEGSUP MOTSCL
*
      LAXI=IFOMOD
*
* Lecture du mot-cle pour si on discrétise dans l'espace de référence
* ou dans l'espace de référence avec le volume des éléments normalisé
* à 1
*      DATA MOTCL1/'EREF','ERF1'/
*
      CALL LIRMOT(MOTCL1,NMOT1,LERF,0)
*
* Lecture du mot-cle pour si on capture les erreurs de changement de
* signe du Jacobien
*      DATA MOTCL2/'ERRJ'/
*
      CALL LIRMOT(MOTCL2,NMOT2,IRAN,0)
      IF (IRAN.EQ.0) THEN
         LERJ=.FALSE.
      ELSEIF (IRAN.EQ.1) THEN
         LERJ=.TRUE.
      ELSE
         GOTO 9999
      ENDIF
*
* Lecture du mot-cle pour l'assemblage compatible avec RESO
*      DATA MOTCL3/'CRES','MATK'/
*
      CALL LIRMOT(MOTCL3,NMOT3,IRESO,0)
*      IRESO=2
*
* Lecture du mot-cle pour accélération de NLIN si maillage régulier
*      DATA MOTCL4/'MREG'/
*
      CALL LIRMOT(MOTCL4,NMOT4,IMREG,0)
*      IMREG=1
*      IF (IMREG.EQ.1) WRITE(IOIMP,*) 'MAILLAGE REGULIER'
*
* Lecture de la famille de méthodes d'intégration
*
      CALL LIRCHA(METING,0,IRET)
      IF (IERR.NE.0) GOTO 9999
      IF (IRET.EQ.0) THEN
         METING='    '
      ENDIF
C      WRITE(IOIMP,*) 'LAXI=',LAXI
C      WRITE(IOIMP,*) 'LERF=',LERF
C      WRITE(IOIMP,*) 'LERJ=',LERJ
C      WRITE(IOIMP,*) 'METING=',METING
*
*     Fin des lectures
*
      CALL PRLIN2(CGEOM2,LGDISC,CSGEO2,TABCPR,TABCDU,METING,LAXI,LERF,
     $     LERJ,IRESO,IMREG,
     $     MATLIN,CHPLIN,
     $     IMPR,IRET)
      IF (IRET.NE.0) THEN
         IF (LERJ) GOTO 9666
         GOTO 9999
      ENDIF
      IF ((CHPLIN.EQ.0).AND.(MATLIN.EQ.0)) THEN
         WRITE(IOIMP,*) 'Nothing was computed, check your tables'
         GOTO 9999
      ENDIF
* l'ordre des retours sera normalement, mat chpo = NLIN ...
      IF (CHPLIN.NE.0) THEN
         CALL ECROBJ('CHPOINT ',CHPLIN)
      ENDIF
      IF (MATLIN.NE.0) THEN
         IF (IRESO.EQ.2) THEN
            CALL ECROBJ('MATRIK  ',MATLIN)
         ELSE
            CALL ECROBJ('RIGIDITE',MATLIN)
         ENDIF
      ENDIF
*dbg      NSEGAP=OOOVAL(2,1)
*dbg      NSEGD=NSEGAP-NSEGAV
*dbg      WRITE(IOIMP,*) 'NLIN : ',NSEGD,' segments crees ',
*dbg     $     ' MAT=',MATLIN,' CHP=',CHPLIN
*
* Normal termination
*
      IRET=0
      RETURN
*
* Format handling
*
*
* Error handling
*
 9666 CONTINUE
      IRET=666
      RETURN
 9999 CONTINUE
      IRET=1
      WRITE(IOIMP,*) 'An error was detected in subroutine prlin'
      CALL ERREUR(26)
      RETURN
*
* End of subroutine PRLIN
*
      END










