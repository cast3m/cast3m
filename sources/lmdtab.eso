C LMDTAB    SOURCE    CB215821  19/03/18    21:15:33     10161
C***********************************************************************
C NOM         : lmdtab.eso
C DESCRIPTION : Sortie d'un MCHAML au format .med
C***********************************************************************
C HISTORIQUE :  07/12/2017 : RPAREDES : Creation
C HISTORIQUE :
C***********************************************************************
C Prière de PRENDRE LE TEMPS DE COMPLÉTER LES COMMENTAIRES
C en cas de modification de ce sous-programme afin de faciliter
C la maintenance !
C***********************************************************************
C APPELÉ PAR : opérateur (LIRE 'MED') lirmed.eso
C***********************************************************************
C ENTRÉES :
C             FID     : Id du fichier
C             MTABLE  : Table avec la geometrie
C             NBNOIN  : Numérotation de noeuds courant
C             SLSCHA  : Segment avec l'information des champs
C             SLSSOR  : Segment avec l'information de la table
C SORTIES : ISOR : Pointeur vers la TABLE
C***********************************************************************
      SUBROUTINE LMDTAB(FID, MTABLE, NBNOIN, SLSCHA, SLSSOR, ISOR)
      IMPLICIT INTEGER(i-n)
      IMPLICIT REAL*8(a-h,o-z)

-INC CCMED
-INC CCOPTIO
-INC SMELEME
-INC SMCOORD
-INC SMLMOTS
-INC CCGEOME
-INC SMTABLE
-INC SMCHAML
-INC SMCHPOI

C ***** Déclaration des paramètres
      INTEGER*4     fid

C ***** Déclaration des variables
C
      CHARACTER*8               cha8a
      CHARACTER*(MED_NAME_SIZE) fname

      EXTERNAL LONG

C ***** Déclaration des segments
C----- SEG SLSCHA
C         ncham  : nombre de champs (CHPOINT ou MCHAML)
C         LISCHA : liste des noms de champs
C         LISMAI : liste des noms de maillages
C         LSCHIN : liste de SEG CHAINF (information)
C         LSPARA : liste de SEG CHAPAR (parametres)
      SEGMENT SLSCHA
        CHARACTER*(MED_NAME_SIZE) LISCHA(ncham), LISMAI(ncham)
        INTEGER                   LSCHIN(ncham), LSPARA(ncham)
      ENDSEGMENT

      SEGMENT SLSFUS
        INTEGER      CHAFUS(nbfus)
      ENDSEGMENT

C----- SEG SLSSOR
C         nbsor  : nombre de champs à sortir
C         CHATYP : type de champ (CHPOINT, MCHAML ou TABLE)
C         CHANOM : nom du champ
C         CHALIS : liste de champs dans un segment SLSFUS(CHPOINT ou MCHAML)
C                  ou SLSSOR(TABLE)
      SEGMENT SLSSOR
        CHARACTER*8               CHATYP(nbsor)
        CHARACTER*(MED_NAME_SIZE) CHANOM(nbsor)
        INTEGER                   CHALIS(nbsor)
      ENDSEGMENT

      SEGMENT CHAINF
C         nc     :   nombre de séquences de calcul dans le champ
C         ncomp  :   nombre de composantes
C         INUMDT :   liste de numéros de pas de tps
C         INUMIT :   liste de numéros d'iteration
C         ISCHPR :   liste de SEG CHAPRO (profil)
C         XDT    :   liste de pas de tps
C         CNAME  :   liste de noms des composants
C         CUNIT  :   liste d'unités des composants
        INTEGER      INUMDT(nc), INUMIT(nc), ISCHPR(nc)
        REAL*8       XDT(nc)
        CHARACTER*(MED_SNAME_SIZE) CNAME(ncomp), CUNIT(ncomp)
      ENDSEGMENT

C***********************************************************************
C      Ecriture de la TABLE
C***********************************************************************

C-----Initialisation
      FDUMMY =0.D0

      nbsor = SLSSOR.CHALIS(/1)
      m     = nbsor + 1
      SEGINI MTAB1

      DO ia=1,nbsor
        cha8a  = SLSSOR.CHATYP(ia)
        fname  = SLSSOR.CHANOM(ia)
        SLSFUS = SLSSOR.CHALIS(ia)
        nbfus  = SLSFUS.CHAFUS(/1)
        IF (nbfus .EQ. 0) THEN
          CALL ERREUR(21)
          RETURN
        ENDIF
        icha   = SLSFUS.CHAFUS(1)
        CHAINF = SLSCHA.LSCHIN(icha)
        m      = CHAINF.INUMDT(/1)

C-------Ecriture du temps
        IF (ia .EQ. 1) THEN
          SEGINI MTAB2
          DO ib=1,m
            indt = CHAINF.INUMDT(ib)
            xndt = CHAINF.XDT(ib)
            MTAB2.MTABTI(ib) ='ENTIER'
            MTAB2.MTABTV(ib) ='FLOTTANT'
            MTAB2.MTABII(ib) = indt
            MTAB2.RMTABV(ib) = xndt
          ENDDO
          MTAB2.MLOTAB = m
          SEGDES MTAB2
          CALL ECCTAB(MTAB1,'MOT     ',0  ,FDUMMY,'TEMPS',.FALSE.,0   ,
     &                      'TABLE   ',0  ,FDUMMY,'     ',.FALSE.,MTAB2)
        ENDIF

        SEGINI MTAB2
        DO ib=1,m
          indt = CHAINF.INUMDT(ib)
          IF (cha8a .EQ. 'CHPOINT') THEN
            CALL LMDCHP(fid, MTABLE, NBNOIN, SLSCHA, SLSFUS, ib, isor2)
            IF (IERR.NE.0) RETURN
            IF (isor2 .EQ. 0) THEN
              CALL ERREUR(21)
              RETURN
            ENDIF
          ELSEIF (cha8a .EQ. 'MCHAML') THEN
            CALL LMDCHM(fid, MTABLE, SLSCHA, SLSFUS, ib, isor2)
            IF (IERR.NE.0) RETURN
            IF (isor2 .EQ. 0) THEN
              CALL ERREUR(21)
              RETURN
            ENDIF
          ENDIF
          MTAB2.MTABTI(ib) ='ENTIER'
          MTAB2.MTABTV(ib) = cha8a
          MTAB2.MTABII(ib) = indt
          MTAB2.MTABIV(ib) = isor2
        ENDDO
        MTAB2.MLOTAB = m
        SEGDES MTAB2
        CALL ECCTAB(MTAB1,'MOT     ',0   ,FDUMMY,fname,.FALSE.,0   ,
     &                    'TABLE   ',0   ,FDUMMY,'   ',.FALSE.,MTAB2)
      ENDDO

      ISOR = MTAB1

      END

