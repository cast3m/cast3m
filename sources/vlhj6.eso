C VLHJ6     SOURCE    CHAT      05/01/13    04:08:04     5004
      SUBROUTINE VLHJ6(RHO,UX,UY,UZ,P,GAM,CNX,CNY,CNZ,
     &                  DFRUNC)
C************************************************************************
C
C PROJET            :  CASTEM 2000
C
C NOM               :  VLHJ6
C
C DESCRIPTION       :  Calcul du Jacobien du flux numerique VLH
C                      Contribution des faces sur les murs
C                      Cas 3D
C
C LANGAGE           :  FORTRAN 77
C
C AUTEUR            :  A. BECCANTINI SFME/LTMF
C
C************************************************************************
C
C APPELES           :  VLHJ3
C
C************************************************************************
C
C**** Entrées:
C
C     RHO           =  densité
C
C     UX, UY, UZ    =  vitesse
C
C     P             =  pression
C
C     GAM           =  le "gamma"
C
C     CNX, CNY, CNZ =  normales à la face
C
C
C**** Sorties:
C
C     DFRUNC(4)= derivés partielles de F_RHOUN par raport a RHO, RHOUX,
C                RHOUY, RHOUZ, RHOET
C
C************************************************************************
C
C HISTORIQUE (Anomalies et modifications éventuelles)
C
C HISTORIQUE :  Créé le 23.07.01
C
C************************************************************************
C
C N.B.: Toutes les variables sont declarées explicitement
C
C
      IMPLICIT INTEGER(I-N)
      REAL*8 RHO,UX,UY,UZ,P,GAM,CNX,CNY,CNZ
     &      ,DFRUNC(5),DFRUNP(5)
     &      ,USRO,UXSRO,UYSRO,UZSRO,GM1,GM1EC,GM1UX,GM1UY,GM1UZ
C
C**** Jacobian with respect to the primitive variables
C
      CALL VLHJ7(RHO,UX,UY,UZ,P,GAM,CNX,CNY,CNZ,DFRUNP)
C
C**** Jacobian with respect to the conservative variables
C
      USRO = 1.0D0 / RHO
      UXSRO = UX * USRO
      UYSRO = UY * USRO
      UZSRO = UZ * USRO
      GM1 = GAM - 1.0D0
      GM1EC = GM1 * 0.5D0 * (UX * UX + UY * UY + UZ * UZ)
      GM1UX = GM1 * UX
      GM1UY = GM1 * UY
      GM1UZ = GM1 * UZ
C
      DFRUNC(1) = DFRUNP(1) - UXSRO * DFRUNP(2) -  UYSRO * DFRUNP(3)
     &           - UZSRO * DFRUNP(4) + GM1EC * DFRUNP(5)
      DFRUNC(2) =  USRO * DFRUNP(2) -  GM1UX * DFRUNP(5)
      DFRUNC(3) =  USRO * DFRUNP(3) -  GM1UY * DFRUNP(5)
      DFRUNC(4) =  USRO * DFRUNP(4) -  GM1UZ * DFRUNP(5)
      DFRUNC(5) =  GM1 * DFRUNP(5)
C
      RETURN
      END




