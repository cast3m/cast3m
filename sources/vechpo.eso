C VECHPO    SOURCE    PV        19/03/04    21:15:10     10135

      SUBROUTINE vechpo(ipchp1,ipchp2,ipchp3,ipt8)
c====================================================================
c       Pour appel par resour
c       verif que ipchp3 est petit devant ipchp1 et ipchp2
C     erreur:
C           il reste un residu non converti en multiplicateur
C
c====================================================================

      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
      CHARACTER*4 CMOT
-INC SMCHPOI
-INC SMELEME
-INC CCOPTIO
-INC CCHAMP
-INC CCREEL
-INC SMCOORD
      segment test
       integer ibin(nbno,nbcomp)
      end segment
      segment lscomp
       character*4 lacomp(nbcomp)
      endsegment

      character*4 nom2
**         write(6,*) ' vechpo ipchp1 '
**         call ecchpo(ipchp1,0)
**         write(6,*) ' vechpo ipchp2 '
**         call ecchpo(ipchp2,0)
**         write(6,*) ' vechpo ipchp3 '
**         call ecchpo(ipchp3,0)
**

*  preparation ibin qui indique les ddl de ipchp1
*  on ne teste ipchp3 que sur ces ddl
      nbcomp=0
      nbcompo=nbcomp
      segini lscomp
      mchpoi=ipchp1
      segact mchpoi
      do icp=1,ipchp(/1)
       msoupo=ipchp(icp)
       segact msoupo
       nbcomp=nbcompo+nocomp(/2)
       segadj lscomp
        do icomp=1,nocomp(/2)
         do ils=1,ncompo
          if (lacomp(ils).eq.nocomp(icomp)) goto 10
         enddo
         nbcompo=nbcompo+1
         lacomp(nbcompo)=nocomp(icomp)
  10     continue
        enddo
      enddo
      nbcomp=nbcompo+1
      segadj lscomp
**    write(6,*) ' composantes ',(lacomp(i),i=1,lacomp(/2))
      nbno=xcoor(/1)/(idim+1)
      segini test
      do icp=1,ipchp(/1)
       msoupo=ipchp(icp)
       segact msoupo
       meleme=igeoc
       segact meleme
        do icomp=1,nocomp(/2)
         do ils=1,nbcomp
          if (lacomp(ils).eq.nocomp(icomp)) goto 20
         enddo
  20     continue
         do iel=1,num(/2)
          ibin(num(1,iel),ils)=1
         enddo
        enddo
      enddo



            nbsous=0
            nbref=0
            nbnn=1
      xcrit=xpetit
      xcritLX=xpetit
      mchpoi=ipchp1
      segact mchpoi
      do icp=1,ipchp(/1)
       msoupo=ipchp(icp)
       segact msoupo
       mpoval=ipoval
       segact mpoval
       if (nocomp(/2).eq.1.and.nocomp(1).eq.'FLX') then
         do i=1,vpocha(/1)
          xcritlx=max(abs(vpocha(i,1)),xcritlx)
         enddo
       else
         do ic=1,vpocha(/2)
         do i=1,vpocha(/1)
          xcrit=max(abs(vpocha(i,ic)),xcrit)
         enddo
         enddo
       endif
      enddo
      mchpoi=ipchp2
      segact mchpoi
      do icp=1,ipchp(/1)
       msoupo=ipchp(icp)
       segact msoupo
       mpoval=ipoval
       segact mpoval
       if (nocomp(/2).eq.1.and.nocomp(1).eq.'FLX') then
         do i=1,vpocha(/1)
          xcritlx=max(abs(vpocha(i,1)),xcritlx)
         enddo
       else
         do ic=1,vpocha(/2)
         do i=1,vpocha(/1)
          xcrit=max(abs(vpocha(i,ic)),xcrit)
         enddo
         enddo
       endif
      enddo
***   xcritlx=xcritlx*1d-10+xpetit/xzprec
      xcrit=xcrit*1d-2 +xpetit/xzprec
**    write(6,*) ' vechpo xcritlx xcrit ',xcritlx,xcrit
*
*  test avec ipchp3
      mchpoi=ipchp3
      segact mchpoi
      do icp=1,ipchp(/1)
       msoupo=ipchp(icp)
       segact msoupo
       mpoval=ipoval
       segact mpoval
        meleme = igeoc
        segact meleme
        do icomp=1,vpocha(/2)
         nom2=nocomp(icomp)
         do j=1,vpocha(/1)
**        if((nom2.eq.'FLX'.and.abs(vpocha(j,icomp)).gt.xcritlx).or.
**   >     (nom2.ne.'FLX '.and.abs(vpocha(j,icomp)).gt.xcrit)) then
          if(nom2.ne.'FLX '.and.abs(vpocha(j,icomp)).gt.xcrit) then
           interr(1)=num(1,j)
           moterr(1:4)=nom2
**         write(6,*) ' vpocha ',vpocha(j,icomp),nom2
           do ils=1,ncompo
             if (nom2.eq.lacomp(ils)) goto 30
           enddo
  30       continue
           if (ipt8.eq.0) then
             call erreur(149)
           else
            if (ibin(num(1,j),ils).eq.1) then
             nbelem=ipt8.num(/2)+1
             segadj ipt8
             ipt8.num(1,nbelem)=num(1,j)
            endif
           endif
          endif
         enddo
        enddo
      enddo
      segsup test,lscomp
      return
      end


