C DYNE      SOURCE    CB215821  18/09/21    21:15:35     9930
      SUBROUTINE DYNE
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
*--------------------------------------------------------------------*
*                                                                    *
*     Sous-programme de l'operateur DYNE                             *
*     __________________________________                             *
*                                                                    *
*     Calcul d'une reponse dynamique a l'aide d'algorithmes          *
*     explicites pour les forces non-lineaire:                       *
*                                                                    *
*        1. algorithme de Fu - de Vogelaere                          *
*        2. algorithme des differences centrees                      *
*        3. algorithme de Newmark (implicite sauf pour les forces NL *
*                                                                    *
*     auteurs: Denis ROBERT-MOUGIN & Lionel VIVAN ,le 19 mai 1989.   *
*     derniere modif:  BP, 2018-01-16                                *
*                                                                    *
*--------------------------------------------------------------------*
-INC CCOPTIO
*
      CHARACTER*6 MOPLEX
      CHARACTER*20 MODEVO,MOALG,MODIFF,MORK4
      CHARACTER*20 MONEWM(2)
      DATA MOPLEX /'PLEXUS'/
      DATA MODEVO /'DE_VOGELAERE'/
      DATA MODIFF /'DIFFERENCES_CENTREES'/
      DATA MONEWM /'ACCELERATION_MOYENNE','FOX_GOODWIN'/
c                   12345678901234567890   12345678901
      DATA MORK4  /'RUNGE_KUTTA_4'/
*
*     Quel algorithme a-t-on choisi ?
*
      CALL MESLIR(-272)
      CALL LIRCHA(MOALG,1,IRET)
      IF (IRET.EQ.0) RETURN
*
*     Algorithme de Plexus
*     on s'en sert plus. Il ne figure pas dans la notice
      IF (MOALG(1:6).EQ.MOPLEX) THEN
c          CALL DYNPLX
         CALL ERREUR(477)
         RETURN

*     Algorithme de Fu - de Vogelaere
      ELSE IF (MOALG(1:12).EQ.MODEVO) THEN
         CALL DYNDEV
         RETURN

*     Algorithme des differences centrees (le meme que plexus)
      ELSE IF (MOALG(1:20).EQ.MODIFF) THEN
         CALL DYNDIF(2)
         RETURN

*     Algorithmes implicites de Newmark
      ELSE IF (MOALG(1:20).EQ.MONEWM(1)) THEN
         CALL DYNDIF(3)
         RETURN
      ELSE IF (MOALG(1:11).EQ.MONEWM(2)) THEN
         CALL DYNDIF(4)
         RETURN

*     Erreur dans le choix de l'algorithme
      ELSE
         CALL ERREUR(477)
         RETURN
      ENDIF
*
      END




