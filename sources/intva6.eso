C INTVA6    SOURCE    JC220346  14/12/11    21:15:00     8318
      SUBROUTINE INTVA6 (NONVID)
************************************************************************
*
*                             I N T V A 6
*                             -----------
*
* FONCTION:
* ---------
*
*     ON A LA PARTITION D'INTERVALLE:
*        ( ... , W(N-2), W2A, W2B)
*     ON CREE LA PARTITION D'INTERVALLE:
*        ( ... , W(N-2), W2A)
*
*     "W(N-2)" PREND LE ROLE DE "W2A", "W2A" CELUI DE "W2B" ET
*     L'INTERVALLE EST REDUIT.
*
* MODE D'APPEL:
* -------------
*
*     CALL INTVA6 (NONVID)
*
* PARAMETRES:   (E)=ENTREE   (S)=SORTIE
* -----------
*
*     NONVID  LOGIQUE   (S)  = .TRUE. SI L'INTERVALLE RESULTANT EST
*                            NON VIDE,
*                            = .FALSE. SINON.
*
*     VOIR EGALEMENT LE COMMUN "CINTVA" DANS LE SOUS-PROGRAMME "INTVA2".
*
* SOUS-PROGRAMMES APPELES:
* ------------------------
*
*     ENLEV1, ENLEV2, EXTRA1, EXTRA2, DTLENT, DTLREE.
*
* AUTEUR, DATE DE CREATION:
* -------------------------
*
*     PASCAL MANIGOT     24 DECEMBRE 1984
*
* LANGAGE:
* --------
*
*     FORTRAN77
*
************************************************************************
*
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8 (A-H,O-Z)
-INC CCOPTIO
*
*     REGROUPEMENT DES INFORMATIONS SUR LA SUITE DE PULSATIONS AU CARRE:
      COMMON/CINTVA/IMULTP,IPW2,W2A,W2I,W2B,NBW2,IPNUM,NUMW2A,NUMW2I,
     &      NUMW2B  ,IUN
*
      LOGICAL NONVID
*
      CALL ENLEV1 (IPW2,NBW2,IPOINT,0)
      IF (IERR .NE. 0) RETURN
      CALL DTLREE (IPW2)
      IPW2 = IPOINT
*
      CALL ENLEV2 (IPNUM,NBW2,IPOINT,0)
      IF (IERR .NE. 0) RETURN
      CALL DTLENT (IPNUM)
      IPNUM = IPOINT
*
      NBW2 = NBW2 - 1
*
      IF (NBW2 .LT. 2) THEN
*
         NONVID = .FALSE.
*
      ELSE
*
         NONVID = .TRUE.
         W2B = W2A
         NUMW2B = NUMW2A
*
         NBW2M1 = NBW2 - 1
         CALL EXTRA1 (IPW2,NBW2M1,  W2A)
         IF (IERR .NE. 0) RETURN
         CALL EXTRA2 (IPNUM,NBW2M1,  NUMW2A)
         IF (IERR .NE. 0) RETURN
*
      END IF
*
      END


