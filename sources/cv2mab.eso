C CV2MAB    SOURCE    PV        16/11/17    21:58:57     9180
      SUBROUTINE CV2MAB(MDISCP,NCVARP,MDISCD,NCVARD,
     $     IMTLSB,
     $     MYFALS,
     $     MATLSB,
     $     IMPR,IRET)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER (I-N)
C***********************************************************************
C NOM         : CV2MAB
C DESCRIPTION : Transforme un MCHAEL (mon champ par éléments)
C               représentant un ensemble de matrices élémentaires en
C               MATRIK...
C
C LANGAGE     : ESOPE
C AUTEUR      : Stéphane GOUNAND (CEA/DRN/DMT/SEMT/LTMF)
C               mél : gounand@semt2.smts.cea.fr
C***********************************************************************
C APPELES          : KEEF   (recherche de l'élément fini)
C APPELES (E/S)    : ECROBJ, PRLIST (écriture entier, objet,
C                    impression)
C APPELE PAR       : PRLSB2
C***********************************************************************
C ENTREES            :
C ENTREES/SORTIES    : -
C SORTIES            :
C TRAVAIL            : * MYMEL (type MELEME) : maillage élémentaire.
C                      * JMTLSB (type MCHEVA) : valeurs du champ IMTLSB
C                        sur le maillage élémentaire.
C                        Structure (cf.include SMCHAEL) :
C                        (nb. ddl dual, nb. ddl primal,
C                         nb. comp. duales, nb. comp. primales,
C                         1, nb. éléments)
C CODE RETOUR (IRET) : = 0 si tout s'est bien passé
C***********************************************************************
C VERSION    : v1, 22/07/09, version initiale
C HISTORIQUE : v1, 22/07/09, création
C HISTORIQUE :
C HISTORIQUE :
C***********************************************************************
C Prière de PRENDRE LE TEMPS de compléter les commentaires
C en cas de modification de ce sous-programme afin de faciliter
C la maintenance !
C***********************************************************************
-INC CCOPTIO
-INC SMLMOTS
      POINTEUR NCVARP.MLMOTS
      POINTEUR NCVARD.MLMOTS
-INC SMELEME
      POINTEUR MELPRI.MELEME
      POINTEUR MELDUA.MELEME
      POINTEUR MYMEL.MELEME
      INTEGER NBNN,NBELEM,NBSOUS,NBREF
-INC SMLENTI
      POINTEUR LPOQFP.MLENTI
      POINTEUR LPOQFD.MLENTI
      POINTEUR KPOQFP.MLENTI
      POINTEUR KPOQFD.MLENTI
      INTEGER JG
-INC SMMATRIK
      POINTEUR MATLSB.MATRIK
*
* Includes persos
*
CBEGININCLUDE SMCHAEL
      SEGMENT MCHAEL
      POINTEUR IMACHE(N1).MELEME
      POINTEUR ICHEVA(N1).MCHEVA
      ENDSEGMENT
      SEGMENT MCHEVA
      REAL*8 VELCHE(NBLIG,NBCOL,N2LIG,N2COL,NBPOI,NBELM)
      ENDSEGMENT
      SEGMENT LCHEVA
      POINTEUR LISCHE(NBCHE).MCHEVA
      ENDSEGMENT
CENDINCLUDE SMCHAEL
      POINTEUR IMTLSB.MCHAEL
      POINTEUR JMTLSB.MCHEVA
      INTEGER NBLIG,NBCOL,N2LIG,N2COL,NBPOI,NBELM
CBEGININCLUDE SFALRF
      SEGMENT FALRF
      CHARACTER*(LNNFA) NOMFA
      INTEGER NUQUAF(NBLRF)
      POINTEUR ELEMF(NBLRF).ELREF
      ENDSEGMENT
      SEGMENT FALRFS
      POINTEUR LISFA(0).FALRF
      ENDSEGMENT
CENDINCLUDE SFALRF
      POINTEUR MYFALS.FALRFS
CBEGININCLUDE SELREF
      SEGMENT ELREF
      CHARACTER*(LNNOM)  NOMLRF
      CHARACTER*(LNFORM) FORME
      CHARACTER*(LNTYPL) TYPEL
      CHARACTER*(LNESP)  ESPACE
      INTEGER DEGRE
      REAL*8 XCONOD(NDIMEL,NBNOD)
      INTEGER NPQUAF(NBDDL)
      INTEGER NUMCMP(NBDDL)
      INTEGER QUENOD(NBDDL)
      INTEGER ORDDER(NDIMEL,NBDDL)
      POINTEUR MBPOLY.POLYNS
      ENDSEGMENT
      SEGMENT ELREFS
      POINTEUR LISEL(0).ELREF
      ENDSEGMENT
CENDINCLUDE SELREF
      POINTEUR LRFPRI.ELREF
      POINTEUR LRFDUA.ELREF
*
      CHARACTER*4 MDISCP,MDISCD
      INTEGER IMPR,IRET
*
      INTEGER IBNN,IBELEM
      INTEGER ITQUAF,NDDLPR,NDDLDU
      INTEGER        IDDLPR,IDDLDU
      INTEGER               NSOUS,NPOQUF
      INTEGER ISOUS
      INTEGER ILIGRP,ILIGRD,IELRIG,ICMPP,ICMPD

*
* Executable statements
*
      IF (IMPR.GT.1) WRITE(IOIMP,*) 'Entrée dans cv2mab'
      NRIGE=7
      NMATRI=0
      NKID=9
      NKMT=7
      SEGINI,MATLSB
*
*     Remplissage de MRIGID
*
      SEGACT NCVARP
      SEGACT NCVARD
      SEGACT IMTLSB
      NSOUS=IMTLSB.IMACHE(/1)
C      SEGPRT,NCVARP
C      SEGPRT,NCVARD
C      SEGPRT,IMTLSB
      DO ISOUS=1,NSOUS
         JMTLSB=IMTLSB.ICHEVA(ISOUS)
         IF (JMTLSB.NE.0) THEN
C            SEGPRT,NCVARP
C            SEGPRT,NCVARD
C            SEGPRT,JMTLSB
            SEGACT JMTLSB
            MYMEL =IMTLSB.IMACHE(ISOUS)
            SEGACT MYMEL
            ITQUAF=MYMEL.ITYPEL
            CALL KEEF(ITQUAF,MDISCP,MYFALS,
     $           LRFPRI,IMPR,IRET)
            IF (IRET.NE.0) GOTO 9999
            SEGACT LRFPRI
            NDDLPR=LRFPRI.NPQUAF(/1)
            CALL KEEF(ITQUAF,MDISCD,MYFALS,
     $           LRFDUA,IMPR,IRET)
            IF (IRET.NE.0) GOTO 9999
            SEGACT LRFDUA
            NDDLDU=LRFDUA.NPQUAF(/1)
            DO IVARP=1,NCVARP.MOTS(/2)
*  Construction de la liste des points du QUAF sur lesquels il y a des
*  ddl pour l'inconnue primale
               JG=0
               SEGINI LPOQFP
               DO IDDLPR=1,NDDLPR
                  IF (LRFPRI.NUMCMP(IDDLPR).EQ.IVARP) THEN
                     LPOQFP.LECT(**)=LRFPRI.NPQUAF(IDDLPR)
                  ENDIF
               ENDDO
               IF (LPOQFP.LECT(/1).EQ.0) THEN
                  GOTO 1
               ENDIF
C*  Suppression des doublons (pas besoin)
C               CALL IUNIQ(LPOQFP.LECT,LPOQFP.LECT(/1),
C     $           LPOQFP.LECT,NPOQFP,
C     $              IMPR,IRET)
C               IF (IRET.NE.0) GOTO 9999
C               JG=NPOQFP
C               SEGADJ,LPOQFP
* Segment de repérage dans cette liste
               JG=MYMEL.NUM(/1)
               SEGINI,KPOQFP
               CALL RSETXI(KPOQFP.LECT,LPOQFP.LECT,LPOQFP.LECT(/1))
* Construction du maillage primal
               NBNN=LPOQFP.LECT(/1)
               NBELEM = MYMEL.NUM(/2)
               NBSOUS = 0
               NBREF=0
               SEGINI,MELPRI
* Type 32 POLY
               MELPRI.ITYPEL=32
               DO IBELEM=1,NBELEM
                  DO IBNN=1,NBNN
                     MELPRI.NUM(IBNN,IBELEM)=
     $                    MYMEL.NUM(LPOQFP.LECT(IBNN),IBELEM)
                  ENDDO
               ENDDO
               SEGDES MELPRI
*
               DO IVARD=1,NCVARD.MOTS(/2)
*  Construction de la liste des points du QUAF sur lesquels il y a des
*  ddl pour l'inconnue duale
                  JG=0
                  SEGINI LPOQFD
                  DO IDDLDU=1,NDDLDU
                     IF (LRFDUA.NUMCMP(IDDLDU).EQ.IVARD) THEN
                        LPOQFD.LECT(**)=LRFDUA.NPQUAF(IDDLDU)
                     ENDIF
                  ENDDO
                  IF (LPOQFD.LECT(/1).EQ.0) THEN
                     GOTO 3
                  ENDIF
C*  Suppression des doublons
C                  CALL IUNIQ(LPOQFD.LECT,LPOQFD.LECT(/1),
C     $                 LPOQFD.LECT,NPOQFD,
C     $                 IMPR,IRET)
C                  IF (IRET.NE.0) GOTO 9999
C                  JG=NPOQFD
C                  SEGADJ,LPOQFD
* Segment de repérage dans cette liste
                  JG=MYMEL.NUM(/1)
                  SEGINI,KPOQFD
                  CALL RSETXI(KPOQFD.LECT,LPOQFD.LECT,LPOQFD.LECT(/1))
* Construction du maillage dual
                  NBNN=LPOQFD.LECT(/1)
                  NBELEM = MYMEL.NUM(/2)
                  NBSOUS = 0
                  NBREF=0
                  SEGINI,MELDUA
* Type 32 POLY
                  MELDUA.ITYPEL=32
                  DO IBELEM=1,NBELEM
                     DO IBNN=1,NBNN
                        MELDUA.NUM(IBNN,IBELEM)=
     $                       MYMEL.NUM(LPOQFD.LECT(IBNN),IBELEM)
                     ENDDO
                  ENDDO
                  SEGDES MELDUA
* Construction du IMATRI
                  NBME=1
                  NBSOUS=1
                  SEGINI IMATRI
                  LISPRI(1)=NCVARP.MOTS(IVARP)
                  LISDUA(1)=NCVARD.MOTS(IVARD)
* Construction du IZAFM
                  NBEL=MYMEL.NUM(/2)
                  NP=LPOQFP.LECT(/1)
                  MP=LPOQFD.LECT(/1)
                  SEGINI IZAFM
* remplissage des matrices élémentaires
                  NBLIG=JMTLSB.VELCHE(/1)
                  NBCOL=JMTLSB.VELCHE(/2)
                  N2LIG=JMTLSB.VELCHE(/3)
                  N2COL=JMTLSB.VELCHE(/4)
                  NBPOI=JMTLSB.VELCHE(/5)
                  NBELM=JMTLSB.VELCHE(/6)
                  IF (NBLIG.NE.NDDLDU.OR.NBCOL.NE.NDDLPR.OR.N2LIG.NE.1
     $                 .OR.N2COL.NE.1.OR.NBPOI.NE.1.OR.NBELM.NE.NBEL)
     $                 THEN
                     WRITE(IOIMP,*) 'Erreur dims JMTLSB'
                     GOTO 9999
                  ENDIF
                  DO IDDLDU=1,NDDLDU
                     IF (LRFDUA.NUMCMP(IDDLDU).EQ.IVARD) THEN
                        IMP=KPOQFD.LECT(LRFDUA.NPQUAF(IDDLDU))
                        DO IDDLPR=1,NDDLPR
                           IF (LRFPRI.NUMCMP(IDDLPR).EQ.IVARP) THEN
                              INP=KPOQFP.LECT(LRFPRI.NPQUAF(IDDLPR))
                              DO IBEL=1,NBEL
                                 AM(IBEL,INP,IMP)=
     $                                JMTLSB.VELCHE(IDDLDU,IDDLPR,
     $                                1,1,1,IBEL)
                              ENDDO
                           ENDIF
                        ENDDO
                     ENDIF
                  ENDDO
                  SEGDES IZAFM
                  LIZAFM(1,1)=IZAFM
                  SEGDES IMATRI
*
* Remplissage du chapeau
*
                  NRIGE=MATLSB.IRIGEL(/1)
                  NMATRI=MATLSB.IRIGEL(/2)+1
                  NKID=MATLSB.KIDMAT(/1)
                  NKMT=MATLSB.KKMMT(/1)
                  SEGADJ,MATLSB
                  MATLSB.IRIGEL(1,NMATRI)=MELPRI
                  MATLSB.IRIGEL(2,NMATRI)=MELDUA
                  MATLSB.IRIGEL(4,NMATRI)=IMATRI
                  MATLSB.IRIGEL(7,NMATRI)=2
                  SEGSUP KPOQFD
 3                CONTINUE
                  SEGSUP LPOQFD
               ENDDO
               SEGSUP KPOQFP
 1             CONTINUE
               SEGSUP LPOQFP
            ENDDO
            SEGDES LRFDUA
            SEGDES LRFPRI
            SEGDES MYMEL
            SEGDES JMTLSB
         ENDIF
      ENDDO
      SEGDES IMTLSB
      SEGDES NCVARD
      SEGDES NCVARP
      SEGDES MATLSB
      IF (IMPR.GT.3) THEN
         WRITE(IOIMP,*) 'On a créé MATLSB=',MATLSB
         CALL ECROBJ('MATRIK  ',MATLSB)
         CALL PRLIST
      ENDIF
*
* Normal termination
*
      IRET=0
      RETURN
*
* Format handling
*
*
* Error handling
*
 9999 CONTINUE
      IRET=1
      WRITE(IOIMP,*) 'An error was detected in subroutine cv2mab'
      RETURN
*
* End of subroutine CV2MAB
*
      END





