C PBEFE1    SOURCE    CB215821  17/11/30    21:16:53     9639
      SUBROUTINE PBEFE1 (XMAT,VAR0,VARF,SIG0,SIGF,DEPST,XCAR,IB,XEL,
     &  ISTEP)
C
C====&===1=========2=========3=========4=========5=========6=========7==
C COMMENTAIRES :   SUBROUTINE PERMETTANT DE METTRE EN OEUVRE LE
C                           MODELE EFEM
C
C TRAITS       :
C
C
C
C AUTEUR       : F. RICCARDI - CEA/DEN/DANS/DM2S/SEMT/EMSI
C                B. RICHARD  - CEA/DEN/DANS/DM2S/SEMT/EMSI
C====&===1=========2=========3=========4=========5=========6=========7==
C
C-------------------------------------------------------------------------------------------
C-----DECLARATION GENERALES
C-------------------------------------------------------------------------------------------
         IMPLICIT INTEGER(I-N)
         IMPLICIT REAL*8(A-H,O-Z)
C-------------------------------------------------------------------------------------------
C-----DECLARATION SEGMENTS
C-------------------------------------------------------------------------------------------

C-----REAL 8
         REAL*8 EPSIM(2,2),UNIT(2,2),SIGMAM(2,2),XEL(3,3)
         REAL*8 XMAT(*),SIG0(4),SIGF(4),VAR0(*),VARF(*),DEPST(4),XCAR(*)
         REAL*8 AD(4),XRHO(4),XECR(4),TD(2),XOUV(2),XNIE(2),XIE(2)
         REAL*8 XN(2),XT(2),P1(2),P2(2),P3(2)
         REAL*8 BNOD1(1,2),BNOD2(1,2),BNOD3(1,2),BGRAD(3,2)
         REAL*8 XANG(3),G(3,2),D(3,3),N(3,2)
         REAL*8 EPAUX(2,2),EPSVOIGT(3,1),XG(2)
         REAL*8 SIGVOI(3,1),M(2,3),T(2),SIGMA(2,2),VEP(2,2)
         REAL*8 VAP(2),DP_MAX(2),VP(1,2),FF(3)
         REAL*8 VPT(2),SIGAUX(2,2),T_CN0(1,1)
         REAL*8 XNT(1,2),XTT(1,2),T_CN(1),T_CT(1)
         REAL*8 EPSD(3),EPSENR_V(3),EPSENR(2,2),SIG(2,2),T_CN1(2)
         REAL*8 UN1(2,2),UN2(2,2),EPSI_MAT(2,2),XOUVT(1,2)
         REAL*8 T_C(2),T_U(2),EPS1(2,2),EPS2(2,2),EPS4(2,2),EPS7(2,2)
         REAL*8 EPS1P(2,2),EPS2P(2,2),EPS4P(2,2),EPS7P(2,2),TEND1(2,2)
         REAL*8 TEND2(2,2),TEND4(2,2),TEND7(2,2),TEND(2,2),TENDP(2)
         REAL*8 K(2,2),XDG(3,2),F(2,2),RES(2),KINV(2,2),XDGN(3)
         REAL*8 XNP(2),XNPT(1,2),DUN(2),EPNL(2,2)
C-------------------------------------------------------------------------------------------
C-----DECLARATION PARAMETRES NUMERIQUES
C-------------------------------------------------------------------------------------------
C
C-----NOMBRE MAXIMUM D ITERATIONS POUR LA CONVERGENCE SUR LES CONTRAINTES PLANES
         ITMAX1 = 1000
C-----NOMBRE MAXIMUM D ITERATIONS POUR LA CONVERGENCE SUR LA CONTINUITE
         ITMAX2 = 1000
C
C-----CHOIX DE L ECROUISSAGE
C       NECR = 1 -- ECROUISSAGE DE BARGELLINI
C       NECR = 2 -- ECROUISSAGE LINEAIRE
C       NECR = 3 -- ECROUISSAGE EXPONENTIEL
         NECR = 3
         XKAPPA = 70.0D0
C-----TOLERANCE SUR LA CONDITION DE CONTRAINTES PLANES
         TOL1 = 1.0D-6
C
C-----TOLERANCE SUR LA CONDITION DE CONTINUITE
         TOL2 = 1.0D-6
C
C-------------------------------------------------------------------------------------------
C-----CONSTRUCTION DE LA MATRICE IDENTITE D ORDRE DEUX
C-------------------------------------------------------------------------------------------
C
         DO I=1,2
             DO J=1,2
                 IF (I.EQ.J) THEN
                     UNIT(I,J) = 1.0D0
                 ELSE
                     UNIT(I,J) = 0.0D0
                 ENDIF
             ENDDO
         ENDDO
C-------------------------------------------------------------------------------------------
C-----RECUPERATION DES PROPRIETES MATERIAUX
C-------------------------------------------------------------------------------------------
C
C-----MODULE D YOUNG
         YOUN = XMAT(1)
C
C-----COEFFICIENT DE POISSON
         XNU = XMAT(2)
C
C-----COEFFICIENTS DE LAME
         XLAM = XNU*YOUN/((1.0D0+XNU)*(1.0D0-(2.0D0*XNU)))
         XMU = YOUN/(2.0D0*(1.0D0+XNU))
C
C-----CALCUL DE LA MATRICE DE HOOKE EN CONTRAINTES PLANES
         AM = (YOUN)/(1.0D0-(XNU**2.0D0))
C
         D(1,1) = AM
         D(1,2) = AM*XNU
         D(1,3) = 0.0D0
         D(2,1) = AM*XNU
         D(2,2) = AM
         D(2,3) = 0.0D0
         D(3,1) = 0.0D0
         D(3,2) = 0.0D0
         D(3,3) = AM*(1-XNU)/2.0D0
C
C-----PARAMETRES NON LINEAIRES
         ALP1 = XMAT(5)
         BET1 = XMAT(6)
         AD(1) = XMAT(7)
         AD(2) = XMAT(8)
         AD(3) = XMAT(9)
         AD(4) = XMAT(10)
         XFT = XMAT(11)
         XECR0 = XMAT(12)
         XNIE(1) = XMAT(13)
         XNIE(2) = XMAT(14)
         XUCR = XMAT(15)
         XINDE = INT(XMAT(16))
         XIE(1) = XMAT(17)
         XIE(2) = XMAT(18)
C
C-------------------------------------------------------------------------------------------
C-----RECUPERATION DES VARIABLES INTERNES
C-------------------------------------------------------------------------------------------
C-----DEFORMATION TOTALE
         EPSIM(1,1) = VAR0(5)
         EPSIM(2,2) = VAR0(6)
         EPSIM(1,2) = VAR0(7)
         EPSIM(2,1) = VAR0(7)
C-----DEFORMATION TRANSVERSALE
         EPSZZ = VAR0(19)
C-----VECTEUR TRACTION DANS LE REPERE GLOBAL
         DO I=1,2
             T_U(I) = VAR0(10 + I)
         ENDDO
C-----VECTEUR DISCONTINUTE DANS LE REPERE GLOBAL
         DO I=1,2
             XOUV(I) = VAR0(12 + I)
         ENDDO
C-----FLAG ACTIVATION DE LA DISCONTINUITE
         XNFLA = VAR0(31)
C-----NORMALE A LA FISSURE ET TRANSPOSEE DE LA NORMALE
         XN(1) = VAR0(33)
         XN(2) = VAR0(34)
         XNT(1,1) = XN(1)
         XNT(1,2) = XN(2)
C-----ECROUISSAGE POUR LA CONDITION DE CONTINUITE
         Z_U = VAR0(36)
C-----OUVERTURE MAXIMALE DANS LE REPERE DE LA DISCONTINUITE
         OUVN_MAX = VAR0(37)
C-----OUVERTURE COURANTE DANS LE REPERE DE LA DISCONTINUITE
         OUVN = VAR0(38)
         OUVT = VAR0(39)
C-----VECTEUR TRACTION DANS LE REPERE DE LA FISSURE
         T_UN = VAR0(43)
         T_UT = VAR0(44)
C-----NORME VP
         XNORM_VP = VAR0(50)
C-----ENERGIE DISSIPEE
         XPSI = VAR0(47)
C
         VPT(1) = VAR0(48)
         VPT(2) = VAR0(49)
C-------------------------------------------------------------------------------------------
C-----PRECALCUL POUR LA GESTION DE LA NORMALE
C-------------------------------------------------------------------------------------------
C
C-----STOCKAGE DES POINTS
         DO J=1,2
             P1(J) = XEL(J,1)
             P2(J) = XEL(J,2)
             P3(J) = XEL(J,3)
         ENDDO
C-----CALCUL DE LA SURFACE DE L'ELEMENT FINI
         XA0 = 0.5D0*((P2(1)*P3(2))-(P3(1)*P2(2))+(P3(1)*P1(2))-
     &   (P1(1)*P3(2))+(P1(1)*P2(2))-(P1(2)*P2(1)))
         XA = ABS(XA0)
         VARF(59) = (SQRT(XA))/2.0D0
C
C-----CALCUL DU CENTRE DE GRAVITE DE L ELEMENT
         XG(1) = (P1(1)+P2(1)+P3(1))/3.0D0
         XG(2) = (P1(2)+P2(2)+P3(2))/3.0D0
C
C-----CALCUL DES VECTEURS GRADIENT DEFINIS POUR CHAQUE NOEUD DE L'ELEMENT
         BNOD1(1,1) = -1.0D0*(P3(2)-P2(2))
         BNOD1(1,2) = P3(1) - P2(1)
         XNORBN1 = SQRT((BNOD1(1,1)**2) + (BNOD1(1,2)**2))
C
         BNOD2(1,1) = -1.0D0*(P1(2)-P3(2))
         BNOD2(1,2) = P1(1)-P3(1)
         XNORBN2 = SQRT((BNOD2(1,1)**2) + (BNOD2(1,2)**2))
C
         BNOD3(1,1) = -1.0D0*(P2(2)-P1(2))
         BNOD3(1,2) = P2(1)-P1(1)
         XNORBN3 = SQRT((BNOD3(1,1)**2) + (BNOD3(1,2)**2))
C
C-----CONSTRUCTIONS DE LA MATRICE GRADIENT
         DO J=1,2
             BGRAD(1,J) = BNOD1(1,J)
             BGRAD(2,J) = BNOD2(1,J)
             BGRAD(3,J) = BNOD3(1,J)
         ENDDO
C
C-------------------------------------------------------------------------------------------
C-----ON REALISE LE PREDICTEUR POUR VERIFIER LA CONDITION
C-----D ACTIVATION DE LA DISCONTINUITE
C-------------------------------------------------------------------------------------------
C
C-----ACTUALISATION DE LA DEFORMATION TOTALE
         EPSIM(1,1) = EPSIM(1,1) + DEPST(1)
         EPSIM(2,2) = EPSIM(2,2) + DEPST(2)
         EPSIM(1,2) = EPSIM(1,2) + DEPST(4)/(2.0D0)
         EPSIM(2,1) = EPSIM(2,1) + DEPST(4)/(2.0D0)
C
C-----REECRITURE SOUS LA FORME DE VOIGT
         EPSVOIGT(1,1) = EPSIM(1,1)
         EPSVOIGT(2,1) = EPSIM(2,2)
         EPSVOIGT(3,1) = 2.0D0*EPSIM(1,2)
C
C-----CAS OU LA DISCONTINUITE N EST PAS ACTIVE
         IF (XNFLA.EQ.0.0D0) THEN
C--------ON CALCUL LES CONTRAINTES ELASTIQUES
             CALL PRDFE1(D,EPSVOIGT,3,3,1,SIGVOI)
C
C--------ON REECRIT SOUS LA FORME MATRICIELLE
             CALL VECMAT(SIGVOI,SIGMA)
C--------ON INITIALISE LA DEFORMATION TRANSVERSALE
             EPSZZ = -XNU/YOUN*(SIGVOI(1,1)+SIGVOI(2,1))
C--------ON INITIALISE LA CONTRAINTES TRANSVERSALE - POUR STABILITE NUMERIQUE
             SIG_ZZ = XLAM*((EPSIM(1,1)+EPSIM(2,2))+EPSZZ)+(2*XMU*EPSZZ)
C--------INTEGRATION DU NONLOCAL POUR LE CALCUL DE LA NORMALE
C
             IF (ISTEP.EQ.0) THEN
C
                EPNL1 = EPSIM(1,1)
                EPNL2 = EPSIM(2,2)
                EPNL3 = EPSIM(1,2)
C
                VARF(51) = EPNL1
                VARF(52) = EPNL2
                VARF(53) = EPNL3
C
C
             ELSEIF (ISTEP.EQ.1) THEN
C
                VARF(51) = EPSIM(1,1)
                VARF(52) = EPSIM(2,2)
                VARF(53) = EPSIM(1,2)
C
                DO I=1,50
C
                  VARF(I)=VAR0(I)
C
                ENDDO
C
             GOTO 2000
C
             ELSEIF (ISTEP.EQ.2) THEN
C
                EPNL1 =VAR0(51)
                EPNL2 =VAR0(52)
                EPNL3 =VAR0(53)
C
                VARF(51) = EPNL1
                VARF(52) = EPNL2
                VARF(53) = EPNL3
C
             ENDIF
C
             EPNL(1,1) = EPNL1
             EPNL(2,2) = EPNL2
             EPNL(1,2) = EPNL3
             EPNL(2,1) = EPNL3
C
C--------CALCUL VALEUR PROPRES ET VECTEURS PROPRES
             CALL DIAFE1(EPNL,VAP,VEP)
C
C--------IDENTIFICATION DE LA CONTRAINTE PRINCIPALE MAJEURE ET DE SON INDICE
             EPSI_MAX= MAX(VAP(1),VAP(2))
C
             DO JJ=1,2
                 IF (VAP(JJ).EQ.EPSI_MAX) THEN
                     INDI = JJ
                 ENDIF
             ENDDO
C
C--------IDENTIFICATION DU VECTEUR PROPRE
C
             DO J=1,2
                DP_MAX(J) = VEP(J,INDI)
             ENDDO
C
             XNDP = SQRT((DP_MAX(1)**2.0D0)+(DP_MAX(2)**2.0D0))
C
             XN(1) = XNIE(1)
             XN(2) = XNIE(2)
C
             CALL TRSPOS(XN,1,2,XNT)
C
C--------MATRICE DE LA NORMALE - SIMPLICITE DE CALCUL
             N(1,1) = XN(1)
             N(1,2) = 0.0D0
             N(2,1) = 0.0D0
             N(2,2) = XN(2)
             N(3,1) = XN(2)
             N(3,2) = XN(1)
C
C--------TRANSPOSE DE LA MATRICE DE LA NORMALE
             DO II=1,2
                 DO JJ=1,3
                     M(II,JJ) = N(JJ,II)
                 ENDDO
             ENDDO
C
C--------VECTEUR TRACTION T = SIGMA.N POUR L INITIATION DE LA DISCONTINUITE
             CALL PRDFE1(M,SIGVOI,2,3,1,T)
             CALL PRDFE1(XNT,T,1,2,1,T_CN0)
C
             VP(1,1) = 0.0D0
             VP(1,2) = 0.0D0
C
             IF (XINDE.EQ.1) THEN
C
                FP1 = (1.0D0*XNIE(1)*P1(1))+(XNIE(2)*P1(2))-
     &          ((1.0D0*XNIE(1)*XIE(1))+(XNIE(2)*XIE(2)))
C
                FP2 = (1.0D0*XNIE(1)*P2(1))+(XNIE(2)*P2(2))-
     &          ((1.0D0*XNIE(1)*XIE(1))+(XNIE(2)*XIE(2)))
C
                FP3 = (1.0D0*XNIE(1)*P3(1))+(XNIE(2)*P3(2))-
     &          ((1.0D0*XNIE(1)*XIE(1))+(XNIE(2)*XIE(2)))
C
C           2 - VERIFICATION DES SIGNES
                CALL SIGEK(FP1,F1)
                CALL SIGEK(FP2,F2)
                CALL SIGEK(FP3,F3)
C
                FF(1) = F1
                FF(2) = F2
                FF(3) = F3
C
                DO II = 1,3
                    IF (FF(II).GT.0.0D0) THEN
                        DO J = 1,2
                            VP(1,J) = VP(1,J) + BGRAD(II,J)
                        ENDDO
                    ENDIF
                ENDDO
C
C--------CONDITION D INITIATION
                IF ((T_CN0(1,1).GT.XFT)) THEN
                    T_UN = XFT
                    T_UT = 0
                    OUVN = 1.0D-7
                    VAR0(38) = OUVN
                    OUVT = 1.0D-12
                    VAR0(39) = OUVT
                    Z_U = 0.0D0
                    XNFLA = 1.0D0
               ELSE
                    XNFLA = 0.0D0
               ENDIF
            ENDIF
C
             CALL TRSPOS(VP,2,1,VPT)
             XNORM_VP = SQRT((VPT(1)**2)+(VPT(2)**2))
C
        ENDIF
C--------FIN DE LA PREDICTION ELASTIQUE NORMALE
C
C--------DEFINITION DE LA MATRICE G
         G(1,1) = -1.D0*VPT(1)/(2.0D0*XA)
         G(1,2) = 0.0D0/(2.0D0*XA)
         G(2,1) = 0.0D0/(2.0D0*XA)
         G(2,2) = -1.D0*VPT(2)/(2.0D0*XA)
         G(3,1) = -1.D0*VPT(2)/(2.0D0*XA)
         G(3,2) = -1.D0*VPT(1)/(2.0D0*XA)
C
C--------CALCUL DE DERIVE T_CN
         CALL PRDFE1(D,G,3,3,2,XDG)
         CALL PRDFE1(XDG,XN,3,2,1,XDGN)
         CALL VECMAT(XDGN,F)
C
C--------CALCUL DU VECTEUR TANGENT A LA FISSURE
         XT(1) = -XN(2)
         XT(2) = XN(1)
C
C         CALL TRSPOS(XT,1,2,XTT)

         XTT(1,1) = XT(1)
         XTT(1,2) = XT(2)

C         print*,'XTT=',XTT
C         print*,'XT=',XT

C         stop

C-------------------------------------------------------------------------------------------
C-----ON REALISE DE NOUVEAU UNE ETAPE DE PREDICTION ELASTIQUE EN PRENANT EN COMPTE
C-----UNE EVENTUELLE DISCONTINUITE
C-------------------------------------------------------------------------------------------
C
C-----CALCUL DU TERME G X [U]
         CALL PRDFE1(G,XOUV,3,2,1,EPSD)
C
C-----CALCUL DU TERME EPSILON + G X [U]
         DO II=1,3
             EPSENR_V(II) = EPSVOIGT(II,1) + EPSD(II)
         ENDDO
C
C-----REECRITURE EN MATRCIEL
         CALL VECDEF(EPSENR_V,EPSENR)
C
C-----CALCUL DES CONTRAINTE DANS LE CONTINUUM
         DO II=1,2
             DO JJ=1,2
                 SIG(II,JJ) = XLAM*(EPSENR(1,1)+EPSENR(2,2)+
     &          EPSZZ)*UNIT(II,JJ)+
     &          2.0D0*XMU*EPSENR(II,JJ)
             ENDDO
         ENDDO
C
C-----CALCUL DU VECTEUR TRACTION
         CALL PRDFE1(SIG,XN,2,2,1,T_CN1)
         CALL PRDFE1(XNT,T_CN1,1,2,1,T_CN)
         CALL PRDFE1(XTT,T_CN1,1,2,1,T_CT)

C         CALL PRODMA(SIG,XN,2,2,1,T_CN1)
C         CALL PRODMA(XNT,T_CN1,1,2,1,T_CN)
C         CALL PRODMA(XTT,T_CN1,1,2,1,T_CT)

C         print*,'XNT=',XNT
C         print*,'XTT=',XTT

C         print*,'T_CN=',T_CN(1)
C         print*,'T_CT=',T_CT(1)
C         STOP
C
C-------------------------------------------------------------------------------------------
C-----BOUCLE SUR LA CONDITION DE CONTRAINTE PLANES - START
C-------------------------------------------------------------------------------------------
C
         DO II=1,ITMAX1
C
C--------SI PAS DE DISCONTINUITE ON RENVOIE LA SOLUTION ELASTIQUE
             IF (XNFLA.EQ.1.0D0) THEN
C-----------INITIALISATION DU RESIDU SUR LA CONTINUITE
                 RES(1) = T_CN(1) - T_UN
                 RES(2) = T_CT(1) - T_UT
C
C-------------------------------------------------------------------------------------------
C-------------BOUCLE SUR LA CONDITION DE CONTINUITE - START
C-------------------------------------------------------------------------------------------
                     DO III=1,ITMAX2
C
C----------------CALCUL DE LA CORRECTION DE DISCONTINUITE
C
                        DO JJ = 1,2
                        DO KK = 1,2
                            K(JJ,KK) = 1.0D0*YOUN*UNIT(JJ,KK)/
     &                                               SQRT(2.0D0*XA)
                        ENDDO
                        ENDDO
                            K(1,2) = 1.0D0*YOUN / 10.0D0
                            K(2,1) = 1.0D0*YOUN / 10.0D0
                        CALL HINV22(K,KINV)
                        CALL PRDFE1(KINV,RES,2,2,1,DUN)
C
                        DUNN = DUN(1)
                        DUNT = DUN(2)
C
C----------------ACTUALISATION DE LA DISCONTINUITE (RELAXATION NUMERIQUE)
                         OUVN = OUVN + (1.0D-3*DUNN)
                         OUVT = OUVT + (1.0D-3*DUNT)
C
C----------------CHARGE OU DECHARGE (POUR LA CONDITION DE CONTINUITE)
                         PHI_U = 1.0D0
C
C
C----------------CONDITION D UNILATERALITE
                         IF (OUVN.LT.0.0D0) THEN
                             OUVN = 1.0D-12
                             GOTO 9
                         ENDIF
C
C----------------ACTUALISATION DE L OUVERTURE NORMALE MAXIMALE
                         OUVN_MAX =  MAX(OUVN,VAR0(37))
C
C----------------SWITCH VERS LA LOI DISCRETE CONSIDEREE
C
C                       3. ECROUISSAGE EXPONENTIEL
                         IF (NECR.EQ.3) THEN
C
                           IF (PHI_U.GT.0.0D0) THEN
C
               IF ((II.EQ.1).AND.(III.EQ.1)) THEN
                  VMOUV0 = SQRT((VAR0(38)**2.0D0)+(VAR0(39)**2.0D0))
                  VMOUV = VMOUV0
               ELSE
C
                 VMOUV = SQRT((OUVN**2.0D0)+(OUVT**2.0D0))
               ENDIF
              T_UN = XFT*(OUVN/VMOUV)*EXP(-1.0D0*VMOUV/XKAPPA*XFT)
              T_UT = XFT*(OUVT/VMOUV)*EXP(-1.0D0*VMOUV/XKAPPA*XFT)

              Z_U = T_UN
                             ELSE
C
                                 T_UN = (Z_U/OUVN_MAX)*OUVN
C
                             ENDIF
                         ENDIF
C
C----------------CALCUL DU VECTEUR DISCONTINUITE
                         DO JJ=1,2
                            XOUV(JJ) = (OUVN*XN(JJ))+(OUVT*XT(JJ))
                         ENDDO
C
C----------------CALCUL DU TERME G X [U]
                         CALL PRDFE1(G,XOUV,3,2,1,EPSD)
C
C----------------CALCUL DU TERME EPSILON + G X [U]
                         DO JJ=1,3
                             EPSENR_V(JJ) = EPSVOIGT(JJ,1) + EPSD(JJ)
                         ENDDO
C
C----------------REECRITURE EN MATRCIEL
                         CALL VECDEF(EPSENR_V,EPSENR)
C
C----------------CALCUL DES CONTRAINTE DANS LE CONTINUUM
                         DO JJ=1,2
                             DO KK=1,2
                                 SIG(JJ,KK) = XLAM*((EPSENR(1,1)+
     &                          EPSENR(2,2))+ EPSZZ)*UNIT(JJ,KK)+
     &                          2.0D0*XMU*EPSENR(JJ,KK)
                             ENDDO
                         ENDDO
C
C----------------CALCUL DU VECTEUR CONTRAINTE
                         CALL PRDFE1(SIG,XN,2,2,1,T_CN1)
                         CALL PRDFE1(XNT,T_CN1,1,2,1,T_CN)
                         CALL PRDFE1(XTT,T_CN1,1,2,1,T_CT)

C                         print*,'T_CN=',T_CN(1)
C                         print*,'T_CT=',T_CT(1)
C                         STOP
C
C----------------CALCUL DU RESIDU ACTUALISE
                      RES(1) = T_CN(1) - T_UN
                      RES(2) = T_CT(1) - T_UT
C
C
                      XNORMRES = SQRT((RES(1)*RES(1))+(RES(2)*RES(2)))
C
C----------------CALCUL DE L ENERGIE DISSIPEE
                         XPSI = T_UN*OUVN
C
C----------------TEST DE CONVERGENCE
                         IF ((XNORMRES).LT.TOL2) THEN
C
C-------------------CALCUL DE L OUVERTURE DANS LE REPERE GLOBAL
                             DO JJ=1,2
                               XOUV(JJ) = (OUVN*XN(JJ))+(OUVT*XT(JJ))
                             ENDDO
C
C-------------------CALCUL DES VECTEURS TRACTIONS DANS LE CONTINUUM ET
C-------------------SUR LA DISCONTINUITE
                             DO JJ=1,2
                       T_C(JJ) = (T_CN(1)*XN(JJ))+(T_CT(1)*XT(JJ))
                       T_U(JJ) = (T_UN*XN(JJ))+(T_UT*XT(JJ))
                             ENDDO
C-------------------BALISE DE SORTIE
                             GOTO 9
C
                         ENDIF
C
                     ENDDO
C
C-------------------------------------------------------------------------------------------
C-------------BOUCLE SUR LA CONDITION DE CONTINUITE - END
C-------------------------------------------------------------------------------------------
                 ENDIF
C
 9              CONTINUE
C
C
C-----------CALCUL DES CONTRAINTES DE CAUCHY A CONVERGENCE
                 DO JJ=1,2
                    XOUV(JJ) = (OUVN*XN(JJ))+(OUVT*XT(JJ))
                 ENDDO
C
                 CALL PRDFE1(G,XOUV,3,2,1,EPSD)
C
                 DO JJ=1,3
                     EPSENR_V(JJ) = EPSVOIGT(JJ,1) + EPSD(JJ)
                  ENDDO
C
                 CALL VECDEF(EPSENR_V,EPSENR)
C
                 DO JJ=1,2
                     DO KK=1,2
                         SIG(JJ,KK) = XLAM*((EPSENR(1,1)+
     &                  EPSENR(2,2))+ EPSZZ)*UNIT(JJ,KK)+
     &                  2.0D0*XMU*EPSENR(JJ,KK)
                     ENDDO
                 ENDDO
C
C-----------CALCUL CONTRAINTES HORS PLAN
                 SIG_ZZ = XLAM*((EPSENR(1,1)+EPSENR(2,2))+
     &          EPSZZ)+(2*XMU*EPSZZ)
C
C-----------TEST DE CONVERGENCE SUR LA CONDITION DE CONTRAINTES PLANES
                 IF (ABS(SIG_ZZ).LT.TOL1) THEN
C
                     GOTO 99
C
                 ELSE
C
                     EPSZZ = EPSZZ - (SIG_ZZ/(XLAM+(2*XMU)))
                 ENDIF
C
C
         ENDDO
C-------------------------------------------------------------------------------------------
C-----BOUCLE SUR LA CONDITION DE CONTRAINTE PLANES - END
C-------------------------------------------------------------------------------------------
C
 99     CONTINUE
C
C-------------------------------------------------------------------------------------------
C-----CONTRAINTES DE CAUCHY EN SORTIE POUR CALCUL DES EFFORTS INTERNES
C-------------------------------------------------------------------------------------------
         IF (XNFLA.EQ.0.0D0) THEN
             CALL VECMAT(SIGVOI,SIGMAM)
         ELSE
             DO JJ=1,2
             DO KK=1,2
             SIGMAM(JJ,KK) = SIG(JJ,KK)
             ENDDO
             ENDDO
         ENDIF
C
         SIGF(1) = SIGMAM(1,1)
         SIGF(2) = SIGMAM(2,2)
         SIGF(3) = 0.0D0
         SIGF(4) = SIGMAM(1,2)
C
C
C-------------------------------------------------------------------------------------------
C-----VARIABLES INTERNES FINALES
C-------------------------------------------------------------------------------------------
C-----VECTEUR TRACTION CALCULES PAR LA LOI DISCRETE DANS LE REPERE GLOBAL
         DO I=1,2
             VARF(10+I) = T_U(I)
         ENDDO
C
C-----VECTEUR DISCONTINUITE DANS LE REPERE GLOBAL
         DO I=1,2
             VARF(12+I) = XOUV(I)
         ENDDO
C
C-----DEFORMATIONS TOTALES
         VARF(5) = EPSIM(1,1)
         VARF(6) = EPSIM(2,2)
         VARF(7) = EPSIM(1,2)
C-----DEFORMATION TRANSVERSALE
         VARF(19) = EPSZZ
C-----FLAG ACTIVATION DISCONTINUITE
         VARF(31) = XNFLA
C-----VECTEUR DE LA NORMALE DANS LE REPERE GLOBAL
         VARF(33) = XN(1)
         VARF(34) = XN(2)
C-----ECROUISSAGE LIE A LA LOI DISCRETE
         VARF(36) = Z_U
C-----OUVERTURE NORMALE MAXIMALE
         VARF(37) = OUVN_MAX
C-----OUVERTURE NORMALE COURANTE
         VARF(38) = OUVN
         VARF(39) = OUVT
C-----VECTEUR TRACTION DISCRET
         VARF(43) = T_UN
         VARF(44) = T_UT
C-----NORME DE VP
         VARF(50) = XNORM_VP
         IF (XNFLA.EQ.1.0D0) THEN
         VARF(45) = XN(1)
         VARF(46) = XN(2)
         ENDIF
C
C-----ENERGIE DISSIPEE
C
         VARF(47) = XPSI
         VARF(48) = VPT(1)
         VARF(49) = VPT(2)
C-----CONTRAINTES
         VARF(54) = SIGF(1)
         VARF(55) = SIGF(2)
         VARF(56) = SIGF(3)
         VARF(57) = SIGF(4)
 2000    CONTINUE
C
         RETURN
         END



