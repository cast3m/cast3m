C FSTERR    SOURCE    BECC      11/05/26    21:15:27     6981
      SUBROUTINE FSTERR(
     &     PC, GAM,
     &     P, RHO_R, P_R, U_R,
     &     U, RHO, D,
     &     LOGDEB, LOGAN)
*
*************************************************************************
*
* project           :  CAST3M, EUROPLEXUS...
*
* name              :  fsterr
*
* description       :  euler equations for a mixture of stiffened gases
*                      flux in the non-reactive case.
*
*                      right entropy-respecting curve as function of p
*
* language          :  fortran 77
*
* author            :  a. beccantini den/dm2s/sfme/ltmf
*
*************************************************************************
*
* called by         :
*
*
*************************************************************************
*
***** input
*
*     pc, gam         = properties of the gas
*
*     p               = pressure in the left side of the right
*                       entropy respecing curve
*
*     rho_r, p_r, u_r
*                     = density, pressure, velocity on the right
*
*     logdeb          = debugging ?
*
***** output
*
*     u, rho          = velocity and density in the left side of the
*                       entropy respecing curve
*
*     d               = wave speed
*
*     logan           = anomaly ?
*
*************************************************************************
*
*     26/11/2009      created
*     25/05/2011      evolution in CAST3M
*
*************************************************************************
*
* n.b.: all variables are declared
*
C      IMPLICIT NONE
      IMPLICIT INTEGER(I-N)
      REAL*8
     &     PC, GAM,
     &     P, RHO_R, P_R, U_R,
     &     U, RHO, D
*
      REAL*8 VAR
*
      LOGICAL LOGDEB, LOGAN
*
      VAR = -1.0D0 * U_R
      CALL FSTERL(PC, GAM, P, RHO_R, P_R, VAR,
     &     U, RHO, D,
     &     LOGDEB, LOGAN)
*
      U = -1.0D0 * U
      D = -1.0D0 * D
*
      IF (LOGAN) THEN
         WRITE(*,*) 'SUBROUTINE FSTERR.F'
         WRITE(*,*) 'ANOMALY DETECTED.'
         GOTO 9999
      ENDIF
*
 9999 RETURN
      END

