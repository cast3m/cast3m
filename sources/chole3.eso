C CHOLE3    SOURCE    PV        17/11/16    21:15:01     9625
      SUBROUTINE CHOLE3(IPREL,IDERL,IPPVV,IPPR,IDDR,IVPO,
     # IPPVV1,VAL,VAL1,IVPO1,imasq,nbo,irondi,irondf,ivd)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
-INC CCHOLE
      DIMENSION IPPVV(*),IVPO(*),IPPVV1(*),VAL(*),VAL1(*),IVPO1(*)
      DIMENSION imasq(*)
      real*8 pt(9)

C  inconnues correspondant aux noeuds

**    write (6,*) ' chole3 irondi irondj ',irondi

C val1 en stockage compacte
C val mis a jour et utilise imasq pour avoir les termes non nuls
C  nombres de groupes (incluant la diagonale)
      nbg1=ippvv1(2)-1
      nbg=1
C  nb ligne
      na=iderl-iprel+1
      na1=iddr-ippr+1
C  longueur de la premiere ligne incluant la diagonale
      lpl1=ivpo1(2*(nbg1+1))-ivpo1(2*1)
C  nb termes premiere ligne
      nval1=ivpo1(2*(nbg1+1)-1)-ivpo1(2*1-1)
C  longueur de la premiere ligne de val
      lpl=ippvv(2)-ippvv(1)
C  nb termes premiere ligne de val
      nval=lpl
C  position depart de val et val1
      idepv=iprel-nval+1
      idepv1=ippr-nval1+1
      imb=idepv1-idepv
C     write (6,*) 'chole3 idepv1 iml',idepv1,iml
C  les groupes (hors groupe diagonal)
      kidepg=ivpo(1)
      do 121 im=2,na
        kidepg=max(kidepg,ivpo(im))
 121  continue

      do 10 ig1=nbg1-1,1,-1
C  il position dans la ligne compressee
C  i position relative dans la ligne
        ildeb1=ivpo1(2*ig1)
        ilfin1=ivpo1(2*(ig1+1))-1
        ideb1=ivpo1(2*ig1-1)
        ifin1=ideb1+ilfin1-ildeb1
        ideb1n=max(1-imb,ideb1)
        long=ifin1-ideb1n+1
        lond=min(long,kidepg-imb-ideb1n+1)
        ifin1=lond+ideb1n-1
        ideb1n=max(irondi-imb,ideb1n)
        ifin1 =min(irondf-imb,ifin1 )
        lond=ifin1-ideb1n+1
        if (ifin1.lt.ivd-imb) then
**    fin d'operation avant le premier terme significatif de la rondelle
**       write (6,*) ' chole3 saut',ivd,irondi,irondf
         goto 999
        endif
        if (lond.le.0) goto 10
C optimisation pour le cas na>1 na1>1
C on decoupe les operations en 4 groupes de 3x3 car au dela on dépasse le nombre de registres
       if (na.gt.1.or.na1.gt.1) then
       do 300 ia=0,na-1,3
        iposrb=imb+ia*lpl+(ia*(ia-1))/2
       do 300 ia1=0,na1-1,3
        ilpos1b=-ideb1+ildeb1+ia1*lpl1+(ia1*(ia1-1))/2
           nboq=nbo
           call mamupv(ideb1n,ifin1,val(1),iposrb,lpl+ia,val1(1),
     >     ilpos1b,lpl1+ia1,imasq(1),imb,pt,na-ia,na1-ia1,nbo)
           if (nbo.eq.nboq) then
*  rien a mettre a jour
***        write (6,*) ' mamupv rien a mettre a jour '
           goto 10
           endif
C  mise a jour val
           if (na-ia.ge.1) then
            if (na1-ia1.ge.1) then
             ivad=ippr-idepv+ia1+1+ia*lpl+(ia*(ia-1))/2
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(1)
            endif
            if (na1-ia1.ge.2) then
C            ivad=ippr-idepv+ia1+2+ia*lpl+(ia*(ia-1))/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(2)
            endif
            if (na1-ia1.ge.3) then
C            ivad=ippr-idepv+ia1+3+ia*lpl+(ia*(ia-1))/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(3)
            endif
           endif
           if (na-ia.ge.2) then
            if (na1-ia1.ge.1) then
             ivad=ippr-idepv+ia1+1+(ia+1)*lpl+((ia+1)*ia)/2
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(4)
             endif
            if (na1-ia1.ge.2) then
C            ivad=ippr-idepv+ia1+2+(ia+1)*lpl+((ia+1)*ia)/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(5)
            endif
            if (na1-ia1.ge.3) then
C            ivad=ippr-idepv+ia1+3+(ia+1)*lpl+((ia+1)*ia)/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(6)
            endif
           endif
           if (na-ia.ge.3) then
            if (na1-ia1.ge.1) then
             ivad=ippr-idepv+ia1+1+(ia+2)*lpl+((ia+2)*(ia+1))/2
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(7)
            endif
            if (na1-ia1.ge.2) then
C            ivad=ippr-idepv+ia1+2+(ia+2)*lpl+((ia+2)*(ia+1))/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(8)
            endif
            if (na1-ia1.ge.3) then
C            ivad=ippr-idepv+ia1+3+(ia+2)*lpl+((ia+2)*(ia+1))/2
             ivad=ivad+1
             if (ivad.ge.1) val(ivad)=val(ivad)-pt(9)
            endif
           endif
  300  continue
       elseif (na.eq.1.and.na1.eq.1) then
             ideqb= ideb1n+imb
         im1=1
             idebzc=ideb1n-ideb1+ildeb1+(im1-1)*lpl1+((im1-2)*(im1-1))/2
         im=1
           ideq= ideqb+(im-1)*lpl+((im-2)*(im-1))/2
           nboq=nbo
           p=ddotpw(lond,val(ideq),val1(idebzc),imasq(1),ideqb,nbo)
           if (nbo.ne.nboq) then
C  mise a jour val
           ivad=ippr-idepv+im1+(im-1)*lpl+((im-2)*(im-1))/2
           if (ivad.ge.1) val(ivad)=val(ivad)-p
           endif
       endif
  10  continue
999   continue
      if (irondi-imb.gt.nval1.or.irondf-imb.lt.nval1 ) return

C  le groupe diagonal
      ig1=nbg1
C les lignes de val1 on s'arrete avant le terme diagonal.
          ivadb=ippr-idepv+1
C*   >      ippr,iblcd
          kidepb=ivpo(1)
          do 210 im=1,na
           kidep=ivpo(im)
          do 220 im1=1,na1
          p=0.d0

           ildeb1=ivpo1(2*ig1)
C*           ilfin1=ildeb1+im1-2
           ideb1=ivpo1(2*ig1-1)
           ideb1n=max(1-imb,ideb1)
           ifin1=ideb1+im1-2
           ifin1=min(ifin1,kidep-imb)
C le travail sur les colonnes de val
            ilpos1=ideb1n-ideb1+ildeb1 +(im1-1)*lpl1+((im1-2)*(im1-1))/2
            iposr=ideb1n+imb+(im-1)*lpl+((im-2)*(im-1))/2
            ideqb=ideb1n+imb

**         p=ddotpw(ifin1-ideb1n+1,val(iposr),val1(ilpos1),imasq(1),
**   >           ideqb,nbo)

* il y a trop peu de travail pour appeler ddotpw
           do 200 ipos=ideb1n,ifin1
            p=p+val(iposr)*val1(ilpos1)
            ilpos1=ilpos1+1
            iposr=iposr+1
 200       continue
           if (ifin1-ideb1n.ge.0) nbo=nbo+ifin1-ideb1n+1
C  comparaison au terme diagonal
           dnorm = precc * abs(val1(im1*lpl1+(im1*(im1-1))/2))
C  mise a jour val
           ivad=ippr-idepv+im1+(im-1)*lpl+((im-2)*(im-1))/2
           if (ivad.lt.1) goto 220
           ivadb=ippr-idepv+im1
           if (ivadb.lt.1) goto 220
           val(ivad)=val(ivad)-p
           if (abs(val(ivad)).gt.dnorm) then
             imasq(ivad/masdim+1)=1
             if (ivadb.le.lpl) imasq(ivadb/masdim+1)=1
C  mise a jour imasq
             do imt=kidep/masdim+1+1,ivad/masdim+1-1
              imasq(imt)=-(ivad/masdim)*masdim+1
             enddo
             kidep=ivad
C*           if (im.eq.1) then
C*            kidepb=kidep
C*           endif

             if (im.ne.1) then
              do imt=kidepb/masdim+1+1,ivadb/masdim+1-1
               imasq(imt)=-(ivadb/masdim)*masdim+1
              enddo
             endif
             kidepb=max(ivadb,kidepb)
           else
C  si on note que la valeur est nulle, il faut qu'elle le soit vraiment
             val(ivad)=0.d0
C*           write (6,*) ' chole3 ivad lpl ',ivad,lpl
           endif
 220      continue
          ivpo(im)=kidep
          ivpo(1)=kidepb
 210      continue

      RETURN
      END








