C CLI113    SOURCE    PV        16/11/17    21:58:30     9180
      SUBROUTINE CLI113(MELEMF,MELEMC,MELECB,MELEFC,MELRES,INORM,ICHPVO,
     &     ICHPSU,IROC,IVITC,IPC,IGAMC,ICHLIM,ILIINC,ILIINP,IJAC,IJACO)
C************************************************************************
C
C PROJET            :  CASTEM 2000
C
C NOM               :  CLI113
C
C DESCRIPTION       :  Subroutine appellée par CLIM11
C
C LANGAGE           :  FORTRAN 77 + ESOPE 2000 (avec estensions CISI)
C
C AUTEUR            :  A. BECCANTINI, DRN/DMT/SEMT/LTMF
C
C************************************************************************
C
C APPELES (Calcul)  :
C
C************************************************************************
C
C HISTORIQUE (Anomalies et modifications éventuelles)
C
C HISTORIQUE :
C
C************************************************************************
C
      IMPLICIT INTEGER(I-N)
-INC CCOPTIO
-INC SMLMOTS
-INC SMELEME
      POINTEUR MELEFC.MELEME
-INC SMLENTI
      POINTEUR MLEMC.MLENTI, MLEMCB.MLENTI,MLEMF.MLENTI
-INC SMCHPOI
      POINTEUR MPNORM.MPOVAL, MPVOL.MPOVAL, MPSURF.MPOVAL, MPRC.MPOVAL,
     &     MPVC.MPOVAL, MPPC.MPOVAL, MPGAMC.MPOVAL, MPLIM.MPOVAL
-INC SMMATRIK
      POINTEUR RR.IZAFM, RUX.IZAFM, RUY.IZAFM, RRET.IZAFM,
     &         UXR.IZAFM, UXUX.IZAFM, UXUY.IZAFM, UXRET.IZAFM,
     &         UYR.IZAFM, UYUX.IZAFM, UYUY.IZAFM, UYRET.IZAFM,
     &         RETR.IZAFM, RETUX.IZAFM, RETUY.IZAFM, RETRET.IZAFM,
     &         RUZ.IZAFM, UXUZ.IZAFM, UYUZ.IZAFM, RETUZ.IZAFM,
     &         UZR.IZAFM, UZUX.IZAFM, UZUY.IZAFM, UZRET.IZAFM,
     &         UZUZ.IZAFM
C
C**** Variables de COOPTIO
C
C      INTEGER IPLLB, IERPER, IERMAX, IERR, INTERR
C     &        ,IOTER,   IOLEC,  IOIMP,     IOCAR,  IOACQ
C     &        ,IOPER,   IOSGB,  IOGRA,     IOSAU,  IORES
C     &        ,IECHO,   IIMPI,  IOSPI
C     &        ,IDIM,    IFICLE, IPREFI
C     &        ,MCOORD
C     &        ,IFOMOD, NIFOUR, IFOUR, NSDPGE, IONIVE
C     &        ,NGMAXY, IZROSF, ISOTYP, IOSCR,LTEXLU
C     &        ,NORINC,NORVAL,NORIND,NORVAD
C     &        ,NUCROU, IPSAUV
C
      INTEGER MELEMF,MELEMC,MELECB,INORM,ICHPVO,ICHPSU, IROC,IVITC,IPC
     &     ,IGAMC,ICHLIM,ICEL,NFAC,IFAC,MELRES,IJACO
     &     ,NGF,NGC,NLF,NLC,NLCB
     &     ,ILIINC,ILIINP,IJAC
     &     ,MP, NBEL, NBME, NBSOUS, NKID, NKMT, NMATRI, NP, NRIGE
      REAL*8 VOLU,SURF,RC,PC,UXC,UYC,GAMC,CNX,CNY,CTX,CTY
     &     ,CNZ,CTZ,CT1X,CT1Y,CT1Z,UZC,UZF,UT1F,UT1,UZ
     &     ,DUZDG1,DFMZG1,DG1DUZ,DROUZ,DUXUZ,DUYUZ,DPUZ
     &     ,DUZRO,DUZUX,DUZUY,DUZUZ,DUZP
     &     ,RF,PF,UXF,UYF
     &     ,UNC,UNF,UTF,SF,ASONC,ASONF,ASON
*     &     ,UTC,SC
     &     ,GM1,USGM1,DSGM1,G1,G3,ASON2,S,UT,UN,RHO,P,UX,UY
     &     ,DUNDG1,DASDG1,DRHDG1,DPDG1,DUXDG1,DUYDG1
*     &     ,CELL,EPS,CACCA
     &     ,DFRDG1,DFMXG1,DFMYG1,DFEDG1
     &     ,DG1DR,DG1DP,DG1DUX,DG1DUY,COEF
     &     ,DRORO,DROUX,DROUY,DROP
     &     ,DUXRO,DUXUX,DUXUY,DUXP
     &     ,DUYRO,DUYUX,DUYUY,DUYP
     &     ,DPRO,DPUX,DPUY,DPP
     &     ,COEF1,COEF2,COEF3,COEF4
      CHARACTER*(8) TYPE
C
C
C**** KRIPAD pour la correspondance global/local
C
      CALL KRIPAD(MELEMC,MLEMC)
C     SEGINI MLEMC
      CALL KRIPAD(MELECB,MLEMCB)
C     SEGINI MLEMCB
      CALL KRIPAD(MELEMF,MLEMF)
C     SEGINI MLEMF
C
C**** CHPOINTs de la table DOMAINE
C
      CALL LICHT(INORM,MPNORM,TYPE,ICEL)
      CALL LICHT(ICHPVO,MPVOL,TYPE,ICEL)
      CALL LICHT(ICHPSU,MPSURF,TYPE,ICEL)
C
C**** LICHT active les MPOVALs en *MOD
C
C     SEGACT MPNORM*MOD
C     SEGACT MPOVSU*MOD
C     SEGACT MPOVOL*MOD
C
C
C**** CHPOINTs des variables
C
      CALL LICHT(IROC,MPRC,TYPE,ICEL)
      CALL LICHT(IVITC,MPVC,TYPE,ICEL)
      CALL LICHT(IPC,MPPC,TYPE,ICEL)
      CALL LICHT(IGAMC,MPGAMC,TYPE,ICEL)
      CALL LICHT(ICHLIM,MPLIM,TYPE,ICEL)
C
C     SEGACT *MOD
C     SEGACT *MOD
C     SEGACT *MOD
C     SEGACT *MOD
C     SEGACT *MOD
C
C
C**** Boucle sur le face pour le calcul des invariants de
C     Riemann et du flux
C
      SEGACT MELEFC
      NFAC=MELEFC.NUM(/2)
C
C**** Objet MATRIK
C
      NRIGE = 7
      NMATRI = 1
      NKID = 9
      NKMT = 7
C
      SEGINI MATRIK
      IJACO = MATRIK
      MATRIK.IRIGEL(1,1) = MELRES
      MATRIK.IRIGEL(2,1) = MELRES
C
C**** Matrice non symetrique
C
      MATRIK.IRIGEL(7,1) = 2
C
      NBME = 25
      NBSOUS = 1
      SEGINI IMATRI
      IF(IJAC.EQ.1)THEN
         MLMOTS=ILIINC
      ELSEIF(IJAC.EQ.2)THEN
         MLMOTS=ILIINP
      ENDIF
      SEGACT MLMOTS
      MATRIK.IRIGEL(4,1) = IMATRI
C
      IMATRI.LISPRI(1) = MLMOTS.MOTS(1)
      IMATRI.LISPRI(2) = MLMOTS.MOTS(2)
      IMATRI.LISPRI(3) = MLMOTS.MOTS(3)
      IMATRI.LISPRI(4) = MLMOTS.MOTS(4)
      IMATRI.LISPRI(5) = MLMOTS.MOTS(5)
C
      IMATRI.LISPRI(6) = MLMOTS.MOTS(1)
      IMATRI.LISPRI(7) = MLMOTS.MOTS(2)
      IMATRI.LISPRI(8) = MLMOTS.MOTS(3)
      IMATRI.LISPRI(9) = MLMOTS.MOTS(4)
      IMATRI.LISPRI(10) = MLMOTS.MOTS(5)
C
      IMATRI.LISPRI(11) = MLMOTS.MOTS(1)
      IMATRI.LISPRI(12) = MLMOTS.MOTS(2)
      IMATRI.LISPRI(13) = MLMOTS.MOTS(3)
      IMATRI.LISPRI(14) = MLMOTS.MOTS(4)
      IMATRI.LISPRI(15) = MLMOTS.MOTS(5)
C
      IMATRI.LISPRI(16) = MLMOTS.MOTS(1)
      IMATRI.LISPRI(17) = MLMOTS.MOTS(2)
      IMATRI.LISPRI(18) = MLMOTS.MOTS(3)
      IMATRI.LISPRI(19) = MLMOTS.MOTS(4)
      IMATRI.LISPRI(20) = MLMOTS.MOTS(5)
C
      IMATRI.LISPRI(21) = MLMOTS.MOTS(1)
      IMATRI.LISPRI(22) = MLMOTS.MOTS(2)
      IMATRI.LISPRI(23) = MLMOTS.MOTS(3)
      IMATRI.LISPRI(24) = MLMOTS.MOTS(4)
      IMATRI.LISPRI(25) = MLMOTS.MOTS(5)
C
      SEGDES MLMOTS
      MLMOTS=ILIINC
      SEGACT MLMOTS
C
      IMATRI.LISDUA(1) = MLMOTS.MOTS(1)
      IMATRI.LISDUA(2) = MLMOTS.MOTS(1)
      IMATRI.LISDUA(3) = MLMOTS.MOTS(1)
      IMATRI.LISDUA(4) = MLMOTS.MOTS(1)
      IMATRI.LISDUA(5) = MLMOTS.MOTS(1)
C
      IMATRI.LISDUA(6) = MLMOTS.MOTS(2)
      IMATRI.LISDUA(7) = MLMOTS.MOTS(2)
      IMATRI.LISDUA(8) = MLMOTS.MOTS(2)
      IMATRI.LISDUA(9) = MLMOTS.MOTS(2)
      IMATRI.LISDUA(10) = MLMOTS.MOTS(2)
C
      IMATRI.LISDUA(11) = MLMOTS.MOTS(3)
      IMATRI.LISDUA(12) = MLMOTS.MOTS(3)
      IMATRI.LISDUA(13) = MLMOTS.MOTS(3)
      IMATRI.LISDUA(14) = MLMOTS.MOTS(3)
      IMATRI.LISDUA(15) = MLMOTS.MOTS(3)
C
      IMATRI.LISDUA(16) = MLMOTS.MOTS(4)
      IMATRI.LISDUA(17) = MLMOTS.MOTS(4)
      IMATRI.LISDUA(18) = MLMOTS.MOTS(4)
      IMATRI.LISDUA(19) = MLMOTS.MOTS(4)
      IMATRI.LISDUA(20) = MLMOTS.MOTS(4)
C
      IMATRI.LISDUA(21) = MLMOTS.MOTS(5)
      IMATRI.LISDUA(22) = MLMOTS.MOTS(5)
      IMATRI.LISDUA(23) = MLMOTS.MOTS(5)
      IMATRI.LISDUA(24) = MLMOTS.MOTS(5)
      IMATRI.LISDUA(25) = MLMOTS.MOTS(5)
C
      SEGDES MLMOTS
      NBEL = NFAC
      NBSOUS = 1
      NP = 1
      MP = 1
      SEGINI   RR  , RUX , RUY , RUZ ,RRET ,
     &         UXR , UXUX , UXUY , UXUZ ,UXRET ,
     &         UYR , UYUX , UYUY , UYUZ , UYRET ,
     &         UZR , UZUX , UZUY , UZUZ , UZRET ,
     &         RETR , RETUX , RETUY, RETUZ , RETRET
C
C**** Duale = IMATRI.LISDUA(1) = 'RN'
C     Primale = IMATRI.LISPRI(1) = 'RN'
C     -> IMATRI.LIZAFM(1,1) = RR
C
      IMATRI.LIZAFM(1,1) = RR
      IMATRI.LIZAFM(1,2) = RUX
      IMATRI.LIZAFM(1,3) = RUY
      IMATRI.LIZAFM(1,4) = RUZ
      IMATRI.LIZAFM(1,5) = RRET
C
      IMATRI.LIZAFM(1,6) = UXR
      IMATRI.LIZAFM(1,7) = UXUX
      IMATRI.LIZAFM(1,8) = UXUY
      IMATRI.LIZAFM(1,9) = UXUZ
      IMATRI.LIZAFM(1,10) = UXRET
C
      IMATRI.LIZAFM(1,11) = UYR
      IMATRI.LIZAFM(1,12) = UYUX
      IMATRI.LIZAFM(1,13) = UYUY
      IMATRI.LIZAFM(1,14) = UYUZ
      IMATRI.LIZAFM(1,15) = UYRET
C
      IMATRI.LIZAFM(1,16) = UZR
      IMATRI.LIZAFM(1,17) = UZUX
      IMATRI.LIZAFM(1,18) = UZUY
      IMATRI.LIZAFM(1,19) = UZUZ
      IMATRI.LIZAFM(1,20) = UZRET
C
      IMATRI.LIZAFM(1,21) = RETR
      IMATRI.LIZAFM(1,22) = RETUX
      IMATRI.LIZAFM(1,23) = RETUY
      IMATRI.LIZAFM(1,24) = RETUZ
      IMATRI.LIZAFM(1,25) = RETRET
C
      SEGDES MATRIK
      SEGDES IMATRI
C
C**** Fin definition MATRIK
C
      DO IFAC=1,NFAC,1
         NGF=MELEFC.NUM(1,IFAC)
         NGC=MELEFC.NUM(2,IFAC)
         NLF=MLEMF.LECT(NGF)
         NLC=MLEMC.LECT(NGC)
         NLCB=MLEMCB.LECT(NGF)
         VOLU=MPVOL.VPOCHA(NLC,1)
         SURF=MPSURF.VPOCHA(NLF,1)
C        In CASTEM les normales sont sortantes
         CNX=-1*MPNORM.VPOCHA(NLF,1)
         CNY=-1*MPNORM.VPOCHA(NLF,2)
         CNZ=-1*MPNORM.VPOCHA(NLF,3)
         CTX=-1*MPNORM.VPOCHA(NLF,4)
         CTY=-1*MPNORM.VPOCHA(NLF,5)
         CTZ=-1*MPNORM.VPOCHA(NLF,6)
         CT1X=-1*MPNORM.VPOCHA(NLF,7)
         CT1Y=-1*MPNORM.VPOCHA(NLF,8)
         CT1Z=-1*MPNORM.VPOCHA(NLF,9)
C        Variables au centre
         RC=MPRC.VPOCHA(NLC,1)
         PC=MPPC.VPOCHA(NLC,1)
         UXC=MPVC.VPOCHA(NLC,1)
         UYC=MPVC.VPOCHA(NLC,2)
         UZC=MPVC.VPOCHA(NLC,3)
         GAMC=MPGAMC.VPOCHA(NLC,1)
C        Variables à la face
         RF=MPLIM.VPOCHA(NLCB,1)
         UXF=MPLIM.VPOCHA(NLCB,2)
         UYF=MPLIM.VPOCHA(NLCB,3)
         UZF=MPLIM.VPOCHA(NLCB,4)
         PF=MPLIM.VPOCHA(NLCB,IDIM+2)
C
C******* On calcule UN, UT ASON, S
C
         UNC=(UXC*CNX)+(UYC*CNY)+(UZC*CNZ)
*         UTC=(UXC*CTX)+(UYC*CTY)
         UNF=(UXF*CNX)+(UYF*CNY)+(UZF*CNZ)
         UTF=(UXF*CTX)+(UYF*CTY)+(UZF*CTZ)
         UT1F=(UXF*CT1X)+(UYF*CT1Y)+(UZF*CT1Z)
C
         ASONC=(GAMC*PC/RC)**0.5D0
         ASONF=(GAMC*PF/RF)**0.5D0
C
*         SC=PC/(RC**GAMC)
         SF=PF/(RF**GAMC)
C
C******* Densite, vitesse, pression sur le bord
C
         GM1=(GAMC-1.0D0)
         USGM1=1.0D0/GM1
         DSGM1=2.0D0*USGM1
         G1=UNC-(DSGM1*ASONC)
         G3=UNF+(DSGM1*ASONF)
         UN=0.5D0*(G1+G3)
         ASON=(0.5D0*(G3-G1))
         ASON=ASON/DSGM1
         ASON2=ASON*ASON
         S=SF
         UT=UTF
         UT1=UT1F
         RHO=ASON2/(GAMC*S)
         RHO=RHO**USGM1
         P=RHO*ASON2/GAMC
         UX=(UN*CNX)+(UT*CTX)+(UT1*CT1X)
         UY=(UN*CNY)+(UT*CTY)+(UT1*CT1Y)
         UZ=(UN*CNZ)+(UT*CTZ)+(UT1*CT1Z)
C
C******* Derivatives
C
         DUNDG1=0.5D0
         DASDG1=-0.5D0/DSGM1
         DRHDG1=GAMC*S
         DRHDG1=1.0D0/DRHDG1
         DRHDG1=DRHDG1**USGM1
         DRHDG1=DRHDG1*DSGM1
         DRHDG1=DRHDG1*(ASON**((3.0D0-GAMC)/(GAMC-1.0D0)))
         DRHDG1=DRHDG1*DASDG1
         DPDG1=((ASON2/GAMC)*DRHDG1)+(((2*ASON*RHO)/GAMC)*DASDG1)
CC
CC******* Test
CC
C         DFEDG1=(DUNDG1*GAMC*USGM1*P) + (UN*GAMC*USGM1*DPDG1) +
C     &        (0.5D0*DRHDG1*UN*((UN*UN)+(UT*UT))) +
C     &        (0.5D0*RHO*DUNDG1*((UN*UN)+(UT*UT))) +
C     &        (RHO*UN*UN*DUNDG1)
C         CACCA=UN*GAMC*USGM1*P + 0.5D0*RHO*UN*(UN*UN+UT*UT)
C         EPS=1.0D-6
C         G1=G1*(1+EPS)
C         CELL=UN
C         UN=0.5D0*(G1+G3)
C         write(*,*) DUNDG1, ((UN - CELL)/(EPS*G1))
C         CELL=ASON
C         ASON=(0.5D0*(G3-G1))
C         ASON=ASON/DSGM1
C         write(*,*) DASDG1, ((ASON - CELL)/(EPS*G1))
C         ASON2=ASON*ASON
C         S=SF
C         UT=UTF
C         CELL=RHO
C         RHO=ASON2/(GAMC*S)
C         RHO=RHO**USGM1
C         write(*,*) DRHDG1, ((RHO - CELL)/(EPS*G1))
C         CELL=P
C         P=RHO*ASON2/GAMC
C         write(*,*) DPDG1, ((P - CELL)/(EPS*G1))
C         CELL=CACCA
C         CACCA=UN*GAMC*USGM1*P + 0.5D0*RHO*UN*(UN*UN+UT*UT)
C         write(*,*) DFEDG1, ((CACCA - CELL)/(EPS*G1))
CC
CC************************************************************
CC
         DUXDG1=DUNDG1*CNX
         DUYDG1=DUNDG1*CNY
         DUZDG1=DUNDG1*CNZ
C
         DFRDG1=(DRHDG1*UN)+(RHO*DUNDG1)
         DFMXG1=(DRHDG1*UN*UX)+(RHO*DUNDG1*UX)+
     &        (RHO*UN*DUXDG1)+(DPDG1*CNX)
         DFMYG1=(DRHDG1*UN*UY)+(RHO*DUNDG1*UY)+
     &        (RHO*UN*DUYDG1)+(DPDG1*CNY)
         DFMZG1=(DRHDG1*UN*UZ)+(RHO*DUNDG1*UZ)+
     &        (RHO*UN*DUZDG1)+(DPDG1*CNZ)
         DFEDG1=(DUNDG1*GAMC*USGM1*P) + (UN*GAMC*USGM1*DPDG1) +
     &        (0.5D0*DRHDG1*UN*((UN*UN)+(UT*UT)+(UT1*UT1))) +
     &        (0.5D0*RHO*DUNDG1*((UN*UN)+(UT*UT)+(UT1*UT1))) +
     &        (RHO*UN*UN*DUNDG1)
C
C******* Jacobian with respect to primitive variables
C
         DG1DR=USGM1*ASONC/RC
         DG1DP=-1.0D0*USGM1*ASONC/PC
         DG1DUX=CNX
         DG1DUY=CNY
         DG1DUZ=CNZ
C
         COEF=SURF/VOLU
C
         DRORO=DFRDG1*DG1DR*COEF
         DROUX=DFRDG1*DG1DUX*COEF
         DROUY=DFRDG1*DG1DUY*COEF
         DROUZ=DFRDG1*DG1DUZ*COEF
         DROP=DFRDG1*DG1DP*COEF
C
         DUXRO=DFMXG1*DG1DR*COEF
         DUXUX=DFMXG1*DG1DUX*COEF
         DUXUY=DFMXG1*DG1DUY*COEF
         DUXUZ=DFMXG1*DG1DUZ*COEF
         DUXP=DFMXG1*DG1DP*COEF
C
         DUYRO=DFMYG1*DG1DR*COEF
         DUYUX=DFMYG1*DG1DUX*COEF
         DUYUY=DFMYG1*DG1DUY*COEF
         DUYUZ=DFMYG1*DG1DUZ*COEF
         DUYP=DFMYG1*DG1DP*COEF
C
         DUZRO=DFMZG1*DG1DR*COEF
         DUZUX=DFMZG1*DG1DUX*COEF
         DUZUY=DFMZG1*DG1DUY*COEF
         DUZUZ=DFMZG1*DG1DUZ*COEF
         DUZP=DFMZG1*DG1DP*COEF
C
         DPRO=DFEDG1*DG1DR*COEF
         DPUX=DFEDG1*DG1DUX*COEF
         DPUY=DFEDG1*DG1DUY*COEF
         DPUZ=DFEDG1*DG1DUZ*COEF
         DPP=DFEDG1*DG1DP*COEF
C
C******* Jacobian with respect to conservative variables
C
         IF(IJAC.EQ.1)THEN
C
            COEF1=-1.0D0*UXC/RC
            COEF2=-1.0D0*UYC/RC
            COEF3=-1.0D0*UZC/RC
            COEF4=0.5D0*GM1*((UXC*UXC)+(UYC*UYC)+(UZC*UZC))
C
            RR.AM(IFAC,1,1)=DRORO+(DROUX*COEF1)+(DROUY*COEF2)+(DROUZ
     $           *COEF3)+(DROP*COEF4)
            RUX.AM(IFAC,1,1)=(DROUX/RC)-((UXC*GM1)*DROP)
            RUY.AM(IFAC,1,1)=(DROUY/RC)-((UYC*GM1)*DROP)
            RUZ.AM(IFAC,1,1)=(DROUZ/RC)-((UZC*GM1)*DROP)
            RRET.AM(IFAC,1,1)=GM1*DROP
C
            UXR.AM(IFAC,1,1)=DUXRO+(DUXUX*COEF1)+(DUXUY*COEF2)+(DUXUZ
     $           *COEF3)+(DUXP*COEF4)
            UXUX.AM(IFAC,1,1)=(DUXUX/RC)-((UXC*GM1)*DUXP)
            UXUY.AM(IFAC,1,1)=(DUXUY/RC)-((UYC*GM1)*DUXP)
            UXUZ.AM(IFAC,1,1)=(DUXUZ/RC)-((UZC*GM1)*DUXP)
            UXRET.AM(IFAC,1,1)=GM1*DUXP
C
            UYR.AM(IFAC,1,1)=DUYRO+(DUYUX*COEF1)+(DUYUY*COEF2)+(DUYUZ
     $           *COEF3)+(DUYP*COEF4)
            UYUX.AM(IFAC,1,1)=(DUYUX/RC)-((UXC*GM1)*DUYP)
            UYUY.AM(IFAC,1,1)=(DUYUY/RC)-((UYC*GM1)*DUYP)
            UYUZ.AM(IFAC,1,1)=(DUYUZ/RC)-((UZC*GM1)*DUYP)
            UYRET.AM(IFAC,1,1)=GM1*DUYP
C
            UZR.AM(IFAC,1,1)=DUZRO+(DUZUX*COEF1)+(DUZUY*COEF2)+(DUZUZ
     $           *COEF3)+(DUZP*COEF4)
            UZUX.AM(IFAC,1,1)=(DUZUX/RC)-((UXC*GM1)*DUZP)
            UZUY.AM(IFAC,1,1)=(DUZUY/RC)-((UYC*GM1)*DUZP)
            UZUZ.AM(IFAC,1,1)=(DUZUZ/RC)-((UZC*GM1)*DUZP)
            UZRET.AM(IFAC,1,1)=GM1*DUZP
C
            RETR.AM(IFAC,1,1)=DPRO+(DPUX*COEF1)+(DPUY*COEF2)+(DPUZ
     $           *COEF3)+(DPP*COEF4)
            RETUX.AM(IFAC,1,1)=(DPUX/RC)-((UXC*GM1)*DPP)
            RETUY.AM(IFAC,1,1)=(DPUY/RC)-((UYC*GM1)*DPP)
            RETUZ.AM(IFAC,1,1)=(DPUZ/RC)-((UZC*GM1)*DPP)
            RETRET.AM(IFAC,1,1)=GM1*DPP
C
         ELSEIF(IJAC.EQ.2)THEN
            RR.AM(IFAC,1,1)=DRORO
            RUX.AM(IFAC,1,1)=DROUX
            RUY.AM(IFAC,1,1)=DROUY
            RUZ.AM(IFAC,1,1)=DROUZ
            RRET.AM(IFAC,1,1)=DROP
C
            UXR.AM(IFAC,1,1)=DUXRO
            UXUX.AM(IFAC,1,1)=DUXUX
            UXUY.AM(IFAC,1,1)=DUXUY
            UXUZ.AM(IFAC,1,1)=DUXUZ
            UXRET.AM(IFAC,1,1)=DUXP
C
            UYR.AM(IFAC,1,1)=DUYRO
            UYUX.AM(IFAC,1,1)=DUYUX
            UYUY.AM(IFAC,1,1)=DUYUY
            UYUZ.AM(IFAC,1,1)=DUYUZ
            UYRET.AM(IFAC,1,1)=DUYP
C
            UZR.AM(IFAC,1,1)=DUZRO
            UZUX.AM(IFAC,1,1)=DUZUX
            UZUY.AM(IFAC,1,1)=DUZUY
            UZUZ.AM(IFAC,1,1)=DUZUZ
            UZRET.AM(IFAC,1,1)=DUZP
C
            RETR.AM(IFAC,1,1)=DPRO
            RETUX.AM(IFAC,1,1)=DPUX
            RETUY.AM(IFAC,1,1)=DPUY
            RETUZ.AM(IFAC,1,1)=DPUZ
            RETRET.AM(IFAC,1,1)=DPP
         ENDIF

      ENDDO
C
      SEGDES MELEFC
C
      SEGSUP MLEMC
      SEGSUP MLEMCB
      SEGSUP MLEMF
C
      SEGDES MPNORM
      SEGDES MPVOL
      SEGDES MPSURF
      SEGDES MPRC
      SEGDES MPPC
      SEGDES MPVC
      SEGDES MPGAMC
      SEGDES MPLIM
C
      SEGDES   RR  , RUX , RUY , RUZ ,RRET ,
     &         UXR , UXUX , UXUY , UXUZ ,UXRET ,
     &         UYR , UYUX , UYUY , UYUZ , UYRET ,
     &         UZR , UZUX , UZUY , UZUZ , UZRET ,
     &         RETR , RETUX , RETUY, RETUZ , RETRET
C
 9999 CONTINUE
      RETURN
      END











