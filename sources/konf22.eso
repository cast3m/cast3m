C KONF22    SOURCE    CB215821  16/04/21    21:17:33     8920
      SUBROUTINE KONF22(INDMET,
     &                  IALPF,IUVF,IULF,IPF,
     &                  ITVF,ITLF,IRVF,IRLF,
     &                  ICHPSU,ICHPDI,
     &                  MELEMC,MELEMF,MELEFE,
     &                  ICHFLU,DT,
     &                  LOGNC,LOGAN,MESERR)
C************************************************************************
C
C PROJET            :  CASTEM 2000
C
C NOM               :  KONFL9
C
C DESCRIPTION       :  Voir KONV15
C
C                      3D two phase flow
C
C LANGAGE           :  FORTRAN 77 + ESOPE 2000 (AVEC ESTENSIONS CISI)
C
C AUTEUR            :  A. BECCANTINI, DRN/DMT/SEMT/TTMF
C                      MODIFIED FOR TWO PHASE FLOW BY
C                      JOSÉ R.
C
C************************************************************************
C
C
C APPELES (OUTILS
C          CASTEM)  :  KRIPAD, LICHT
C
C APPELES (CALCUL)  :  FLURIE, FLUXVL, FLUVLH, FLHUS1, FLHUS2
C
C
C************************************************************************
C
C ENTREES
C
C
C  1) PARAMETRES
C
C     INDMET  :     6        AUSM+
C
C
C  2) POINTEURS DES MCHAMLS
C
C     IALPF   : MCHAML SUR "FACEL" CONTAINING VOID FRACTION
C
C     IUVF    : MCHAML SUR "FACEL" CONTAINING VAPOUR VELOCITY
C
C     IULF    : MCHAML SUR "FACEL" CONTAINING LIQUID VELOCITY
C
C     IPF     : MCHAML SUR "FACEL" CONTAINING PRESSURE
C
C     ITVF    : MCHAML SUR "FACEL" CONTAINING VAPOUR TEMPERATURE
C
C     ITLF    : MCHAML SUR "FACEL" CONTAINING LIQUID TEMPERATURE
C
C     IRVF    : MCHAML SUR "FACEL" CONTAINING VAPOUR DENSITY
C
C     IRLF    : MCHAML SUR "FACEL" CONTAINING LIQUID DENSITY
C
C
C  3) POINTEURS DE CHPOINTS DE LA TABLE DOMAINE
C
C     ICHPSU  : CHPOINT "FACE" CONTENANT LA SURFACE DES FACES
C
C     ICHPDI  : CHPOINT "CENTRE" CONTENANT LE DIAMETRE MINIMUM
C               DE CHAQUE ELEMENT
C
C
C  4) POINTEURS DE MELEME DE LA TABLE DOMAINE
C
C     MELEMC  : MELEME 'CENTRE' DU SPG DES CENTRES
C
C     MELEMF  : MELEME 'FACE' DU SPG DES FACES
C
C     MELEFE  : MELEME 'FACEL' DU CONNECTIVITÉ FACES -> ELEM
C
C SORTIES
C
C     ICHFLU     : POINTEURS DE CHPOINTS "FACE" DES FLUX AUX INTERFACES:
C
C     DT      : PAS DE TEMPS POUR LE RESPECT DE LA CFL-LIKE CONDITION
C               DT < DIAMMIN /2 /MAX(LAMBDA_I)
C               EN MAILLAGE REGULIER CETTE CONDITION GARANTIE LA
C               NON-INTERACTION DES ONDES
C
C
C     LOGNC   : (LOGICAL): SI .TRUE. LA METHODE DE NEWTON-RAPSON, UTILISÉE
C               DANS POUR LA SOLUTION DU PROBLEME RIEMANN EXACTE OU DANS
C               L'ALGORITHM HUS, N'A PAS BIEN MARCHÉEE; MESERR = 'GOUDUNOV'
C               OU 'HUS'.
C
C     LOGAN   : (LOGICAL): SI .TRUE. UNE ANOMALIE À ÉTÉ DETECTÉE
C
C     MESERR  : POUR L'ECRITURE DES MESSAGES D'ERREURS
C
C************************************************************************
C
C HISTORIQUE (ANOMALIES ET MODIFICATIONS ÉVENTUELLES)
C
C HISTORIQUE :
C
C************************************************************************
C
C
C N.B.: ON SUPPOSE QU'ON A DÉJÀ CONTROLLÉ RO, P > 0
C                                         GAMMA \IN (1,3)
C                                         Y \IN (0,1)
C       SI NON IL FAUT LE FAIRE!!!
C
C************************************************************************
C
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INTEGER I1
     &       ,INDMET
     &       ,IALPF,IUVF,IULF,IPF,ITVF,ITLF,IRVF,IRLF
     &       ,ICHPSU,ICHPDI,MELEMC,MELEMF,MELEFE
     &       ,IGEOMC,IGEOMF
     &       ,ICHFLU
     &       ,NESP, NFAC
     &       ,NLCF, NGCEG,  NGCED, NLCEG, NLCED
     &       ,NGCF, NLCF1, SPG1, SPG2
      REAL*8 DT, UNSDT
     &     , ALPG, UVNG, UVTG, UVVG, ULNG, ULTG, ULVG, PG, TVG, TLG
     &     , RVG,  RLG
     &     , ALPD, UVND, UVTD, UVVD, ULND, ULTD, ULVD, PD, TVD, TLD
     &     , RVD,  RLD
     &     , SURF, CNX, CNY, CNZ, CTX , CTY, CTZ, CVX, CVY, CVZ
     &     , CELL, DIAMG, DIAMD, DIAM
     &     , AVSON, LAMDAV, ALSON, LAMDAL, kk
      LOGICAL LOGNC, LOGAN
      CHARACTER*(40) MESERR
      CHARACTER*(8) TYPE
C
C**** LES INCLUDES
C
-INC CCOPTIO
-INC SMCHAML
      POINTEUR MELALP.MELVAL, MELP.MELVAL,
     &         MELTV.MELVAL,  MELTL.MELVAL,
     &         MELRV.MELVAL,  MELRL.MELVAL
      POINTEUR MELUVN.MELVAL, MELUVT.MELVAL, MELUVV.MELVAL,
     &         MELULN.MELVAL, MELULT.MELVAL, MELULV.MELVAL,
     &         MLVNX.MELVAL,  MLVNY.MELVAL,  MLVNZ.MELVAL,
     &         MLVT1X.MELVAL, MLVT1Y.MELVAL, MLVT1Z.MELVAL,
     &         MLVT2X.MELVAL, MLVT2Y.MELVAL, MLVT2Z.MELVAL,
     &         MLLNX.MELVAL,  MLLNY.MELVAL,  MLLNZ.MELVAL,
     &         MLLT1X.MELVAL, MLLT1Y.MELVAL, MLLT1Z.MELVAL,
     &         MLLT2X.MELVAL, MLLT2Y.MELVAL, MLLT2Z.MELVAL
-INC SMCHPOI
      POINTEUR MPOVSU.MPOVAL, MPOVDI.MPOVAL
     &        , MPOFLU.MPOVAL
      POINTEUR MCHAMY.MCHAML
-INC SMELEME
-INC SMLMOTS
-INC SMLENTI
C
C**** FLUX AT EACH INTERFACE AND EACH REFERENCE FRAMEWORK
C
      SEGMENT IFLUX
         REAL*8 FLUX(10)
      ENDSEGMENT
      POINTEUR IFLU1.IFLUX
C
C**** INITIALISATION DES MCHAMLS
C
C**** VOID FRACTION
C
      MCHEL1 = IALPF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELALP = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** VAPOUR VELOCITY AND DIRECTOR COSINES (COSENOS DIRECTORES VAMOS??)
C
      MCHEL1 = IUVF
      SEGACT MCHEL1
C
C**** LA VITESSE A COMME SPG MELEFE
C     LE COSINUS DIRECTEURS ONT COMME SPG MELEMF
C
C     MCHAM1 -> COSINUS DIRECTEURS
C     MCHAM2 -> VITESSE
C
      SPG1 = MCHEL1.IMACHE(1)
      SPG2 = MCHEL1.IMACHE(2)
      IF((SPG1 .EQ. MELEMF)  .AND. (SPG2 .EQ. MELEFE))THEN
         MCHAM1 = MCHEL1.ICHAML(1)
         MCHAM2 = MCHEL1.ICHAML(2)
      ELSEIF((SPG1 .EQ. MELEFE)  .AND. (SPG2 .EQ. MELEMF))THEN
         MCHAM1 = MCHEL1.ICHAML(2)
         MCHAM2 = MCHEL1.ICHAML(1)
      ELSE
         LOGAN = .TRUE.
         GOTO 9999
      ENDIF
      SEGACT MCHAM1
      MLVNX  = MCHAM1.IELVAL(1)
      MLVNY  = MCHAM1.IELVAL(2)
      MLVNZ  = MCHAM1.IELVAL(3)
      MLVT1X = MCHAM1.IELVAL(4)
      MLVT1Y = MCHAM1.IELVAL(5)
      MLVT1Z = MCHAM1.IELVAL(6)
      MLVT2X = MCHAM1.IELVAL(7)
      MLVT2Y = MCHAM1.IELVAL(8)
      MLVT2Z = MCHAM1.IELVAL(9)

      SEGDES MCHAM1
      SEGACT MCHAM2
      MELUVN = MCHAM2.IELVAL(1)
      MELUVT = MCHAM2.IELVAL(2)
      MELUVV = MCHAM2.IELVAL(3)
      SEGDES MCHAM2
      SEGDES MCHEL1
C
C**** LIQUID VELOCITY AND DIRECTOR COSINES (COSENOS DIRECTORES VAMOS??)
C     CLARAMENTE TENGO QUE ELIMINAR LOS COSENOS DIRECTORES DE LA
C     VELOCIDAD DEL LIQUIDO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C
      MCHEL1 = IULF
      SEGACT MCHEL1
C
C**** LA VITESSE A COMME SPG MELEFE
C     LE COSINUS DIRECTEURS ONT COMME SPG MELEMF
C
C     MCHAM1 -> COSINUS DIRECTEURS
C     MCHAM2 -> VITESSE
C
      SPG1 = MCHEL1.IMACHE(1)
      SPG2 = MCHEL1.IMACHE(2)
      IF((SPG1 .EQ. MELEMF)  .AND. (SPG2 .EQ. MELEFE))THEN
         MCHAM1 = MCHEL1.ICHAML(1)
         MCHAM2 = MCHEL1.ICHAML(2)
      ELSEIF((SPG1 .EQ. MELEFE)  .AND. (SPG2 .EQ. MELEMF))THEN
         MCHAM1 = MCHEL1.ICHAML(2)
         MCHAM2 = MCHEL1.ICHAML(1)
      ELSE
         LOGAN = .TRUE.
         GOTO 9999
      ENDIF
      SEGACT MCHAM1
      MLLNX  = MCHAM1.IELVAL(1)
      MLLNY  = MCHAM1.IELVAL(2)
      MLLNZ  = MCHAM1.IELVAL(3)
      MLLT1X = MCHAM1.IELVAL(4)
      MLLT1Y = MCHAM1.IELVAL(5)
      MLLT1Z = MCHAM1.IELVAL(6)
      MLLT2X = MCHAM1.IELVAL(7)
      MLLT2Y = MCHAM1.IELVAL(8)
      MLLT2Z = MCHAM1.IELVAL(9)
      SEGDES MCHAM1
      SEGACT MCHAM2
      MELULN = MCHAM2.IELVAL(1)
      MELULT = MCHAM2.IELVAL(2)
      MELULV = MCHAM2.IELVAL(3)
      SEGDES MCHAM2
      SEGDES MCHEL1
C
C**** PRESSURE
C
      MCHEL1 = IPF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELP = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** VAPOUR TEMPERATURE
C
      MCHEL1 = ITVF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELTV = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** LIQUID TEMPERATURE
C
      MCHEL1 = ITLF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELTL = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** VAPOUR DENSITY
C
      MCHEL1 = IRVF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELRV = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** LIQUID DENSITY
C
      MCHEL1 = IRLF
      SEGACT MCHEL1
      MCHAM1 = MCHEL1.ICHAML(1)
      SEGACT MCHAM1
      MELRL = MCHAM1.IELVAL(1)
      SEGDES MCHEL1
      SEGDES MCHAM1
C
C**** INITIALISATION DES MELEMES
C
C     'CENTRE', 'FACEL'
C
      IPT2 = MELEFE
      SEGACT IPT2
      NFAC = IPT2.NUM(/2)
C
C**** KRIPAD POUR LA CORRESPONDANCE GLOBAL/LOCAL DE CENTRE
C
      CALL KRIPAD(MELEMC,MLENT1)
C
C**** MLENTI1 A MCORD.XCOORD(/1)/(IDIM+1) ELEMENTS
C
C     SI I EST LE NUMERO GLOBAL D'UN NOEUD DE ICEN,
C     MLENT1.LECT(I) CONTIENT SA POSITION, I.E.
C
C     I              = NUMERO GLOBAL DU NOEUD CENTRE
C     MLENT1.LECT(I) = NUMERO LOCAL DU NOEUD CENTRE
C
C     MLENT1 DÉJÀ ACTIVÉ, I.E.
C
C     SEGACT MLENT1
C
C
C**** KRIPAD POUR LA CORRESPONDANCE GLOBAL/LOCAL DE 'FACE'
C
      CALL KRIPAD(MELEMF,MLENT2)
C     SEGACT MELNT2
C
C**** INITIALISATION DE FLUX
C
      SEGINI IFLU1
C
C**** CHPOINTS DE LA TABLE DOMAINE
C
      CALL LICHT(ICHPSU,MPOVSU,TYPE,IGEOMF)
      CALL LICHT(ICHPDI,MPOVDI,TYPE,IGEOMC)
C
C**** LICHT ACTIVE LES MPOVALS EN *MOD
C
C     I.E.
C
C     SEGACT MPOVSU*MOD
C     SEGACT MPOVDI*MOD
C
      IF(IGEOMF .NE. MELEMF)THEN
         MESERR = 'IL NE FAUT PAS JOUER AVEC LA CONSOLE.   '
         LOGAN = .TRUE.
         GOTO 9999
      ENDIF
      IF(IGEOMC .NE. MELEMC)THEN
         MESERR = 'IL NE FAUT PAS JOUER AVEC LA CONSOLE.   '
         LOGAN = .TRUE.
         GOTO 9999
      ENDIF
C
C**** LES FLUX AUX FACE
C
C     LA DENSITÉ
C
      CALL LICHT(ICHFLU,MPOFLU,TYPE,IGEOMF)
C
C     SEGACT MPOFLU*MOD
C
      IF(IGEOMC .NE. MELEMC)THEN
         MESERR = 'IL NE FAUT PAS JOUER AVEC LA CONSOLE.   '
         LOGAN = .TRUE.
         GOTO 9999
      ENDIF
C
C**** ACTIVATION DES MCHAMLS
C
      SEGACT MELALP
      SEGACT MELP
      SEGACT MELTV
      SEGACT MELTL
      SEGACT MELRV
      SEGACT MELRL

      SEGACT MELUVN
      SEGACT MELUVT
      SEGACT MELUVV

      SEGACT MELULN
      SEGACT MELULT
      SEGACT MELULV

      SEGACT MLVNX
      SEGACT MLVNY
      SEGACT MLVNZ
      SEGACT MLVT1X
      SEGACT MLVT1Y
      SEGACT MLVT1Z
      SEGACT MLVT2X
      SEGACT MLVT2Y
      SEGACT MLVT2Z

      SEGACT MLLNX
      SEGACT MLLNY
      SEGACT MLLNZ
      SEGACT MLLT1X
      SEGACT MLLT1Y
      SEGACT MLLT1Z
      SEGACT MLLT2X
      SEGACT MLLT2Y
      SEGACT MLLT2Z
C
C**** INITIALISATION DE 1/DT
C
      UNSDT = 0.0D0
C
C**** BOUCLE SUR FACEL POUR LE CALCUL DU FLUX
C
      DO NLCF = 1, NFAC
C
C******* NLCF  = NUMERO LOCAL DU CENTRE DE FACEL
C        NGCF  = NUMERO GLOBAL DU CENTRE DE FACEL
C        NLCF1 = NUMERO LOCAL DU CENTRE DE FACE
C        NGCEG = NUMERO GLOBAL DU CENTRE ELT "GAUCHE"
C        NLCEG = NUMERO LOCAL DU CENTRE ELT "GAUCHE"
C        NGCED = NUMERO GLOBAL DU CENTRE ELT "DROITE"
C        NLCED = NUMERO LOCAL DU CENTRE ELT "DROITE"
C
         NGCEG = IPT2.NUM(1,NLCF)
         NGCED = IPT2.NUM(3,NLCF)
         NGCF  = IPT2.NUM(2,NLCF)
         NLCF1 = MLENT2.LECT(NGCF)
         NLCEG = MLENT1.LECT(NGCEG)
         NLCED = MLENT1.LECT(NGCED)
C
C******* NLCF != NLCF1 -> L'AUTEUR (MOI) N'A RIEN COMPRIS.
C
         IF(NLCF .NE. NLCF1)THEN
            MESERR = 'IL NE FAUT PAS JOUER AVEC LA CONSOLE.   '
            LOGAN = .TRUE.
            GOTO 9999
         ENDIF
C
C******* RECUPERATION DES ETATS "GAUCHE" ET "DROITE"
C
         ALPG = MELALP.VELCHE(1,NLCF)
         UVNG = MELUVN.VELCHE(1,NLCF)
         UVTG = MELUVT.VELCHE(1,NLCF)
         UVVG = MELUVV.VELCHE(1,NLCF)
         ULNG = MELULN.VELCHE(1,NLCF)
         ULTG = MELULT.VELCHE(1,NLCF)
         ULVG = MELULV.VELCHE(1,NLCF)
         PG   = MELP.VELCHE(1,NLCF)
         TVG  = MELTV.VELCHE(1,NLCF)
         TLG  = MELTL.VELCHE(1,NLCF)
         RVG  = MELRV.VELCHE(1,NLCF)
         RLG  = MELRL.VELCHE(1,NLCF)
C
         ALPD = MELALP.VELCHE(3,NLCF)
         UVND = MELUVN.VELCHE(3,NLCF)
         UVTD = MELUVT.VELCHE(3,NLCF)
         UVVD = MELUVV.VELCHE(3,NLCF)
         ULND = MELULN.VELCHE(3,NLCF)
         ULTD = MELULT.VELCHE(3,NLCF)
         ULVD = MELULV.VELCHE(3,NLCF)
         PD   = MELP.VELCHE(3,NLCF)
         TVD  = MELTV.VELCHE(3,NLCF)
         TLD  = MELTL.VELCHE(3,NLCF)
         RVD  = MELRV.VELCHE(3,NLCF)
         RLD  = MELRL.VELCHE(3,NLCF)
C
         CNX = MLVNX.VELCHE(1,NLCF)
         CNY = MLVNY.VELCHE(1,NLCF)
         CNZ = MLVNZ.VELCHE(1,NLCF)
         CTX = MLVT1X.VELCHE(1,NLCF)
         CTY = MLVT1Y.VELCHE(1,NLCF)
         CTZ = MLVT1Z.VELCHE(1,NLCF)
         CVX = MLVT2X.VELCHE(1,NLCF)
         CVY = MLVT2Y.VELCHE(1,NLCF)
         CVZ = MLVT2Z.VELCHE(1,NLCF)

C
C******* Calcul du flux aux interfaces
C
C AUSM+ (1) and "preconditioned" AUSM+ (2)
         IF((INDMET .EQ. 1) .OR. (INDMET .EQ. 2))THEN
            CALL fAP32F(INDMET,
     &                  ALPG, UVNG, UVTG, UVVG, ULNG, ULTG, ULVG,
     &                  PG, TVG, TLG, RVG, RLG,
     &                  ALPD, UVND, UVTD, UVVD, ULND, ULTD, ULVD,
     &                  PD, TVD, TLD, RVD, RLD,
     &                  IFLU1.FLUX)
C AUSMDV (3) and "preconditioned" AUSMDV (3)
         ELSE IF((INDMET .EQ. 3) .OR. (INDMET .EQ. 4))THEN
            CALL fDV32F(INDMET,
     &                  ALPG, UVNG, UVTG, UVVG, ULNG, ULTG, ULVG,
     &                  PG, TVG, TLG, RVG, RLG,
     &                  ALPD, UVND, UVTD, UVVD, ULND, ULTD, ULVD,
     &                  PD, TVD, TLD, RVD, RLD,
     &                  IFLU1.FLUX)
         ELSE
C
C******** Message d'erreur standard
C         251 2
C         Tentative d'utilisation d'une option non implémentée
C
            CALL ERREUR(251)
         END IF
         IF(LOGAN) GOTO 9999
         IF(LOGNC) GOTO 9999
C
C******* Ecriture des flux
C
C        FLUX(1) = alpha rv uvn
C        FLUX(2) = (1-alpha) rl uln
C        FLUX(3) = alpha rv uvx uvn + alpha p
C        FLUX(4) = alpha rv uvy uvn + alpha p
C        FLUX(5) = alpha rv uvz uvn + alpha p
C        FLUX(6) = (1-alpha) rl ulx uln + (1-alpha) p
C        FLUX(7) = (1-alpha) rl uly uln + (1-alpha) p
C        FLUX(8) = (1-alpha) rl ulz uln + (1-alpha) p
C        FLUX(9) = alpha rv Hv uvn
C        FLUX(10) = (1-alpha) rl Hl uln
C
         SURF   = MPOVSU.VPOCHA(NLCF,1)

         MPOFLU.VPOCHA(NLCF,1) = (IFLU1.FLUX(1)*SURF)

         MPOFLU.VPOCHA(NLCF,2) = (IFLU1.FLUX(2)*SURF)

         MPOFLU.VPOCHA(NLCF,3) = ((IFLU1.FLUX(3)*CNX + IFLU1.FLUX(5)*CTX
     &                           + IFLU1.FLUX(7)*CVX)*SURF)

         MPOFLU.VPOCHA(NLCF,4) = ((IFLU1.FLUX(3)*CNY + IFLU1.FLUX(5)*CTY
     &                           + IFLU1.FLUX(7)*CVY)*SURF)

         MPOFLU.VPOCHA(NLCF,5) = ((IFLU1.FLUX(3)*CNZ + IFLU1.FLUX(5)*CTZ
     &                           + IFLU1.FLUX(7)*CVZ)*SURF)

         MPOFLU.VPOCHA(NLCF,6) = ((IFLU1.FLUX(4)*CNX + IFLU1.FLUX(6)*CTX
     &                           + IFLU1.FLUX(8)*CVX)*SURF)

         MPOFLU.VPOCHA(NLCF,7) = ((IFLU1.FLUX(4)*CNY+IFLU1.FLUX(6)*CTY
     &                           + IFLU1.FLUX(8)*CVY)*SURF)

         MPOFLU.VPOCHA(NLCF,8) = ((IFLU1.FLUX(4)*CNZ+IFLU1.FLUX(6)*CTZ
     &                           + IFLU1.FLUX(8)*CVZ)*SURF)

         MPOFLU.VPOCHA(NLCF,9) = (IFLU1.FLUX(9)*SURF)

         MPOFLU.VPOCHA(NLCF,10) = (IFLU1.FLUX(10)*SURF)

C
C******* CALCUL DU PAS DU TEMPS (CFL)
C
C******  A) ETAT A L'ITNERFACE
C
         DIAMG = MPOVDI.VPOCHA(NLCEG,1)
         DIAMD = MPOVDI.VPOCHA(NLCED,1)
         DIAM  = MIN(DIAMG,DIAMD)
C         CELL  = 1.0D0/DIAM/CELLT
C         IF(CELL .GT. UNSDT)THEN
C            UNSDT  =  CELL
C         ENDIF
C
C******  B) ETAT GAUCHE
C       gammav = 1.4D0
C       Cpv    = 1008.D0   J/(kg·K)
C       gammal = 2.8D0
C       Cpl    = 4186.D0   J/(kg·K)
C       pil    = 8.5D8      Pa

         AVSON  = SQRT(1008.d0*(1.4d0 - 1.d0)*TVG)
         LAMDAV = ABS(UVNG) + AVSON
         ALSON  = SQRT(4186.D0*(2.8d0 - 1.d0)*TLG)
         LAMDAL = ABS(ULNG) + ALSON
         CELL   = 1.D0/(((1.d0 - ALPG)/LAMDAL + ALPG/LAMDAV)* DIAM)
         IF(CELL .GT. UNSDT)THEN
            UNSDT  =  CELL
         ENDIF
C
C******  C) ETAT DROITE
C
         AVSON  = SQRT(1008.d0*(1.4d0 - 1.d0)*TVD)
         LAMDAV = ABS(UVND) + AVSON
         ALSON  = SQRT(4186.D0*(2.8d0 - 1.d0)*TLD)
         LAMDAL = ABS(ULND) + ALSON
         CELL   = 1.D0/(((1.d0 - ALPD)/LAMDAL + ALPD/LAMDAV)* DIAM)
         IF(CELL .GT. UNSDT)THEN
            UNSDT  =  CELL
         ENDIF
C
C
C**** FIN BOUCLE SUR FACEL
C
      ENDDO
C
C**** PAS DU TEMPS (CONDITION DE NON INTERACTION EN 1D)
C
      DT = 1.D0 / UNSDT
C
C**** DESACTIVATION DES SEGMENTS ET
C     ON DETRUIT LES MCHAMLS
C
C**** SEGSUP FRAMAG
C     SEGSUP FRAMAD
C
C
C
      SEGSUP MLENT1
      SEGSUP MLENT2
      SEGDES IPT2

      SEGSUP IFLU1

      SEGDES MPOVSU
      SEGDES MPOVDI

      SEGDES MPOFLU

      SEGDES MELALP
      SEGDES MELP
      SEGDES MELTV
      SEGDES MELTL
      SEGDES MELRV
      SEGDES MELRL

      SEGDES MELUVN
      SEGDES MELUVT
      SEGDES MELUVV

      SEGDES MELULN
      SEGDES MELULT
      SEGDES MELULV

      SEGDES MLVNX
      SEGDES MLVNY
      SEGDES MLVNZ
      SEGDES MLVT1X
      SEGDES MLVT1Y
      SEGDES MLVT1Z
      SEGDES MLVT2X
      SEGDES MLVT2Y
      SEGDES MLVT2Z

      SEGDES MLLNX
      SEGDES MLLNY
      SEGDES MLLNZ
      SEGDES MLLT1X
      SEGDES MLLT1Y
      SEGDES MLLT1Z
      SEGDES MLLT2X
      SEGDES MLLT2Y
      SEGDES MLLT2Z
CC
 9999 CONTINUE
C
      RETURN
      END





