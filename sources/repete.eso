C REPETE    SOURCE    CB215821  19/01/29    21:15:08     10088
C  CET OPERATEUR INITIALISE LA FONCTION REPETER DE GIBIANE
C  IL DOIT ETRE SUIVI DU NOM D'UN BLOC REPETER
C  SI CE BLOC EXISTE LIRNOM EST DEROUTE POUR LE LIRE
C  SI CE BLOC N'EXISTE PAS IL LE CREE ET LIRNOM LE REMPLIT
C  A LA PREMIERE INTERPRETATION
C  LE BLOC FINI PAR FIN "BLOC"
C
      SUBROUTINE REPETE
      IMPLICIT INTEGER(I-N)
-INC CCNOYAU
-INC SMBLOC
-INC CCOPTIO
      CHARACTER*(8)     ICHA,INOM,ITCH
c       CHARACTER*(9)     ICHB
      CHARACTER*(LONOM) ICHC,CNOM
*
      CHARACTER*8 IJCH
      CHARACTER*4 MFIN(1)
      DIMENSION IMOTCO(1)
      SAVE IMOTCO
      DATA IMOTCO(1)/-1/
      DATA MFIN/'FIN '/
      LOGICAL TSTMBC
      MBC=-1
      CALL LIROBJ('BLOC    ',MBLO1,0,IREBLO)
      if( ireblo.ne.0)   imablu=jpoob2(imotlu)
      IF(IREBLO.EQ.0)  THEN
         CALL QUETYP(ICHA,1,IRETOU)
         IF(IERR.NE.0) RETURN
c          IF(ICHA.EQ.'MOT     ') THEN
c             CALL LIRCHA(ICHB,1,IRETOU)
c             IF(ICHB(9:9).NE.' ') THEN
c                CALL ERREUR (315)
c                RETURN
c             ENDIF
c             CNOM=ICHB
c          ELSE
            CALL LIROBJ(ICHA,IRE,1,IRETOU)
            CALL QUENOM(CNOM)
            IF(CNOM(1:1).EQ.' ') THEN
              CALL ERREUR(315)
              RETURN
            ENDIF
c          ENDIF
      ENDIF
      CALL LIRENT(MBC,0,IRETOU)
      IF (IERR.NE.0) RETURN
*  TEST QUE L'INSTRUCTION EST EPUISEE - PROBLEME AVEC LA PRECOMPILATION
*     CALL QUETYP(ITCH,0,IRETO)
*     IF (IRETO.EQ.0) GOTO 20
*     MOTERR(1:8)=ITCH
*     CALL LIRABJ(ITCH,IRET,1,IRETO)
*     CALL QUENOM(ITCH)
*     MOTERR(9:16)=ITCH
*     CALL ERREUR(551)
*     RETURN
*  20  CONTINUE

      MDEOBT=MDEOBJ
      MFIOBT=MFIOBJ
      MBLPRT=MBLPRO
      MTXBLC=MTXBL
      MARM = MARGUM
      IF (MBLSUP.NE.0) SEGDES MTXBLC
      ISSPOT=ISPOTE
      SEGDES ISSPOT
      IRETCO=MOBJCO
      SEGDES MBLOC
      MTEMP=MBLOC
      IF (IREBLO.EQ.0) GOTO 10
C
C  LE BLOC REPETER EXISTE DEJA
C
      segini,mbloc=MBLO1
      iouep2(imablu)=mbloc
      SEGACT MBLOC*MOD
      ISSPOT=ISPOTE
      SEGACT ISSPOT*MOD
*      write(6,*) 'ispote ipotem(1) ', ispote, ipotem(1)
      MOBJCO=IRETCO
      mdecip = mdeobt  - mdeobj
      do iou=1,ipotem(/1)
        ipotem(iou)=ipotem(iou)+mdecip
      enddo
      MDEOBJ=MDEOBT
      MFIOBJ=MFIOBT
      MBLPRO=MBLPRT
      MBLSUP=MTEMP
      MARGUM = MARM
      MTXBLC=MTXBL
      SEGACT MTXBLC
*      ILON= MTXBLC(/1)
      MBCOUR=0
      MBCONT=MBC
      MBFONC=0
      MBERR =0

C     Gestion du SOUCI dans le BLOC (ACTUELLEMENT INUTILISE)
      MBSOUC=0

      ICHC=NCONBO
      ICONBO=1
      IIPROU=ICONBO
*      write(6,*)' bloc2 repete mbloc mdeobj lmnnom',mbloc,mdeobj,lmnnom
      CALL NOMENT(ICHC,IIPROU)
      TSTMBC=(MBC.EQ.0.AND.LECTAB.EQ.0)
      GOTO 100

  10  CONTINUE
C
C  ON EST EN DEFINITION D'UN NOUVEAU BLOC
C
      SEGINI,MBLOC
      NVQTEM=20
      SEGINI ISSPOT
      ISPOTE= ISSPOT
      NBNOMM=1200
      NINST=1200
      IPVINN=3000
      SEGINI MTXBLC
      NINSTV=0
      MTXBL=MTXBLC
      MBLSUP=MTEMP
      MARGUM = MARM
      MBCONT=MBC
      MBLPRO=0
      MBCOUR=0
      MBFONC=1
      MBERR =0

C     Gestion du SOUCI dans le BLOC (ACTUELLEMENT INUTILISE)
      MBSOUC=0

      MDEOBJ=MDEOBT
      MFIOBJ=MFIOBT
      MOBJCO=IRETCO
*      write(6,*) 'creation de bloc mblo mde lmnn',mbloc,mdeobj,lmnnom
      CALL NOMOBJ('BLOC    ',CNOM,MBLOC)
      call savseg (mbloc)
      call savseg (ISSPOT)
      call savseg(MTXBLC)
      ICHC(1:1)='&'
      ICHC(2:LONOM)=CNOM(1:LONOM-1)
      NCONBO=ICHC
      ICONBO=1
      IIPROU=ICONBO
      CALL NOMENT(ICHC,IIPROU)
      TSTMBC=(MBC.EQ.0.AND.MDEOBJ.EQ.1.AND.LECTAB.EQ.0)
*
*     CODE QUI PERMET DE NE PAS EXECUTER LE CONTENU DU BLOC REPETER
*     SI LA VALEUR INITIALE DU COMPTEUR VAUT ZERO (MBC = 0)
*     ATTENTION : CE CODE NE DOIT PAS ETRE EXECUTE SI L'ON EST DANS
*                 UNE PHASE DE LECTURE GIBIANE SANS INTERPRETATION,
*                 COMME PAR EXEMPLE LORS DU PREMIER APPEL D'UNE
*                 PROCEDURE OU LORS DU PASSAGE DANS LA BRANCHE FAUX
*                 D'UN BLOC SI/SINON/FINS (CELA POUR NE PAS PERTURBER
*                 LES VERIFICATIONS SUR L'IMBRICATION DES BLOCS DEBP,
*                 SI ET REPE FAITES DANS LES SUBROUTINES mapr, si ET
*                 sinon)
 100  CONTINUE
      IF (TSTMBC) THEN
         MBCONT=1
 101     CONTINUE
         CALL NOUTRU
         LECTAB=1
         CALL LIRMO3(MFIN,1,IRET,0,IMOTCO)
         IF (IERR.NE.0) RETURN
         IF (IRET.EQ.0) GOTO 101
         CALL QUETYP(IJCH,0,IRETOU)
         IF (IRETOU.EQ.0) GOTO 101
         IF (IJCH.NE.'BLOC') GOTO 101
         CALL LIROBJ('BLOC',IRET,1,IRETOU)
         IF (MBLOC.NE.IRET) GOTO 101
         LECTAB=0
         CALL REFUS
         CALL FIN
         RETURN
      ENDIF
*
      RETURN
      END







