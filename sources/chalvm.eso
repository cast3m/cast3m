C CHALVM    SOURCE    FANDEUR   17/12/20    21:15:12     9649

C=======================================================================
C=                            C H A L V M                              =
C=                            -----------                              =
C=                                                                     =
C=  OPERATEUR CAST3M "SOURCE" :                                        =
C=  ---------------------------                                        =
C=  VERIFICATIONS SUR LE MODELE                                        =
C=  Le MODELE doit contenir exclusivement un seul type     =
C=  d'elements, soit MASSIFs, soit COQUEs, soit BARREs.    =
C=                                                                     =
C=======================================================================

      SUBROUTINE CHALVM (IPMODL,MOCOMP, IPMOD1,IFORMU,ITYPEF)

      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8 (A-H,O-Z)

-INC CCOPTIO

-INC SMLMOTS
-INC SMMODEL

      CHARACTER*(*) MOCOMP

C ----------
C=   IMASSI   Tableau contenant les numeros dans NOMTP des elements    =
C=            thermiques de type MASSIF (dont l'element BARR)          =
C=   LMASSI   Longueur du tableau IMASSI                               =
C=   ICOQUE   Tableau contenant les numeros dans NOMTP des elements    =
C=            thermiques de type COQUE                                 =
C=   LCOQUE   Longueur du tableau ICOQUE                               =
C=   IBARTY   Tableau contenant les numeros dans NOMTP des elements    =
C=            thermiques de type BARRE ou TUYAU                        =
C=   LBARTY   Longueur du tableau IBARTY                               =
C ----------
      PARAMETER (LMASSI=16, LCOQUE=5, LBARTY=3)
      INTEGER IMASSI(LMASSI),ICOQUE(LCOQUE),IBARTY(LBARTY)
C ----------
C  Elements         TRI3 TRI6 QUA4 QUA8 CUB8 CU20 PRI6 PR15 TET4 TE10
C  MASSIFs          PYR5 PY13 T1D2 T1D3 M1D2 M1D3
C ----------
      DATA IMASSI /    4,   6,   8,  10,  14,  15,  16,  17,  23,  24,
     &                25,  26, 191, 192, 193, 194 /
C -------------
C  Elts COQUEs      COQ2 COQ3 COQ8 COQ4 COQ6
C -------------
      DATA ICOQUE /   44,  27,  41,  49,  56 /
C -------------
C  Elts BARRE/TUYA  BARR TUYm TUYn
C -------------
      DATA IBARTY /   46, 269, 270 /
C -------------

      IPMOD1 = 0
      IFORMU = 0
      ITYPEF = 0

C ======================================================
C  1 - EXTRACTION DE LA FORMULATION A TRAITER DU MODELE
C ======================================================
C  1.1 - Verification de la formulation (unique) du modele
C  1.2 - Recuperation du modele de la formulation retenue
C  1.3 - Verification sur unicite de type EF retenu
C =====
      iTHER = 0
      iTHHY = 0
      iDIFF = 0
      iELEC = 0
*
      jMASSi = 0
      jCOQUe = 0
      jBARRe = 0
*
      MMODEL = IPMODL
      SEGACT,MMODEL
      NSOUS = KMODEL(/1)

      SEGINI,MMODE1=MMODEL
      N1 = 0
      DO isou = 1, NSOUS
        IMODEL = mmodel.KMODEL(isou)
        SEGACT,IMODEL
        MELE = imodel.NEFMOD
        i_mod1 = 0
        IF (imodel.FORMOD(/2).EQ.1) THEN
          IF (imodel.FORMOD(1).EQ.'THERMIQUE') THEN
            NMAT = imodel.MATMOD(/2)
            CALL PLACE(imodel.MATMOD,NMAT,icov,'CONVECTION')
            CALL PLACE(imodel.MATMOD,NMAT,iray,'RAYONNEMENT')
            IF (icov+iray.EQ.0) THEN
              iTHER = 1
              i_mod1 = 1
            ENDIF
          ELSE IF (imodel.FORMOD(1).EQ.'THERMOHYDRIQUE') THEN
            iTHHY = 1
            i_mod1 = 1
          ELSE IF (imodel.FORMOD(1).EQ.'DIFFUSION') THEN
            iDIFF = 1
            i_mod1 = 1
          ELSE IF (imodel.FORMOD(1).EQ.'ELECTROSTATIQUE') THEN
            iELEC = 1
            i_mod1 = 1
          ENDIF
        ENDIF
        IF (i_mod1.NE.0) THEN
          N1 = N1 + 1
          MMODE1.KMODEL(N1) = IMODEL
          CALL PLACE2(IBARTY,LBARTY,iok,MELE)
          IF (iok.NE.0) THEN
            jBARRe = jBARRe+1
          ELSE
            CALL PLACE2(IMASSI,LMASSI,iok,MELE)
            IF (iok.NE.0) THEN
              jMASSi = jMASSi+1
            ELSE
              CALL PLACE2(ICOQUE,LCOQUE,iok,MELE)
              IF (iok.NE.0) jCOQUe = jCOQUe+1
            ENDIF
          ENDIF
        ELSE
          SEGDES,IMODEL
        ENDIF
      ENDDO
      SEGDES,MMODEL

      IF (N1.EQ.0) THEN
        write(ioimp,*) 'Modele vide ??'
        CALL ERREUR(21)
        GOTO 9900
      ENDIF

      IF ((iTHER+iTHHY+iELEC+iDIFF).NE.1) THEN
        write(ioimp,*) 'Une seule formulation dans le modele !'
        CALL ERREUR(21)
        GOTO 9900
      ENDIF
      IF      (iTHER .EQ. 1) THEN
        IFORMU = 1
      ELSE IF (iTHHY .EQ. 1) THEN
        IFORMU = 2
      ELSE IF (iDIFF .EQ. 1) THEN
        IFORMU = 3
      ELSE IF (iELEC .EQ. 1) THEN
        IFORMU = 4
      ELSE
        IFORMU = 0
        CALL ERREUR(5)
        GOTO 9900
      ENDIF

      IF      (jMASSi.EQ.N1) THEN
        ITYPEF = 1
      ELSE IF (jCOQUe.EQ.N1) THEN
        ITYPEF = 2
      ELSE IF (jBARRe.EQ.N1) THEN
        ITYPEF = 3
      ELSE
        ITYPEF = 0
        CALL ERREUR(409)
        GOTO 9900
      ENDIF

      IF (N1.NE.NSOUS) THEN
        SEGADJ,MMODE1
      ENDIF

C ==================================================
C  2 - Adequation nom de composante source & modele
C ==================================================
      IF (iTHER .EQ. 1) THEN
        IF (MOCOMP.EQ.'    ') MOCOMP = 'Q   '
        IF (MOCOMP.NE.'Q   ') CALL ERREUR(665)
c*        SEGDES,MMODE1
      ELSE
        IPCOMP = 0
        CALL NOVARD(MMODE1,'FORC')
        CALL LIROBJ('LISTMOTS',IPCOMP,1,iret)
        IF (IERR.NE.0) RETURN
        mlmots = IPCOMP
        SEGACT,mlmots
        NCOMP = mlmots.MOTS(/2)
* Normalement : NCOMP est non nul !
* Cas particulier de la diffusion en attendant un traitement adequat ?
        IF (iDIFF.EQ.1 .AND. NCOMP.GT.1) THEN
          write(ioimp,*) 'Modele de DIFFUSION a une seule quantite SVP'
          CALL ERREUR(21)
        ELSE
          IF (MOCOMP.EQ.'    ') THEN
            MOCOMP = mlmots.MOTS(1)
          ELSE
            CALL PLACE(mlmots.MOTS,NCOMP,iret,MOCOMP)
            IF (iret.EQ.0) CALL ERREUR(665)
          ENDIF
        ENDIF
        SEGSUP,mlmots
      ENDIF
      IF (IERR.NE.0) GOTO 9900

      IPMOD1 = MMODE1

 9900 CONTINUE

      RETURN
      END


