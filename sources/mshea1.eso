C MSHEA1    SOURCE    CHAT      05/01/13    01:52:55     5004
      SUBROUTINE MSHEA1(DEP,ICAS,FOR,DPLUS,DMOIN, DTRANP,DTRANM,
     >           APLUS,CURFP,NCURFP,CURKP,NCURKP,CURLP,NCURLP,
     >           AMOIN,CURFM,NCURFM,CURKM,NCURKM,CURLM,NCURLM,
     >           FCINI,FCAMP,KCINE)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
C
C======================================================================
C       calcul des caracteristiques de la surface
C       cinematique en tenant compte de la zone de transition
C       WARNING: moyenne arithmetique pour l'amplitude
C                et geometrique pour la raideur
C2003???    WARNING: il faut iterer parceque KCINE0 depend de ALPHP et que
C2003???             ALPHP depend de KCINE0
C======================================================================
C=======================================================================
C
C LISTE D'ECHANGE
C ---------------
C
C DEP          = Deplacement
C ICAS         = Numero de la branche
C FOR          = Effort
C DPLUS        = Deplacement de reference +
C DMOIN        = Deplacement de reference -
C DTRANP       = zone de transition  (sens positif)
C DTRANM       =                     (sens négatif)
C
C CURFP,NCURFP = courbe de charge  +           (x>0,y>0)
C CURKP,NCURKP = courbe de raideur +           (x>0,y>0)
C CURLP,NCURLP = courbe de domaine elastique + (x>0,y>0)
C CURFM,NCURFM = courbe de charge  -           (x<0,y<0)
C CURKM,NCURKM = courbe de raideur -           (x<0,y>0)
C CURLM,NCURLM = courbe de domaine elastique - (x<0,y>0)
C
C FCINI        = Force de reference pour la surface cinematique
C FCAMP        = Taille de la surface cinematique
C KCINE        = Raideur de la surface cinematique
C2003 ALPHP        = Valeur de alpha +
C
C=======================================================================
C
      REAL*8 KCINE,KCINEP,KCINEM
      PARAMETER (XZER=0.D0,UN=1.D0)
      DIMENSION CURFP(2,NCURFP),CURKP(2,NCURKP),CURLP(2,NCURLP)
      DIMENSION CURFM(2,NCURFM),CURKM(2,NCURKM),CURLM(2,NCURLM)
C
      FCINI=FOR
      CALL YOFXCU(DPLUS,CURFP,NCURFP,  FPLUS ,DYSDX,KERRE)
      FPLUS=FPLUS*(UN-APLUS)
      CALL YOFXCU(DPLUS,CURLP,NCURLP,  FCAMPP,DYSDX,KERRE)
      FCAMPP=FCAMPP*(UN-APLUS)
      CALL YOFXCU(DPLUS,CURKP,NCURKP,  KCINEP,DYSDX,KERRE)
      CALL YOFXCU(DMOIN,CURFM,NCURFM,  FMOIN ,DYSDX,KERRE)
      FMOIN=FMOIN*(UN-AMOIN)
      CALL YOFXCU(DMOIN,CURLM,NCURLM,  FCAMPM,DYSDX,KERRE)
      FCAMPM=FCAMPM*(UN-AMOIN)
      CALL YOFXCU(DMOIN,CURKM,NCURKM,  KCINEM,DYSDX,KERRE)
      DDPLUS=DPLUS-FCAMPP/KCINEP
      DDMOIN=DMOIN+FCAMPM/KCINEM
C
      IF (ICAS.EQ.1)THEN
C     CHARGEMENT MONOTONE DIRECTION +
        FCAMP=FCAMPP
        KCINE=KCINEP
      ELSEIF(ICAS.EQ.3)THEN
C     BRANCHE DE UNLOADING ANELASTIQUE -
        ALPHP=(DEP-DMOIN)/(DDPLUS-DMOIN)
        FCAMP=ALPHP*FCAMPP+(UN-ALPHP)*FCAMPM
        KCINE=FCAMP/(ALPHP*FCAMPP/KCINEP+(UN-ALPHP)*FCAMPM/KCINEM)
      ELSEIF(ICAS.EQ.4)THEN
C     CHARGEMENT MONOTONE DIRECTION -
        FCAMP=FCAMPM
        KCINE=KCINEM
      ELSEIF(ICAS.EQ.6)THEN
C     BRANCHE DE UNLOADING ANELASTIQUE +
        ALPHP=(DEP-DDMOIN)/(DPLUS-DDMOIN)
        FCAMP=ALPHP*FCAMPP+(UN-ALPHP)*FCAMPM
        KCINE=FCAMP/(ALPHP*FCAMPP/KCINEP+(UN-ALPHP)*FCAMPM/KCINEM)
      ENDIF
C
C 2003DEPP=DEP-FCINI/KCINE
C 2003ALPHP=(DEPP-DTRANM)/(DTRANP-DTRANM)
C 2003ALPHP=MAX(XZER,ALPHP)
C 2003ALPHP=MIN(UN  ,ALPHP)
C
      RETURN
      END


