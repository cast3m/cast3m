C FSTRAR    SOURCE    BECC      11/05/26    21:15:30     6981
      SUBROUTINE FSTRAR(
     &     PC, GAM,
     &     P, RHO_R, P_R, U_R,
     &     U, RHO, D,
     &     LOGDEB, LOGAN)
*
*************************************************************************
*
* project           :  CAST3M, EUROPLEXUS...
*
* name              :  fstrar
*
* description       :  euler equations for a mixture of stiffened gases
*                      flux in the non-reactive case.
*
*                      right rarefaction curve as function of p
*
* language          :  fortran 77
*
* author            :  a. beccantini den/dm2s/sfme/ltmf
*
*************************************************************************
*
* called by         :
*
*
*************************************************************************
*
***** input
*
*     pc, gam         = properties of the gas
*
*     p               = pressure in the left side of the right
*                       rarefaction
*
*     rho_r, p_r, u_r
*                     = density, pressure, velocity on the right
*
*     logdeb          = debugging ?
*
***** output
*
*     u, rho          = velocity and density in the left side of the
*                       right rarefaction
*
*     d               = rarefaction speed
*
*     logan           = anomaly ?
*
*************************************************************************
*
*     26/11/2009      created
*     25/05/2011      evolution in CAST3M
*
*************************************************************************
*
* n.b.: all variables are declared
*
C      IMPLICIT NONE
      IMPLICIT INTEGER(I-N)
      REAL*8
     &     PC, GAM,
     &     P, RHO_R, P_R, U_R,
     &     U, D
*
      REAL*8 A_R, RHO, A, COEF
*
*     debugging ?
*
      LOGICAL LOGDEB, LOGAN
*
      CALL ASTIFF (RHO_R, P_R, GAM, PC, A_R, LOGDEB, LOGAN)
*      write(*,*) 'ciao', logan, a_r
      IF (LOGAN) GOTO 9999
*
*     density (isentropic transformation)
*
*     a negative p here is catched by astiff after...
*
      RHO = (P + PC) / (P_R + PC)
      RHO = RHO ** (1.0D0 / GAM)
      RHO = RHO * RHO_R
*
      CALL ASTIFF (RHO, P, GAM, PC, A, LOGDEB, LOGAN)
      IF (LOGAN) GOTO 9999
*
      COEF =  2.0D0 / (GAM - 1.0D0)
      U = U_R + (COEF * (A - A_R))
*
      D = U + A
*
 9999 RETURN
      END


