C VRFMOD    SOURCE    CHAT      05/01/13    04:10:03     5004
      SUBROUTINE VRFMOD (IPA,IPB,IPX,VALPP)
************************************************************************
*
*                             V R F M O D
*                             -----------
*
* FONCTION:
* ---------
*
*     PERMETTRE DE VERIFIER QU'UN MODE PROPRE (V,X) SOLUTION DE
*        |A|.(X) = V.|B|.(X)
*     A ETE CALCULE DE FACON EXACTE, EN FAISANT LES IMPRESSIONS DE
*     |A|.(X) , V.|B|.(X)  ET  |A|.(X)-V.|B|.(X)
*
* MODE D'APPEL:
* -------------
*
*     CALL VRFMOD (IPA,IPB,IPX,VALPP)
*
* PARAMETRES:   (E)=ENTREE   (S)=SORTIE
* -----------
*
*     IPA     ENTIER    (E)  POINTEUR SUR LA 'RIGIDITE' "A".
*     IPB     ENTIER    (E)  POINTEUR SUR LA 'RIGIDITE' "B".
*     IPX     ENTIER    (E)  POINTEUR SUR LE 'CHPOINT' "X".
*     VALPP   REEL DP   (E)  VALEUR PROPRE "V".
*
* LEXIQUE: (ORDRE ALPHABETIQUE)
* --------
*
*     IPAX    ENTIER    POINTEUR SUR LE 'CHPOINT' |A|.(X)
*     IPBX    ENTIER    POINTEUR SUR LE 'CHPOINT' |B|.(X)
*     IPVBX   ENTIER    POINTEUR SUR LE 'CHPOINT' V.|B|.(X)
*     IPZERO  ENTIER    POINTEUR SUR LE 'CHPOINT' |A|.(X) - V.|B|.(X)
*
* SOUS-PROGRAMMES APPELES:
* ------------------------
*
*     ADCHPO, DTCHPO, ECCHPO, MUCHPO, MUCPRI.
*
* AUTEUR, DATE DE CREATION:
* -------------------------
*
*     PASCAL MANIGOT     25 OCTOBRE 1984
*
* LANGAGE:
* --------
*
*     FORTRAN77
*
************************************************************************
*
      IMPLICIT INTEGER(I-N)
-INC CCOPTIO
*
      REAL*8 VALPP
      REAL*8 V
*
*     PRODUIT |A|.(X)
      CALL MUCPRI (IPX,IPA,  IPAX)
      IF (IERR .NE. 0) RETURN
*
*     IMPRESSION DE |A|.(X)
      WRITE (IOIMP,2010) '|A|.(X)            '
 2010 FORMAT ('1 IMPRESSION DE ',A20,/)
      CALL ECCHPO (IPAX,0)
*
*     PRODUIT |B|.(X)
      CALL MUCPRI (IPX,IPB,  IPBX)
      IF (IERR .NE. 0) RETURN
*
*     PRODUIT V.|B|.(X)
      MULT = 1
      V = VALPP
      CALL MUCHPO (IPBX,V,  IPVBX,MULT)
      IF (IERR .NE. 0) RETURN
*
*     IMPRESSION DE V.|B|.(X)
      WRITE (IOIMP,2010) 'V.|B|.(X)          '
      CALL ECCHPO (IPVBX,0)
*
*     DIFFERENCE  |A|.(X) - V.|B|.(X)
      MOINS = -1
      CALL ADCHPO (IPAX,IPVBX,  IPZERO,1.D0,-1.D0)
      IF (IERR .NE. 0) RETURN
*
*     IMPRESSION DE |A|.(X) - V.|B|.(X)
      WRITE (IOIMP,2010) '|A|.(X) - V.|B|.(X)'
      CALL ECCHPO (IPZERO,0)
*
*     DESTRUCTION DES OBJETS DE TRAVAIL:
      CALL DTCHPO (IPZERO)
      CALL DTCHPO (IPAX)
      CALL DTCHPO (IPBX)
      CALL DTCHPO (IPVBX)
*
      END


