C ZEROP     SOURCE    CB215821  18/09/21    21:17:01     9930

C_______________________________________________________________________
C
C            OPERATEUR MCHAML A ZERO
C
C    Entrees:
C    ________
C
C           IPMODL Pointeur sur un MMODEL
C           MOT    Mot indiquant le type du MCHAML a creer
C
C    Sorties:
C    ________
C
C           IPCHEL Pointeur sur un MCHAML resultat a ZERO
C
C    Passage aux nouveaux chamelems par i.monnier le 30.8.90
C
C_______________________________________________________________________

      SUBROUTINE ZEROP(IPMODL,MOT,IPCHEL)

      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)

-INC CCOPTIO

-INC SMMODEL
-INC SMCHAML
-INC SMLREEL

      SEGMENT info
        INTEGER infell(JG)
      ENDSEGMENT

** pile modeles elementaires
      SEGMENT limode(nsmod)

      CHARACTER*(*) MOT

      PARAMETER (NMOT=24)
      CHARACTER*8 LISMOT(NMOT)
      CHARACTER*50 LISTIT(NMOT)
      DIMENSION MSUPPO(NMOT)

      CHARACTER*8 CMATE
      LOGICAL lsupre

      EXTERNAL LONG

      DATA LISMOT / 'NOEUD   ', 'GRAVITE ', 'RIGIDITE', 'MASSE   ',
     &              'STRESSES', 'DEPLACEM', 'FORCES  ', 'REACTUAL',
     &              'FVOLUMIQ', 'GRADIENT', 'CONTRAIN', 'DEFORMAT',
     &              'MATERIAU', 'CARACTER', 'TEMPERAT', 'PRINCIPA',
     &              'MAHOOKE ', 'HOTANGEN', 'DILATATI', 'VARINTER',
     &              'GRAFLEXI', 'VONMISES', 'VIMISTRU', 'DEFINELA'/
*
*                   'NOEUD   ', 'GRAVITE ', 'RIGIDITE', 'MASSE   ',
      DATA MSUPPO /      1    ,     2     ,      3    ,     4     ,
*                   'STRESSES', 'DEPLACEM', 'FORCES  ', 'REACTUAL',
     &                   5    ,     1     ,      1    ,     1     ,
*                   'FVOLUMIQ', 'GRADIENT', 'CONTRAIN', 'DEFORMAT',
     &                   3    ,     5     ,      5    ,     5     ,
*                   'MATERIAU', 'CARACTER', 'TEMPERAT', 'PRINCIPA',
     &                   3    ,     3     ,      5    ,     5     ,
*                   'MAHOOKE ', 'HOTANGEN', 'DILATATI', 'VARINTER',
     &                   3    ,     5     ,      5    ,     5     ,
*                   'GRAFLEXI', 'VONMISES', 'VIMISTRU', 'DEFINELA'/
     &                   5    ,     5     ,      1    ,     5/
*
      DATA LISTIT / 'NOEUD', 'GRAVITE', 'RIGIDITE', 'MASSE',
     &              'STRESSES', 'DEPLACEMENTS',   'FORCES',
     &              'REACTUALISATION',      'FORCES VOLUMIQUES',
     &              'GRADIENT', 'CONTRAINTES', 'DEFORMATIONS',
     &              'CARACTERISTIQUES', 'CARACTERISTIQUES',
     &              'TEMPERATURES', 'CONTRAINTES PRINCIPALES',
     &              'MATRICE DE HOOKE', 'MATRICE DE HOOKE TANGENTE',
     &              'DILATATIONS', 'VARIABLES INTERNES',
     &              'GRADIENT DE FLEXION','VON MISES',
     &              'VARIABLES INTERNES MICROSTRUCTURES',
     &              'DEFORMATIONS INELASTIQUES'/

      IPCHEL = 0
*
* Verification que le sous-type du champ demande est prevu :
*
      IPLAC = 0
      CALL PLACE(LISMOT,NMOT,IPLAC,MOT)
      IF (IPLAC.EQ.0) THEN
        CALL ERREUR(78)
        RETURN
      ENDIF
*
      NHRM = NIFOUR
*
* Analyse du modele :
*
      MMODEL = IPMODL
      SEGACT,MMODEL
      NSOUS = mmodel.KMODEL(/1)
*
      nvim = 0
      nsmod = 100
      SEGINI,limode
      DO is = 1, NSOUS
        imodel = mmodel.kmodel(is)
        SEGACT,imodel
        imod_1 = 0
C On determine si le sous-modele est a conserver
C avec traitement des cas particuliers
        IF (imodel.nefmod.NE.22) THEN
          IF (imodel.formod(1).eq.'MELANGE') THEN
            IF (imodel.matmod(1).EQ.'PARALLELE') then
              SEGINI,imode1 = imodel
C              SEGDES,imodel
              imodel = imode1
              MN3    = imodel.infmod(/1)
              NFOR   = imodel.formod(/2)
              NOBMOD = imodel.ivamod(/1)
              NMAT   = 2
              SEGADJ,imodel
              imodel.formod(1) = 'MECANIQUE'
              imodel.matmod(1) = 'ELASTIQUE'
              imodel.matmod(2) = 'ISOTROPE'
C On met le sous-modele en (<0) pour le detruire en fin de traitement :
              imod_1 = -imodel
            ELSE
              imod_1 = imodel
            ENDIF
          ELSE
            IF (formod(1).NE.'LIAISON') THEN
              imod_1 = imodel
            ENDIF
          ENDIF
        ENDIF
c On conserve le sous-modele :
        IF (imod_1.NE.0) THEN
          IF (nvim .EQ. nsmod) THEN
            nsmod = nsmod + 100
            SEGADJ,limode
          ENDIF
          nvim = nvim + 1
          limode(nvim) = imod_1
c On desactive le sous-modele non conserve :
        ELSE
C          SEGDES,imodel
        ENDIF
      ENDDO

C      SEGDES,mmodel

*      IF (nvim.LE.0) THEN
*        CALL ERREUR(26)
*        GOTO 900
*      ENDIF

C-----------------------------------------------------------------------
C   CREATION DU MCHELM
C-----------------------------------------------------------------------
      N1 = nvim
      L1 = LONG(LISTIT(IPLAC))
      N3 = 6
      ISUPPO = MSUPPO(IPLAC)

      SEGINI,MCHELM

      mchelm.TITCHE = LISTIT(IPLAC)(1:L1)
      mchelm.IFOCHE = IFOUR

C-----------------------------------------------------------------------
C     BOUCLE SUR LES SOUS-MODELES
C-----------------------------------------------------------------------
      NZ = 0

      DO 100 is = 1, nvim

        IMODEL = ABS(limode(is))

C        IPMAIL = imodel.IMAMOD
        MELE   = imodel.NEFMOD
        IF (imodel.INFMOD(/1).NE.0) THEN
          NPINT = imodel.INFMOD(1)
        ELSE
          NPINT = 0
        ENDIF
        MFR = NUMMFR(MELE)
        CMATE = imodel.CMATEE
C        MATE  = imodel.IMATEE
        INATU = imodel.INATUU

*       AIGUILLAGE SUIVANT MOT CLE
*
        MOCOMP = 0
        lsupre = .true.
*
        GOTO ( 1, 1, 1, 1, 1, 6, 7,99,99,10,11,12,13,14,15,16, 2, 2,
     &        99,20,21,99,23,24) IPLAC
*
  99    CONTINUE
        GOTO 120
*
   1    NBROBL = 1
        NBRFAC = 0
        SEGINI,nomid
        nomid.LESOBL(1) = 'SCAL'
        MOCOMP = nomid
        GOTO 120
*
   2    NBROBL = 1
        NBRFAC = 0
        SEGINI,nomid
        nomid.LESOBL(1) = 'MAHO'
        MOCOMP = nomid
        GOTO 120
*
   6    IF (imodel.lnomid(1).NE.0) THEN
          MOCOMP = imodel.lnomid(1)
          lsupre = .false.
        ELSE
          CALL IDPRIM(IMODEL,MFR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
   7    IF (imodel.lnomid(2).NE.0) THEN
          MOCOMP = imodel.lnomid(2)
          lsupre = .false.
        ELSE
          CALL IDDUAL(IMODEL,MFR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  10    IF (imodel.lnomid(3).NE.0) THEN
          MOCOMP = imodel.lnomid(3)
          lsupre = .false.
        ELSE
          CALL IDGRAD(MFR,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  11    IF (imodel.lnomid(4).NE.0) THEN
          MOCOMP = imodel.lnomid(4)
          lsupre = .false.
        ELSE
          CALL IDCONT(IMODEL,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  12    IF (imodel.lnomid(5).NE.0) THEN
          MOCOMP = imodel.lnomid(5)
          lsupre = .false.
        ELSE
          CALL IDDEFO(IMODEL,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  13    IF (imodel.lnomid(6).NE.0) THEN
          MOCOMP = imodel.lnomid(6)
          lsupre = .false.
        ELSE
          CALL IDMATR(MFR,IMODEL,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  14    IF (imodel.lnomid(7).NE.0) THEN
          MOCOMP = imodel.lnomid(7)
          lsupre = .false.
        ELSE
          CALL IDCARB(MELE,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  15    IF (imodel.lnomid(8).NE.0) THEN
          MOCOMP = imodel.lnomid(8)
          lsupre = .false.
        ELSE
          CALL IDTEMP(MFR,IFOUR,NPINT,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  16    IF (imodel.lnomid(9).NE.0) THEN
          MOCOMP = imodel.lnomid(9)
          lsupre = .false.
        ELSE
          CALL IDPRIN(MFR,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  20    IF (imodel.lnomid(10).NE.0) THEN
          MOCOMP = imodel.lnomid(10)
          lsupre = .false.
        ELSE
          CALL IDVARI(MFR,IMODEL,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  21    IF (imodel.lnomid(11).NE.0) THEN
          MOCOMP = imodel.lnomid(11)
          lsupre = .false.
        ELSE
          CALL IDGRAF(MFR,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  23    IF (imodel.lnomid(12).NE.0) THEN
          MOCOMP = imodel.lnomid(12)
          lsupre = .false.
        ELSE
          CALL IDPHAS(MFR,IMODEL,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
  24    IF (imodel.lnomid(13).NE.0) THEN
          MOCOMP = imodel.lnomid(13)
          lsupre = .false.
        ELSE
          CALL IDDEIN(IMODEL,IFOUR,MOCOMP,NOBL,NFAC)
        ENDIF
        GOTO 120
*
 120    CONTINUE
C Pas de composantes a traiter pour le sous-modele :
        IF (MOCOMP.EQ.0) GOTO 100
        nomid = MOCOMP
        SEGACT,nomid
        NOBL = nomid.LESOBL(/2)
        NFAC = nomid.LESFAC(/2)
        N2 = NOBL + NFAC
        IF (N2.EQ.0) GOTO 110

C Recuperation d'informations sur le support :
C Traitement des cas particuliers :
        IF (imodel.formod(1).EQ.'THERMIQUE' .OR.
     &      imodel.formod(1).EQ.'DIFFUSION' .OR.
     &      imodel.formod(1).EQ.'METALLURGIE'   ) THEN
C ici il faudra peut-etre affiner si CONVECTION/RAYONNEMENT ?
          IF (ISUPPO .LE. 2) THEN
            ISUPMO = 1
            CALL TSHAPE(MELE,'NOEUDS',MINTE)
          ELSE
            ISUPMO = 6
            iplr = 0
            iplc = 0
            nmat = imodel.matmod(/2)
            CALL PLACE(imodel.matmod,nmat,iplr,'RAYONNEMENT')
            CALL PLACE(imodel.matmod,nmat,iplc,'CONVECTION')
            IF (iplr+iplc.eq.0) THEN
              CALL TSHAPE(MELE,'GAUSS',MINTE)
            ELSE
              NLG = NUMGEO(MELE)
              CALL TSHAPE(NLG,'GAUSS',MINTE)
            ENDIF
          ENDIF
          NSTRS = 0
C Pour le contact, on met aux noeuds d'office :
        ELSE IF (imodel.formod(1).EQ.'CONTACT') THEN
          ISUPMO = 1
          MINTE = 0
          NSTRS = 0
C Pour les autres formulations :
        ELSE
          ISUPMO = ISUPPO
          IF (imodel.infmod(/1).LT.2+ISUPMO) THEN
            CALL ELQUOI(MELE,0,ISUPMO,ipinf,imodel)
            IF (IERR.NE.0) GOTO 900
            info = ipinf
            MINTE = info.infell(11)
            NSTRS = info.infell(16)
            SEGSUP,info
          ELSE
            MINTE = imodel.INFMOD(2+ISUPMO)
            NSTRS = imodel.INFELE(16)
          ENDIF
        ENDIF
C
        SEGINI,MCHAML
C
        IF (NOBL.EQ.0) GOTO 130
        DO io = 1, NOBL
          mchaml.NOMCHE(io) = nomid.LESOBL(io)
          N1PTEL = 0
          N1EL   = 0
          N2PTEL = 0
          N2EL   = 0
          IF (IPLAC.EQ.17.OR.IPLAC.EQ.18) THEN
            mchaml.TYPCHE(io) = 'POINTEURLISTREEL'
            N2PTEL = 1
            N2EL   = 1
            SEGINI,MELVAL
            JG = 1
            SEGINI,MLREEL
            SEGDES,MLREEL
            melval.IELCHE(1,1) = MLREEL
          ELSE IF (IPLAC.EQ.20.AND.CMATE.EQ.'SECTION')THEN
            mchaml.TYPCHE(io) = 'POINTEURMCHAML  '
            N2PTEL = 1
            N2EL   = 1
            SEGINI,MELVAL
            melval.IELCHE(1,1) = 0
*
*  MODELE DE MAXWELL - COMPOSANTES AUTRES QUE EPSE
          ELSE IF (IPLAC.EQ.20.AND.INATU.EQ.74.AND.io.GT.1) THEN
            mchaml.TYPCHE(IO) = 'POINTEURLISTREEL'
            N2PTEL = 1
            N2EL   = 1
            SEGINI,MELVAL
            JG = NSTRS
            SEGINI,MLREEL
            SEGDES,MLREEL
            melval.IELCHE(1,1) = MLREEL
*
*  MODELE MAXOTT COMPOSANTE AUTRES QUE REAL*8
          ELSE IF (IPLAC.EQ.20.AND.INATU.EQ.106) THEN
            IF ((IFOUR.EQ.2.AND.MFR.EQ.1)
     &          .AND. io.GT.21) THEN
              mlreel = 1
            ELSE IF ((IFOUR.EQ.-1.OR.IFOUR.EQ.-3.OR.
     &                IFOUR.EQ.0 .OR.IFOUR.EQ.1)
     &              .AND. io.GT.16) THEN
              mlreel = 1
            ELSE IF ((IFOUR.EQ.-2.OR.
     &               (IFOUR.EQ.2.AND.(MFR.EQ.3.OR.MFR.EQ.9)))
     &              .AND. io.GT.13) THEN
              mlreel = 1
            ELSE
              mlreel = 0
            ENDIF
            IF (mlreel .EQ. 0) THEN
              mchaml.TYPCHE(io) = 'REAL*8'
              N1PTEL = 1
              N1EL   = 1
              SEGINI,MELVAL
            ELSE
              mchaml.TYPCHE(io) = 'POINTEURLISTREEL'
              N2PTEL = 1
              N2EL   = 1
              SEGINI,MELVAL
              JG = NSTRS
              SEGINI,MLREEL
              SEGDES,MLREEL
              melval.IELCHE(1,1) = MLREEL
            ENDIF
          ELSE
            mchaml.TYPCHE(io) = 'REAL*8'
            N1PTEL = 1
            N1EL   = 1
            SEGINI,MELVAL
          ENDIF
          SEGDES,MELVAL
          mchaml.IELVAL(io) = MELVAL
        ENDDO
 130    CONTINUE

        IF (NFAC.EQ.0) GOTO 140
        DO io = 1, NFAC
          mchaml.NOMCHE(io+NOBL) = nomid.LESFAC(io)
          N1PTEL = 0
          N1EL   = 0
          N2PTEL = 0
          N2EL   = 0

*  MODELE MAXOTT - SUITE
          IF (INATU.EQ.106) THEN
            mchaml.TYPCHE(io+NOBL) = 'POINTEURLISTREEL'
            N2PTEL = 1
            N2EL   = 1
            SEGINI,MELVAL
            JG = NSTRS
            SEGINI,MLREEL
            SEGDES,MLREEL
            melval.IELCHE(1,1) = MLREEL
*
*  MODELE DE MAXWELL - SUITE
         ELSE IF (INATU.EQ.74) THEN
            mchaml.TYPCHE(io+NOBL) = 'POINTEURLISTREEL'
            N2PTEL = 1
            N2EL   = 1
            SEGINI,MELVAL
            JG = NSTRS
            SEGINI,MLREEL
            SEGDES,MLREEL
            melval.IELCHE(1,1) = MLREEL
          ELSE
            mchaml.TYPCHE(io+NOBL) = 'REAL*8'
            N1PTEL = 1
            N1EL   = 1
            SEGINI,MELVAL
          ENDIF
          SEGDES,MELVAL
          mchaml.IELVAL(io+NOBL) = MELVAL
        ENDDO
 140    CONTINUE
C
        IF (IPLAC.EQ.11 .OR. IPLAC.EQ.20) THEN
          IF (CMATE.EQ.'MODAL' .OR. CMATE.EQ.'STATIQUE') THEN
            N2 = 1
            SEGADJ,MCHAML
          ENDIF
        ENDIF
        SEGDES,MCHAML
C
        NZ = NZ + 1
        mchelm.IMACHE(NZ) = imodel.IMAMOD
        mchelm.CONCHE(NZ) = imodel.CONMOD
        mchelm.ICHAML(NZ) = MCHAML
        mchelm.INFCHE(NZ,1) = 0
        mchelm.INFCHE(NZ,2) = 0
        mchelm.INFCHE(NZ,3) = NHRM
        mchelm.INFCHE(NZ,4) = MINTE
        mchelm.INFCHE(NZ,5) = 0
        mchelm.INFCHE(NZ,6) = ISUPMO

 110    CONTINUE
        nomid = MOCOMP
        IF (lsupre) THEN
          SEGSUP,nomid
C        ELSE
C          SEGDES,nomid
        ENDIF

 100  CONTINUE
C-----------------------------------------------------------------------
C Fin de la boucle sur les SOUS-MODELES retenus
C-----------------------------------------------------------------------
      IF (NZ.NE.nvim) THEN
        N1 = NZ
        SEGADJ,MCHELM
      ENDIF
      SEGACT,MCHELM
      IPCHEL = MCHELM

 900  CONTINUE

      DO is = 1, nvim
        imodel = limode(is)
        IF (imodel.LT.0) THEN
          imodel = ABS(imodel)
          SEGSUP,imodel
C        ELSE
C          SEGDES,imodel
        ENDIF
      ENDDO
      SEGSUP,limode

      RETURN
      END




