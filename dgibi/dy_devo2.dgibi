
************************************************************************
* Section : Mecanique Contact
************************************************************************
************************************************************************
*
*       VALIDATION DE LA LIAISON POINT-POINT-FROTTEMENT DE DYNE
*                       DY_DEVO2.DGIBI
*
*  ref : Rapport DMT/92.056 de Vare, De Langre
*  reimporte dans la base des cas-test par BP en 2015
*
************************************************************************

OPTI DIME 3 ELEM SEG2 MODE TRID ;
OPTI EPSI LINEAIRE;


* cible mobile ?
  FLMOBI = FAUX;
* FLMOBI = VRAI;

* sortie graphique ?
  GRAPH = FAUX;
  SI GRAPH ; OPTI TRAC PSC EPTR 6 POTR HELVETICA_16; FINSI;


************************************************************************
*       PROJECTILE
************************************************************************

* masse
  M_PROJ = 1.;
* point
  P_PROJ = 0.  0.  0. ;

* MODES PROPRES (corps rigides a la main)
  UX_PROJ = MANU CHPO P_PROJ 3 UX 1. UY 0. UZ 0.;
  UY_PROJ = MANU CHPO P_PROJ 3 UX 0. UY 1. UZ 0.;
  BM_PROJ = (MANU 'MODE' 0. M_PROJ UX_PROJ)
         ET (MANU 'MODE' 0. M_PROJ UY_PROJ);
  T_PROJ = TRADUIRE BM_PROJ;


************************************************************************
*       CIBLE
************************************************************************

* masse
  M_CIBL = 1.;
* point
  P_CIBL = 0.  0.  0. ;

* MODES PROPRES (corps rigides a la main)
  SI FLMOBI;
    ux_c = 1.;
  SINON;
    ux_c = 0.;
  FINSI;
  UX_CIBL = MANU CHPO P_CIBL 3 UX ux_c UY 0. UZ 0.;
  UY_CIBL = MANU CHPO P_CIBL 3 UX 0.   UY 0. UZ 0.;
  BM_CIBL = (MANU 'MODE' 0. M_CIBL UX_CIBL)
         ET (MANU 'MODE' 0. M_CIBL UY_CIBL);
  T_CIBL  = TRADUIRE BM_CIBL;



************************************************************************
*       CALCULS DYNE avec POINT_POINT_FROTTEMENT
************************************************************************


**** PARAMETRES DE CALCUL ****

NB_LIAI  = 1            ;
NB_POINT = 1            ;
T        = 1.E-2        ;
EXP_BLOC = 8            ;
NB_PAS   = 2**EXP_BLOC  ;
PAS2     = T / NB_PAS   ;
MESS 'NOMBRE DE PAS DE TEMPS = ' NB_PAS ;
MESS 'PAS DE TEMPS = ' PAS2 ;


**** BASE = ENSEMBLE DE BASES (couplees par la liaison) ****

TBASE = TABLE 'ENSEMBLE_DE_BASES';
TMOD1 = TABLE 'BASE_MODALE' ;
TMOD1 . 'MODES' = T_PROJ;
TBASE . 1 = TMOD1;
TMOD2 = TABLE 'BASE_MODALE' ;
TMOD2 . 'MODES' = T_CIBL;
TBASE . 2 = TMOD2;


**** AMORTISSEMENT ****

TAMOR   = TABLE 'AMORTISSEMENT';
L_AMOR  = PROG 4 * 1.;
TAMOR  . 'AMORTISSEMENT' = AMOR TBASE L_AMOR;


**** LIAISON ENTRE LES 2 MASSES EN HAUT ****

* parametres de la liaison
  SI FLMOBI;
    jeuAB = 4.E-6;
    muglis= 2.0;
  SINON;
    jeuAB = 4.5E-6;
    muglis= 0.3;
  FINSI;
kchoc = 1.E7  ;
cchoc = 0. ;
muadhe= muglis;
ktang = 10. * kchoc;
mgen1 = TMOD1 . 'MODES' . 1 . 'MASSE_GENERALISEE';
ctang = 2.*((mgen1*(ktang+kchoc))**0.5);

* remplissage de la table
TLIA                    = TABLE 'LIAISON';
TLIA . 'LIAISON_B'      = TABLE 'LIAISON_B';
TL1                     = TABLE 'LIAISON_ELEMENTAIRE';
TLIA . 'LIAISON_B' . 1  = TL1;
TL1 . 'TYPE_LIAISON'    = MOT 'POINT_POINT_FROTTEMENT';
TL1 . 'POINT_A'         = P_PROJ ;
TL1 . 'POINT_B'         = P_CIBL ;
TL1 . 'NORMALE'         = 0. -1. 0. ;
TL1 . 'JEU    '         = jeuAB   ;
TL1 . 'RAIDEUR'         = kchoc  ;
TL1 . 'AMORTISSEMENT'   = cchoc   ;
TL1 . 'COEFFICIENT_ADHERENCE'   = muadhe  ;
TL1 . 'COEFFICIENT_GLISSEMENT'  = muglis  ;
TL1 . 'RAIDEUR_TANGENTIELLE'    = ktang   ;
TL1 . 'AMORTISSEMENT_TANGENTIEL'= ctang   ;


**** TABLE DE SORTIE ****

TSORT = TABLE 'SORTIE';
*TSORT1 = TABLE 'VARIABLE' ;  TSORT . 'VARIABLE'  = TSORT1;
TSORT2 = TABLE 'LIAISON_B';  TSORT . 'LIAISON_B' = TSORT2;
TSORT2 . TL1 = VRAI ;
* sortie tous les ntsor pas de temps
ntsor = 1;


**** CONDITION INITIALE = VITESSE VZ0 ****

* Attention a ne pas utiliser PJBA pas prevu pour cela !
* on souhaite en réalité : \alpha0 = [\Phi]^-1 * V0
* (et pas \alpha0 = [\Phi]^T * V0) ...
* --> il vaut mieux ecrire directement :
VINIT1 = MANU 'CHPO' (TMOD1 . 'MODES' . 1 . 'POINT_REPERE')
  1 'ALFA'  1.E-3 'NATURE' 'DIFFUS';
VINIT2 = MANU 'CHPO' (TMOD1 . 'MODES' . 2 . 'POINT_REPERE')
  1 'ALFA' -1.E-3 'NATURE' 'DIFFUS';
VINIT = VINIT1 et VINIT2;
SI FLMOBI;
  VINIT3 = MANU 'CHPO' (TMOD2 . 'MODES' . 1 . 'POINT_REPERE')
  1 'ALFA' -3.E-3 'NATURE' 'DIFFUS';
  VINIT = VINIT et VINIT3;
FINSI;
mess 'VINIT = ' ; list VINIT;
TINIT = TABLE 'INITIAL';
TINIT . 'VITESSE' = VINIT;

**** CALCUL DYNE ****
TDYNE = DYNE 'DE_VOGELAERE' TBASE TAMOR TINIT TLIA TSORT
                            NB_PAS PAS2 ntsor;


************************************************************************
*       POST TRAITEMENT DYNE
************************************************************************

* recup des LISTREELS

tprog = TDYNE . 'TEMPS_DE_SORTIE';
ux1 = TDYNE . TL1 . 'UX_POINT_A';
uy1 = TDYNE . TL1 . 'UY_POINT_A';
fy1 = TDYNE . TL1 . 'FORCE_DE_CHOC_POINT_A';
fx1 = TDYNE . TL1 . 'FORCE_DE_CHOC_TANGENTIELLE';


* construction des EVOLUTIONS temporelles

evux1 = EVOL 'BLEU' 'MANU' 'LEGE' 'UX PPF'
             't (s)' tprog 'UX' ux1;
evuy1 = EVOL 'ORAN' 'MANU' 'LEGE' 'UY PPF'
             't (s)' tprog 'UY' uy1;
evfy1 = EVOL 'ORAN' 'MANU' 'LEGE' 'FY PPF'
             't (s)' tprog 'F_{choc}' fy1;
evfx1 = EVOL 'BLEU' 'MANU' 'LEGE' 'FX PPF'
             't (s)' tprog 'F_{tang}' fx1;
SI GRAPH ;
DESS (evux1 et evuy1)
  POSX CENT POSY CENT  'LEGE' NE
  'TITR' 'PPF : POINT_POINT_FROTTEMENT';
DESS (evfx1 et evfy1)
  POSX CENT POSY CENT  'LEGE' NE
  'TITR' 'PPF : POINT_POINT_FROTTEMENT';
FINSI;

* TRAJECTOIRE

evxy1 = EVOL 'BLEU' 'MANU' 'LEGE' 'UX PPF'  'UX' ux1 'UY' uy1;
xxx1 = prog 0. 7.E-6;
yyy1 = prog (-1.*jeuAB) (-1.*jeuAB);
evjeu = EVOL 'DEFA' 'MANU' 'LEGE' 'PAS DE LEGENDE' 'UX' xxx1 'UY' yyy1;

tdess1 = table;
tdess1 . 2 = MOT 'TIRC';
SI GRAPH ;
DESS (evxy1 et evjeu)
  POSX CENT POSY CENT  'LEGE' NE  tdess1
  'TITR' 'PPF : POINT_POINT_FROTTEMENT';
FINSI;

* NOMBRE DE CHOCS
nbchoc = EXTR (COMT evfy1) 1;
si (neg nbchoc 1);
  mess 'nombre de choc incorrect (=' nbchoc')';
  ERRE 5;
finsi;

* TEMPS DE CHOC
* methode 1 :
* on suppose qu'il n'y a qu'1 choc continu
* connu a (+0/-2)*dt pres
ttous = MASQ (abs fy1) 'EGSUPE' 1.E-15 ;
itous = POSI 1. 'DANS' ttous 'TOUS';
ideb  = (EXTR itous 1) - 1;
ifin  = (EXTR itous (dime itous))  + 1 ;
Tchoc1 = (extr tprog ifin) - (extr tprog ideb);
* methode 2 :
Tchoc = (TOTE evfy1 1.E-15) extr 1;

* ANGLE DE REBOND
* position a la fin du choc
xfin = extr ux1 ifin;
yfin = extr uy1 ifin;
* position a la fin du calcul
xfin2 = extr ux1 NB_PAS;
yfin2 = extr uy1 NB_PAS;
* angle
beta = ATG (xfin2 - xfin) (yfin2 - yfin);

* MOYENNE DE LA FORCE DE CHOC
* normale
intfy1 = EXTR (INTG evfy1) 1;
moyfy1 = intfy1 / Tchoc;
* tangentielle
intfx1 = EXTR (INTG evfx1) 1;
moyfx1 = intfx1 / Tchoc;


* message

OPTI ECHO 0;
saut lign;
MESS 'Grandeur            Analytique     PPF          [DMT/92.056]';
SI FLMOBI;
 MESS 'Angle de rebond (°): -45       '      beta        ' -44.63';
 MESS 'Temps de choc (ms) :  0.99     '    (Tchoc*1000.) '   1.01';
 MESS 'E(Fnormale) (N)    :  2.01     '    moyfy1        '   1.97';
 MESS 'E(Ftangent) (N)    : <0.604    '    moyfx1        '   0.232';
 err1 = (abs (beta + 45.)) / 45. ;
 err2 = (abs (Tchoc - 0.99E-3)) / 0.99E-3 ;
 err3 = (abs (moyfy1 + 2.01)) / 2.01 ;
SINON;
 MESS 'Angle de rebond (°): 21.80     '      beta        '  21.79';
 MESS 'Temps de choc (ms) :  0.99     '    (Tchoc*1000.) '   1.02';
 MESS 'E(Fnormale) (N)    :  2.01     '    moyfy1        '   1.97';
 MESS 'E(Ftangent) (N)    :  0.604    '    moyfx1        '   0.591';
 err1 = (abs (beta - 21.80)) / 21.80 ;
 err2 = (abs (Tchoc - 0.99E-3)) / 0.99E-3 ;
 err3 = (abs (moyfy1 + 2.01)) / 2.01 ;
FINSI;
saut lign;
OPTI ECHO 1;


* TEST DE BON FONCTIONNEMENT
  MESS err1 err2 err3;
SI ( (err1 > 0.01) ou (err2 > 0.03) ou (err3 > 0.03) );
  ERRE 5;
FINSI;


FIN ;






