* fichier :  grandksi.dgibi
************************************************************************
* Section : Mecanique Elastique
************************************************************************
complet = faux;
*
*************************************************
*  pour calcul complet mettre complet à : vrai;
***************************************************
opti echo 0;
********************************************************
*                                                      *
*   calcul fleche d'une plaque sous son propre poids   *
*                                                      *
* la plaque est horizontale : on joue sur inclinaison  *
*                                                      *
*            de G et de la Force de Traction           *
*                                                      *
*         TRAITE par METHODE des GRANDS DEPLACEMEMTS   *
*                                                      *
*                                                      *
*                                                      *
*                                                      *
********************************************************
*
*
*                    geometrie
*
*
opti dime 3 elem qua4 ;
*
inclin = 0. ;
*
teta = 90. ;
*
temp = 30. ;
mess ' effort traction en Newton  0 si pas d''  efforts   sinon  15 ' ;
  eft = 15;
*obte eft ;
*
epu = 0. ;
ru=19520.;
epc=7E-04 ;
rc=1400.;
*
rcf=2.*epu*ru/(2*epu+epc)+rc;
dens 1 ;
vu2 = 1000. 0. 0. ;
vu3 = 0 100. 100. ;
*
long = 0.92 ;
larg = 0.04 ;
*
*     coordonnees des 6 sommets initiaux
*
p1 =  0.  0.   0. ;
p2 =  0. .24   0. ;
p3 =  0. .68   0. ;
p4 =  0. .92   0. ;
*
p5 =  0.  0.   larg ;
p6 =  0. .24   larg ;
p7 =  0. .68   larg ;
p8 =  0. .92   larg ;
*
*
*     creation du point de traction du bec
*
 af =  p4 plus p8 ; af = af /2 ;
*
*
*     creation lignes s'appuyant sur les sommets
*
*
l1 = droi 2 p1 p5 ;
l2 = droi 2 p2 p6 ;
l3 = droi 2 p3 p7 ;
l4 = droi 2 p4 p8 ;
*
*     creation des milieux des lignes l2 et l3
*
m2 =  0. .24   ( larg/2 ) ;
m3 =  0. .35   ( larg/2 ) ;
m4 =  0. .46   ( larg/2 ) ;
m5 =  0. .57   ( larg/2 ) ;
m6 =  0. .68   ( larg/2 ) ;
*
*
*
si complet ;
na = 9;nb = 12; nc = 6;
sinon;
aa = 7; nb = 8; nc = 4;
finsi;
c1b = droi  9 p1 p2 ;
c2b = droi 12 p2 p3 ;
c3b = droi  6 p3 p4 ;
*
c1h = droi  9 p5 p6 ;
c2h = droi 12 p6 p7 ;
c3h = droi  6 p7 p8 ;
*
*      creation maillage
*
s1 = dall l1 c1b l2 c1h ;
s2 = dall l2 c2b l3 c2h ;
s3 = dall l3 c3b l4 c3h ;
*
sbec = s1 et s2 et s3 ;
*trac sbec;
sbec = sbec coul jaun ;
pf = sbec poin proc af ;
*
*********************************************************************
*                                                                   *
*                       impression des donnees                      *
*                                                                   *
*********************************************************************
*
mess ' angle inclinaison inclin  ' inclin 'degres' ;
mess ' angle rotation    teta    ' teta 'degres' ;
mess ' angle = 90  plaque a plat ' ;
mess ' temperature       temp    ' temp ;
mess ' force de traction en N eft   ' eft ;
mess ' epaisseur U       epu     ' epu ;
mess ' longueur plaque   long    ' long ;
mess ' largeur plaque    larg    ' larg ;
mess ' epaisseur bec     epc     ' epc ;
mess ' ro equivalent     rcf     ' rcf ;
*
*
*********************************************************************
*********************************************************************
*
**********   modele du materiau et  caracteristiques
*
*
option epsilon lineaire;
mo = mode sbec MECANIQUE ELASTIQUE coq4 ;
matx = mate mo 'YOUN' 35E+09 'RHO' rcf 'ALPHA' 2.5E-06 'NU' 0.3 ;
ca = cara mo EPAI epc ;
mat1 = matx et ca ;
*
**********   matrice de masse ; acceleration pesanteur ; poids
*
m = mass mo mat1 ;
*
stet = sin teta  ; ctet = cos teta ;
cic = cos inclin ; sic = sin inclin ;
gx = +9.81 * stet * cic ;
gy = +9.81 * sic ;
gz = -9.81 * ctet * cic ;
accel = manu chpo sbec 6 ux gx uy gy uz gz mx 0. my 0. mz 0. ;
*
poids = m * accel  ;
*
**********   condition aux limites
*
*
*    encastrement = bloq rota et depl
*
*
*    appui = bloq depl ;  variante  = bloq  ux et-ou uy et-ou uz
*
**********   blocage rotation et deplacement l1
*
bl1rd = bloq rota depl l1  ;
*
**********   blocage deplacement [ ux uz ]  l4
*
bl4d = bloq l4 ux uz ;
*
blqtot = bl1rd et bl4d ;
*
**********   creation force de traction
*
fo1 = force (0. eft  0.) pf ;
*
**********    RESOLUTION PAR RESO
*
   sc = poids + fo1 ;
********************************    RESOLUTION PAR NONLIN
*
*
**********   creation chargement
*
scf = fo1 ; scp = poids ;
ev1 = evol manu xx1 ( prog 0. 1.1 ) ff1 ( prog 0. 1.1 ) ;
ch1 = char meca scf ev1 ;
ch2 = char meca scp ev1 ;
cht = ch1 et ch2 ;
sctot = scf + scp;
*
**********
*
tgd = table ;
tgd.grands_deplacements = vrai ;
tgd.k_sigma = vrai ;
tgd.'REAC_GRANDS'=100.;
*  liste des temps a calculer
si complet ;
tfin = 0.37;
sinon;
tfin = 0.07;
finsi;
 tcal = prog 0.  0.0001 0.0003 0.001 0.003 0.01  0.02
 0.04   pas 0.03   tfin;

tgd.blocages_mecaniques = blqtot;
tgd.caracteristiques = mat1;
tgd.modele = mo;
tgd.temps_calcules = tcal;
tgd.chargement = cht;


pasapas tgd ;

**********   resultats
*
dep1 = peche tgd deplacements  tfin;
aa = maxi ( exco dep1 UX);
si complet;
valcomp = 2.0938e-03;
sinon;
valcomp = 1.24824E-03;
finsi;
err = ( aa - valcomp ) / valcomp  abs;
err100 = err * 100;
mess '       ';
mess '       ';
mess '       ';
mess '       ';
mess ' la fleche maximum attendue est  ' valcomp;
mess '       ';
mess '       ';
mess ' valeur de la fleche  trouvée : ' aa ;
mess '       ';
mess '       ';
mess  ' erreur commise en % ' err100;
mess '       ';
mess '       ';
mess '       ';
mess '       ';
si ( err > 0.005) ;  erreur 5; finsi;
fin;













