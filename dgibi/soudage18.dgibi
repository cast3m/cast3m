*
graph = faux ;
complet = faux ;

* donnees geometriques qu il faudrait sauver
opti dime 3 elem cub8 trac x;
p_ori = 0. 0. 0. ; d0 = 1.d-2 ;

e_x = 1. 0. 0. ; e_y = 0. 1. 0. ; e_z = 0. 0. 1. ;
l0_x = 5.d-3 ;l_x = 1.d-2 ; l_y = 10*l_x ; l_zh = 3*l_x ; l_zb = 2*l_x ;
l_cz = 0.5*l_x ; l_cy = 1.05*l_x ;
dens d0 ; n_x = 1 ;

*******************
debproc prosym vut1*maillage ;
* surface symetrie
 chu1 = coor 2 (manu chml (enve vut1) scal 1.) ;
 ssu1 = elem chu1 inferieur (d0*1.e-2) ;
 chu2 = coor 2 (manu chml ssu1 scal 1.) ;
 ssu2 = elem chu2 superieur (d0*1.e-1) ;
 ssu3 = diff ssu1 ssu2 ;
finproc ssu3 ;
*******************

**
*si d_ther ;
*opti sauv 'soudage18_lin_a.sauv' ;
**

* plaque
pc1m = p_ori moins (l0_x*e_x) ;
pp1m = pc1m moins (l_zb*e_z) ;
pc2m = pc1m plus (l_cy*e_y) plus (l_cz*e_z) ;
pp2m = pp1m plus (l_cy*e_y) ;
pp3m = pp1m plus (l_y*e_y);
pp4m = pp3m plus ((l_zh + l_zb)*e_z) ;
pc3m = pc2m plus (l_cz*e_z) ;
pp5m = pp3m plus ((l_zb + l_cz)*e_z) ;
pp6m = pp5m plus (l_cz*e_z) ;
pp7m = pp2m plus ((l_zh + l_zb)*e_z) ;


l1c = d pc1m pp1m ; nncz1 = nbel l1c ;
l2c = d pp1m pp2m ; nnc2 = nbel l2c ;
l3c = d nncz1 pp2m pc2m ;
l4c = d nnc2 pc2m pc1m ;
s1c = dall l1c l2c l3c l4c ;

l11 = d pp2m pp3m ;
l12 = d nncz1 pp3m pp5m ; l13 = d pp5m pc2m ;
s11 = dall l11 l12 l13 (inve l3c) ;
l21 = d pc3m pc2m ; nncz2 = nbel l21 ;
 l23 = d nncz2 pp5m pp6m ; l24 = d pp6m pc3m ;
s22 = dall l21 (inve l13) l23 l24 ;
l31 = d pp7m pc3m ; nncz3 = nbel l31 ;
l33 = d nncz3 pp6m pp4m ; l34 = d pp4m pp7m ;
s33 = dall l31 (inve l24) l33 l34 ;

*trac (s1c et s11 et s22 et s33) ;
sp0 = s1c et s11 et s22 et s33 ;
vp0 = sp0 volu n_x trans (l_x*e_x) ;
vpp1 = (face 2 vp0) volu n_x trans (l_x*e_x) ;
vpm1 = sp0 volu n_x trans (-1*l_x*e_x) ;
vv1 = vpm1 et vp0 et vpp1 ;
*trac vv1 cach ;

* capteurs thermiques
ppthm1 = pp1m plus (3*l_x*e_y) ;
ppthm2 = ppthm1 plus ((l_zh + l_zb)*e_z) ;

*apport
pa1m pa2m pa3m la4c la21 = pc1m pc2m pc3m l4c l21 plus p_ori ;
pa4m = pa1m plus (l_x*e_z) ;
la22 = d pa3m pa4m ; la23 = d pa4m pa1m ;
sa0 = surf plan ((inve la21) et la22 et la23 et (inve la4c)) ;
va0 = sa0 volu n_x trans (l_x*e_x) ; va0 = va0 coul rouge ;

*trac (vv1 et va0) cach ;

********************
T_INIT  = 20.     ;
T_CONV  = T_INIT  ;
T_FUSION = 1400.  ;
t_dep = 1600. ;
********************

mothep = mode vv1 thermique conduction ;
motha0 = mode va0 thermique conduction ;

* materiau
        TTMP = TABL ;
        TTMP. 1 = PROG 20 200 400 600 800 1000 1200 1400 1500 3000 ;
        TTMP. 2 = PROG 8.0e3 7.93e3 7.84e3 7.75e3 7.65e3 7.55e3
7.45e3 7.35e3 7.30e3 7.30e3 ;
    EVRHO   = EVOL MANU 'T' (TTMP. 1) 'RHO' (TTMP. 2)                  ;

*   Parametres thermiques
        TTMP = TABL ;
        TTMP. 1 = PROG 20 100 200 300 400 500 600 700 800 900 1000
1200 1400 3000 ;
        TTMP. 2 = PROG 0.0147e3 0.0158e3 0.0172e3 0.0186e3 0.02e3
0.0211e3 0.0222e3 0.0232e3 0.0241e3 0.0248e3 0.0255e3
0.0269e3 0.0283e3 0.0283e3 ;
    EVK     = EVOL MANU 'T' (TTMP. 1) 'K' (TTMP. 2);

        TTMP = TABL ;
        TTMP. 1 = PROG 20 100 200 300 400 600 800 1000 1200 1500 3000 ;
        TTMP. 2 = PROG 450 490 525 545 560 580 625 660 670 690 690 ;
    EVCP    = EVOL MANU 'T' (TTMP. 1) 'C' (TTMP. 2);

    SI GRAPH ;
      DESS EVRHO   TITR 'Masse Volumique';
      DESS EVK     TITR 'Conductivite Thermique';
      DESS EVCP    TITR 'Chaleur Specifique';
    FINS;

*       coefficient de convection avec l'exterieur
he1 = 20. ;


* MATERIAUX MECANIQUE ET THERMIQUE

  CATHEP = MATE MOTHEP 'K' EVK 'RHO' EVRHO 'C' EVCP                      ;

  cathea0 = mate motha0 'K' EVK 'RHO' EVRHO 'C' EVCP                      ;

**********************************
* procede

vpu1 = vv1 ;
mothu1 = mothep ;
cathu1 = cathep ;

symvpu1 = prosym vpu1 ;
symva0 = prosym va0 ;
* trac (symvpu1 et symva0) ;

* surface convection

elim (d0*1.d-3) vpu1 va0 ;
sconvu1 = enve vpu1 ;
sdep1 = inte sconvu1 (enve va0) ;
sconvu1 = diff sconvu1 sdep1 ;
sconvu1 = diff sconvu1 symvpu1 ;
*trac sconvv1 ;

* convection
ctconvv1 = manu chpo sconvu1 T 20. ;
ev_conv = evol manu 't (s)' (prog 0. 1.e5) 'Te (oC)' (prog 1. 1.) ;
cha_conv = char teco ev_conv ctconvv1 ;

moconvu1 = mode sconvu1 thermique convection ;
caconvu1 = mate moconvu1 'H' he1 ;

* temperatures initiale
mpp1_u = diff (changer poi1 vpu1) (changer poi1 sdep1) ;
cptempi = manu chpo 1 mpp1_u T t_init nature diffuse ;

ca0tempi = manu chpo 1 (changer poi1 va0) T t_dep nature diffuse ;

si graph ;
trac (cptempi et ca0tempi) (vpu1 et va0)
 titre 'temperatures initiales' nclk;
finsi ;
* deplacements initiaux
ma0p1_u = diff (changer poi1 va0) (changer poi1 sdep1) ;
ca0depi = manu chpo 3 ma0p1_u ux 0. uy 0. uz 0. nature diffuse ;



tdep = table 'PASAPAS' ; tdep.'PROCESSEURS' = MOT 'AUTOMATIQUE';
tdep . modele = mothu1 et motha0 et moconvu1 ;
tdep . caracteristiques = cathu1 et cathea0 et caconvu1 ;
tdep . chargement = cha_conv ;
tdep . procedure_thermique = DUPONT ;

tdep . temperatures = table ;
tdep . temperatures . 0 = cptempi et ca0tempi ;

si complet ;
 tdep . temps_calcules = prog 0. pas 1. 10. pas 10. 100. pas 1.e2 1.e3;
 tdep . temps_sauves = prog 0. 1. 5. 10. 20. 50. 100. 200. 500. 1.e3 ;
sinon ;
 tdep . temps_sauves = prog 0. 1. ;
finsi ;

pasapas tdep ;

****************************************
mailtra1 = enve (extr (mothu1 et motha0) mail) ;
ppthm1 = point mailtra1 proc ppthm1 ; op1 = prog ;
ppthm2 = point mailtra1 proc ppthm2 ; op2 = prog ;
abt = prog ;
* temperature
l_temp = prog 100. 200. 300. 400. 500. 600. 700. 800. 900. 1000.
 1100. 1200. 1300. 1400. ;
si graph ;
repeter bdes (dime tdep . temps) ;
 ind1 = &bdes - 1 ;
abt = abt et (prog tdep . temps . ind1) ;
op1 = op1 et (prog (extr tdep . temperatures . ind1 t ppthm1)) ;
op2 = op2 et (prog (extr tdep . temperatures . ind1 t ppthm2)) ;

 titre 's18_lin_a / temperature / date = ' tdep . temps . ind1 ;
*trac tdep . temperatures . ind1 mailtra1 (arete mailtra1) l_temp ;
trac tdep . temperatures . ind1 mailtra1 l_temp nclk ;
fin bdes ;

titre 's18_lin_a / thermocouples ' ;
evcapt = (evol manu abt 't(s)' op1 'T(°C)' coul jaune)
   et (evol manu abt 't(s)' op2 'T(°C)' coul rouge) ;
 dess evcapt ;
finsi ;
**
*d_ther = faux ;
*sauv tdep;
*finsi ;
**

********************
TAREF   = -273.15 ;
********************
*******************
debpro prpmec tu1*table ;
*calcul mecanique

tu1 . blocages_mecaniques = (bloq ux pp3mm1) et
   (bloq uz (pp3mm1 et pp3mp2)) et (bloq (symvpu1 et symva0) uy);
tu1 . chargement = ch_temp ;
tu1 . talpha_reference = TAREF ;
tu1 . temps_calcules = tdep . temps_sauves ;

pasapas tu1 ;

 opsy1 = prog ; abst = prog ;

repeter beliso (dime tu1 . temps) ;
 ind2 = &beliso - 1 ;
si graph ;
titre 's18_lin_a / T /' tu1 . temps . ind2  ' s';
 trac tdep . temperatures . ind2 mailtra1 nclk;
titre (et tu1 . etiquette ' / vmises /') tu1 . temps . ind2  ' s';
 trac tu1 . modele tu1 . contraintes . ind2 ;
finsi ;
chpu5 = changer chpo tu1 . modele (exco tu1 . contraintes . ind2 smyy);
opsy1 = opsy1 et (prog ((extr chpu5 smyy ppmem1)/1.e6)) ;
abst = abst et (prog tu1 . temps . ind2) ;
fin beliso ;

tu1 . ecsmy1 = evol manu abst 't(s)' opsy1 ' smyy (MPa)' ;
si graph ;
titre 's18_lin_a / synthese SMYY' ;
 dess tu1 . ecsmy1 nclk;
finsi ;
finproc ;
*******************

*******************
*Procédure pour calculer YOUN à partir d'une évolution
'DEBP' CALYO    EV1*EVOLUTION;
X1 = EXTR EV1 'ABSC' ;
Y1 = EXTR EV1 'ORDO' ;
YOU1 = '/' (EXTR Y1 2) (EXTR X1 2) ;
'FINP' YOU1 ;
*******************

**
*si (non d_ther) ;
*opti rest 'soudage18_lin_a.sauv' ;
*rest ;
**

*************
* donnees materiau
        TTMP = TABL ;
        TTMP. 1 = PROG 20. 200. 300. 400. 500. 600.
700. 800. 900. 1000. 1500. 3000. ;
        TTMP. 2 = PROG 197e9 184e9 176e9 168e9
160e9 151e9 142e9 130e9 108e9 81e9 1e9 1e9 ;
    EVYOUN  = EVOL MANU 'T' (TTMP. 1) 'YOUN' (TTMP. 2)                 ;
    MAXIT   = MAXI (TTMP. 1)                                           ;


        TTMP = TABL ;
        TTMP. 1 = PROG 25 100 200 400 500 600 700 800
900 1000 1100 1200 1300 1390 1420 1450 3000 ;
        TTMP. 2 = PROG 0.296 0.298 0.304 0.315 0.32
0.323 0.326 0.33 0.336 0.339 0.346 0.349 0.353 0.353 0.353 0.353 0.353 ;
        DIMNU = DIME TTMP. 1 ;
        VALNU = TTMP. 2 ;
    EVNU    = EVOL MANU 'T' (TTMP. 1) 'NU' (TTMP. 2)                   ;


        TTMP = TABL ;
        TTMP. 1 = PROG 20 200 300 400 500 600 700 800 900 1000 1500 3000 ;
        TTMP. 2 = PROG 287e6 198e6 172e6 157e6 152e6 145e6 136e6
127e6 115e6 79e6 5e6 1e6 ;
    EVSIGY  = EVOL MANU 'T' (TTMP. 1) 'R0' (TTMP. 2)                 ;

        TTMP = TABL ;
        TTMP. 1 = PROG 0 100 200 300 400 500 600 700 800 900 1000 1100
1200 1420 1460 3000 ;
        TTMP. 2 = PROG -3.17e-4 0.0013 0.003 0.0048 0.0066 0.0086 0.0106
0.0126 0.0147 0.0168 0.019 0.0212 0.0235 0.029 0.0298 0.0298 ;
    EVDEFT  = EVOL MANU 'T' (TTMP. 1) 'EPTH' (TTMP. 2)                 ;
    LALPHA  = TTMP. 2 / (TTMP. 1 - TAREF)                             ;
    EVALPHA = EVOL MANU 'T' (TTMP. 1) 'ALPH' LALPHA                    ;

        TTMP1 = TABL ;
        TTMP1. 1 = PROG  20 200 300 400 500 600 700 800 900 1000 1500 3000 ;
        TTMP2   = TABL ;
        TTMP2. 1   = PROG 0. 0.01 0.05 0.2 1. 2. ;
        TTMP2. 2   = PROG 0 28e6 132e6 274e6 913e6 1369e6 ;
        TTMP2. 3   = PROG 0 33e6 136e6 272e6 802e6 1203e6 ;
        TTMP2. 4   = PROG 0 29e6 135e6 279e6 728e6 1092e6 ;
        TTMP2. 5   = PROG 0 29e6 137e6 278e6 442e6 663e6 ;
        TTMP2. 6   = PROG 0 27e6 130e6 267e6 398e6 597e6 ;
        TTMP2. 7   = PROG 0 25e6 117e6 242e6 355e6 532e6 ;
        TTMP2. 8   = PROG 0 25e6 76e6 204e6 264e6 396e6 ;
        TTMP2. 9   = PROG 0 25e6 72e6 167e6 223e6 334e6 ;
        TTMP2. 10  = PROG 0 22e6 46e6 54e6 65e6 97e6 ;
        TTMP2. 11  = PROG 0 3e6 18e6 21e6 26e6 39e6 ;
        TTMP2. 12  = PROG 0 2e6 3e6 4e6 5e6 6e6 ;
        TTMP2. 13  = PROG 0 1e6 2e6 3e6 4e6 5e6 ;

    EVTOT   = VIDE 'EVOLUTION';
    LTEMPER = VIDE 'LISTREEL' ;
    LYOU2   = VIDE 'LISTREEL' ;
    LYOU3   = VIDE 'LISTREEL' ;
    REPE ITEMPER (DIME TTMP1. 1);
      J=&ITEMPER;
      TEMPER = EXTR (TTMP1 . 1) J;
      LTEMPER= LTEMPER ET TEMPER ;

*     Interpolation du module de YOUNG et SIGY a la temperature TEMPER
      YOUNIPOL = IPOL TEMPER EVYOUN;
      SIGYIPOL = IPOL TEMPER EVSIGY;
      LYOU2    = LYOU2 ET YOUNIPOL ;

*     Calcul de EPSIY a partir de YOUNIPOL et SIGYIPOL
      EPSIY = SIGYIPOL / YOUNIPOL;

*   Construction de la courbe de traction Complete pour Cast3M
       LESPI = (PROG 0.) ET ((TTMP2. 1) + EPSIY   );
       LSIGM = (PROG 0.) ET ((TTMP2. (J+1)) + SIGYIPOL);
       EVTRAC= EVOL MANU 'EPS' LESPI 'CONT' LSIGM           ;
       EVTOT = EVTOT ET EVTRAC;
       LYOU3 = LYOU3 ET (CALYO EVTRAC) ;

*   Construction du NUAGE qui associe une EVOLUTION a une TEMPERATURE
      SI (J EGA 1);
        NUATRAC =             NUAGE  'COMP' 'T   '  TEMPER
                                     'COMP' 'TRAC'  EVTRAC        ;
      SINO;
        NUATRAC = NUATRAC ET (NUAGE  'COMP' 'T   '  TEMPER
                                     'COMP' 'TRAC'  EVTRAC )      ;
      FINS;
    FIN ITEMPER;

   EVYOUN  = EVOL MANU 'T' LTEMPER 'YOUN'   LYOU3 ;
   evlimp = EVOL MANU 'T' LTEMPER 'LIMP' (LYOU3*2.D-3) ;

    SI GRAPH ;
      DESS EVYOUN  TITR 't_initModule de YOUNG';
      DESS EVNU    TITR 'Coefficient de POISSON';
      DESS EVSIGY  TITR 'Limite Elastique';
      DESS EVALPHA TITR 'Coefficient de dilatation Thermique';
      DESS EVTOT   TITR 'Courbe de Traction a differentes temperatures';
      dess evlimp  TITR 'Limite 1er invariant ' ;
    FINS;
*************

* point d appui
l1cm1 pp3mm1 = l1c pp3m moins (l_x*e_x) ;
l1cp2 pp3mp2 = l1c pp3m plus (2*l_x*e_x) ;
* symetrie
symvpu1 = prosym vpu1 ;
symva0 = prosym va0 ;
* trac (symvpu1 et symva0) ;
* chargement
ch_temp = char t (tdep . temps) (tdep . temperatures) ;

**
momecp = mode vpu1 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
              'PLASTIQUE' 'ISOTROPE' ;
momca0 = mode va0 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
              'PLASTIQUE' 'ISOTROPE' ;
*
momecb = mode (vpu1 et va0) 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
              'PLASTIQUE' 'ISOTROPE' 'BBAR' ;
*
momecl = mode (vpu1 et va0) 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
              'PLASTIQUE' 'ISOTROPE' 'CRIP' ;
*
momect =mode (vpu1 et va0) 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
              'PLASTIQUE' 'ISOTROPE' 'CRIP' 'BBAR' ;

**
camecp = MATE MOMECP 'YOUN' EVYOUN 'NU' EVNU 'RHO' EVRHO 'ALPH' EVALPHA
                     'TRAC' NUATRAC ;
*
camca0 = MATE MOMCA0 'YOUN' EVYOUN 'NU' EVNU 'RHO' EVRHO 'ALPH' EVALPHA
                     'TRAC' NUATRAC ;
*
camecb = MATE MOMECB 'YOUN' EVYOUN 'NU' EVNU 'RHO' EVRHO 'ALPH' EVALPHA
                     'TRAC' NUATRAC ;
*
camecl = MATE MOMECL 'YOUN' EVYOUN 'NU' EVNU 'RHO' EVRHO 'ALPH' EVALPHA
                     'TRAC' NUATRAC 'LIMP' evlimp ;
*
camect = MATE MOMECT 'YOUN' EVYOUN 'NU' EVNU 'RHO' EVRHO 'ALPH' EVALPHA
                     'TRAC' NUATRAC 'LIMP' evlimp ;
**
mailtra1 = vpu1 et va0 ;
*trac mailtra1 ;
mm125 = elem 125 mailtra1 ;
myu1 = elem mailtra1 appuye largement va0 ;
myu1 = diff myu1 va0 ;


pp3mm1 = point mailtra1 proc pp3mm1 ;
pp3mp2 = point mailtra1 proc pp3mp2 ;
ppmem1 = point mailtra1 proc ppthm1 ;

tmec0 = table 'PASAPAS' ;
tmec0 . modele = momecp et momca0 ;
tmec0 . caracteristiques = camecp et camca0 ;
tmec0 . etiquette = 's18_lin_a / standard' ;
*tu1 = tmec0 ;
prpmec tmec0 ;

tmecb = table 'PASAPAS' ;
tmecb . modele = momecb ;
tmecb . caracteristiques = camecb ;
tmecb . etiquette = 's18_lin_a / bbar' ;
prpmec tmecb ;

tmecl = table 'PASAPAS' ;
tmecl . modele = momecl ;
tmecl . caracteristiques = camecl ;
tmecl . etiquette = 's18_lin_a / critp' ;
prpmec tmecl ;

tmect = table 'PASAPAS' ;
tmect . modele = momect ;
tmect . caracteristiques = camect ;
tmect . etiquette = 's18_lin_a / critp et bbar' ;
prpmec tmect ;

tsymb = table ; tsymb . titre = table ;
tsymb . 1 = 'MARQ PLUS' ; tsymb . titre . 1 = 'stand' ;
tsymb . 2 = 'MARQ CARR' ; tsymb . titre . 2 = 'bbar' ;
tsymb . 3 = 'MARQ ETOI' ; tsymb . titre . 3 = 'critp' ;
tsymb . 4 = 'MARQ LOSA' ; tsymb . titre . 4 = 'bbar et critp' ;

si graph ;
titre ' s18_lin_a / capteurs contraites ';
dess (tmec0 . ecsmy1 et tmecb . ecsmy1 et tmecl . ecsmy1
 et tmect . ecsmy1) tsymb 'LEGE' ;
finsi ;

**
*finsi ;
**

*test octobre 2018
or0 = extr (extr tmec0 . ecsmy1 ordo) 2 ;
e0 = abs ((or0 - 7.20114E+01) / 7.20114E+01) ;
orb = extr (extr tmecb . ecsmy1 ordo) 2 ;
eb = abs ((orb - 1.38370E+01) / 1.38370E+01) ;
orl = extr (extr tmecl . ecsmy1 ordo) 2 ;
el = abs ((orl - 1.02034E+01) / 1.02034E+01) ;

si ((e0 > 1.e-3) ou (eb > 1.e-3) ou (el > 1.e-3)) ;
 erre 5 ;
sinon ;
 erre 0 ;
finsi ;

fin ;




