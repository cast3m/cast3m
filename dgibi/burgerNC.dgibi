* fichier :  burgerNC.dgibi
************************************************************************
* Section : Fluides Convection
************************************************************************

COMPLET = FAUX ;
SI ( COMPLET ) ;
      NX = 30 ; NY = 30 ;
      NITER = 500 ;
      CFL = 0.8 ;
SINON ;
      NX = 10 ; NY = 10 ;
      NITER = 180 ;
      CFL = 0.8 ;
FINSI ;
GRAPH = 'N' ;

***********************************************************
* EQUATION DE CONVECTION NON-LINEAIRE Ut + div (F(U)) = 0 *
* RESOLUE SOUS FORME NON-CONSERVATIVE                     *
*       dU/dt + lambda . nabla U = 0 avec lambda = dF/dU  *
* AVEC OPTION SUPGDC (par défaut)                         *
***********************************************************

********************************
* PROCEDURE POUR TRACER COUPES *
********************************

DEBPROC TRCE ;
ARGU M*'MAILLAGE' ;
nb = nbel M ;
R = (M poin 1) droi 1 (M poin 2) ;
i=2 ; itma = nb-2 ;
repeter bloc1 itma ;
R = R et ((M poin i) droi 1 (M poin (i+1))) ;
i=i+1 ;
fin bloc1 ;
FINPROC R ;

***********************************************
* PROCEDURE POUR CALCULER CHAMP DE VITESSE ET *
* TESTER LA CONVERGENCE                       *
***********************************************

DEBPROC CALCUL ;
ARGU RVX*'TABLE' ;

RV = RVX.'EQEX' ;
CN = RV.INCO.'CN' ;

DD = RV.PASDETPS.'NUPASDT' ;
NN = DD/5 ;
LO = (DD-(5*NN)) EGA 0 ;
SI ( LO ) ;

ERR = KOPS (RV.INCO.'CN') - (RV.INCO.'CNM1') ;

ELI = MAXI ERR 'ABS' ;
ELI = (LOG (ELI + 1.0E-20))/(LOG 10.) ;
MESSAGE 'ITER ' RV.PASDETPS.'NUPASDT' '   ERREUR LINF ' ELI ;
IT = PROG RV.PASDETPS.'NUPASDT' ;
ER = PROG ELI ;
RV.INCO.'IT' = (RV.INCO.'IT') ET IT ;
RV.INCO.'ER' = (RV.INCO.'ER') ET ER ;
FINSI ;

VY = KCHT $DOMTOT 'SCAL' 'SOMMET' 'COMP' 'UY' 1.0 ;
VX = NOMC 'UX' CN ;
VV = KCHT $DOMTOT 'VECT' 'SOMMET' 'COMP' (MOTS 'UX' 'UY')
        (VX ET VY) ;
RV.INCO.'VITESSE' = VV ;

RV.INCO.'CNM1' = KCHT $DOMTOT 'SCAL' 'SOMMET' (RV.INCO.'CN') ;
as2 ama1  = 'KOPS' 'MATRIK' ;
FINPROC as2 ama1 ;

****************************************************

opti dime 2 ;
opti elem tri3 ;
opti isov lign ;
titre 'Equation de Burger' ;

*************
* DIFFUSION *
*************
DIF = 1.0E-10 ;

************
* MAILLAGE *
************

A1 = 0.0 0.0 ;
A2 = 1.0 0.0 ;
A3 = 1.0 1.0 ;
A4 = 0.0 1.0 ;

FBAS = A1 'DROI' NX A2 ;
FDRO = A2 'DROI' NY A3 ;
FHAU = A3 'DROI' NX A4 ;
FGAU = A4 'DROI' NY A1 ;

PA1 = FBAS POIN 'PROC' A1 ;
PA2 = FBAS POIN 'PROC' A2 ;
P12 = CHAN POI1 FBAS ;
MA1 = P12 ELEM 'CONTENANT' PA1 ;
MA2 = P12 ELEM 'CONTENANT' PA2 ;

SI ( COMPLET ) ;
* maillage regulier
DOMTOT = 'DALL' FBAS FDRO FHAU FGAU 'PLAN' ;
SINON ;
* maillage non-structuré
DOMTOT = (FBAS ET FDRO ET FHAU ET FGAU) 'SURF' 'PLAN' ;
FINSI ;

***********************************
* CREATION MODELES NAVIERS_STOKES *
***********************************

XDOMTOT= DOMTOT CHAN QUAF ;
XFBAS  = FBAS   CHAN QUAF ;
ELIM XDOMTOT XFBAS 1.E-3 ;

$DOMTOT = MODE XDOMTOT 'NAVIER_STOKES' LINE ;
$FBAS   = MODE XFBAS   'NAVIER_STOKES' LINE ;

**************************************
* INITIALISATION DU CHAMP DE VITESSE *
**************************************

VX = KCHT $DOMTOT 'SCAL' 'SOMMET' 'COMP' 'UX' 0.0 ;
VY = KCHT $DOMTOT 'SCAL' 'SOMMET' 'COMP' 'UY' 1.0 ;
CHVIT=KCHT $DOMTOT 'VECT' 'SOMMET' 'COMP' (MOTS 'UX' 'UY') (VX ET VY) ;

************************************
* PROFIL DE LA SOLUTION A L'ENTREE *
************************************

XBAS = COOR 1 FBAS ;
XBAS = NOMC 'UX' XBAS ;
SOLUTION = 1.5 - (2.0*XBAS) ;
CHP1 = KCHT $FBAS 'SCAL' 'SOMMET' 'COMP' 'UX' SOLUTION ;
CHP1 = NOMC 'CN' CHP1 ;

***********************
* TABLE DE RESOLUTION *
***********************

RV = EQEX $DOMTOT 'ITMA' NITER 'ALFA' CFL
        'ZONE' $DOMTOT
        'OPER' CALCUL
        'OPER' TSCAL DIF 'VITESSE' 0.0 'INCO' 'CN'
        'OPTI' 'CENTREE'
        'OPER' 'DFDT' 1.   'CN' 'DELTAT'    'INCO' 'CN'
        'CLIM' 'CN' 'TIMP' FBAS CHP1
        'CLIM' 'CN' 'TIMP' FGAU 1.5
        'CLIM' 'CN' 'TIMP' FDRO (-0.5)
        'CLIM' 'CN' 'TIMP' MA1 (-1.5)
        'CLIM' 'CN' 'TIMP' MA2 (0.5) ;

RV.INCO = TABLE 'INCO' ;
RV.INCO.'CN' = KCHT $DOMTOT 'SCAL' 'SOMMET' 0. ;
RV.INCO.'VITESSE'= CHVIT ;

RV.INCO.'CNM1' = KCHT $DOMTOT 'SCAL' 'SOMMET' 1. ;
RV.INCO.'IT' = PROG 1 ;
RV.INCO.'ER' = PROG 0. ;

EXEC RV ;

*************************
* ANALYSE DES RESULTATS *
*************************

MESSAGE 'MAX = ' (MAXI RV.INCO.'CN') 'MAXTHEORIQUE = 1.5 ' ;
MESSAGE 'MIN = ' (MINI RV.INCO.'CN') 'MINTHEORIQUE = -0.5 ' ;

SI ( (MINI RV.INCO.'ER') > -3.0 ) ;
            ERREUR 5 ;
FINSI ;
SI ( (MAXI RV.INCO.'CN') > 1.75 ) ;
            ERREUR 5 ;
FINSI ;
SI ( (MINI RV.INCO.'CN') < -0.60 ) ;
            ERREUR 5 ;
FINSI ;

***********************
* TRACE DES RESULTATS *
***********************

SI ( 'EGA' graph 'O') ;

UEXACT = KCHT $DOMTOT 'SCAL' 'SOMMET' 0. ;
XX YY = 'COOR' (DOMA $DOMTOT SOMMET) ;
REPETER BLOC1 (NBNO DOMTOT) ;
P1 = (DOMA $DOMTOT SOMMET) POIN &BLOC1 ;
X1 = 'EXTR' XX 'SCAL' P1 ;
Y1 = 'EXTR' YY 'SCAL' P1 ;
D1 = Y1 - (0.5*X1/0.75) ;
D2 = Y1 - (2.0*(1.0-X1)) ;
D3 = Y1 - 1.0 - (2.0*(X1-1.0)) ;
BO1 = ( D1 > 0.) ;
BO2 = ( D2 > 0.) ;
BO3 = ( D3 > 0.) ;
SI ( BO1 ET BO3 ) ;
U1 = 1.5 ;
SINON ;
SI ( (NON BO1) ET (NON BO2) );
U1 = (1.5-(2.0*X1))/(1.-(2.0*Y1)) ;
SINON ;
U1 = -0.5 ;
FINSI ;
FINSI ;
C1 = MANU 'CHPO' P1 1 SCAL U1 ;
C2 = KCHT $DOMTOT 'SCAL' 'SOMMET' C1 ;
UEXACT = (UEXACT ET C2) ;
FIN BLOC1 ;


TRACE DOMTOT ;
MESSAGE 'MAX = ' (MAXI RV.INCO.'CN')
        'MIN = ' (MINI RV.INCO.'CN') ;
TRAC DOMTOT (RV.INCO.'CN') (CONT DOMTOT) ;

SI ( COMPLET ) ;
P1 = DOMTOT POIN 'PROC' (0.0 0.7) ;
P2 = DOMTOT POIN 'PROC' (1.0 0.7) ;
P1P2 = DOMTOT POIN 'DROI' P1 P2 0.01 ;
LI12 = TRCE P1P2 ;

XX = COOR 1 LI12 ;

EVOL1 = EVOL 'CHPO' (RV.INCO.'CN') SCAL LI12 ;
EVOL2 = EVOL 'CHPO' XX SCAL LI12 ;

LIX = 'EXTR' EVOL2 ORDO ;
LIU = 'EXTR' EVOL1 ORDO ;
EVOL3 = EVOL 'MANU' 'X' LIX 'U(X)' LIU ;

EVOL4 = EVOL 'CHPO' UEXACT SCAL LI12 ;
LIUEX = 'EXTR' EVOL4 ORDO ;
EVOL5 = EVOL 'MANU' 'X' LIX 'UEXACT(X)' LIUEX ;

TAB1 = TABLE ;
TAB1.1 = 'MARQ LOSA' ;
DESS (EVOL3 ET EVOL5) 'XBOR' 0.0 1.0 'YBOR' -1. 2.
                'TITR' 'Coupe a y=0.7' TAB1 ;
FINSI ;

EVOL4 = EVOL 'MANU' 'ITERATIONS' (RV.INCO.'IT') 'LOG|E|inf'
           (RV.INCO.'ER') ;
DESS EVOL4 'XBOR' 0. 2000. 'YBOR' -20.0 0.0 ;

FINSI ;

FIN ;






