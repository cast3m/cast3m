
***********************************************************************
*
*  continu_gdep1.dgibi
*  = cas test basé sur gdep1.dgibi (de la base cast3m),
*    mais avec une comparaison avec la procedure de CONTINUation
*
*  Mots-clé :
*  flambage, grand deplacements
*
*  Objectif :
*  Il s'agit de trouver la position post flambage d'un poteau
*  charge axialement a une extremite (+perturbation)
*  et encastre a l'autre extremite.
*
*  Reference :
*  STEPHEN P. TIMOSHENKO and JAMES M. GERE, Theory of elastic stability
*  New York : MCGraw-Hill book company, 1963, p.78
*
***********************************************************************


***************************************************
***                                             ***
***                    OPTIONS                  ***
***                                             ***
***************************************************

OPTI 'EPSI' 'LINEAIRE';
*rem : malgré le fait que l'on soit en grand déplacements,
*      on considère ici des déformations linéaires ...
OPTI 'TRAC' 'PSC' 'EPTR' 5 'POTR' 'HELVETICA_16';
OPTI DIME 3 ELEM SEG2 ;
*
COMPLET = vrai;
GRAPH = FAUX;
* GRAPH = VRAI ;
SAUT PAGE ;


***************************************************
***                                             ***
***                 PROCEDURES                  ***
***                                             ***
***************************************************

* AUTOPILO = procedure de PILOTAGE appelée par PASAPAS

* le PILOTAGE est fait sur l'amplitude du deplacement du point P2
* auquel on attribut le signe du deplacement transversal (UY)
'DEBPROC' AUTOPILO DELT*'CHPOINT' DELA*'CHPOINT' ZMOD*'MMODEL'
 ZMAT*'MCHAML' TTT*TABLE;
   Ux = ( EXTR DELT P2 'UX' ) ;
   Uy = ( EXTR DELT P2 'UY' ) ;
   U = (ux*ux + (uy*uy))**0.5 ;
   NORM1 = U * uy / (abs uy) ;
FINPROC   NORM1;


***************************************************
***                                             ***
***             DONNEES DU PROBLEME             ***
***                                             ***
***************************************************

*  MAILLAGE
*
P1 = 0. 0. 0.  ; P2 = 12. 0. 0. ;
* L1 = D 12 P1 P2  ;
* on ajoute ici l'avant dernier point
PP1 = 11. 0. 0. ;
L1 = (DROI 11 P1 PP1) DROI 1 P2  ;

*  MODELE
*
 MOD1 = MODEL L1 MECANIQUE ELASTIQUE  epsilon lineaire POUT;
*
*  CARACTERISTIQUES MATERIELLES ET GEOMETRIQUES
*
 MAT1 = MATER MOD1 YOUN 2.E7 NU 0.0  ;
 CAR1 = CARA MOD1 'SECT' 0.15 'INRY' 2.8125E-4 'INRZ' 2.8125E-4
 'TORS' 0.00001 ;

*  MATRICE DE RIGIDITE
*
 RIG1 = RIGI MOD1 (MAT1 ET CAR1) ;

*  FORCES ET CONDITIONS AUX LIMITES
*
 CL1 = BLOQ P1 'DEPL' 'ROTA' ;
 F1  = FORCE (-1. 0. 0. ) P2 ;


***************************************************
***                                             ***
***             RESOLUTION LINEAIRE             ***
***       + CALCUL DES MODES DE FLAMBAGE        ***
***                                             ***
***************************************************

* RESOLUTION
*
 DEP1 = RESO (RIG1 ET CL1) F1 ;
 SIG1 = SIGM MOD1 (MAT1 ET CAR1) DEP1 ;
*
*  MATRICE DE RAIDEUR GEOMETRIQUE
*
 KS1 = KSIGM MOD1 SIG1 (CAR1) 'FLAM' ;

*  CALCUL DE MODES DE FLAMBAGE
*
 TAB1 = TABLE ;
 TAB1.OBJM = MOD1 ;
 TAB1.LAM1 = 0. ;
 TAB1.LAM2 = 1000. ;
 TAB1.NMOD = 1 ;
 TAB1.CLIM = (CL1  ) ;
 TAB1.RIGI = RIG1 ;
 TAB1.KSIG = KS1 ;
 TABFL = FLAMBAGE TAB1 ;
 LAMB1 = (TABFL . 1) . LAMB ;


***************************************************
***                                             ***
***       CALCUL NON-LINEAIRE GEOMETRIQUE       ***
***                                             ***
***************************************************

* NORMALISATION DE LA FORCE AXIALE + PETITE PERTURBATION LATERALE
*
 F11 = F1 *  LAMB1 ;
*  F3 = FORCE   (0. 1. 0.) P2  ;
* bp : on diminue la perturbation (=le défaut) de maniere a bifurquer
*      + franchement et a obtenir une valeur de ALPHA + précise
 F3 = FORCE   (0. (lamb1 * 1.E-4) 0.) P2  ;

*  OBJET CHARGEMENT
*
 LI1 = PROG 0. 2. ;
 LI2 = PROG 0. 2. ;
 EV = EVOL MANU T LI1 F(T) LI2 ;
 CHA1 = CHAR  'MECA' ( F11 ET F3)  EV ;

* liste des temps a calculer
LIS1T = prog 0. pas 0.1 1. PAS 0.05 1.15 1.152;

* table des grandeurs a recuperer
TRES1 = tabl;
TRES1 . 1 = tabl;
TRES1 . 1 . 'POINT_MESURE' = P2;
TRES1 . 1 . 'COMPOSANTE'   = mot 'UX';
TRES1 . 1 . 'COULEUR'      = mot 'ROSE';
TRES1 . 1 . 'TITRE'        = mot 'UX continuation';
TRES1 . 2 = tabl;
TRES1 . 2 . 'POINT_MESURE' = P2;
TRES1 . 2 . 'COMPOSANTE'   = mot 'UY';
TRES1 . 2 . 'COULEUR'      = mot 'ROUG';
TRES1 . 2 . 'TITRE'        = mot 'UY continuation';
TRES1 . 3 = tabl;
TRES1 . 3 . 'POINT_MESURE' = P2;
TRES1 . 3 . 'COMPOSANTE'   = mot 'UZ';
TRES1 . 3 . 'COULEUR'      = mot 'DEFA';
TRES1 . 3 . 'TITRE'        = mot 'UZ continuation';

*---- PREPARATION DE LA TABLE POUR CONTINU

TAB1 = tabl ;
TAB1 . 'MODELE' = MOD1;
TAB1 . 'CARACTERISTIQUES' = (MAT1 ET CAR1);
TAB1 . 'CHARGEMENT' = CHA1;
TAB1 . 'GRANDS_DEPLACEMENTS' = VRAI ;
TAB1 . 'BLOCAGES_MECANIQUES' = CL1;
TAB1 . 'PRECISION' = 1.E-6;
TAB1 . 'TEMPS_CALCULES' = LIS1T;
TAB1 . 'MAXIPAS' = 500;
TAB1 . 'ACCELERATION' = 4;
TAB1 . 'PAS_SAUVES' = mot 'TOUS';

* calcul d'une norme de deplacement
* u1max = (XTX ((LAMB1*DEP1) enle 'LX'))**0.5; mess ' u1max = ' u1max;
* * on arrondi au dessus et on fait *1000
* nu1max = flot (extr (chai u1max) 10 12);
* u1max = 1000. * (10**nu1max); mess ' u1max = ' u1max;
* on prend un deplacement uy de 2% de la longueur de la poutre réparti
uyref = 0.02 * (coor L1 1);
u1max = (XTX uyref)**0.5; mess ' u1max = ' u1max;

TAB1 . 'MAXI_DEPLACEMENT' = u1max;
TAB1 . 'RESULTATS' = TRES1;

opti debug 1 ;
CONTINU TAB1;
* opti donn 5 trac x;

* tracé
Tdess1 = tabl ;
Tdess1 . 'TITRE' = tabl ;
repe btitre 3 ;
  Tdess1 . 'TITRE' . &btitre =  TRES1 . &btitre . 'TITRE';
fin  btitre;
Tdess1 . 1 = mot 'MARQ CROI REGU' ;
Tdess1 . 2 = mot 'MARQ TRID REGU' ;
Tdess1 . 3 = mot 'MARQ ROND REGU' ;

evcon = TAB1 . 'RESULTATS' . 'RESULTATS_EVOL';
si GRAPH ;
  dess evcon Tdess1 LEGE NO
  'TITX' 't' 'POSX' 'CENT'
  'TITY' 'u' 'POSY' 'CENT' 'TITR' 'continu_gdep1 (continu)';
finsi;
ev2 = extr evcon 'COUR' 2;
t2 = extr ev2 'ABSC'; uy2 = extr ev2 'ORDO'; nuy2 = dime uy2;
uy2fin = extr uy2 nuy2;
t2fin  = extr t2 nuy2;

* * recup des itérés
* tit  = TRES1 . 0 . 'ITERES';
* uyit = TRES1 . 2 . 'ITERES'; nit = dime uyit; mess nit;
* evuy = evol 'MANU' TRES1 . 0 . 'ITERES' uyit;
* dess (evcon et evuy) Tdess1 LEGE NO;

* *offset pour mieux zoomer
* ev2b=evol 'ROUG' manu (t2-(prog nuy2*t2fin)) (uy2 - (prog nuy2*uy2fin));
* evuy = evol 'MANU' (tit - (prog nit*t2fin)) (uyit - (prog nit*uy2fin));
* tabit = tabl;
* tabit . 1 = mot 'MARQ S PLUS';
* tabit . 2 = mot 'MARQ S ROND';
* dess evuy tabit ;
* dess (ev2b et evuy) tabit ;
* itprog = prog 1 PAS 1 nit;
* dess (evol manu itprog (tit - (prog nit*t2fin)));
* dess (evol manu itprog (uyit - (prog nit*uy2fin)));

* opti donn 5 trac X;

*---- PREPARATION DE LA TABLE POUR PASAPAS
*
*
TAB2 = TABLE;
TAB2 . 'GRANDS_DEPLACEMENTS' = VRAI ;
TAB2 . 'AUTOMATIQUE' = VRAI ;
TAB2 . 'MAXITERATION'= 100 ;
TAB2 . 'AUTOPAS' =1000 ;
TAB2 . 'BLOCAGES_MECANIQUES' = CL1;
TAB2 . 'MODELE' = MOD1;
TAB2 . 'CARACTERISTIQUES' = (MAT1 ET CAR1);
TAB2 . 'CHARGEMENT' = CHA1;
TAB2 . 'K_SIGMA'=FAUX;
TAB2 . 'REAC_GRANDS'=10.E-2 ;
TAB2 . 'PRECISION' = 1.E-6;

* calcul en plusieurs fois :
*
* LIS1A = prog 0. 0.65;
* TAB2.'TEMPS_CALCULES' = LIS1A;
* TAB2.'AUTOCRIT' = 0.05  ;
* PASAPAS TAB2 ;
* *
* TAB2.'AUTOCRIT' = 0.1  ;
* LIS1B = prog 0.65 0.9;
* TAB2.'TEMPS_CALCULES' = LIS1B;
* PASAPAS TAB2 ;
* *
* si complet;
* LIS1C = prog 0.9 1.;
* TAB2.'AUTOCRIT' = 0.2  ;
* TAB2.'TEMPS_CALCULES' = LIS1C;
* PASAPAS TAB2 ;
* *
* LIS1D = prog 1. 1.152;
* TAB2.'AUTOCRIT' = 0.5  ;
* TAB2.'TEMPS_CALCULES' = LIS1D;
* PASAPAS TAB2 ;
* finsi;

* calcul en 1 seule fois :
TAB2 . 'TEMPS_CALCULES' = LIS1T;
* TAB2.'AUTOCRIT' = 0.02 ;
TAB2 . 'AUTOCRIT' = 0.05 ;
PASAPAS TAB2 ;


uxp2 = prog; uyp2 = prog; uzp2 = prog; tprog = prog;
npas = dime TAB2 . 'TEMPS';
ipas = -1;
repe Bpas npas; ipas = ipas + 1 ;
  t  = TAB2 . 'TEMPS' . ipas ;
  u  = TAB2 . 'DEPLACEMENTS' . ipas ;
  f  = TIRE TAB2.'CHARGEMENT' t;
  fr = TAB2 . 'REACTIONS'    . ipas;
  vf = (vect f 'FORC' ROUG 0.01) et (vect fr 'FORC' ROSE 0.01);
  def0 = defo u L1 0. GRIS;
  def1 = defo u L1 1. vf;
  motit = chai 'deformee au pas ' ipas ' t='t;
  si GRAPH; trac (def0 et def1) 'TITR' motit;  finsi;
  uxp2 = uxp2 et (extr u 'UX' P2);
  uyp2 = uyp2 et (extr u 'UY' P2);
  uzp2 = uzp2 et (extr u 'UZ' P2);
  tprog = tprog et t;
fin  Bpas ;

evuxp2 = EVOL VIOL MANU tprog uxp2;
evuyp2 = EVOL BLEU MANU tprog uyp2;
evuzp2 = EVOL TURQ MANU tprog uzp2;
si GRAPH ;
  dess (evuxp2 et evuyp2 et evuzp2)
    'TITX' 't' 'POSX' 'CENT'
    'TITY' 'u' 'POSY' 'CENT' 'TITR' 'continu_gdep1 (pasapas)';
finsi;

evopas = evuxp2 et evuyp2 et evuzp2;
Tdess1 . 4 = mot 'TIRR' ;
Tdess1 . 5 = mot 'TIRR' ;
Tdess1 . 6 = mot 'TIRR' ;
Tdess1 . 'TITRE' . 4 = mot 'UX pasapas AUTO';
Tdess1 . 'TITRE' . 5 = mot 'UY pasapas AUTO';
Tdess1 . 'TITRE' . 6 = mot 'UZ pasapas AUTO';

si GRAPH ;
  dess (evcon et evopas) Tdess1 LEGE NO
  'TITX' 't' 'POSX' 'CENT'
  'TITY' 'u' 'POSY' 'CENT' 'TITR' 'continu_gdep1';
finsi;



***************************************************
***                                             ***
***            TEST DE NON REGRESSION           ***
***                                             ***
***************************************************

* RESULTATS ANALYTIQUES
  ALPHATH = 60.  ;

* resultats CONTINU pour un chargement = 1.152 * PCR
  DEP1a = TAB1 . 'DEPLACEMENTS' . (nuy2 - 2);
  DEP1b = TAB1 . 'DEPLACEMENTS' . (nuy2 - 1);
  ta    = TAB1 . 'TEMPS'        . (nuy2 - 2);
  tb    = TAB1 . 'TEMPS'        . (nuy2 - 1);
  t = 1.152; gamt = (t - ta) / (tb - ta);
  DEP1 = ((1. - gamt) * DEP1a) + (gamt * DEP1b);
  XX1 = (EXTR DEP1 PP1  UX) +  (COOR 1 PP1) ;
  YY1 = (EXTR DEP1 PP1  UY) +  (COOR 2 PP1) ;
  XX2 = (EXTR DEP1 P2  UX) +  (COOR 1 P2) ;
  YY2 = (EXTR DEP1 P2  UY) +  (COOR 2 P2) ;
  TN = ((YY2 - YY1)/(XX2 - XX1)) ;
  ALPHA1 = ATG TN ;


* resultats PASAPAS pour un chargement = 1.152 * PCR
  DEP2 = PECHE TAB2 'DEPLACEMENTS'  ;
  XX1 = (EXTR DEP2 PP1  UX) +  (COOR 1 PP1) ;
  YY1 = (EXTR DEP2 PP1  UY) +  (COOR 2 PP1) ;
  XX2 = (EXTR DEP2 P2  UX) +  (COOR 1 P2) ;
  YY2 = (EXTR DEP2 P2  UY) +  (COOR 2 P2) ;
  TN = ((YY2 - YY1)/(XX2 - XX1)) ;
  ALPHA2 = ATG TN ;

  MESS ALPHATH ALPHA1 ALPHA2;
  MESS 0. (ALPHA1/ALPHATH - 1.) (ALPHA2/ALPHATH - 1.);

*** table TNR ***

TABTNR = TABL ;

TABTNR.'ANA' = TABL ;
TABTNR.'ANA'. 1 = CHAI 'CONTINU' ;
TABTNR.'ANA'. 2 = CHAI 'PASAPAS' ;

TABTNR.'DESC' = TABL ;
TABTNR.'DESC'.  1 = CHAI '\alpha(\lambda=1.152)' ;
TABTNR.'DESC'.  2 = CHAI '\alpha(\lambda=1.152)' ;

TABTNR.'NOMS' = TABL ;
TABTNR.'NOMS' . 1  = 'CHAI' 'ALPHA1  ' ;
TABTNR.'NOMS' . 2  = 'CHAI' 'ALPHA2  ' ;

TABTNR.'CAL' = PROG ALPHA1 ALPHA2;

TABTNR.'REF' = PROG ALPHATH ALPHATH;

TABTNR.'TOL' = PROG 2.E-2 2.E-2;

OPTI ECHO 0 ;
error = 0 ;
FORMA1 = '(1PE12.5)' ;
FORMA2 = '(1PE10.0)' ;
MESS '###_DEBUT_DES_TESTS_DE_NON-REGRESSION_###' ;
MESS (CHAI 'ANALYSE : VARIABLE : DESCRIPTION : VALEUR REF.  :'
           ' VALEUR CALC. : ERR. RELAT.  :  TOLERANCE   :  ETAT') ;
REPE BOU1 (DIME TABTNR.'NOMS') ;
  ana = CHAI TABTNR.'ANA'. &BOU1 ;
  nom = CHAI TABTNR. 'NOMS' . &BOU1 ;
  des =  CHAI TABTNR. 'DESC' . &BOU1 ;
  ref = EXTR TABTNR.'REF' &BOU1 ;
  cal = EXTR TABTNR.'CAL' &BOU1 ;
  tol = EXTR TABTNR.'TOL' &BOU1 ;
  err = ABS (cal - ref) ;
  SI ((ABS ref) '>EG' 1.E-10) ;
    err = err / (ABS (ref)) ;
  FINSI ;
  SI (err '>EG' tol) ;
    error = error + 1 ;
    etat  = CHAI ERREUR ;
  SINON ;
    etat  = CHAI 'OK' ;
  FINSI ;
  MESS (CHAI               ana ' : '
                           nom ' : '
                           des ' : '
             FORMAT FORMA1 ref ' : '
             FORMAT FORMA1 cal ' : '
             FORMAT FORMA1 err ' : '
             FORMAT FORMA2 tol ' : '
                           etat) ;
FIN BOU1 ;
*
******************
* Emission de la banniere de fin de TEST
******************
*
* opti DONN 5 ECHO 1 'TRAC' X;
MESS '###_FIN_DES_TESTS_DE_NON-REGRESSION_###' ;
TEMPS ;
SI (error '>' 0) ;
  MESS 'Il y a ' error ' erreur(s) !' ;
  ERRE 5 ;
SINON ;
  MESS 'Aucun probleme detecte !' ;
FINSI ;
*

FIN ;













