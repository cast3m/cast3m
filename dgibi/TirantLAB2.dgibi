*
*
* CAS TEST DU 07/09/17   PROVENANCE : TEST   
*******************************************************
*******************************************************
*                                                     *
*       Test Case of Cyclic Loading                   *
*          for liaison_acbe model                     *
*          on an interface element.                   *
*           Pr: AK & CT                               *
*******************************************************
*******************************************************
OPTI ECHO 0 ;
OPTI DIME 3 ELEM CUB8 ;
*
dia1 = 0.01 ;
sa1 = (pi*dia1*dia1)/4. ;
dx = 0.02;
*
* Malliage
p0 = 0. 0. 0. ;
p1 = dx 0. 0. ;
d1 = droi p0 p1 1 ;
d2 = d1 plus (0. 0. 0.) ;
intf = racc d1 d2 1.e-5 ;
*
*Loi d'Adherence
pul1 = prog 0. 2.e-6 1.E-3 2.E-3 4.E-3 6.E-3 8.E-3 
1.E-2 1.2E-2 1.3E-2 1.4E-2 1.6E-2 0.02 ;
pul2 = prog 0. 2.e6 7.5E6 12.5E6 17.E6 19.5E6 20.E6 
19.5E6 17.5E6 16.E6 15.5E6 15.E6 15.E6 ;
pulop = evol manu (pul1) (pul2) ;
*
* Materiaux et Modeles
mod1 = mode intf mecanique elastique isotrope 
plastique liaison_acbe cos2 ;
mat1 = mate mod1 'PULO' pulop 'KN' 1.e15 
'KS' 1.e12 'SECT' sa1 ;
*
* Conditions aux Limites
cl1 = bloq (p0 et p1) 'DEPL' ;
*
* Chargement
cldep = bloq d2 'UX' ;
dep1 = depi cldep (1) ;
*
* Cyclic Loading 
prog1 = prog 0. 1. 2. 3. ;
prog2 = prog (0.) (2.E-2) (-5.E-3) (-2.E-2) ;
temps1 = prog 0. pas 0.1 3. ;
*
evo1 = evol manu (prog1) (prog2) ;
cha1 = char dep1 evo1 DIMP ;
cltot = cl1 et cldep ;  
*
tab1 = TABLE;
tab1.MODELE = mod1 ;
tab1.CARACTERISTIQUES = mat1 ;
tab1.BLOCAGES_MECANIQUES = cltot; 
tab1.CHARGEMENT = cha1;
tab1.TEMPS_CALCULES = temps1 ;
tab1.PLASTIQUE = vrai;
tab1.'PRECISION' = 1.e-5;
*
pasapas tab1 ;
*
tt = (dime(tab1.temps)) - 1 ;
progx = prog ;
i = 1 ;
repeter bou1 tt ;
f1 = reac cldep 
TAB1.DEPLACEMENTS.i ;
ff1 = resu f1 ;
FORC = extr ff1 'FX'
(poin (extr f1 mail) initial) ;
progx = progx et (prog forc) ;
i = i + 1 ;
fin bou1 ;

fmax = 'MAXI' progx ;
fmin = 'MINI' PROGX ;
FMAX = (FMAX * 1.E-6) / 
(PI * DIA1 * DX) ;
FMIN = (FMIN * 1.E-6) / 
(PI * DIA1 * DX) ;
errf = abs(FMAX + FMIN) ;
*
si (> errf 1.e-3) ;
erreur (5);
finsi;
*
fin ;

