* fichier :  metallurgie_12.dgibi
************************************************************************
* Section : Metallurgie
************************************************************************

*__________________________________________________________________*
*   TEST METALLURGIE_12                                            *
*                                                                  *
*   CALCUL DE l'ERREUR ANALYTIQUE - CAST3M POUR KOISTINEN          *
*   Le calcul est fait pour differents pas de temps                *
*                                                                  *
*                                                                  *
*   Le modele metallurgique est code en ESOPE (Cast3m)             *
*__________________________________________________________________*
*                                                                  *
*   Vitesse de refroidissement : 250 C/s                           *
*      - Transformation (type Koistinen-Marburger) de l'autenite   *
*        en martensite seulement                                   *
*__________________________________________________________________*
*                                                                  *
*  On trace la courbe de l'erreur en fonction du pas de temps,     *
*  sur une echelle log-log                                         *
*__________________________________________________________________*
*
'OPTI' 'TRAC' PSC 'EPTR' 10 ;
IDESS = VRAI ;

OPTI DIME 2 ELEM 'TRI3';

P1 = 0. 0. ;
P2 = 1. 0. ;
P3 = 0. 1. ;

MAILT   = MANU 'TRI3' P1 P2 P3;

LISTPHA = MOTS 'AUST' 'MART' ;
LISTREAC = MOTS 'AUST' ;
LISTPROD = MOTS 'MART' ;
LISTTYPE = MOTS 'KOIS' ;
NOMCONS = '16MND5';

MODCP1 = MODE MAILT 'METALLURGIE' 'PHASES' LISTPHA
                                  'REACTIFS' LISTREAC
                                  'PRODUITS' LISTPROD
                                  'TYPE' LISTTYPE
                                  'CONS' NOMCONS ;

TINI = 900.   ;
TFIN = 20.   ;

MS1 = 380. ;
KM1 = 0.0247 ;

MATCP1 = 'MATE' MODCP1 'MS1' MS1 'KM1' KM1 ;

*Declaration de la vitesse de refroidissement : en Degres/s
DT_vit = -250. ;

*Calcul de la duree du refroidissement :
DUREE = -1. * (TINI - TFIN) / DT_vit ;

*Declaration du Temps initial :
TEMPINI = 1. ;
*Calcul du Temps final :
TEMPFIN = TEMPINI + DUREE ;

*Calcul du pas de temps en fonction de la vitesse de refroidissement :

NBPAST = 14.D0 ;
LDTini = 'LOG' (-100000.D0 / DT_vit) ;
LDTfin = 'LOG' (-10.D0 / DT_vit) ;
PASLOG = (LDTfin - LDTini) / (NBPAST - 1.D0);
LISTLOG='PROG' LDTini 'PAS' PASLOG LDTfin;
LISTPAS1='EXP' LISTLOG;

NBPAST = 4.D0 ;
LDTini = 'LOG' (-10.D0 / DT_vit) ;
LDTfin = 'LOG' (-0.01D0 / DT_vit) ;
PASLOG = (LDTfin - LDTini) / (NBPAST - 1.D0);
LISTLOG='PROG' LDTini 'PAS' PASLOG LDTfin;
LISTPAS2='EXP' LISTLOG;

LISTPAS = LISTPAS1 'ET' LISTPAS2 ;



ERR_TAB = 'PROG' ;
PAS_TAB = 'PROG' ;
EVO_ERR = 'TABL' ;
EVO_ANA = 'TABL' ;
EVO_CAL = 'TABL' ;


*Boucle sur les differents taille de pas de temps :
REPE BOU_PAS (DIME LISTPAS) ;

  PAS = &BOU_PAS ;

  DTPS = 'EXTR' LISTPAS PAS ;

  LTCAL   ='PROG' TEMPINI 'PAS' DTPS TEMPFIN ;
  T       = TINI + (DT_vit * (LTCAL - TEMPINI));

  ALPHA = 1. ;
* Initialisation de CHE1 : proportions de phases initiales :
  CTYP = 'CHAI' 'VARIABLES_INTERNES' ;
  CHE1 ='MANU' 'CHML' MODCP1 'AUST' ALPHA
                             'MART' 0.
               'TYPE' CTYP 'NOEUD' ;

  PROP = 'PROG' ALPHA ;

  nbpas = (DIME LTCAL) - 1;
  REPE CTEMP nbpas;

*   On recupere le temps debut de pas et le temps fin de pas :
    temp0   = EXTR LTCAL  &CTEMP     ;
    temp1   = EXTR LTCAL (&CTEMP + 1);
    CHETPS0 = 'MANU' 'CHML' MAILT 'TEMP' temp0 ;
    CHETPS1 = 'MANU' 'CHML' MAILT 'TEMP' temp1 ;
*   On recupere la temperature debut de pas et la temperature fin de pas :
    T0      = EXTR T  &CTEMP             ;
    T1      = EXTR T (&CTEMP + 1)        ;
    CHT0    = 'MANU' 'CHML' MAILT 'T' T0 ;
    CHT1    = 'MANU' 'CHML' MAILT 'T' T1 ;


    CHE1 = COMP MODCP1 (CHE1 'ET' CHETPS0 'ET' CHT0 'ET' MATCP1 ) ( CHETPS1 'ET' CHT1 'ET' MATCP1 ) ;

*   Extraction pour tracer :
    Pi     ='EXCO' CHE1 AUST 'AUST';
    PiEvol ='EXTR' Pi AUST 1 1 1;
    PROP   = PROP 'ET' PiEvol ;

  FIN CTEMP;


* Evolution calculee :
  EVO   = 'EVOL' 'NOIR' 'MANU' 'TEMP' LTCAL 'AUSTENITE' PROP;
  EVO_CAL . PAS = EVO ;

* Evolution analytique :
  TBORN  = BORN T 'MAXI' MS1;
  PANALY = EXP (-1. * KM1 * (MS1 - TBORN)) ;
  PANALY = BORN PANALY 'MAXI' ALPHA ;
  EVOANA = 'EVOL' 'VERT' 'MANU' 'TEMP' LTCAL 'AUSTENITE' PANALY ;
  EVO_ANA . PAS = EVOANA ;

* Erreur absolue entre analytique et calculee :
  ERRABS  = 'ABS' (PANALY '-' PROP) ;
  EVOERR = 'EVOL' 'ROUG' 'MANU' 'TEMP' LTCAL 'ERREUR' ERRABS ;
  EVO_ERR . PAS = EVOERR ;

  NORMERR = 'MAXI' ERRABS ;
  ERR_TAB = ERR_TAB 'ET' NORMERR ;
  PAS_TAB = PAS_TAB 'ET' DTPS ;

FIN BOU_PAS;



*Post-traitement :
'SI' IDESS ;

  REPE BOU_PAS (DIME LISTPAS) ;
    PAS = &BOU_PAS ;
    EVOERR = EVO_ERR . PAS ;
    DTPS = 'EXTR' LISTPAS PAS ;
    TITRE = 'CHAI' 'Erreur pour le pas de temps : ' DTPS ;
    DESS EVOERR 'GRIL' 'TIRC' 'GRIS'
                'TITR' TITRE ;

    EVO = EVO_CAL . PAS ;
    EVOANA = EVO_ANA . PAS ;
    TITRE = 'CHAI' 'KOISTINEN-MARBURGER - calcul pour le pas de temps : ' DTPS ;
    TL = TABL ;
    TL . 2 = 'TIRR' ;
    TL . 'TITRE' = TABL ;
    TL . 'TITRE' . 1 = 'Evolution calculee' ;
    TL . 'TITRE' . 2 = 'Evolution analytique' ;

    'SI' ( DTPS '>' 0.01D0 ) ;
      TL . 1 = 'MARQ ROND NOLI' ;
    'SINO' ;
      TL . 1 = 'TIRR' ;
    'FINS' ;

    DESS (EVO 'ET' EVOANA) 'GRIL' 'TIRC' 'GRIS' 'TITR' TITRE 'LEGE' TL ;
  FIN BOU_PAS;


  TDESS = 'TABL';
  TDESS . 1 ='CHAI' ('MARQ ROND');
  ERRPAS = 'EVOL' 'ROUG' 'MANU' 'PAS' PAS_TAB 'ERREUR' ERR_TAB;
  TITRE = 'CHAI' 'Evolution de l erreur en fonction du pas de temps' ;
  DESS ERRPAS  'LOGX' 'LOGY'
               'GRIL' 'TIRC' 'GRIS'
               'TITR' TITRE
               'LEGE' TDESS;

'FINSI' ;

*Emission d'une erreur GIBIANE si l'erreur analytique - cast3m est trop grande :
REPE BOU_ERR (DIME LISTPAS) ;

  PAS = &BOU_ERR ;
  DTPS = 'EXTR' LISTPAS PAS ;
  NORMERR = 'EXTR' ERR_TAB PAS ;
  Tol1  = 1.5D0 * DTPS * DTPS; COMM 'Valeur fixee en 2018 par Thibault LINDECKER';

  MESS (CHAI '      Erreur : ' NORMERR ' | Tolerence : ' Tol1);
  SI (NORMERR >EG Tol1);
   MESS 'Erreur dans le calcul de la proportion d AUSTENITE';
   ERRE 5;
  FINS;

FIN BOU_ERR;

fin;


