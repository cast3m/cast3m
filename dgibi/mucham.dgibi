* fichier : mucham.dgibi
************************************************************************
* Section : Mathematiques Fonctions
************************************************************************
'OPTION' 'ECHO' 0 ;
***********************************************************************
* NOM         : MUCHAM                                                *
* DESCRIPTION : Cas-test de l'operateur '*' (et '/')                  *
*    Ce cas-test verifie la multiplication et la division de MCHAMLs  *
*                                                                     *
*                                                                     *
*    Suite aux fiches anomalie 9461, 9474                             *
*    on verifie qu'avec la syntaxe    *                               *
*    ou on precise les noms des composantes                           *
*    intervenant dans chaque produit ainsi que celui de la composante *
*    resultat a l'aide de trois LISMOTS :                             *
*       - CHAM3 = CHMA1 * CHMA2 LISMOTS1 LISMOTS2 LISMOTS3 ;          *
*    que les trois LISTMOTS sont bien pris en compte meme si les      *
*    champs arguments sont de type "SCALAIRE"                         *
*                                                                     *
*    2018/01/16 : pareil pour /                                       *
*                                                                     *
*                                                                     *
*                                                                     *
* LANGAGE     : GIBIANE-CAST3M                                        *
* AUTEUR      : Stéphane GOUNAND (CEA/DEN/DM2S/SEMT/LTA)              *
*               mél : stephane.gounand@cea.fr                         *
***********************************************************************
* VERSION    : v1, 19/06/2017, version initiale                       *
* HISTORIQUE : v1, 19/06/2017, création                               *
* HISTORIQUE :  2018/01/16 : teste aussi /                            *
* HISTORIQUE :                                                        *
***********************************************************************
*
* Verifie qu'un champ n'a qu'une composante qui correspond au mot donne
*
'DEBP' VERCOMP ;
'ARGU' cham*'MCHAML' ;
'ARGU' nocover*'MOT' ;
*
noco = 'EXTR' cham 'COMP' ;
dnoco = 'DIME' noco ;
tst1 = 'EGA' dnoco 1 ;
'SI' ('NON' tst1) ;
   'MESS' '!!! Le champ a plus dune composante' ;
'FINS' ;
mo = 'EXTR' noco 1 ;
tst2 = 'EGA' mo nocover ;
'SI' ('NON' tst2) ;
   'MESS' '!!! La composante est  : ' mo ;
   'MESS' '!!! Elle devrait etre  : ' nocover ;
'FINS' ;
lok = tst1 'ET' tst2 ;
'RESP' lok ;
'FINP' ;
*
* Verifie le min et le max d'un champ
*
'DEBP' VERMIMA ;
'ARGU' cham*'MCHAML' ;
'ARGU' vmin*'FLOTTANT' ;
'ARGU' vmax*'FLOTTANT' ;
*
lok = vrai ;
mich = 'MINI' cham ; mach = 'MAXI' cham ;
vref = 'MAXI' ('PROG' vmin vmax ('**' ('VALE' 'PETI') 0.5)) 'ABS' ;
tol = '*' vref ('VALE' 'PREC') ;
tst3 = 'EGA' mich vmin tol ;
tst4 = 'EGA' mach vmax tol ;
'SI' ('NON' tst3) ;
   'MESS' '!!! Le min. du champ est  : ' mich ;
   'MESS' '!!! Il devrait etre       : ' vmin ;
'FINS' ;
'SI' ('NON' tst4) ;
   'MESS' '!!! Le max. du champ est  : ' mach ;
   'MESS' '!!! Il devrait etre       : ' vmax ;
'FINS' ;
lok = tst3 'ET' tst4 ;
'RESP' lok ;
'FINP' ;
*
*
graph    = faux ;
interact = faux ;
'OPTI' 'DIME' 1 'ELEM' 'SEG2' ;
pA = 'POIN' ('*' -1. PI) ; pB = 'POIN'  PI ;
mt = 'DROI' 2 pA pB ;
*
lok = vrai ;
*
* Test 1 avec des champs crees par MANU CHML
*
ch1 = 'MANU' 'CHML' mt 'SCAL' ('**' 2. 0.5) ;
ch2 = 'MANU' 'CHML' mt 'UX' PI ;
vs = PI '*'  ('**' 2. 0.5) ;
ch3 = '*' ch1 ch2 ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3 'TUX') ;
lok = lok 'ET' (VERMIMA ch3 vs vs) ;
*
ch3p = '*' ch2 ch1 ('MOTS' 'UX') ('MOTS' 'SCAL') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3p 'TUX') ;
lok = lok 'ET' (VERMIMA ch3p vs vs) ;
*
ch1b = 'MANU' 'CHML' mt 'SCAL' ('**' 2. 0.5) 'TYPE' 'SCALAIRE' ;
ch3b = '*' ch1b ch2 ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3b 'TUX') ;
lok = lok 'ET' (VERMIMA ch3b vs vs) ;
*
ch2b = 'MANU' 'CHML' mt 'UX' PI 'TYPE' 'SCALAIRE' ;
ch3c = '*' ch1 ch2b ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3c 'TUX') ;
lok = lok 'ET' (VERMIMA ch3c vs vs) ;
*
ch3d = '*' ch1b ch2b ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3d 'TUX') ;
lok = lok 'ET' (VERMIMA ch3d vs vs) ;
*
* Test 2 avec des champs crees par COOR et CHAN CHAM
*
vs = '**' PI 2. ; vprec = '*' ('VALE' 'PREC') vs ;
mmt = 'MODE' mt 'MECANIQUE' ;
xmt = 'COOR' 1 mt ;
cxmt  = 'CHAN' 'CHAM' xmt mt ;
cxmtt  = 'CHAN' 'CHAM' ('NOMC' 'T' xmt) mt ;
cxmt2   = '*' cxmt cxmtt ('MOTS' 'SCAL') ('MOTS' 'T') ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2 0. vs) ;
cxmt2p   = '*' cxmtt cxmt ('MOTS' 'T') ('MOTS' 'SCAL') ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2p 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2p 0. vs) ;
cxmt2q   = '*' cxmt cxmt ('MOTS' 'SCAL') ('MOTS' 'SCAL')
   ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2q 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2q 0. vs) ;
cxmt2r   = '*' cxmtt cxmtt ('MOTS' 'T') ('MOTS' 'T')
   ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2r 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2r 0. vs) ;
*
* Test 3 pour la division avec des champs crees par MANU CHML
*
ch1 = 'MANU' 'CHML' mt 'SCAL' ('**' 2. 0.5) ;
ch2 = 'MANU' 'CHML' mt 'UX' PI ;
vs1 = ('**' 2. 0.5) '/' PI ;
vs2 = PI '/'  ('**' 2. 0.5) ;
ch3 = '/' ch1 ch2 ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3 'TUX') ;
lok = lok 'ET' (VERMIMA ch3 vs1 vs1) ;
*
ch3p = '/' ch2 ch1 ('MOTS' 'UX') ('MOTS' 'SCAL') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3p 'TUX') ;
lok = lok 'ET' (VERMIMA ch3p vs2 vs2) ;
*
ch1b = 'MANU' 'CHML' mt 'SCAL' ('**' 2. 0.5) 'TYPE' 'SCALAIRE' ;
ch3b = '/' ch1b ch2 ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3b 'TUX') ;
lok = lok 'ET' (VERMIMA ch3b vs1 vs1) ;
*
ch2b = 'MANU' 'CHML' mt 'UX' PI 'TYPE' 'SCALAIRE' ;
ch3c = '/' ch1 ch2b ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3c 'TUX') ;
lok = lok 'ET' (VERMIMA ch3c vs1 vs1) ;
*
ch3d = '/' ch1b ch2b ('MOTS' 'SCAL') ('MOTS' 'UX') ('MOTS' 'TUX') ;
*
lok = lok 'ET' (VERCOMP ch3d 'TUX') ;
lok = lok 'ET' (VERMIMA ch3d vs1 vs1) ;
*
* Test 4 pour la division avec des champs crees par COOR et CHAN CHAM
*
mt = 'DROI' 3 pA pB ;
vs = '**' PI 2. ; vprec = '*' ('VALE' 'PREC') vs ;
vmin = '**' (PI '/' 3.) 2 ;
mmt = 'MODE' mt 'MECANIQUE' ;
xmt = 'COOR' 1 mt ;
ixmt = 'INVE' xmt ;
cxmt  = 'CHAN' 'CHAM' xmt mt ;
cxmtt  = 'CHAN' 'CHAM' ('NOMC' 'T' xmt) mt ;
cixmt  = 'CHAN' 'CHAM' ixmt mt ;
cixmtt  = 'CHAN' 'CHAM' ('NOMC' 'T' ixmt) mt ;
cxmt2   = '/' cxmt cixmtt ('MOTS' 'SCAL') ('MOTS' 'T') ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2 vmin vs) ;
cxmt2p   = '/' cxmtt cixmt ('MOTS' 'T') ('MOTS' 'SCAL') ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2p 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2p vmin vs) ;
cxmt2q   = '/' cxmt cixmt ('MOTS' 'SCAL') ('MOTS' 'SCAL')
   ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2q 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2q vmin vs) ;
cxmt2r   = '/' cxmtt cixmtt ('MOTS' 'T') ('MOTS' 'T')
   ('MOTS' 'UXX') ;
lok = lok 'ET' (VERCOMP cxmt2r 'UXX') ;
lok = lok 'ET' (VERMIMA cxmt2r vmin vs) ;
*
* Test final
*
'SI' ('NON' lok) ;
   'ERREUR' 5 ;
'SINON' ;
   'MESSAGE' ('CHAINE' 'Tout sest bien passe !') ;
'FINSI' ;
*
'SI' interact ;
   'OPTION' 'ECHO' 1 ;
   'OPTION' 'DONN' 5 ;
'FINSI' ;
*
* End of dgibi file MUCHAM
*
'FIN' ;







