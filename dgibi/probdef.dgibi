* fichier :  probdef.dgibi
************************************************************************
* Section : Mathematiques Fonctions
************************************************************************
*==================================================================*
*                                                                  *
*       CAS TEST PROBDEF                                           *
*       ----------------
*                                                                  *
*       CALCUL IDEALISE D UNE PROBABILITE DE DEFAILLANCE           *
*                                                                  *
*                                                                  *
*                                                                  *
* Probabilite qu une resistance    (R) soit inferieure a           *
*                une sollicitation (S)                             *
*                                                                  *
*                                                                  *
*  R et S sont des variables aléatoires log-normales               *
*                                                                  *
*                                                                  *
*  La probabilité de défaillance et l'indice de fiabilité          *
*  calculés sont comparés au résultat analytique                   *
*                                                                  *
*                                                                  *
*                                                                  *
*==================================================================*
opti echo 0;
*
*
*
* Moyenne, ecart-type et coeff. de variation de R
muR = 15.;
cvR = 0.1;
sigR = muR*cvR;
*
* Moyenne, ecart-type et coeff. de variation de S
muS = 5.;
cvS = 0.1;
sigS = muS*cvS;
*
* Corrélation
* ATTENTION : le cas RHO différent de 0 n est pas traite !
RHO = 0.;
*
*beta et proba theorique pour 2 lois log-normales
*cvR = sigR / muR;
*cvS = sigS / muS;
lR = log(cvR**2+1);
lS = log(cvS**2+1);
lRS = log(RHO*cvR*cvS+1);
*
BETA_th = (log(muR/muS)*(((cvS**2+1)/(cvR**2+1))**0.5))/
((lR+lS-(2.*lRS))**0.5);
*
Pf_th = 1-(PROB 0. 1. 0. 3. BETA_th);
*
*
* Calcul des 4 premiers moments statistiques de R et S
*
NpR = 10;
NpS = 10;
*
TabR = QUADRATU 'LOGN' muR sigR NpR;
TabS = QUADRATU 'LOGN' muS sigS NpS;
*
mr sr rr br = PARASTAT TabR;
ms ss rs bs = PARASTAT TabS;
*
*
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
MESS '%%% CALCUL DES PARAMETRES STATISTIQUES ';
MESS '%%% MOYENNE       ' mr ms;
MESS '%%% ECART_TYPE    ' sr ss;
MESS '%%% SYMETRIE      ' rr rs;
MESS '%%% APLATISSEMENT ' br bs;
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
*
*
* Calcul de la proba de défaillance et de l indice de fiabilité
Pf_RS = PROBABRS mr sr rr br ms ss rs bs  ;
Beta_RS = INDIBETA -20. 20. Pf_RS;
*
* Calcul des erreurs
*
ErBeta = 100 *  (ABS ((Beta_RS - Beta_th) / Beta_th));
*
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
MESS '                       RESULTATS';
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
MESS ' ';
MESS 'Probabilite de defaillance par PROBABRS      ' Pf_RS;
MESS 'Probabilite de defaillance theorique         ' Pf_th;
MESS ' ';
MESS 'Indice de fiabilite par PROBABRS       ' Beta_RS;
MESS 'Indice de fiabilite theorique          ' Beta_th;
MESS ' ';
MESS '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%';
MESS ' ';
MESS '  ERREUR par rapport a Beta Theorique  ' ErBeta '%';
*==================================================================*
*                  code fonctionnement                             *
*==================================================================*
*
*     L'ecart maximum entre valeur theorique et calculee doit etre
* inferieure a 0.2 %.
*
SI (ErBeta <EG 0.2);
    ERRE 0;
SINON;
    ERRE 5;
FINSI;
*
*==================================================================*
*                 Temps de calcul et fin                           *
*==================================================================*
*
SAUT 1 LIGN;
OPTI ECHO 1;
*
fin;






