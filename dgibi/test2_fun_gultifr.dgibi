*
**********************************************************
*  Test sur la procedure G_ULTIFR (fonction pour determiner 
*  la position de l'etat de contraint courant par rapport à la surface 
*  de capacité
*
*  Test pour l'option poutre courte
*
*  b=0.3
*  h=0.4
*  c=0.025
*  armature long 4f12
*  cadre phi 8
*  s = 0.95 m
*  ly=1.0
*  lz=1.5
*  
*
*  Develloppé par Alberto FRAU /DEN/DANS/DM2S/SEMT/EMSI
*              et Nicolas ILE  /DEN/DANS/DM2S/SEMT/EMSI
*
**********************************************************
*
*  donnée d'entrée
B_Y1 = 0.3;
B_Z1 = 0.4;
LTOT1Y = 1.0;
LTOT1Z = 1.5;
S_CAD1 = 0.95;
PHI_LON1 = 12.0;
ENR1 = 0.025;
A_CADRE1 = (2.0)*((PI)*((0.004)**(2.0)));
A_CADRE2 = (2.0)*((PI)*((0.004)**(2.0)));
*
* calcul des armatures longitudinales
ALL1 = (4.0)*((PI)*(((PHI_LON1*PHI_LON1)/(1.E6))/(4.0)));
* om_sy et om_sz
OM_SY1 = ((ALL1)*(500.E6))/(((B_Y1)*(B_Z1))*(25.E6));
OM_SZ1 = ((ALL1)*(500.E6))/(((B_Y1)*(B_Z1))*(25.E6));
* om_wy et om_wz
OM_WZ1 = ((A_CADRE1)*(500.E6))/(((B_Y1)*(S_CAD1))*(25.E6));
OM_WY1 = ((A_CADRE2)*(500.E6))/(((B_Z1)*(S_CAD1))*(25.E6));
* lamy ety lamz
LAMB_Y1 = ((LTOT1Z)/(B_Y1));
LAMB_Z1 = ((LTOT1Y)/(B_Z1));
* chiy et chiz
CHI_Z1 = ((B_Z1 - ((2.0)*(ENR1)))/(B_Z1));
CHI_Y1 = ((B_Y1 - ((2.0)*(ENR1)))/(B_Y1));
* test pour savoir si on est dans le cas du poteau court ou long
VAL_TT1 = LAMB_Y1 <EG (OM_SY1/OM_WY1);
VAL_TT2 = LAMB_Z1 <EG (OM_SZ1/OM_WZ1);
* calcul de Vymax et Vzmax
TAN_Y1 = (((LAMB_Y1**2.0) + 1.0)**(0.5)) - LAMB_Y1;
TAN_Z1 = (((LAMB_Z1**2.0) + 1.0)**(0.5)) - LAMB_Z1;
VY_MAX1 = OM_WY1*CHI_Y1 + ((0.5 - OM_WY1)*(TAN_Y1));
VZ_MAX1 = OM_WZ1*CHI_Z1 + ((0.5 - OM_WZ1)*(TAN_Z1));
VY_MAX1 = ((VY_MAX1)*(((B_Y1)*(B_Z1))*(25.e6)));
VZ_MAX1 = ((VZ_MAX1)*(((B_Y1)*(B_Z1))*(25.e6)));
*
* calcul des differentes valeur de N pour les trois zone dans le
*   diagramme d'interaction
N_TRAC1 = ((OM_SY1)*(((B_Y1)*(B_Z1))*(25.e6)));
N_COMP1 = ((1.0 + OM_SY1)*(((B_Y1)*(B_Z1))*(-25.e6)));
N_LIMY1 = 0.5 + OM_SY1 - ((OM_WY1)*(LAMB_Y1 + 1.0 - CHI_Y1));
N_LIMY2 = 0.5 - OM_SY1 + ((OM_WY1)*(LAMB_Y1 - 1.0 + CHI_Y1));
N_LIMZ1 = 0.5 + OM_SZ1 - ((OM_WZ1)*(LAMB_Z1 + 1.0 - CHI_Z1));
N_LIMZ2 = 0.5 - OM_SZ1 + ((OM_WZ1)*(LAMB_Z1 - 1.0 + CHI_Z1));
N_LIMY1 = ((N_LIMY1)*(((B_Y1)*(B_Z1))*(-25.e6)));
N_LIMY2 = ((N_LIMY2)*(((B_Y1)*(B_Z1))*(-25.e6)));
N_LIMZ1 = ((N_LIMZ1)*(((B_Y1)*(B_Z1))*(-25.e6)));
N_LIMZ2 = ((N_LIMZ2)*(((B_Y1)*(B_Z1))*(-25.e6)));
*
* Test1 (Zone 2) Vz= Vzmax N=(N1z+N2z)/2.0 
******************************************************************
TB1                     = TABLE;
TB1.'TYPE'              = CHAINE 'PT_COURT';
TB1.'NN'                = (N_LIMZ1 + N_LIMZ2)/(2.0);
TB1.'VY'                = 0.0;
TB1.'VZ'                = VZ_MAX1;
TB1.'MT'                = 0.0;
TB1.'MY'                = 0.0;
TB1.'MZ'                = 0.0;
TB1.'BY'                = B_Y1;
TB1.'BZ'                = B_Z1;
TB1.'FCD'               = 25.e6;
TB1.'FSD'               = 500.e6;
TB1.'WSY'               = OM_SY1;
TB1.'WSZ'               = OM_SZ1;
TB1.'WWY'               = OM_WY1;
TB1.'WWZ'               = OM_WZ1;
TB1.'LY'                = LAMB_Y1;
TB1.'LZ'                = LAMB_Z1;
TB1.'XIY'               = CHI_Y1;
TB1.'XIZ'               = CHI_Z1;
*
VAL1Z = G_ULTIFR TB1;
*
* Test2 (Zone 2) Vz= Vzmax N=(N1z+N2z)/2.0 
TB1.'NN'                = (N_LIMZ1);
VAL2Z = G_ULTIFR TB1;
*
TB1.'NN'                = (N_LIMZ2);
VAL3Z = G_ULTIFR TB1;
*
* Test3 N=Ntrac
******************************************************************
*
TB1.'NN'                = N_TRAC1;
TB1.'VY'                = 0.0;
TB1.'VZ'                = 0.0;
VAL4 = G_ULTIFR TB1;
*
* Test4 N=Ntrac
******************************************************************
*
TB1.'NN'                = N_COMP1;
TB1.'VY'                = 0.0;
TB1.'VZ'                = 0.0;
VAL5 = G_ULTIFR TB1;
*
*
*
*
SI ((ABS(VAL1Z)) > 1.E-8);
  ERRE 5;
FINSI;
*
SI ((ABS(VAL2Z)) > 1.E-8);
  ERRE 5;
FINSI;
*
SI ((ABS(VAL3Z)) > 1.E-8);
  ERRE 5;
FINSI;
*
*
*
*
SI ((ABS(VAL4)) > 1.E-8);
  ERRE 5;
FINSI;
SI ((ABS(VAL5)) > 1.E-8);
  ERRE 5;
FINSI;
*
*
*
*
FIN;





