SMALL = 1.E-5 ;
$$ = EXTR (CHAI '''') 1 1 ;
OPTI 'DIME' 3 'ELEM' 'CUB8' 'EPSI' 'LINEAIRE' ;
*
* Calcul complet ? (si FAUX: test de non-regression rapide)
COMPLET = FAUX ;
*
* Affichage graphique ?
GRAPH = FAUX ;
*
* Graine du generateur pseudo-aleatoire
GRAINE = 100 ;
*
* Frequence de la sortie VTK (le dossier "pod_pout_elas" doit exister)
* [0 => PAS DE SORTIE VTK]
FVTK = 0 ;
*
* Parametres geometriques + mecaniques
RH = 8.E3 ;
NU = 0.3 ;
SS = 0.1 ;
II = 1.E-6 ;
EE = 2.E11 ;
HH = 3. ;
FF = 100. ;
*
* Nombre d'elements et densites
SI COMPLET ;
   NBELEM = 20 ;
   DINIT = 0.005 ;
   DFINA = 0.2 ;
SINON ;
   NBELEM = 3 ;
   DINIT = 0.005 ;
   DFINA = 2. ;
FINS ;
*
* Nombre de modes calcules
SI COMPLET ;
   NBMODES = 10 ;
SINON ;
   NBMODES = 4 ;
FINS ;
*
* Pas de temps
SI COMPLET ;
   DT = 0.01 ;
SINON ;
   DT = 0.05 ;
FINS ;
*
* Duree chargement
SI COMPLET ;
   TCHARG = 10. ;
SINON ;
   TCHARG = 2. ;
FINS ;
*
* Duree totale
SI COMPLET ;
   TFINAL = 50. ;
SINON ;
   TFINAL = 10. ;
FINS ;
*
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |                        S I M U L A T I O N                        |
* |                                                                   |
* +-------------------------------------------------------------------+
*
*
OPTI 'ECHO' 0 ;
*
*
* *********************************************************************
*                C R E A T I O N   D U   M A I L L A G E
* *********************************************************************
*
PIED = 0. 0. 0. ;
TETE = 0. 0. HH ;
POUT = PIED DROI (-1*NBELEM) TETE 'DINI' DINIT 'DFIN' DFINA ;
* POUT = PIED DROI NBELEM TETE ;
*
$POUT = MODE POUT 'MECANIQUE' 'ELASTIQUE' 'POUT' ;
MAPOU = MATE $POUT 'YOUN' EE
                   'NU'   NU
                   'RHO'  RH
                   'SECT' SS
                   'INRY' II
                   'INRZ' II
                   'TORS' (2.*II) ;
*
POUT1 = CHAN 'POI1' POUT ;
NBNO1 = NBEL POUT1 ;
*
SI GRAPH ;
   TRAC (POUT ET (COUL 'ROUG' (MANU 'POI1' PIED))
              ET (COUL 'VERT' (MANU 'POI1' PIED))) 'NOEU' ;
FINS ;
*
*
* *********************************************************************
*              C O N D I T I O N S   A U X   L I M I T E S
* *********************************************************************

RICL1 = BLOQ PIED 'DEPL' 'ROTA' ;
*
*
*
* *********************************************************************
*                C O N D I T I O N S   I N I T I A L E S
* *********************************************************************
*
LCO = MOTS 'UX' 'UY' 'UZ' 'RX' 'RY' 'RZ' ;
NCO = DIME LCO ;
UN0 = MANU 'CHPO' POUT LCO (PROG NCO*0.) ;
*
*
*
* *********************************************************************
*     M A T R I C E S   D E   M A S S E   E T   D E   R A I D E U R
* *********************************************************************
*
MASS1 = MASS $POUT MAPOU ;
RIGI1 = RIGI $POUT MAPOU ;
*
*
*
* *********************************************************************
*        C H A R G E M E N T   A L E A T O I R E   E N   T E T E
* *********************************************************************
*
CFORX1 = MANU 'CHPO' 'NATU' 'DISCRET' TETE 'FX' FF ;
CFORY1 = MANU 'CHPO' 'NATU' 'DISCRET' TETE 'FY' FF ;
*
LTEMP1 = PROG 0. 'PAS' DT TCHARG ;
NTEMP1 = DIME LTEMP1 ;
LFORX1 = BRUI 'BLAN' 'GAUS' 0. 1. NTEMP1 GRAINE ;
LFORY1 = BRUI 'BLAN' 'GAUS' 0. 1. NTEMP1 GRAINE ;
*
LTEMP2 = PROG (TCHARG+DT) 'PAS' DT TFINAL ;
NTEMP2 = DIME LTEMP2 ;
LFORX2 = PROG NTEMP2*0. ;
LFORY2 = PROG NTEMP2*0. ;
*
LTEMP0 = LTEMP1 ET LTEMP2 ;
EFORX1 = EVOL 'ROUG' 'MANU' LTEMP0 (LFORX1 ET LFORX2) ;
EFORY1 = EVOL 'VERT' 'MANU' LTEMP0 (LFORY1 ET LFORY2) ;
CHAR1 = (CHAR CFORX1 EFORX1) ET (CHAR CFORY1 EFORY1) ;
*
*
*
* *********************************************************************
*                           E X E C U T I O N
* *********************************************************************
*
TAB1 = TABL 'DYNAMIC' ;
TAB1.'DEPL' = UN0 ;
TAB1.'VITE' = UN0 ;
TAB1.'MASS' = MASS1 ET RICL1 ;
TAB1.'RIGI' = RIGI1 ;
TAB1.'CHAR' = CHAR1 ;
TAB1.'TEMPS_CALCULES' = LTEMP0 ;
TAB1.'PAS_SAUVES' = 1  ;
*
SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'NOMBRE DE NOEUDS       = ' NBNO1 ;
MESS 'NOMBRE DE PAS DE TEMPS = ' (NTEMP1+NTEMP2) ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
DYNAMIC TAB1 ;
*
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |                   P O S T - T R A I T E M E N T                   |
* |                                                                   |
* +-------------------------------------------------------------------+
*
*
SI GRAPH ;
   SI COMPLET ;
      XMIN1 = 48. ;
      XMAX1 = 49. ;
   SINON ;
      XMIN1 = 8. ;
      XMAX1 = 9. ;
   FINS ;
FINS ;

* MATR1 = MASS1 ;
MATR1 = RIGI1 ;
*
*
*
* ====================================================
* EVOLUTIONS TEMPORELLES DE LA FORCE ET DU DEPLACEMENT
* ====================================================
*
LDEP1 = SUIT ;
TRESU1 = TAB1.'RESULTATS' ;
NRESU1 = DIME TRESU1 ;
LDEPX1 = PROG ;
LDEPY1 = PROG ;
REPE II NRESU1 ;
   TPS1 = TRESU1.&II.'TEMP' ;
   DEP1 = TRESU1.&II.'DEPL' ;
   SI (&II > NTEMP1) ;
      LDEP1 = LDEP1 ET DEP1 ;
   FINS ;
*
*  SORTIE VTK DU TRANSITOIRE
   SI (FVTK > 0) ;
      SI (EGA ((&II - 1) @MOD FVTK) 0) ;
        OPTI 'SORT' 'pod_pout_elas/DEPL' ;
        SORT 'VTK' POUT DEP1 'DEPL' 'TEMP' TPS1 ;
      FINS ;
   FINS ;
*
   LDEPX1 = LDEPX1 ET (EXTR DEP1 TETE 'UX') ;
   LDEPY1 = LDEPY1 ET (EXTR DEP1 TETE 'UY') ;
FIN II ;
*
EDEPX1 = EVOL 'ROUG' 'MANU' LTEMP0 LDEPX1 ;
EDEPY1 = EVOL 'VERT' 'MANU' LTEMP0 LDEPY1 ;
*
SI GRAPH ;
   TLEG1 = TABL ;
   TLEG1.'TITRE' = TABL ;
   TLEG1.'TITRE' . 1 = 'X' ;
   TLEG1.'TITRE' . 2 = 'Y' ;
*
   DESS (EFORX1 ET EFORY1) 'TITR' 'Chargement applique en tete'
                           'TITX' 'TEMPS (S)'
                           'TITY' 'FORCE (N)'
                           'POSX' 'EXCE'
                           'POSY' 'EXCE'
                           'LEGE' TLEG1 ;
*
   DESS (EDEPX1 ET EDEPY1) 'TITR' 'Deplacement observe en tete'
                           'TITX' 'TEMPS (S)'
                           'TITY' 'DEPLACEMENT (M)'
                           'POSX' 'EXCE'
                           'POSY' 'EXCE'
                           'LEGE' TLEG1 ;
FINS ;
*
*
*
* ======================================================
* TRAJECTOIRE DE LA TETE DE LA POUTRE DANS LE PLAN (OXY)
* ======================================================
*
ETRAJ1 = EVOL 'ROUG' 'MANU' LDEPX1 LDEPY1 ;
*
SI GRAPH ;
   TLEG2 = TABL ;
   TLEG2.'TITRE' = TABL ;
   TLEG2.'TITRE' . 1 = MOT 'REGIME TRANSITOIRE' ;
   TLEG2.'TITRE' . 2 = MOT 'REGIME PERMANENT' ;
   TLEG2.'FINAL' = TABL ;
   TLEG2.'FINAL' . 1 = NTEMP1 ;
   TLEG2.'INITIAL' = TABL ;
   TLEG2.'INITIAL' . 2 = ENTI 'PROC' NTEMP1 ;
   TLEG2 . 1 = 'TIRR' ;
*
   DESS ((COUL 'ROSE' ETRAJ1) ET ETRAJ1)
                           'TITR' 'Trajectoire observee en tete'
                           'TITX' 'X (M)'
                           'TITY' 'Y (M)'
                           'POSX' 'EXCE'
                           'POSY' 'EXCE'
                           'CARR' 'GRIL'
                           'LEGE' TLEG2 ;
FINS ;
*
*
*
* =======================================================
* CALCUL ET VISUALISATION DES MODES ET FREQUENCES PROPRES
* =======================================================
*
* EN CALCULANT LA TRANSFORMEE DE FOURIER
NTFR1 = ENTI 'SUPE' ((LOG NRESU1) / (LOG 2)) ;
ETFR1 = COUL 'JAUN' (EXTR (TFR NTFR1 EDEPX1 'MOPH') 'COURBE' 1) ;
*
* EN RESOLVANT LE PROBLEME AUX VALEURS PROPRES K-W^2*M = 0
DUMMY FREQ1 DUMMY = MAXI ETFR1 ;
TVIB1 = VIBR 'IRAM' FREQ1 NBMODES (RIGI1 ET RICL1) MASS1  'LM' ;
TVIB1 = NNOR 'EUCL' TVIB1 MATR1 ;
*
* AFFICHAGE GRAPHIQUE
SI GRAPH ;
   EXPLORER TVIB1 (MOTS 'TABL') ;
   DESS ETFR1 'TITR' 'Transformee de Fourier du deplacement en tete'
                     'TITX' 'FREQUENCE (HZ)'
                     'TITY' 'MODULE'
                     'POSX' 'EXCE'
                     'POSY' 'EXCE'
                     'LOGY'
                     'GRIL' ;
   EXPLORER TVIB1 (MOTS 'DEFO' 'DEF0') ;
FINS ;
*
************************************************************************
* VTK_MOD = SORTIE AU FORMAT VTK DE LA TABLE TAB1 DE SOUS-TYPE
*           'BASE_MODALE' A L'EMPLACEMENT FIC1
DEBP VTK_MOD TAB1*'TABLE' FIC1*'MOT' ;
   TAB2 = TAB1.'MODES' ;
   NTAB2 = (DIME TAB2) - 2 ;
   REPE II NTAB2 ;
      OPTI 'SORT' FIC1 ;
      DEP1 = EXCO (TAB2.&II.'DEFORMEE_MODALE') (MOTS 'UX' 'UY' 'UZ') ;
      SORT 'VTK' POUT DEP1 'TEMP' &II ;
   FIN II ;
FINP ;
************************************************************************
*
* SORTIE VTK
SI (FVTK NEG 0) ;
   VTK_MOD TVIB1 'pod_pout_elas/VIBR' ;
FINS ;
*
*
*
* =====================================
* CALCUL ET VISUALISATION DES MODES POD
* =====================================
*
LPERM1 = NTEMP1 + (LECT 1 'PAS' 1 NTEMP2) ;
LPERM2 = NTEMP1 + (ENTI (PROG 1 'PAS' 20 NTEMP2)) ;
*
TPOD1 = POD TAB1 LPERM2 'SNAP' MATR1 NBMODES 'TBAS' POUT ;
TPOD2 = POD TAB1 LPERM2 'CLAS' MATR1 NBMODES 'TBAS' POUT ;
TPOD3 = POD TAB1 LPERM2 'SNAP' NBMODES 'TBAS' POUT ;
TPOD4 = POD TAB1 LPERM2 'CLAS' NBMODES 'TBAS' POUT ;
*
TPOD1 = NNOR 'EUCL' TPOD1 MATR1 ;
TPOD2 = NNOR 'EUCL' TPOD2 MATR1 ;
TPOD3 = NNOR 'EUCL' TPOD3       ;
TPOD4 = NNOR 'EUCL' TPOD4       ;
*
* AFFICHAGE GRAPHIQUE
SI GRAPH ;
   EXPLORER TPOD1 (MOTS 'TABL') ;
   EXPLORER TPOD1 (MOTS 'DEFO' 'DEF0') ;
FINS ;
*
* SORTIE VTK
SI (FVTK NEG 0) ;
   VTK_MOD TPOD1 'pod_pout_elas/SNAP_RIG' ;
   VTK_MOD TPOD2 'pod_pout_elas/CLAS_RIG' ;
   VTK_MOD TPOD3 'pod_pout_elas/SNAP' ;
   VTK_MOD TPOD4 'pod_pout_elas/CLAS' ;
FINS ;
*
*
*
* ================================
* HISTOGRAMMES DES VALEURS PROPRES
* ================================
*
************************************************************************
* TAB2LIST = EXTRAIT DE LA TABLE TAB1 DE SOUS-TYPE 'BASE_MODALE' LE
*            LISTCHPO DES NB1 PREMIERS VECTEURS PROPRES ET LE LISTREEL
*            DES NB1 PREMIERES VALEURS PROPRES
DEBP TAB2LIST TAB1*'TABLE' NB1*'ENTIER' ;
   LVEC1 = SUIT ;
   LVAL1 = PROG ;
   REPE K NB1 ;
      VEC1  = TAB1.'MODES'.&K.'DEFORMEE_MODALE' ;
      VAL1  = (2.*PI*TAB1.'MODES'.&K.'FREQUENCE') ** 2 ;
      LVEC1 = LVEC1 ET VEC1 ;
      LVAL1 = LVAL1 ET VAL1 ;
   FIN K ;
FINP LVEC1 LVAL1 ;
************************************************************************
*
VECVIB1 VALVIB1 = TAB2LIST TVIB1 NBMODES ;
VECPOD1 VALPOD1 = TAB2LIST TPOD1 NBMODES ;
VECPOD2 VALPOD2 = TAB2LIST TPOD2 NBMODES ;
VECPOD3 VALPOD3 = TAB2LIST TPOD3 NBMODES ;
VECPOD4 VALPOD4 = TAB2LIST TPOD4 NBMODES ;

SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'VALEURS PROPRES :' ;
MESS ' ' ;
MESS 'VIBR' ; LIST VALVIB1 ;
MESS ' ' ;
MESS 'POD "SNAPSHOTS" MATR1' ; LIST VALPOD1 ;
MESS ' ' ;
MESS 'POD "CLASSIQUE" MATR1' ; LIST VALPOD2 ;
MESS ' ' ;
MESS 'POD "SNAPSHOTS"' ; LIST VALPOD3 ;
MESS ' ' ;
MESS 'POD "CLASSIQUE"' ; LIST VALPOD4 ;
MESS ' ' ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
*
SI GRAPH ;
   THIST = TABL ;
   THIST.'NOMS' = TABL ;
   REPE K NBMODES ;
      THIST.'NOMS'.&K = &K ;
   FIN K ;
*
   EV1 TA1 = @HISTOGR VALVIB1 THIST VRAI ;
   EV2 TA2 = @HISTOGR VALPOD1 THIST VRAI ;
   EV3 TA3 = @HISTOGR VALPOD3 THIST VRAI ;
*
   YMIN1 = MINI VALVIB1 ;
   YMAX1 = MAXI VALVIB1 ;
   DESS EV1 'TITR' (CHAI 'VALEURS PROPRES : VIBR')
            'TITX' ' ' 'TITY' 'VALEUR PROPRE'
            'LOGY' 'YBOR' YMIN1 YMAX1 'XBOR' 0. NBMODES 'XGRA' NBMODES
            'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' TA1 ;
*
   YMIN2 = MINI VALPOD1 ;
   YMAX2 = MAXI VALPOD1 ;
   DESS EV2 'TITR' (CHAI 'VALEURS PROPRES : POD AVEC MATRICE')
            'TITX' ' ' 'TITY' 'VALEUR PROPRE'
            'LOGY' 'YBOR' YMIN2 YMAX2 'XBOR' 0. NBMODES 'XGRA' NBMODES
            'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' TA2 ;
*
   YMIN3 = MINI VALPOD3 ;
   YMAX3 = MAXI VALPOD3 ;
   DESS EV3 'TITR' (CHAI 'VALEURS PROPRES : POD SANS MATRICE')
            'TITX' ' ' 'TITY' 'VALEUR PROPRE'
            'LOGY' 'YBOR' YMIN3 YMAX3 'XBOR' 0. NBMODES 'XGRA' NBMODES
            'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' TA3 ;
FINS ;
*
*
*
* ====================================
* CONFRONTATION DES MODES FONDAMENTAUX
* ====================================
*
VIB1 = EXTR VECVIB1 1 ;
POD1 = EXTR VECPOD1 1 ;
POD2 = EXTR VECPOD2 1 ;
POD3 = EXTR VECPOD3 1 ;
POD4 = EXTR VECPOD4 1 ;
*
LVIB1 = EXTR ((PSCA VIB1 VIB1 LCO LCO) ** 0.5) 'VALE' POUT1 ;
LPOD1 = EXTR ((PSCA POD1 POD1 LCO LCO) ** 0.5) 'VALE' POUT1 ;
LPOD2 = EXTR ((PSCA POD2 POD2 LCO LCO) ** 0.5) 'VALE' POUT1 ;
LPOD3 = EXTR ((PSCA POD3 POD3 LCO LCO) ** 0.5) 'VALE' POUT1 ;
LPOD4 = EXTR ((PSCA POD4 POD4 LCO LCO) ** 0.5) 'VALE' POUT1 ;
*
LVIB1 = LVIB1 / (MAXI LVIB1) ;
LPOD1 = LPOD1 / (MAXI LPOD1) ;
LPOD2 = LPOD2 / (MAXI LPOD2) ;
LPOD3 = LPOD3 / (MAXI LPOD3) ;
LPOD4 = LPOD4 / (MAXI LPOD4) ;
*
LZZ = EXTR (COOR 3 POUT) 'VALE' POUT1 ;
EVIB1 = EVOL 'TURQ' 'MANU' LVIB1 LZZ ;
EPOD1 = EVOL 'ROUG' 'MANU' LPOD1 LZZ ;
EPOD2 = EVOL 'ORAN' 'MANU' LPOD2 LZZ ;
EPOD3 = EVOL 'VERT' 'MANU' LPOD3 LZZ ;
EPOD4 = EVOL 'OCEA' 'MANU' LPOD4 LZZ ;
*
* QUANTIFICATION DE L'ECART
ECAR1 = (SOMM ((LVIB1 - LPOD1) ** 2)) / NBNO1 ;
ECAR2 = (SOMM ((LVIB1 - LPOD2) ** 2)) / NBNO1 ;
ECAR3 = (SOMM ((LVIB1 - LPOD3) ** 2)) / NBNO1 ;
ECAR4 = (SOMM ((LVIB1 - LPOD4) ** 2)) / NBNO1 ;

SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'MESURE DE L' $$ 'ECART ENTRE LES MODES FONDAMENTAUX :' ;
MESS '    VIBR / POD "SNAPSHOTS"       =>  ' ECAR1 ;
MESS '    VIBR / POD "SNAPSHOTS" MATR1 =>  ' ECAR2 ;
MESS '    VIBR / POD "CLASSIQUE"       =>  ' ECAR3 ;
MESS '    VIBR / POD "CLASSIQUE" MATR1 =>  ' ECAR4 ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
* AFFICHAGE GRAPHIQUE
SI GRAPH ;
   TLEG3 = TABL ;
   TLEG3 . 3 = 'TIRR' ;
   TLEG3 . 5 = 'TIRR' ;
   TLEG3.'TITRE' = TABL ;
   TLEG3.'TITRE' . 1 = MOT 'VIBR' ;
   TLEG3.'TITRE' . 2 = MOT 'POD "SNAPSHOTS" RIGI' ;
   TLEG3.'TITRE' . 3 = MOT 'POD "CLASSIQUE" RIGI' ;
   TLEG3.'TITRE' . 4 = MOT 'POD "SNAPSHOTS"' ;
   TLEG3.'TITRE' . 5 = MOT 'POD "CLASSIQUE"' ;
*
   DESS (EVIB1 ET EPOD1 ET EPOD2 ET EPOD3 ET EPOD4)
                         'TITR' 'Comparaison des modes fondamentaux'
                         'TITX' 'DEFORMEE (M)'
                         'TITY' 'ALTITUDE (M)'
                         'POSX' 'EXCE'
                         'POSY' 'EXCE'
                         'XBOR' 0. 1.
                         'GRIL' 'TIRR'
                         'LEGE' TLEG3 ;
FINS ;
*
*
*
* ================================
* VERIFICATION DE L'ORTHONORMALITE
* ================================
*
************************************************************************
* TESTBAS1 = AFFICHE LES PRODUITS SCALAIRES (AVEC OU SANS MATRICE MATR1)
*            ENTRE LES VECTEURS DE BASE LVEC1 PRIS DEUX A DEUX
DEBP TESTBAS1 LVEC1*'LISTCHPO' RIGI1/'RIGIDITE' MTIT1*'MOT' ;
   ZRIGI1 = EXIS RIGI1 ;
   SI (NON ZRIGI1) ;
      COMP1 = EXTR (EXTR LVEC1 1) 'COMP' ;
   FINS ;
   LPS1 = PROG ;
   NVEC1 = DIME LVEC1 ;
   REPE I NVEC1 ;
      VEC1 = EXTR LVEC1 &I ;
      REPE J NVEC1 ;
         VEC2 = EXTR LVEC1 &J ;
         SI ZRIGI1 ;
            XPS1 = YTMX RIGI1 VEC1 VEC2 ;
         SINON ;
            XPS1 = XTY VEC1 VEC2 COMP1 COMP1 ;
         FINS ;
         LPS1 = LPS1 ET XPS1 ;
      FIN J ;
   FIN I ;
*
   MTIT2 = CHAI 'VERIFICATION DE L' $$  'ORTHOGONALITE DES MODES : ' ;
   TABLO2D NVEC1 NVEC1 LPS1 (CHAI MTIT2 MTIT1) ;
*    TABLO3D NVEC1 NVEC1 LPS1 MTIT1 ;
FINP ;
************************************************************************
*
* EN THEORIE :  (PHI_i,PHI_j)=d_ij
SI GRAPH ;
   TESTBAS1 VECVIB1 MATR1 'VIBR' ;
   TESTBAS1 VECPOD1 MATR1 'POD "SNAPSHOTS" MATR1' ;
   TESTBAS1 VECPOD2 MATR1 'POD "CLASSIQUE" MATR1' ;
   TESTBAS1 VECPOD3       'POD "SNAPSHOTS"' ;
   TESTBAS1 VECPOD4       'POD "CLASSIQUE"' ;
FINS ;
*
*
*
* =============================================
* VERIFICATION DE LA NON-CORRELATION TEMPORELLE
* =============================================
*
************************************************************************
* TESTBAS2 = AFFICHE LE COEFFICIENT DE CORRELATION ENTRE LES EVOLUTIONS
*            TEMPORELLES DES COEFFICIENTS DE PROJECTION PRIS DEUX A DEUX
DEBP TESTBAS2 TBAS1*'TABLE' RIGI1/'RIGIDITE' ZERO1*'FLOTTANT'
              MTIT1*'MOT' ;
   SI (EXIS RIGI1) ;
      EVTOT1 = EVOL 'PJBA' TAB1 'DEPL' LPERM1 TBAS1 RIGI1 ;
   SINON ;
      EVTOT1 = EVOL 'PJBA' TAB1 'DEPL' LPERM1 TBAS1 ;
   FINS ;
   LPS1 = PROG ;
   NMOD1 = DIME EVTOT1 ;
   NTPS1 = DIME LPERM1 ;
   TEMP1 = (NTPS1 - 1) * DT ;
   REPE I NMOD1 ;
      COEF1 = EXTR EVTOT1 'COUR' &I ;
      REPE J NMOD1 ;
         COEF2 = EXTR EVTOT1 'COUR' &J ;
         COR12 = (INTG (COEF1 * COEF2)) / TEMP1 ;
         LPS1 = LPS1 ET COR12 ;
      FIN J ;
   FIN I ;
*
   MTIT2 = CHAI 'VERIFICATION DE LA NON CORRELATION DES MODES : ' ;
*    TABLO2D NMOD1 NMOD1 LPS1 (CHAI MTIT2 MTIT1) ;
   TABLO3D 'LOGA' ZERO1 NMOD1 NMOD1 LPS1 (CHAI MTIT2 MTIT1) ;
FINP ;
************************************************************************
*
* EN THEORIE (POUR LA POD) :  moyt(ALPHA_i(t)*ALPHA_j(t))=d_ij*lambda_i
SI GRAPH ;
   TESTBAS2 TVIB1 MATR1 (MINI VALVIB1) 'VIBR' ;
   TESTBAS2 TPOD1 MATR1 (MINI VALPOD1) 'POD "SNAPSHOTS" MATR1' ;
   TESTBAS2 TPOD2 MATR1 (MINI VALPOD2) 'POD "CLASSIQUE" MATR1' ;
   TESTBAS2 TPOD3       (MINI VALPOD3) 'POD "SNAPSHOTS"' ;
   TESTBAS2 TPOD4       (MINI VALPOD4) 'POD "CLASSIQUE"' ;
FINS ;
*
*
*
* ==============================================================
* RECONSTRUCTION DU DEPLACEMENT EN TETE SUR LES N PREMIERS MODES
* ==============================================================
*
PJBVIB1 = PJBA TAB1 'DEPL' LPERM1 TVIB1 MATR1 ;
PJBPOD1 = PJBA TAB1 'DEPL' LPERM1 TPOD1 MATR1 ;
PJBPOD2 = PJBA TAB1 'DEPL' LPERM1 TPOD2 MATR1 ;
PJBPOD3 = PJBA TAB1 'DEPL' LPERM1 TPOD3 ;
PJBPOD4 = PJBA TAB1 'DEPL' LPERM1 TPOD4 ;
*
SI GRAPH ;
   TLEG4 = TABL ;
   TLEG4.'TITRE' = TABL ;
   TLEG4 . 4 = 'TIRR' ;
   TLEG4 . 6 = 'TIRR' ;
   TLEG4.'TITRE' . 1 = MOT 'Simulation' ;
   TLEG4.'TITRE' . 2 = MOT 'VIBR' ;
   TLEG4.'TITRE' . 3 = MOT 'POD "SNAPSHOTS" RIGI1' ;
   TLEG4.'TITRE' . 4 = MOT 'POD "CLASSIQUE" RIGI1' ;
   TLEG4.'TITRE' . 5 = MOT 'POD "SNAPSHOTS"' ;
   TLEG4.'TITRE' . 6 = MOT 'POD "CLASSIQUE"' ;
*
   EV1 = EVOL 'BLAN' 'TEMP' TAB1 'DEPL' LPERM1 'UX' TETE ;
   REPE II NBMODES ;
      EV2 = EVOL 'TURQ' 'RECO' PJBVIB1 LTEMP2 TVIB1 &II 'UX' TETE ;
      EV3 = EVOL 'ROUG' 'RECO' PJBPOD1 LTEMP2 TPOD1 &II 'UX' TETE ;
      EV4 = EVOL 'ORAN' 'RECO' PJBPOD2 LTEMP2 TPOD2 &II 'UX' TETE ;
      EV5 = EVOL 'VERT' 'RECO' PJBPOD3 LTEMP2 TPOD3 &II 'UX' TETE ;
      EV6 = EVOL 'OCEA' 'RECO' PJBPOD4 LTEMP2 TPOD4 &II 'UX' TETE ;
*
      DESS (EV1 ET EV2 ET EV3 ET EV4 ET EV5 ET EV6)
            'TITR' (CHAI 'RECONSTRUCTION SUR ' &II ' MODE(S)')
            'TITX' 'TEMPS (S)'
            'TITY' 'DEPL. TETE (M)'
            'XBOR' XMIN1 XMAX1
            'POSX' 'EXCE'
            'POSY' 'EXCE'
            'LEGE' TLEG4 ;
   FIN II ;
FINS ;
*
*
*
* ================================================================
* RECONSTRUCTION DE L'ENERGIE POTENTIELLE SUR LES N PREMIERS MODES
* ================================================================
*
NMOD1 = NBMODES + 1 ;
NBAR1 = (NMOD1*5) + 1 ;
LHIS1 = PROG NBAR1*0. ;
NBAR2 = (4*NBMODES) + 1 ;
LHIS2 = PROG NBAR2*0. ;
*
REPE II NBMODES ;
   LVIB1 = RECO PJBVIB1 TVIB1 &II ;
   LPOD1 = RECO PJBPOD1 TPOD1 &II ;
   LPOD2 = RECO PJBPOD2 TPOD2 &II ;
   LPOD3 = RECO PJBPOD3 TPOD3 &II ;
   LPOD4 = RECO PJBPOD4 TPOD4 &II ;
*
*  CALCUL DE L'ENERGIE EN FONCTION DU TEMPS
   LXDEP1 LXVIB1 LXPOD1 LXPOD2 LXPOD3 LXPOD4 = VIDE 'LISTREEL'*6 ;
   REPE IT NTEMP2 ;
      DEP1 = EXTR LDEP1 &IT ;
      VIB1 = EXTR LVIB1 &IT ;
      POD1 = EXTR LPOD1 &IT ;
      POD2 = EXTR LPOD2 &IT ;
      POD3 = EXTR LPOD3 &IT ;
      POD4 = EXTR LPOD4 &IT ;
*
      XDEP1 = 0.5*(XTMX DEP1 MATR1) ;
      XVIB1 = 0.5*(XTMX VIB1 MATR1) ;
      XPOD1 = 0.5*(XTMX POD1 MATR1) ;
      XPOD2 = 0.5*(XTMX POD2 MATR1) ;
      XPOD3 = 0.5*(XTMX POD3 MATR1) ;
      XPOD4 = 0.5*(XTMX POD4 MATR1) ;
*
      LXDEP1 = LXDEP1 ET XDEP1 ;
      LXVIB1 = LXVIB1 ET XVIB1 ;
      LXPOD1 = LXPOD1 ET XPOD1 ;
      LXPOD2 = LXPOD2 ET XPOD2 ;
      LXPOD3 = LXPOD3 ET XPOD3 ;
      LXPOD4 = LXPOD4 ET XPOD4 ;
   FIN IT ;
*
   EDEP1 = EVOL 'BLAN' 'MANU' LTEMP2 LXDEP1 ;
   EVIB1 = EVOL 'TURQ' 'MANU' LTEMP2 LXVIB1 ;
   EPOD1 = EVOL 'ROUG' 'MANU' LTEMP2 LXPOD1 ;
   EPOD2 = EVOL 'ORAN' 'MANU' LTEMP2 LXPOD2 ;
   EPOD3 = EVOL 'VERT' 'MANU' LTEMP2 LXPOD3 ;
   EPOD4 = EVOL 'OCEA' 'MANU' LTEMP2 LXPOD4 ;
*
   SI GRAPH ;
      DESS (EDEP1 ET EVIB1 ET EPOD1 ET EPOD2 ET EPOD3 ET EPOD4)
            'TITR' (CHAI 'RECONSTRUCTION SUR ' &II ' MODE(S)')
            'TITX' 'TEMPS (S)'
            'TITY' 'ENERGIE ELAST. (J)'
            'XBOR' XMIN1 XMAX1
            'POSX' 'EXCE'
            'POSY' 'EXCE'
            'LEGE' TLEG4 ;
   FINS ;
*
*  INTEGRATION TEMPORELLE ET MISE A JOUR DES HISTOGRAMMES
   XDEP1 =  EXTR (INTG EDEP1) 1 ;
   XVIB1 = (EXTR (INTG EVIB1) 1) / XDEP1 * 100 ;
   XPOD1 = (EXTR (INTG EPOD1) 1) / XDEP1 * 100 ;
   XPOD2 = (EXTR (INTG EPOD2) 1) / XDEP1 * 100 ;
   XPOD3 = (EXTR (INTG EPOD3) 1) / XDEP1 * 100 ;
   XPOD4 = (EXTR (INTG EPOD4) 1) / XDEP1 * 100 ;

   REMP LHIS1 (        1+&II) XVIB1 ;
   REMP LHIS1 (  NMOD1+1+&II) XPOD1 ;
   REMP LHIS1 (2*NMOD1+1+&II) XPOD2 ;
   REMP LHIS1 (3*NMOD1+1+&II) XPOD3 ;
   REMP LHIS1 (4*NMOD1+1+&II) XPOD4 ;

   REMP LHIS2 ((&II - 1)*4 + 2) XVIB1 ;
   REMP LHIS2 ((&II - 1)*4 + 3) XPOD3 ;
   REMP LHIS2 ((&II - 1)*4 + 4) XPOD1 ;
FIN II ;
*
*
*
* ======================
* ENERGIE TOTALE CUMULEE
* ======================
*
*
SI GRAPH ;
*
*  GRAPHIQUE 1
*  ***********
*
   TNOM1 = TABL ;
   TNOM1 . (  NMOD1) = MOT 'VIBR' ;
   TNOM1 . (2*NMOD1) = MOT 'POD SNAP RIG' ;
   TNOM1 . (3*NMOD1) = MOT 'POD CLAS RIG' ;
   TNOM1 . (4*NMOD1) = MOT 'POD SNAP' ;
   TNOM1 . (5*NMOD1) = MOT 'POD CLAS' ;
*
   THIS1 = TABL ;
   THIS1.'COUL' = MOTS NMOD1*'TURQ' NMOD1*'ROUG' NMOD1*'ORAN'
                       NMOD1*'VERT' NMOD1*'OCEA' ;
   THIS1.'LARG' = PROG NBAR1*1. ;
   THIS1.'ESPA' = 0. ;
   THIS1.'NOMS' = TNOM1 ;
*
   EVOL1 TABL1 = @HISTOGR LHIS1 THIS1 VRAI ;
   OUBL TABL1 1 ;
*
   EVMAX = EVOL 'GRIS' 'MANU' (PROG 0. NBAR1) (PROG 100. 100.) ;
*
   DESS (EVMAX ET EVOL1) TABL1
        'TITR' (CHAI 'ENERGIE DU SIGNAL RECONSTRUIT EN FONCTION DU '
                     'NOMBRE DE MODES RETENUS')
        'TITY' 'ENERGIE (%)'
        'YBOR' 0. 150. 'XBOR' 0. NBAR1 'XGRA' NBAR1 'YGRA' 10.
        'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' ;
*
*
*  GRAPHIQUE 2
*  ***********
*
   TNOM2 = TABL ;
   REPE KK NBMODES ;
      K1 = (&KK - 1) * 4 ;
      TNOM2.(K1 + 2) = &KK ;
      TNOM2.(K1 + 3) = &KK ;
      TNOM2.(K1 + 4) = &KK ;
   FIN KK ;
*
   THIS2 = TABL ;
   THIS2.'COUL' = MOTS 'BLAN' 'TURQ' 'OLIV' 'ROUG' ;
   THIS2.'LARG' = PROG NBAR2*1. ;
   THIS2.'ESPA' = 0. ;
   THIS2.'NOMS' = TNOM2 ;
*
   EVOL2 TABL2 = @HISTOGR LHIS2 THIS2 VRAI ;
*
   TABL2.'TITRE' = TABL ;
   TABL2.'TITRE' . 2 = MOT 'VIBR' ;
   TABL2.'TITRE' . 3 = MOT 'POD (SANS MATRICE)' ;
   TABL2.'TITRE' . 4 = MOT 'POD (AVEC MATRICE)' ;
   REPE KK NBAR2 ;
      SI ((&KK >EG 2) ET (&KK <EG 4)) ;
         ITER KK ;
      FINS ;
      TABL2.'TITRE'.&KK = MOT 'PAS DE LEGENDE' ;
   FIN KK ;
*
   DESS EVOL2
        'TITR' (CHAI 'ENERGIE DU SIGNAL RECONSTRUIT EN FONCTION DU '
                     'NOMBRE DE MODES RETENUS')
        'TITY' 'ENERGIE (%)'
        'YBOR' 0. 100. 'XBOR' 0. NBAR2 'XGRA' NBAR2 'YGRA' 10.
        'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' 'LEGE' TABL2 ;
*
FINS ;
*
*
XNRJVIB  = EXTR LHIS2 (NBAR2 - 3) ;
XNRJPOD1 = EXTR LHIS2 (NBAR2 - 2) ;
XNRJPOD2 = EXTR LHIS2 (NBAR2 - 1) ;
SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'LE SIGNAL RECONSTRUIT SUR ' NBMODES ' MODES CONTIENT :' ;
MESS '    ' (@ARR XNRJVIB  2) '% DE L' $$ 'ENERGIE AVEC VIBR' ;
MESS '    ' (@ARR XNRJPOD1 2) '% DE L' $$ 'ENERGIE AVEC POD' ;
MESS '    ' (@ARR XNRJPOD2 2) '% DE L' $$ 'ENERGIE AVEC POD MATR' ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
*
OPTI 'ECHO' 1 ;
*
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |               T E S T S   D E   V A L I D A T I O N               |
* |                                                                   |
* +-------------------------------------------------------------------+
*
* 1) LE MODE FONDAMENTAL DOIT ETRE SIMILAIRE QUELLE QUE SOIT LA METHODE
SI (ECAR1 > 1.E-3) ;
   ERRE 5 ;
FINS ;
SI (ECAR2 > 1.E-3) ;
   ERRE 5 ;
FINS ;
SI (ECAR3 > 1.E-3) ;
   ERRE 5 ;
FINS ;
SI (ECAR4 > 1.E-3) ;
   ERRE 5 ;
FINS ;
*
* 2) POD "SNAPSHOTS" ET "CLASSIQUE" DOIVENT DONNER LES MEMES RESULTATS
SI (NEG ECAR1 ECAR2 1.E-10) ;
   ERRE 5 ;
FINS ;
SI (NEG ECAR3 ECAR4 1.E-10) ;
   ERRE 5 ;
FINS ;
*
* 3) LA RECONSTRUCTION POD SUR 10 MODES DOIT CONTENIR AU MOINS 98% DE
*    L'ENERGIE
SI (XNRJPOD2 < 98.) ;
   ERRE 5 ;
FINS ;
*
*
*
FIN ;
*








