* fichier :  metallurgie_02.dgibi
************************************************************************
* Section : Thermique Metallurgie
************************************************************************

*__________________________________________________________________*
*   TEST METALLURGIE_02                                            *
*                                                                  *
*   CALCUL DES PROPORTIONS DE PHASE METALLURGIQUE                  *
*                                                                  *
*   Un MAILLAGE constitué de 1 élément 'TRI3' est soumis a un      *
*   chargement THERMIQUE pour lequel la température decroit de     *
*   manière linéaire avec le temps.                                *
*                                                                  *
*   Le modèle métallurgique est codé en GIBIANE                    *
*      - Procédure PARATHER : Mise a jour du matériaux THERMIQUE   *
*                             avec la proportion de phase          *
*      - Procédure CHARTHER : Mise a jour des proportions de phase *
*                             selon un schéma EULER 1 Implicite    *
*                                                                  *
*   Le modèle métallurgique contient 5 phases ayant des cinétiques *
*   de transformation différentes                                  *
*      - Metal de Base (MB)                                        *
*      - Austénite                                                 *
*      - Martensite                                                *
*      - Bainite                                                   *
*      - Ferrite                                                   *
*__________________________________________________________________*
*                                                                  *
*   Vitesse de refroidissement : 100°C/s                           *
*      - Transformation de l'autenite en martensite seulement      *
*      - La valeur calculee de la proportion de MARTENSITE est     *
*        comparée avec la valeur analytique                        *
*__________________________________________________________________*
*
'OPTI' 'TRAC' PSC 'EPTR' 9 ;

OPTI DIME 2 ELEM 'TRI3';

TINI = 900.  ;
TFIN = 20.   ;

* Vitesses de refroidissement a simuler.
  VREFROI = 100.D0 ;

************************************************************************
*  Pour faire des beaux DESSINS
************************************************************************
* LISTMOTS contenant les couleurs
  LESCOUL = 'MOTS' 'VIOL' 'VERT' 'CYAN' 'BRIQ' 'BOUT' 'JAUN' 'OLIV'
                   'ORAN' 'ROUG' 'BLEU' 'BRUN' 'CARA' 'GRIS' 'NOIR' ;
  NBCOUL  = 'DIME' LESCOUL;

* LISTMOTS contenant les marques dans DESS
  LESMARQ = 'MOTS' 'CROI' 'PLUS' 'MOIN' 'BARR' 'ETOI' 'CARR'
                   'LOSA' 'ROND' 'TRID' 'TRIU' 'TRIL' 'TRIR';
  NBMARQ  = 'DIME' LESMARQ;
************************************************************************


************************************************************************
* Debut de la procedure CHARTHER
************************************************************************
'DEBP' CHARTHER PRECED*'TABLE'  tt*'FLOTTANT' ;
************************************************************************
* PROCEDURE CHARTHER
* - met a jour la fraction de PHASE dans le materiaux
*     Intégration numérique selon un schéma d'Euler d'ordre 1 avec la
*     TETA méthode.
************************************************************************
  ETAB   = PRECED.'WTABLE'         ;
  XTOLR  = ETAB.'PRECISION'        ;
  XZPREC =('VALE' 'PREC') * 100.D0 ;


  SI ('EXIS'   PRECED 'PTOL') ;
    XTOLA  = PRECED.'PTOL';
  SINO;
    XTOLA  = XTOLR ;
  FINS;
  SI ('EXIS'   PRECED 'NITERPHASE_MAX') ;
    NITMAX  = PRECED.'NITERPHASE_MAX';
  SINO;
    NITMAX  = 200 ;
  FINS;
  SI ('EXIS'   PRECED 'IGNORE_NON_CONV') ;
    BIGNORE  = PRECED.'IGNORE_NON_CONV';
  SINO;
    BIGNORE  = FAUX ;
  FINS;

  MODCOND  = ETAB.'MOD_COND';
  MODRCOND = MODCOND;
  PARA0 ='VALE' 'PARA'            ;
  SI ('EGA' ('TYPE' MODRCOND) 'TABLE');
   'OPTI' 'PARA' VRAI;
  FINS;

* Récuperation du numero de PAS du calcul et du DT
  NPA ='DIME' PRECED.'TEMPS';
  DT  = ETAB.'DT' ;

* Récuperation des proportions de phase en debut de pas et courant
  Phas1   = 'REDU' (PRECED.'PROPORTIONS_PHASES' .(NPA - 1)) MODRCOND;
  LISCOM  = 'EXTR' Phas1 'COMP'   ;
  Phas1   = 'REDU' Phas1  MODRCOND;
  SI (EXIS  PRECED.'PROPORTIONS_PHASES'   NPA )   ;
    Phas2 = 'REDU' (PRECED.'PROPORTIONS_PHASES' . NPA) MODRCOND     ;
  SINO ;
    Phas2 = Phas1;
  FINS ;

  TPS_1        = PRECED.'TEMPS'.(NPA - 1);
  TPS_2        = tt                      ;

  T_CHPO1  ='EXCO' PRECED.'CONTINUATION'.'TEMPERATURES' 'T'  'SCAL' ;
  T_CHPO2  ='EXCO' ETAB  .'THER_COURANT'                'T'  'SCAL' ;
  T_CHAM1  ='CHAN' 'CHAM' T_CHPO1 MODRCOND  ;
  T_CHAM2  ='CHAN' 'CHAM' T_CHPO2 MODRCOND  ;

  TPOINT   = (T_CHAM2 - T_CHAM1) / (TPS_2 - TPS_1);
  MTPOIN   = -1.D0 * TPOINT;
  TPOINT1  ='CHAN' 'COMP' TPOINT 'TPOI';

  LREAC    = TPHASE . 'REACTIONS' ;
  TREAC    = TPHASE . 'TYPE'      ;
  NBREAC   ='DIME' TREAC          ;
  NBPHAS   ='MAXI' LREAC          ;

  TPHASP   ='TABL';
  REPE SURREAC NBREAC;
    IREAC = &SURREAC;
    TPHASP.IREAC ='REDU' TPHASE.IREAC MODRCOND ;
  FIN SURREAC;

* THETA  :instant relatif sur le Sous-Pas pour sont tirés les paramètres
  THETA    = 0.5D0 ;

  TPS_I    =((1.D0 - THETA)*TPS_1  ) + (THETA*TPS_2  );
  T_CHAM_I =((1.D0 - THETA)*T_CHAM1) + (THETA*T_CHAM2);
  ETATi    =('CHAN'  'COMP' T_CHAM_I 'T') 'ET' TPOINT1;

*   Convergence sur les proportions de phase
  REPE CONVERG NITMAX;
    ICONV    = &CONVERG;
    Phas_I   =((1.D0 - THETA)*Phas1  ) + (THETA*Phas2  );
*   'MESS' '  ICONV=' ICONV;

    Ai        = 'REDU' ('VIDE' 'MCHAML') MODRCOND;
    REPE SURPAH NBPHAS;
*     Boucle sur toutes les phases
      IPHAS = &SURPAH;

      REPE SURREAC NBREAC;
*       Boucle sur toutes les reactions possibles
        IREAC =&SURREAC;
        II    ='EXTR' LREAC (2 * (IREAC - 1) + 1);
        JJ    ='EXTR' LREAC (2 *  IREAC         );

        SI (('EGA' IPHAS JJ) 'OU' ('NEG' IPHAS II));
          'ITER' SURREAC;
        FINS;

        CTYP  ='EXTR' TREAC IREAC ;
*      'MESS' ('CHAI' 'Reaction 'II '==>' JJ ' : ' CTYP);

        NOMi  ='EXTR' LISCOM II           ;
        Pi1   ='EXCO' Phas1  NOMi 'SCAL';
        Pi    ='EXCO' Phas_I NOMi 'SCAL';

        NOMj  ='EXTR' LISCOM JJ ;
        Pj1   ='EXCO' Phas1  NOMj 'SCAL';
        Pj    ='EXCO' Phas_I NOMj 'SCAL';

*       Instanciation des champs pour T et dT/dt donné
        CHPROPi ='VARI' 'NUAG'  MODRCOND TPHASP.IREAC ETATi 'NOEUD';

        SI ('EGA' CTYP 'LEBL');
*         Cas Leblond
          Pjeq ='EXCO' CHPROPi 'PEQ' 'SCAL';
          Tauij='EXCO' CHPROPi 'TAU' 'SCAL';
          Fij  ='EXCO' CHPROPi 'F'   'SCAL';
          Kij  =  1. * Pjeq / Tauij        ;
          Kij2  =  (1. - Pjeq) / Tauij        ;

          Aij  = -1 * ((Kij * Pi) - (Kij2 * Pj)) * Fij ;
          Aij = Aij * (Aij 'MASQ' 'INFERIEUR' 0.D0) ;
        FINS;

        SI ('EGA' CTYP 'KOMA');
*         Cas Koistinen-Marburger
          KM    ='EXCO' CHPROPi 'KM' 'SCAL'    ;
          MS    ='EXCO' CHPROPi 'MS' 'SCAL'    ;

          MASQ1 ='MASQ' T_CHAM_I 'EGINFE' MS   ;
          MASQ2 ='MASQ' TPOINT   'EGINFE' 0.D0 ;
          MASQ1 ='REDU' MASQ1 MODRCOND         ;
          MASQ2 ='REDU' MASQ2 MODRCOND         ;
          Kij   = MASQ1 * KM                   ;
          Fij   = MASQ2 * TPOINT               ;

                Aij  = Kij * Fij * Pi ;
        FINS;

*       Controle pour que Pi <= 1 >= 0
        SI ('EXIS' Ai NOMi);
          Aiprec = 'CHAN' 'COMP' ('EXCO' Ai NOMi) 'SCAL' ;
        SINO;
          Aiprec = 0.D0;
        FINS;

        Aitest = Aiprec '+' Aij;
        Pitest = Pi1 '+' (DT * Aitest);

        MASQiinf ='MASQ'  Pitest               'INFERIEUR' 0.D0 ;
        MASQisup ='MASQ'  Pitest               'SUPERIEUR' 1.D0 ;
        MASQiok  ='MASQ' (MASQiinf + MASQisup) 'INFERIEUR' 0.5D0;
        MASQiinf ='REDU' MASQiinf MODRCOND ;
        MASQisup ='REDU' MASQisup MODRCOND ;
        MASQiok  ='REDU' MASQiok  MODRCOND ;

        SI('MAXI' MASQiinf '>EG' 0.5);
*         Correction de Aij
          Aic = MASQiinf * (((XZPREC - Pi1)/DT)
                - Aitest);
          Aij = Aij '+' Aic;
        FINS;

        SI('MAXI' MASQisup '>EG' 0.5);
*         Correction de Aij
          Aic = MASQisup * (((1.D0 - XZPREC - Pi1)/DT)
                - Aitest);
          Aij = Aij '+' Aic;
        FINS;

        Ai = ( 'CHAN' 'COMP' Aij NOMi         ) '+'
             (('CHAN' 'COMP' Aij NOMj) * -1.D0) '+'
                Ai;
      FIN SURREAC;
    FIN SURPAH;

*   Intégration explicite sur le pas de temps
    Phas2p= Phas2;       'COMM' 'Iteration precedente pour convergence';
    Phas2 = Phas1 '+' (DT * Ai);

*   Test sur la convergence absolue uniquement
    SI (ICONV > 1);
      DIFFABS = 'ABS' (Phas2  -        Phas2p)              ;
      DIFFI   =('ABS'  Phas2) - ('ABS' Phas2p)              ;
      MASQI1  = 'MASQ' DIFFI 'SUPERIEUR' 0.D0               ;
      MASQI2  = 1.D0 - MASQI1                               ;
      MASQI1  = 'REDU' MASQI1 MODRCOND                      ;
      MASQI2  = 'REDU' MASQI2 MODRCOND                      ;
      MAXD1   = 'ABS' ((Phas2 * MASQI1) + (Phas2p * MASQI2));

      CRITNUM = DIFFABS - (MAXD1          * XZPREC);
      CRITREL = DIFFABS - (('ABS' Phas2p) * XTOLR );
      CRITABS = DIFFABS -                   XTOLA  ;
      TOTO = 'MAXI' CRITNUM;
      TITI = 'MAXI' CRITREL;
      TATA = 'MAXI' CRITABS;
      MASQNUM ='MASQ' CRITNUM 'SUPERIEUR' 0.D0     ;
      MASQREL ='MASQ' CRITREL 'SUPERIEUR' 0.D0     ;
      MASQABS ='MASQ' CRITABS 'SUPERIEUR' 0.D0     ;

*     'MESS' 'COMV:' ICONV (MAXI CRITNUM) (MAXI CRITREL) (MAXI CRITABS);
      SI (('MAXI' (MASQNUM * MASQREL * MASQABS)) '<' 0.5D0);
       'QUIT' CONVERG;
      FINS;

*     Compteur MAX atteint
      SI(ICONV 'EGA' NITMAX);
        ERRI = 'MAXI' ('PROG'
                    ('MAXI' CRITNUM) ('MAXI' CRITREL) ('MAXI' CRITABS));
       'MESS' '*******************************************************';
       'MESS' '      Comportement CHARTHER non converge';
       'MESS' '      Comportement : ICONV=' ICONV 'ERRI =' ERRI;
       'MESS'   ('MAXI' CRITNUM) ('MAXI' CRITREL) ('MAXI' CRITABS) ;
       'MESS' '*******************************************************';
        SI ('NON' BIGNORE);
         'ERRE' 21;
        FINS;
      FINS;
    FINS;
  FIN CONVERG;

  PRECED.'PROPORTIONS_PHASES'. NPA = 'REDU' Phas2 MODCOND;

************************************************************************
* Remplissage des indices de sortie : ADDI_MATRICE ET ADDI_SECOND
************************************************************************
TAA ='TABL';
* Actuellement aucun second membre ni aucune rigidite additionnelle

*  Remise en place de la parallélisation comme au depart
  'OPTI' 'PARA' PARA0 ;
'FINP' TAA;
************************************************************************
* Fin de la procedure CHARTHER
************************************************************************

************************************************************************
* Debut de la procedure PARATHER
************************************************************************
'DEBP' PARATHER  PRECED*'TABLE' TPS1*'FLOTTANT';
************************************************************************
* PROCEDURE PARATHER :
*   DESCRIPTION :
*   -------------
*   Cette procedure permet de modifier le materiaux avant l'appel a
*   VARI 'NUAG' dans TRANSNON.
*     - Les composantes K, C et RHO sont une moyenne arithméthique
*       pondérée par la fraction de phase des Ki, Ci et RHOi
*   L'indice ETAB.'MAT_TOT' est remplacé
*
*   ENTREES :
*   ---------
*   - PRECED : TABLE complete de PASAPAS
*   - TPS1   : Temps courant
*
*   SORTIES :
*   ---------
*   - Aucune
*
************************************************************************
   ETAB    = PRECED.'WTABLE';
   MOD1    = ETAB.'MOD_TOT' ;
   T1      = ETAB.'THER_COURANT' ;
   T1      ='CHAN' 'CHAM' T1 MOD1 'RIGIDITE' 'CARACTERISTIQUES';

   MAT_ORIG= ETAB.'MAT_TOT';
   COMPORIG='EXTR' MAT_ORIG 'COMP';
   NBCOMP  ='DIME' COMPORIG;

   MAT0 ='VIDE' 'MCHAML';
   REPE SURCOM NBCOMP;
     II     = &SURCOM;
     LACOMP ='EXTR' COMPORIG II;
     SI(('NEG' LACOMP 'K'  ) 'ET'
        ('NEG' LACOMP 'RHO') 'ET'
        ('NEG' LACOMP 'C'  ));
        MAT0 = MAT0 'ET' ('EXCO' LACOMP MAT_ORIG);
     FINS;
   FIN SURCOM;

*  Instanciation du matériaux de chaque phase
   MATPHAS ='REDU'  MOD1 MATPHAS ;
   MAT2    ='VARI' 'NUAG' MOD1 MATPHAS T1 'RIGIDITE';

*  On fait ensuite la moyenne qui nous interesse (Ponderation par la
*  proportion de phase)
   NPA ='DIME' PRECED.'TEMPS';
   SI ('EXIS' PRECED.'PROPORTIONS_PHASES'   NPA )   ;
     MCHPHA = PRECED.'PROPORTIONS_PHASES' . NPA     ;
   SINO ;
     MCHPHA = PRECED.'PROPORTIONS_PHASES' .(NPA - 1);
     PRECED.'PROPORTIONS_PHASES' . NPA = MCHPHA     ;
   FINS ;

   MCHPHA ='CHAN' 'RIGIDITE' MCHPHA MOD1           ;
   MCHPHA ='CHAN' 'TYPE' MCHPHA 'CARACTERISTIQUES' ;
   MOPROP1='EXTR'  MCHPHA 'COMP'                   ;
   MOMAT2 ='EXTR'  MAT2   'COMP'                   ;

   MCHK ='CHAN' 'TYPE' ('VIDE' 'MCHAML') 'CARACTERISTIQUES' ;
   MCHR ='CHAN' 'TYPE' ('VIDE' 'MCHAML') 'CARACTERISTIQUES' ;
   MCHC ='CHAN' 'TYPE' ('VIDE' 'MCHAML') 'CARACTERISTIQUES' ;

* Boucle sur les phases
   NBPHA  = 'DIME' MOPROP1;
   REPE SURP NBPHA;
     IP = &SURP ;
     PROPIP ='EXCO' MCHPHA ('EXTR' MOPROP1 IP) 'SCAL' ;
*    Moyenne sur les K
     IB = IP;
     MCHK = (PROPIP * ('EXCO' MAT2 ('EXTR' MOMAT2 IB) 'SCAL')) + MCHK ;

*    Moyenne sur les RHO
     IB = IB + NBPHA;
     MCHR = (PROPIP * ('EXCO' MAT2 ('EXTR' MOMAT2 IB) 'SCAL')) + MCHR ;

*    Moyenne sur les CP
     IB = IB + NBPHA;
     MCHC = (PROPIP * ('EXCO' MAT2 ('EXTR' MOMAT2 IB) 'SCAL')) + MCHC ;
   FIN SURP;

   MCHK ='CHAN' 'COMP' 'K'   MCHK ;
   MCHR ='CHAN' 'COMP' 'RHO' MCHR ;
   MCHC ='CHAN' 'COMP' 'C'   MCHC ;

*  REMPLACEMENT DU MATERIAUX
   ETAB.'MAT_TOT' = MCHK 'ET' MCHR 'ET' MCHC 'ET' MAT0 ;

'FINP';
************************************************************************
* Fin de la procedure PARATHER
************************************************************************

*MAILLAGE
P1 = 0. 0. ;
P2 = 1. 0. ;
P3 = 0. 1. ;

MAILT   = MANU 'TRI3' P1 P2 P3;

*MODELE
MODTHE = MODE MAILT   'THERMIQUE' 'CONDUCTION' 'CONS' 'MAT1';
MODTOT = MODTHE;

************************************************************************
* Definition de la metallurgie : DEBUT
************************************************************************
*  1- Métal de base
*  2- Martensite
*  3- Bainite
*  4- Ferrite
*  5- Austénite

* Evolution des proprietes thermiques pour les phases pures
MCHK   = VIDE 'MCHAML';
MCHRHO = VIDE 'MCHAML';
MCHC   = VIDE 'MCHAML';
CTYP   = MOT  'CARACTERISTIQUES';

****************
* 1 - Austénite *
****************
IPAHS  = 1;
CPHAS  = CHAI 'K' IPAHS;
LTKP1  = PROG 0    20 100 200 400 600 800 856
              900 1000 1200 1500 1502 1600   ;
LKP1   = PROG 0.0121 0.0124 0.0136 0.015 0.018 0.021 0.0239 0.0248
              0.0254 0.0269 0.0298 0.0343 0.05 0.05;
EVKP1  = EVOL 'MANU' 'T' LTKP1 CPHAS LKP1;
MCHK         = MCHK   ET (MANU 'CHML' MODTHE CPHAS EVKP1 'TYPE' CTYP) ;

CPHAS  = CHAI 'R' IPAHS;
LTRHOP1= PROG 0 20 100 200 300 400
              500 600 700 800 900 1440
              2500 ;
LRHOP1 = PROG 7852.D-9 7841.D-9 7794.D-9 7736.D-9 7680.D-9 7624.D-9
              7569.D-9 7514.D-9 7458.D-9 7408.D-9 7356.D-9 7087.D-9
              6613.D-9 ;
EVRHOP1 = EVOL 'MANU' 'T' LTRHOP1 CPHAS LRHOP1;
MCHRHO       = MCHRHO ET (MANU 'CHML' MODTHE CPHAS EVRHOP1 'TYPE' CTYP);


CPHAS  = CHAI 'C' IPAHS;
LTCP1  = PROG 21   50   150  200  250  300  350  475  575  675  800
              950  1000 1100 1200 1300 1400 1440 1465 1490 1540 1590
              1615 1640 2500 ;
LCP1   = PROG 460.5 485.6 519.1 531.6 556.7 573.5 598.6 652 671 685 715
              742 750 774 795 815 840 850 1210 1840 2470 1840
              1210 840 707 ;
EVCP1  = EVOL 'MANU' 'T' LTCP1 CPHAS LCP1;
MCHC         = MCHC   ET (MANU 'CHML' MODTHE CPHAS EVCP1 'TYPE' CTYP) ;


*****************
* 2- Martensite *
*****************
IPAHS   = 2;
CPHAS   = CHAI 'K' IPAHS;
EVKP1   = EVOL 'MANU' 'T' LTKP1 CPHAS LKP1;
MCHK    = MCHK   ET (MANU 'CHML' MODTHE CPHAS EVKP1 'TYPE' CTYP) ;

CPHAS   = CHAI 'R' IPAHS;
EVRHOP1 = EVOL 'MANU' 'T' LTRHOP1 CPHAS LRHOP1;
MCHRHO  = MCHRHO ET (MANU 'CHML' MODTHE CPHAS EVRHOP1 'TYPE' CTYP) ;

CPHAS   = CHAI 'C' IPAHS;
EVCP1   = EVOL 'MANU' 'T' LTCP1 CPHAS LCP1;
MCHC    = MCHC   ET (MANU 'CHML' MODTHE CPHAS EVCP1 'TYPE' CTYP) ;


*MATERIAUX
MATPHAS  = MCHK 'ET' MCHRHO 'ET' MCHC  ;


* Parametres pour le changement de phase
CTYP   = MOT  'SCALAIRE';
TPHASE = TABL;

* Liste des transformations existantes dans un LISTENTIE
TPHASE . 'REACTIONS' = LECT 1 2 ;
* Lire : 5 vers 2

TPHASE . 'TYPE' = MOTS 'KOMA' ;

*-----------------------------------------------------------------------
IDREAC = 1; COMM '1 vers 2';
* Koistinen-Marburger
TPHASE . IDREAC = MANU 'CHML' MODTHE 'MS' 380. 'KM' 0.0247
                       'TYPE' CTYP 'NOEUD';

* Verification des donnees rentrees
NBREAC =  (DIME TPHASE . 'REACTIONS') / 2;
NBTYPE =  (DIME TPHASE . 'TYPE'     )    ;
NBINDI =  (DIME TPHASE)                  ;
SI ('NEG' NBREAC NBTYPE);
  OPTI ECHO 0;
  CHAI1 = CHAI 'Le Nombre de reaction (' NBREAC ') ';
  CHAI2 = CHAI 'ne correspond pas avec ';
  CHAI3 = CHAI 'la taille de la liste des noms (' NBTYPE ').';
  MESS CHAI1;
  MESS CHAI2;
  MESS CHAI3;
  OPTI ECHO 1;
  ERRE 21;
FINS;

SI ('NEG'  NBINDI (NBREAC + 2));
  OPTI ECHO 0;
  CHAI1 = CHAI 'Le Nombre de reaction (' NBREAC ') ';
  CHAI2 = CHAI 'ne correspond pas avec ';
  CHAI3 = CHAI 'le nombre de reactions donnees (' (NBINDI - 2) ').';
  MESS CHAI1;
  MESS CHAI2;
  MESS CHAI3;
  OPTI ECHO 1;
  ERRE 21;
FINS;
************************************************************************
* Definition de la metallurgie : FIN
************************************************************************

* Necessaire pour que TRANSNON soit en Thermique Transitoire
  MATBIDON ='MATE' MODTHE 'K' 0.D0 'RHO' 0.D0 'C' 0.D0 ;

* TEMPERATURE INITIALE
  CHPTINI  ='MANU' 'CHPO' MAILT 1 'T' TINI 'NATU' 'DIFFUS' ;

* Creation du MCHAML de proportion de phase INITIALE
  CTYP   ='MOT'  'SCALAIRE';
  MCHPHA ='MANU' 'CHML' MODTHE 'AUST' 1. 'MART' 0.
                 'TYPE' CTYP 'NOEUD' ;

* CLs
* TEMPERATURE IMPOSE PARTOUT
  CLTOT   ='BLOQ' 'T' MAILT   ;
  TEMBAS  ='DEPI'  1. CLTOT   ;

* Initialisations pour le POST-TRAITEMENT
  LISCOM ='EXTR' MCHPHA 'COMP' ;
  NBCOMP ='DIME' LISCOM        ;

  TABPHA = 'TABL';
  REPE SURPHA NBCOMP;
    IPH = &SURPHA;
    NOMP='EXTR' LISCOM IPH;
    Pi  ='EXTR' MCHPHA NOMP 1 1 1 ;
    TABPHA . IPH ='VIDE' 'LISTREEL' ;
  FIN SURPHA;


  EVTPS            ='VIDE' 'EVOLUTIO';
  EVTPSP           ='VIDE' 'EVOLUTIO';
  TDESS2           ='TABL' ;
  TDESS2 . 'TITRE' ='TABL' ;
  NBGRAPH          = 0     ;

*   Boucle sur les differentes vitesses de refroidissement
  TIT1   ='CHAI' 'Vit. de Ref. : ' ('ENTI' 'PROC' VREFROI)'[Deg.s-1]';
  TPSFIN = -1. * (TFIN - TINI) / VREFROI ;
  TPS0   = 1.D0          ;
  TPS1   = TPSFIN + 1.D0 ;
  DELTAt = TPS1   - TPS0 ;

*   CHARGEMENT de TEMPERATURE imposee
  LTPSCHA ='PROG'  TPS0  TPS1 ;
  LTCHA   ='PROG'  TINI TFIN  ;
  EVT     ='EVOL' 'MANU' LTPSCHA LTCHA;
  CHARTOT ='CHAR' 'TIMP' TEMBAS EVT ;

*   TEMPS_CALCULES
  DTPS    = 10 / VREFROI ;
  LTCAL   ='PROG' TPS0 'PAS' DTPS TPS1 ;

  TPASAP                          ='TABL'           ;
  TPASAP.'MODELE'                 = MODTHE          ;
  TPASAP.'CARACTERISTIQUES'       = MATBIDON        ;
  TPASAP.'BLOCAGES_THERMIQUES'    = CLTOT           ;
  TPASAP.'CHARGEMENT'             = CHARTOT         ;
  TPASAP.'TEMPS_CALCULES'         = LTCAL           ;

  TPASAP.'TEMPS'                  ='TABL'           ;
  TPASAP.'TEMPERATURES'           ='TABL'           ;
  TPASAP.'PROPORTIONS_PHASES'     ='TABL'           ;
  TPASAP.'TEMPS'              . 0 =('EXTR' LTCAL 1) ;
  TPASAP.'TEMPERATURES'       . 0 = CHPTINI         ;
  TPASAP.'PROPORTIONS_PHASES' . 0 = MCHPHA          ;

*   PROCEDURES Utilisateurs
  TPASAP.'PROCEDURE_PARATHER'    = VRAI            ;
  TPASAP.'PROCEDURE_CHARTHER'    = VRAI            ;

*   Option PERSO pour l'integration du COMPORTEMENT des PHASES
  TPASAP.'PRECISION'              = 1.D-8    ; COMM 'Critere Relatif';
  TPASAP.'PTOL'                   = 1.D-8    ; COMM 'Critere Absolu ';
  TPASAP.'NITERPHASE_MAX'         = 100      ; COMM 'Voir CHARTHER'  ;
  TPASAP.'IGNORE_NON_CONV'        = VRAI     ; COMM 'Voir CHARTHER'  ;

  PASAPAS TPASAP ;

************************************************************************
*   POST-TRAITEMENT
************************************************************************
  LRT   = TINI - (VREFROI * (LTCAL - TPS0)) ;
  EVTPS = EVTPS  'ET' ('EVOL' 'MANU' 'Temp' LTCAL 'T' LRT) ;
  EVTPSP= EVTPSP 'ET' ('EVOL' 'MANU' 'Temp' LTCAL 'T' LRT) ;
  NBGRAPH                    = NBGRAPH + 1    ;
  TDESS2 . NBGRAPH           ='CHAI' 'TIRR'   ;
  TDESS2 . 'TITRE' . NBGRAPH ='CHAI' ('ENTI' 'PROC' VREFROI) ' C/s' ;

  LTPS ='VIDE' 'LISTREEL';

  REPE BLOC0 ('DIME' TPASAP.'TEMPS') ;
    I      = &BLOC0  - 1                     ;
    CHT    = TPASAP.'TEMPERATURES'      . I  ;
    CHPHA  = TPASAP.'PROPORTIONS_PHASES'. I  ;
    LTPS   = LTPS 'ET' (TPASAP.'TEMPS'  . I) ;

*     Extraction pour chaque phase de la valeur courante
    REPE SURPHA NBCOMP;
      IPH = &SURPHA;
      NOMP='EXTR' LISCOM IPH;
      Pi  ='EXTR' CHPHA NOMP 1 1 1 ;
      TABPHA . IPH = TABPHA . IPH 'ET' Pi;
    FIN SURPHA;
  FIN BLOC0 ;

*   Reconstitution des EVOL
  EVTOTa           ='VIDE' 'EVOLUTIO';
  REPE SURPHA NBCOMP;
    IPH          = &SURPHA;
    NOMP         ='EXTR' LISCOM IPH;
    Pi           ='EXTR' CHPHA NOMP 1 1 1 ;
    ICOUL        = @MOD  IPH NBCOUL;
    COUL1        ='EXTR' LESCOUL ICOUL;
    Lpi          = TABPHA. IPH ;
    TABPHA . IPH ='EVOL' COUL1 'MANU' 'TEMP' LTPS 'PROP' Lpi;
    EVTOTa       = EVTOTa 'ET' TABPHA . IPH ;
    TABPHA . IPH = TABPHA . IPH 'ET'
                 ('EVOL' COUL1 'MANU' 'T' LRT  NOMP Lpi);
    IMARQ        = @MOD   IPH NBMARQ;
    LAMAR        ='EXTR'  IMARQ LESMARQ;
  FIN SURPHA;
  EVTPSP = EVTPSP 'ET' EVTOTa;


************************************************************************
*   Verification avec la solution Analytique
************************************************************************
*Extraction de la proportion de phase de la Martensite Calculee
 IPH    = 1;
 NOMP   ='EXTR' LISCOM IPH;
 ICOUL  = @MOD  IPH NBCOUL;
 COUL1  ='EXTR' LESCOUL ICOUL;
 EVO = TABPHA . IPH;
 LT     ='EXTR' EVO 'ABSC' 2;
 LPi    ='EXTR' EVO 'ORDO' 1;

 EVO ='EVOL' 'NOIR' 'MANU' 'TEMP' LTPS 'AUSTENITE' Lpi;


*Solution ANALYTIQUE de la proportion de phase
 IDREAC = 1; COMM '1 vers 2';
* Koistinen-Marburger
 MCHPROP = TPHASE . IDREAC ;
 MS      = MAXI  (EXCO MCHPROP 'MS') ;
 KM      = MAXI  (EXCO MCHPROP 'KM') ;
 LT2     = BORN LT 'MAXIMUM' MS;
 Lpi2    = EXP (-1*KM*(MS - LT2)) ;
 EVOANA ='EVOL' 'VERT' 'MANU' 'TEMP' LTPS 'AUSTENITE' Lpi2;

 TDESS1 ='TABL' ;
 TDESS1 . 1 = 'TIRR' ;
 TDESS1 . 2 = 'MARQ ROND NOLI' ;
 TDESS1 . 'TITRE' ='TABL' ;
 TDESS1 . 'TITRE' . 1 ='CHAI' 'Evolution analytique';
 TDESS1 . 'TITRE' . 2 ='CHAI' 'Evolution calculee';
 TIT1  ='CHAI' 'KOISTINEN-MARBURGER - Refroidissement acier 16MND5 -100 deg/s';
 DESS (EVOANA ET EVO) 'GRIL' 'TIRC' 'GRIS'
                      'LEGE' TDESS1 'TITR' TIT1 ;


*Ajout affichage erreur par T.L. en mai 2018
  ERRABS  = 'ABS' (Lpi - Lpi2) ;
  EVOERR = 'EVOL' 'ROUG' 'MANU' 'TEMP' LTCAL 'ERREUR' ERRABS ;
  TDESS1 ='TABL' ;
  TDESS1 . 1 = 'TIRR' ;
  TDESS1 . 'TITRE' ='TABL' ;
  TDESS1 . 'TITRE' . 1 ='CHAI' 'Erreur';
  DESS EVOERR 'GRIL' 'TIRC' 'GRIS'
              'LEGE' TDESS1 'TITR' TIT1 ;


* Calcul de l'erreur
 Diff1 = MAXI 'ABS' (Lpi - Lpi2);
 Tol1  = 1.9D-3; COMM 'Valeur fixee en 2017 par CB215821';

 MESS (CHAI '      Erreur : ' Diff1 ' | Tolerence : ' Tol1);
 SI (Diff1 >EG Tol1);
   MESS 'Erreur dans le calcul de la proportion de Martensite';
   ERRE 5;
 FINS;

FIN;


