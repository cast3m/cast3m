* fichier :  uo2s_cas2.dgibi
************************************************************************
* Section : Mecanique Endommagement
* Section : Mecanique Endommagement
* Section : Mecanique Viscoplastique
************************************************************************
*
*     Test uo2s_cas2.dgibi: Jeux de donnees
*     -------------------------------------
*
'OPTI' 'DIME' 3 'MODE' 'TRID'        ;
* ajout de option epsilon lineaire pour la precision des test!
OPTION epsilon lineaire;
'OPTI' 'ELEM' 'CUB8'                 ;
'OPTI' 'TRAC' 'PSC'                  ;
'TEMPS' 'ZERO'                       ;
*
**********************************************************
*                TEST DE VALIDATION                      *
*                ------------------                      *
*                   MODELE UO2                           *
*   (COUPLAGE DES MODELES GATT_MONERIE ET OTTOSEN)       *
*   UO2 STANDARD COMPRESSIBLE AVEC COUPLAGE STATIQUE     *
*               RESOLUTION SIMPLIFIEE                    *
*                                                        *
*  MAILLAGE:                                             *
*     CUBE                                               *
*                                                        *
*  CHARGEMENT:                                           *
*     DEPLACEMENT VERTICAL IMPOSE EN  TRACTION AVEC      *
*     VITESSE POSITIVE CTE PAR MORCEAU (3 MORCEAUX)      *
*     TEMPERATURE         LINEAIRE CROISSANTE            *
*     DENSITE DE FISSIONS LINEAIRE CROISSANTE            *
*     OTTOSEN ACTIVE (TRACTION ELASTIQUE -               *
*     FISSURATION = FRACTURATION - OUVERTURE             *
*     FERMETURE - COMPRESSION - REOUVERTURE              *
*     GONFLEMENT ACTIVE                                  *
*     PAS DE VISCOPLASTICITE (GATT_MONERIE)              *
*     PAS DE DENSIFICATION                               *
**********************************************************
*
DESSI = FAUX ;
*
* -----------------------------*
* MAILLAGE D UN CUBE DE COTE 1 *
* -----------------------------*
   HS2  = 2E-5                                                 ;
*
   OO   = 0.     0.         0.                                 ;
   A1   = HS2    0.         0.                                 ;
   A2   = HS2    0.         HS2                                ;
   A3   = 0.     0.         HS2                                ;
*
   LB   = 'DROIT' 1  OO A1                                     ;
   LD   = 'DROIT' 1  A1 A2                                     ;
   LH   = 'DROIT' 1  A2 A3                                     ;
   LG   = 'DROIT' 1  A3 OO                                     ;
*
   SUA  = 'DALL' LB  LD  LH  LG  'PLAN'                        ;
   SU2  = SUA 'PLUS' (0. HS2 0.)                               ;
   VOL1 = 'VOLU' 1 SUA SU2                                     ;
   'ELIM' (HS2/1000.) VOL1                                     ;
*
   SUB = 'POIN' ('COOR' 3 VOL1) 'INFERIEUR' (HS2/1000.)        ;
   SUH = 'POIN' ('COOR' 3 VOL1) 'SUPERIEUR' (HS2 - (HS2/1000.));
   LG  = 'POIN' ('COOR' 1 VOL1) 'INFERIEUR' (HS2/1000.)        ;
* -----------------------------------------------------*
* Conditions aux limites + deplacement impose sur CLZH *
* -----------------------------------------------------*
CLZB = 'BLOQ' UZ SUB                      ;
CLZH = 'BLOQ' UZ SUH                      ;
CLXG = 'BLOQ' UX LG                       ;
CLYG = 'BLOQ' UY SUA                      ;
CLT  = CLZB 'ET' CLZH 'ET' CLXG 'ET' CLYG ;
* -------*
* Modele *
* -------*
MODL1= MODE VOL1 MECANIQUE ELASTIQUE VISCOPLASTIQUE UO2 ;
*
* Temperature moyenne
* -------------------
  TE1 = 1420. + 273.  ;
*
* Porosite initiale (cte au cours du calcul)
* ------------------------------------------
  PO   = 4.52E-2      ;

TA = @GATTPAR '../divers/fichier_gatt' ;
*
PP = 'MANU' 'CHML' MODL1 'T' TE1 'PORO' PO RIGIDITE ;
*
*
* --------------------------------------*
* 'YOUN' constant ou fonction de T et f *
* --------------------------------------*
 MATREE = MATE MODL1 'YOUN' (TA.'YOUN')          ;
 EE     = 'VARI' 'NUAG' MODL1 MATREE PP          ;
* EE     = (TA.'YOUN')                            ;
 MATREE = MATE MODL1 'YOUN' EE                   ;
* ------------------------------------*
* 'NU' constant ou fonction de T et f *
* ------------------------------------*
 MATRUU = MATE MODL1 'NU' (TA.'NU')              ;
 UU     = 'VARI' 'NUAG' MODL1 MATRUU PP          ;
* UU     = (TA.'NU')                              ;
* --------------------------------------*
* 'ALPH' constant                       *
* --------------------------------------*
 ALFA  = 1.319E-5 ;
* -----------------------------------------------------------------*
* Temperature de reference et temperature de reference pour 'ALPH' *
* -----------------------------------------------------------------*
 TREF   = TE1 ;
 TALPHA = 0.  ;
*TALPHA = TE1 ;
*
* -----------------------------*
* Materiau partie GATT_MONERIE *
* -----------------------------*
* fluage primaire
  TA.'KPUO'   = 0.                ;
* fluage secondaire (2 mecanismes)
  TA.'K1'   = 0.                  ;
  TA.'K2'   = 0.                  ;
* fluage d"irradiation
  TA.'A'    = 0.                  ;
* densification/gonflement
  TA.'BUMI' = 1E4 * (TA.'BUMI')   ;
*
MATR11 = 'MATE' MODL1 'YOUN' EE 'NU' UU 'RHO' (TA.'RHO')  'ALPH' ALFA ;
*
MATR12 = 'MATE' MODL1  'R'    (TA.'R')    'DG0' (TA.'DG0') 'DG'  (TA.'DG') 'K1'   (TA.'K1')   'M1'  (TA.'M1')  'Q1'  (TA.'Q1')  'N1'   (TA.'N1')  'K2'   (TA.'K2')   'M2'  (TA.'M2')  'Q2'  (TA.'Q2')  'N2'   (TA.'N2')  'OMEG' (TA.'OMEG') 'H'   (TA.'H')   'Q'   (TA.'Q')   'BETA' (TA.'BETA') 'K'    (TA.'K')    'A'   (TA.'A')   'Q3'  (TA.'Q3')  'N3'   (TA.'N3') 'CR'   (TA.'CR')   'CR1' (TA.'CR1') 'CR2' (TA.'CR2') 'CR3'  (TA.'CR3');
*
MATR13 = 'MATE' MODL1  'KP'   (TA.'KPUO')   'AP'  (TA.'AP') 'BP'   (TA.'BP')     'QP'   (TA.'QP') ;
*
MATR14 = 'MATE' MODL1  'ADEN' (TA.'ADEN')   'KGON' (TA.'KGON')  'POR0' (TA.'POR0')   'BUMI' (TA.'BUMI')  'EFIS' (TA.'EFIS')                                ;
*
* TYPE = 0. combustible UO2            sinon combustible AFA3GLAA
* COMP = 0. combustible compressible   sinon incompressible
* DYN  = 0. couplage statique          sinon dynamique
*
* -----------------------------*
* Materiau partie OTTOSEN      *
* -----------------------------*
 MATR16 = 'TAIL' MODL1 ;
*
* Resistance au cisaillement 'GS  ' par defaut: 'YOUN'*1.8E-4
* Ouverture a rupture 'WRUP' = 0 --> 'WRUP' = 2*'GFTR'/'LTR '
* Relation bilineaire 'BILI' = 0 --> 'BILI' = 0 (ouverture)
*
 XGFTR = 3.0   ; XGFTR1=XGFTR ; XGFTR2=XGFTR ; XGFTR3=XGFTR ;
 XLTR  = 136E6 ; XLTR1 =XLTR  ; XLTR2 =XLTR  ; XLTR3 =XLTR  ;
 XBTR  = 0.    ;
*
 MATR17 = 'MATE' MODL1  'GFTR' XGFTR    'LTR ' XLTR     'BTR ' XBTR 'WRUP' 0.       'BILI' 0. 'GFT1' XGFTR1   'GFT2' XGFTR2   'GFT3' XGFTR3 'GS1 ' 0.       'GS2 ' 0.       'GS3 ' 0. 'LTR1' XLTR1    'LTR2' XLTR2    'LTR3' XLTR3 'WRU1' 0.       'WRU2' 0.       'WRU3' 0. 'BIL1' 0.       'BIL2' 0.       'BIL3' 0. 'SIMP' 1.                                     ;
*
MATR1 = MATR11 'ET' MATR12 'ET' MATR13 'ET' MATR14 'ET' MATR16 'ET' MATR17  ;
*
*
*-------------------------------------------------------
* module d'young
*-------------------------------------------------------
                E    = 'MAXI' EE                       ;
*-------------------------------------------------------
*
*
*----------------------------------------------------------------------
 'DEBPROC' TRINOME XA*'FLOTTANT' XB*'FLOTTANT' XC*'FLOTTANT'          ;
    DISCRI  = ( (XB**2.) - (4.*XA*XC) )**0.5                          ;
    RACINE1 = ( (-1.*XB) + DISCRI ) / (2.*XA)                         ;
    RACINE2 = ( (-1.*XB) - DISCRI ) / (2.*XA)                         ;
    LRACINE = 'PROG' RACINE1 RACINE2                                  ;
    PRACINE = RACINE1 * RACINE2                                       ;
    SRACINE = RACINE1 + RACINE2                                       ;
    'SI' (PRACINE '<' 0.)                                             ;
        RACINE = 'MAXI' LRACINE                                       ;
    'SINON'                                                           ;
        RACINE = 'MINI' LRACINE                                       ;
    'FINSI'                                                           ;
 'FINPROC' RACINE                                                     ;
*----------------------------------------------------------------------
*
*-------------------------------------------
* facteurs de conversion
*-------------------------------------------
 CONVSIG = 1E6                              ;
 CONVTO  = 24.*3600E3                       ;
*-------------------------------------------
*
*-------------------------------
* fin d"ouverture apres fracture
*-------------------------------
 t1 = 1.5E6                              ;
 mess 't1 = ' t1 ' secondes'             ;
*--------------------------------------------------
* fin de diminution de la contrainte de compression
*--------------------------------------------------
 t2 = 3.8E6                              ;
 mess 't2 = ' t2 ' secondes'             ;
*------------
* temps final
*------------
 t3 = 5.5E6                              ;
 mess 't3 = ' t3 ' secondes'             ;
*
* -------------------------*
* vitesses de deformation  *
* -------------------------*
* pour 0 < t < t1
*----------------
 EPS1 = 7E-9      ;

* pour t1 < t < t2
*-----------------
 EPS2 = 5E-9      ;

* pour t2 < t
*------------
 EPS3 = 16E-9     ;

* -------------*
* deformation  *
* -------------*
eps_t1 = EPS1 * t1                      ;
eps_t2 = ( EPS2 * (t2 - t1) ) + eps_t1  ;
eps_t3 = ( EPS3 * (t3 - t2) ) + eps_t2  ;
*
progt   = 'PROG' 0     t1     t2     t3            ;
progeps = 'PROG' 0 eps_t1 eps_t2 eps_t3            ;
eveps   = 'EVOL' 'MANU' 't(s)' progt 'eps' progeps ;
* --------------------*
* deplacement impose  *
* --------------------*
progdep  = HS2 * progeps                               ;
'TITR' 'DEPLACEMENT IMPOSE SELON DIRECTION Z'          ;
evdep    = 'EVOL' 'MANU' 't(s)' progt 'dep(m)' progdep ;
si DESSI ; 'DESS' evdep ; 'FINSI'                      ;
DEPZ     = 'DEPI' CLZH 1                               ;
CHARMECA = 'CHAR' 'DIMP' DEPZ evdep                    ;
* --------------------------------------*
* Vitesse d"evolution de la temperature *
* --------------------------------------*
 TP1 = 1E-4      ;
*
* ------------------------------*
* Vitesse de densite de fission *
* ------------------------------*
 PHIP1 = 3E14 ;
*
*-------------------------------
* premier coefficient du trinome
*-------------------------------
 RHO0 = 1. - TA.'POR0'                  ;
 TAU0 = TA.'EFIS'*270./238./10950./RHO0 ;
 XA   = (TA.'KGON' / 6.) * TAU0 * PHIP1 ;
*
*--------------------------------
* caracteristiques de fissuration
*--------------------------------
 LZ     = 'MAXI' ('EXCO' MATR16 'LZZ')                     ;
 PENTZ  = -1. * ( (XLTR1**2) / (2.*XGFTR1) )               ;
 JZ     = 1./(LZ*PENTZ)                                    ;
 WRUPT  = (2.*XGFTR1) / XLTR1                              ;
 ERUPT  = WRUPT / LZ                                       ;
*
* -------------------------------------------------------------- *
* INSTANTS PRIVILEGIES - CONTRAINTE - DEFORMATION DE FISSURATION *
* -------------------------------------------------------------- *
*
npas   = 20       ;
*
* ---------------------
* fissuration = rupture
* ---------------------
 XB = (ALFA * TP1) - EPS1                       ;
 XC = XLTR1 / E                                 ;
 TFISS = TRINOME XA XB XC                       ;
 mess 'TFISS = ' TFISS ' secondes'              ;
 tpas    = TFISS / npas                         ;
 prt_th  = 'PROG' 0 'PAS' tpas TFISS            ;
 prt_th2 = prt_th ** 2                          ;
 prs_th  = (-1. * XB * prt_th) - (XA * prt_th2) ;
 prs_th  = E * prs_th                           ;
 prf_th  = 'PROG' ('DIME' prt_th)*0.            ;
* ---------
* ouverture
* ---------
 tpas   = (t1 - TFISS) / npas                             ;
 prt    = 'PROG' (TFISS + 1) (TFISS + tpas) 'PAS' tpas t1 ;
 prt2   = prt ** 2                                        ;
 prs    = 'PROG' ('DIME' prt)*0.                          ;
   b    = -1. * XC                                        ;
 prb    = 'PROG' ('DIME' prt) * b                         ;
 prf    = (-1. * XB * prt) - (XA * prt2)                  ;
 prf    = prf + prb                                       ;
 prt_th = prt_th 'ET' prt                                 ;
 prs_th = prs_th 'ET' prs                                 ;
 prf_th = prf_th 'ET' prf                                 ;
*----------
* fermeture
*----------
 XB = (ALFA * TP1) - EPS2                          ;
 XC = t1 * (EPS2 - EPS1) - b                       ;
 TFERM = TRINOME XA XB XC                          ;
 mess 'TFERM = ' TFERM ' secondes'                 ;
 tpas   = (TFERM - t1) / npas                      ;
 prt    = 'PROG' (t1 + tpas) 'PAS' tpas TFERM      ;
 prt2   = prt ** 2                                 ;
 prs    = 'PROG' ('DIME' prt)*0.                   ;
 cte    = t1 * (EPS1 - EPS2) + b                   ;
 prcte  = 'PROG' ('DIME' prt) * cte                ;
 prf    = ((-1. * XB * prt) - (XA * prt2)) + prcte ;
 prt_th = prt_th 'ET' prt                          ;
 prs_th = prs_th 'ET' prs                          ;
 prf_th = prf_th 'ET' prf                          ;
*---------------------------------------
* compression et contrainte decroissante
*---------------------------------------
 tpas  = (t2 - TFERM) / npas                      ;
 prt   = 'PROG' (TFERM + tpas) 'PAS' tpas t2      ;
 prt2  = prt ** 2                                 ;
 prcte = 'PROG' ('DIME' prt) * cte                ;
 prs   = ((-1. * XB * prt) - (XA * prt2)) + prcte ;
 prs   = E * prs                                  ;
 prf   = 'PROG' ('DIME' prt)*0.                   ;
 prt_th = prt_th 'ET' prt                         ;
 prs_th = prs_th 'ET' prs                         ;
 prf_th = prf_th 'ET' prf                         ;
*-------------------------------------
* compression et contrainte croissante
*-------------------------------------
 XB = (ALFA * TP1) - EPS3                              ;
 XC = (t1 * (EPS2 - EPS1)) + (t2 * (EPS3 - EPS2)) - b  ;
 TREOUV = TRINOME XA XB XC                             ;
 mess 'TREOUV = ' TREOUV ' secondes'                   ;
 tpas  = (TREOUV - t2) / npas                          ;
 prt   = 'PROG' (t2 + tpas) 'PAS' tpas TREOUV          ;
 prt2  = prt ** 2                                      ;
 cte   = cte + (t2 * (EPS2 - EPS3))                    ;
 prcte = 'PROG' ('DIME' prt) * cte                     ;
 prs   = ((-1. * XB * prt) - (XA * prt2)) + prcte      ;
 prs   = E * prs                                       ;
 prf   = 'PROG' ('DIME' prt)*0.                        ;
 prt_th = prt_th 'ET' prt                              ;
 prs_th = prs_th 'ET' prs                              ;
 prf_th = prf_th 'ET' prf                              ;
*------------
* reouverture
*------------
 tpas  = (t3 - TREOUV) / npas                          ;
 prt   = 'PROG' (TREOUV + tpas) 'PAS' tpas t3          ;
 prt2  = prt ** 2                                      ;
 prs   = 'PROG' ('DIME' prt)*0.                        ;
 prcte = 'PROG' ('DIME' prt) * cte                     ;
 prf   = ((-1. * XB * prt) - (XA * prt2)) + prcte      ;
 prt_th = prt_th 'ET' prt                              ;
 prs_th = prs_th 'ET' prs                              ;
 prf_th = prf_th 'ET' prf                              ;
*
 prs_th = prs_th / CONVSIG ;
 prw_th = LZ * prf_th      ;
*
'TITR' 'CONTRAINTE DANS LA DIRECTION Z'                          ;
evs = 'EVOL' 'ROUG' 'MANU' 'Temps (s)' prt_th 'SIGZ(MPa)' prs_th ;
'TITR' 'DEFORMATION DE FISSURATION DANS LA DIRECTION Z'          ;
evf = 'EVOL' 'ROUG' 'MANU' 'Temps (s)' prt_th 'EPSFZ'     prf_th ;
'TITR' 'OUVERTURE DANS LA DIRECTION Z'                           ;
evw = 'EVOL' 'ROUG' 'MANU' 'Temps (s)' prt_th 'WZ(m)'     prw_th ;
'TITR' 'RELATION CONTRAINTE/OUVERTURE DANS LA DIRECTION Z'       ;
evsw = 'EVOL' 'ROUG' 'MANU' 'WZ(m)' prw_th 'SIGZ(MPa)'    prs_th ;
*
* --------------------------*
* chargement en temperature *
* --------------------------*
TE0       = 1320. + 273.                                ;
progun    = 'PROG' ('DIME' progt)*1                     ;
progtemp  = (TP1*progt) + (TE0*progun)                  ;
'TITR' 'TEMPERATURE IMPOSEE'                            ;
EVT       = 'EVOL' 'MANU' 't(s)' progt  'T(K)' progtemp ;
si DESSI ; 'DESS' EVT ; 'FINSI'                         ;
CHTEMP    = 'MANU' 'CHPO' VOL1 1 'T' 1.                 ;
CHARTEMP  = 'CHAR' 'T' CHTEMP EVT                       ;
* ---------------------------------*
* Chargement en densite de fission *
* ---------------------------------*
progfiss     = PHIP1 * progt                                     ;
'TITR' 'DENSITE DE FISSION'                                      ;
EVFIS    = 'EVOL' 'MANU' 't(s)' progt  'fission/m3/s' progfiss   ;
si DESSI ; 'DESS' EVFIS ; 'FINSI'                                ;
CHFISS   = 'MANU' 'CHPO' VOL1 1 'DFIS' 1.                        ;
CHARFISS = 'CHAR' 'DFIS' CHFISS EVFIS                            ;
*
*
*-------------------*
* Instants calcules *
*-------------------*
LIST1 = 'PROG' 1E4  'PAS' 1E4   2.0E5 'PAS' 1E5   2.0E6 'PAS' 1E5   t3 ;
* ---------------------------------------*
* Variables internes initiales 'PORO'=PO *
* ---------------------------------------*
VAR00 = 'ZERO' MODL1 'VARINTER'                                    ;
VAR01 = 'MANU' 'CHML' MODL1 'PORO' PO  'TYPE' 'VARIABLES INTERNES' 'STRESSES' ;
VAR0 = VAR00 + VAR01                                               ;
*
CHARTOT = CHARMECA 'ET' CHARTEMP 'ET' CHARFISS             ;
*
 TAB1                          = TABLE   ;
* TAB1.'TEMPERATURES'           = TABLE   ;
 TAB1.'VARIABLES_INTERNES'     = TABLE   ;
 TAB1.'BLOCAGES_MECANIQUES'    = CLT     ;
 TAB1.'MODELE'                 = MODL1   ;
 TAB1.'CHARGEMENT'             = CHARTOT ;
 TAB1.'VARIABLES_INTERNES' . 0 = VAR0    ;
 TAB1.'CARACTERISTIQUES'       = MATR1   ;
 TAB1.'TEMPS_CALCULES'         = LIST1   ;
 TAB1.'TEMPS_SAUVES'           = LIST1   ;
*TAB1.'TALPHA_REFERENCE'       = TALPHA  ;
*
TMASAU=table;
tab1 . 'MES_SAUVEGARDES'=TMASAU;
TMASAU .'DEFTO'=VRAI;
TMASAU .'DEFIN'=VRAI;
 PASAPAS TAB1                            ;
'TEMPS' ;
*
*
TT    = TAB1 . 'TEMPS'                      ;
SS    = TAB1 . 'CONTRAINTES'                ;
VV    = TAB1 . 'VARIABLES_INTERNES'         ;
IN    = TAB1 . 'DEFORMATIONS_INELASTIQUES'  ;
NCONT = 'DIME' TAB1 . 'CONTRAINTES'         ;
*
LZEIT  = 'PROG' ;
LSIGZ  = 'PROG' ;
LW1    = 'PROG' ;
LW2    = 'PROG' ;
LW3    = 'PROG' ;
LEPSZF = 'PROG' ;
*
*
'REPE' BLOC NCONT ;
*
  IND  = &BLOC - 1         ;
  ZEIT = TT.IND            ;
*
  SIG      = SS.IND            ;
  SIGZ     = 'EXCO' SIG 'SMZZ' ;
  SIGZ_MAX = 'MAXI' SIGZ       ;
*
  VI    = VV.IND                    ;
  EI    = IN.IND                    ;
*
  W1    = 'MAXI' ('EXCO' VI 'W1')   ;
  W2    = 'MAXI' ('EXCO' VI 'W2')   ;
  W3    = 'MAXI' ('EXCO' VI 'W3')   ;
  EPSZF = 'MAXI' ('EXCO' EI 'EIZZ') ;
*
  LZEIT  = LZEIT  'ET' ('PROG' ZEIT)       ;
  LSIGZ  = LSIGZ  'ET' ('PROG' SIGZ_MAX)   ;
  LW1    = LW1    'ET' ('PROG' W1)         ;
  LW2    = LW2    'ET' ('PROG' W2)         ;
  LW3    = LW3    'ET' ('PROG' W3)         ;
  LEPSZF = LEPSZF 'ET' ('PROG' EPSZF)      ;
*
'FIN' BLOC ;
*
*
LSIGZ = LSIGZ/CONVSIG                                            ;
'TITR' 'CONTRAINTE DANS LA DIRECTION Z'                          ;
EVSIGZ = 'EVOL' 'BLEU' 'MANU' 'Temps (s)' LZEIT 'SIGZ(MPa)' LSIGZ;          ;
*
'TITR' 'OUVERTURE DANS LA DIRECTION Z'                           ;
EVWZ  = 'EVOL' 'BLEU' 'MANU' 'Temps (s)' LZEIT  'WZ(m)' LW1      ;
*
'TITR' 'DEFORMATION DE FISSURATION DANS LA DIRECTION Z'          ;
EVEPSFZ = 'EVOL' 'BLEU' 'MANU' 'Temps (s)' LZEIT  'EPSFZ' LEPSZF ;
*
'TITR' 'RELATION CONTRAINTE/OUVERTURE DANS LA DIRECTION Z'       ;
EVSIGWZ = 'EVOL' 'BLEU' 'MANU' 'WZ(m)' LW1 'SIGZ(MPa)' LSIGZ     ;
*
*
* -----------------------*
* Controle des resultats *
* -----------------------*
*
TAB               = 'TABLE'                 ;
TAB . 'TITRE'     = 'TABLE'                 ;
TAB . 'TITRE' . 1 = 'Resultat analytique'   ;
TAB . 'TITRE' . 2 = 'Resolution simplifiee' ;
*
*
'SI' DESSI                                 ;
   'TITR' 'CONTRAINTE DANS LA DIRECTION Z' ;
   'DESS' (evs 'ET' EVSIGZ) TAB 'LEGE'     ;
'FINSI'                                    ;
*
'SI' DESSI                                            ;
   'TITR' 'OUVERTURE DANS LA DIRECTION Z'             ;
   'DESS' (evw 'ET' EVWZ) TAB 'LEGE'                  ;
'FINSI'                                               ;
*
'SI' DESSI                                                 ;
   'TITR' 'DEFORMATION DE FISSURATION DANS LA DIRECTION Z' ;
   'DESS' (evf 'ET' EVEPSFZ) TAB 'LEGE'                    ;
'FINSI'                                                    ;
*
'SI' DESSI                                                           ;
   'TITR' 'RELATION CONTRAINTE/OUVERTURE DANS LA DIRECTION Z'        ;
   'DESS' (evsw 'ET' EVSIGWZ) TAB 'LEGE'                             ;
'FINSI'                                                              ;
*
*
PREX   = 5E-2                                          ;
LSOUS  = 'PROG' (0.99*TFISS) (1.06*TFISS) t1 (0.99*TFERM)  t2   (1.05*TREOUV)  t3   ;
UN     = 'PROG' ('DIME' LSOUS)*1                       ;
SZ_CAL = 'IPOL' LSOUS LZEIT   LSIGZ                    ;
SZ_ANA = 'IPOL' LSOUS prt_th  prs_th                   ;
T_SZ   = (SZ_ANA - SZ_CAL) / (SZ_ANA + UN)             ;
T_SZ   = 'MAXI' ('ABS' T_SZ)                           ;
'SI' ( T_SZ '<EG' PREX )                               ;
   'ERRE' 0                                            ;
'SINO'                                                 ;
   'MESS' 'ERREUR MAXIMALE CONTRAINTE SELON Z > ' PREX ;
   'ERRE' 5                                            ;
'FINS'                                                 ;
*
PREX    = 17E-2                                        ;
LSOUS   = 'PROG' (0.99*TFISS) (1.06*TFISS) t1 t2 t3    ;
UN      = 'PROG' ('DIME' LSOUS)*1                      ;
WRUPT   = (2.*XGFTR1) / XLTR1                          ;
ERUPT   = WRUPT / LZ                                   ;
NONZERO = (ERUPT / 1E6) * UN                           ;
EFZ_CAL = 'IPOL' LSOUS LZEIT   LEPSZF                  ;
EFZ_ANA = 'IPOL' LSOUS prt_th  prf_th                  ;
T_FZ    = (EFZ_ANA - EFZ_CAL) / (EFZ_ANA +  NONZERO)   ;
T_FZ    = 'MAXI' ('ABS' T_FZ)                          ;
'SI' ( T_FZ '<EG' PREX )                               ;
   'ERRE' 0                                            ;
'SINO'                                                 ;
   'MESS' 'ERREUR MAXIMALE DEFORMATION DE FISSURATION  SELON Z > ' PREX                            ;
   'ERRE' 5                                            ;
'FINS'                                                 ;
*
WZ_CAL  = 'IPOL' LSOUS LZEIT  LW1                      ;
WZ_ANA  = 'IPOL' LSOUS prt_th prw_th                   ;
NONZERO = (WRUPT / 1E6) * UN                           ;
T_WZ    = (WZ_ANA - WZ_CAL) / (WZ_ANA +  NONZERO)      ;
T_WZ    = 'MAXI' ('ABS' T_WZ)                          ;
'SI' ( T_WZ '<EG' PREX )                               ;
   'ERRE' 0                                            ;
'SINO'                                                 ;
   'MESS' 'ERREUR MAXIMALE OUVERTURE SELON Z > ' PREX  ;
   'ERRE' 5                                            ;
'FINS'                                                 ;
*
'FIN';














