**********************************************************************
************************************************************************
* Section : Mecanique Elastique
************************************************************************
*
* Tranfert of load for shell elements - load known for a solid model
*
*
* D. COMBESCURE
*
* F4E - 6th January 2014
********************************************************************
OPTI DIME 3 ELEM CUB8;
*
* Modele 1: Forces calculated with another software/here created manually
*
FLAGVISU = FAUX ;
*
L1 = 0.1;
L2 = 0.25;
L3 = 3.;
*
fac1 = 1;
n1 = 2*fac1;
n2 = 3*fac1;
n3 = 10*fac1;
*
p0 = (-0.5*L1) 0. 0.;
p1 = (0.5*L1) 0. 0.;
vy = 0. L2 0.;
vz = 0. 0. L3;
p0c = 0. 0. 0.;
p1c = 0. L2 0.;
p0top = p0 plus (vz);
p1top = p1 plus (vz);
*
Lig0 = D n1 p0 p1;
Sur0 = Lig0 tran n2 vy;
Vol0 = Sur0 volu n3 tran vz;
elim 0.001 (vol0 et p0top et p1top);
*
Mod0 = mode vol0 mecanique elastique CUB8;
Emat0 = 200.D9;
Nmat0 = 0.3;
romat0 = 7800.;
mat0 = MATE mod0 youn Emat0 NU Nmat0 RHO romat0;
*
rig0 = rigi Mod0 mat0;
mas0 = mass Mod0 Mat0;
*
* Uniform acceleration
*for0 = mas0*accuni;
*
* Triangular acceleration
*for0 = mas0 * acc0;
*
* Lumped force
for0 = FORC  FX 1. p0top;
*
SI FLAGVISU;
  TRAC VOL0 (VECTEUR for0 FX FY FZ) cach;
FINSI;
*
*
* Modele 1 - Mechanical model - Shell model
*
n1b = 1*fac1;
n2b = 3*fac1;
n3b = 8*fac1;
ep1 = 0.00000000001;
ep0 = (-1.)*ep1;
ep2 = ep1;
ep3 = ep1;
*
p0c = 0. 0. 0.;
p1c = 0. L2 0.;
vz = 0. 0. L3;
*
opti elem tri3;
Lig1c = D n2b p0c p1c;
vol1 = Lig1c tran n3b vz;
*
*
Mod1 = mode vol1 mecanique elastique DKT;
Emat1 = 200.D9;
Nmat1 = 0.3;
romat1 = 7800.;
mat1 = MATE mod1 youn Emat1 NU Nmat1 RHO romat1 EPAI L1;
*
rig1 = rigi Mod1 mat1;
mas1 = mass Mod1 Mat1;
*
*
bl0 = bloq depl vol1;
bl00 = bloq depl rota lig1C;
*
rigmod = rig1 et bl00;
*
tab11 = table;
tab11.'RELATION_3D' = VRAI;
vol1_3D = coq2mas mod1 mat1 tab11;
blcoq = tab11.'RELATION_3D';
*
*
* Transfert through the Lagrangian multiplier
*
*
frdep0 = for0;
*
* Relation maitre-esclave
*
* Vol0 suit Vol1_3D qui suit Vol1
*
rel2 = rela vol0 'ACCRO' vol1_3D;
rigtot = rig1 et bl00 et rel2 et blcoq;
depj1 = reso rigtot frdep0;
*
* Calcul des forces nodales a partir des deplacements sur le modele 1
frdep1 = (rig1 et bl00) * depj1;
*
SI FLAGVISU;
 oeil = 2. 2. 4.;
 TITRE 'Transfer through Lagrangian muliplier';
 trac oeil (defo vol1_3D depj1) CACH;
 trac oeil (defo vol1 depj1) CACH;
 trac oeil vol1 (vecteur frdep1 FX FY FZ) cach;
FINSI;
*
*
res0 = maxi (resu frdep0);
res1 = maxi (resu frdep1);
*
ERR = (res0 - res1)/res0;
*                                                                      *
'SI' (ERR '>' 1.E-6) ; 'ERRE' 5 ; 'FINS' ;
*
'FIN' ;






