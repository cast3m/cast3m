* fichier :  nlin_lapnpara.dgibi
************************************************************************
* Section : Mathematiques Fonctions
************************************************************************
************************************************************************
* NOM         : NLIN_LAPNPARA
* DESCRIPTION : Test tout simple sur un laplacien construit en parallèle
*               ou en séquentiel
*               On vérifie l'écart à la solution analytique dans les
*               deux cas.
*
*               Domaine  : carré [0,1]x[0,1]
*               Equation : \Delta T = 0
*               CLim     : restriction au bord de la solution exacte
*               Solution : T_exact = 2^0.5 x + \pi y
*
*
* LANGAGE     : GIBIANE-CAST3M
* AUTEUR      : Stéphane GOUNAND (CEA/DEN/DM2S/SFME/LTMF)
*               mél : gounand@semt2.smts.cea.fr
**********************************************************************
* VERSION    : v1, 19/11/2015, version initiale basée sur nlin_lapn
*                              (dix ans après !)
* HISTORIQUE : v1, 19/11/2015, création
* HISTORIQUE :
**********************************************************************
*
interact= FAUX ; graph   = FAUX ;
'OPTION' 'DIME' 2 'ELEM' 'TRI3' ;
'SI' graph ;
   'SI' interact ;
      'OPTION' 'TRAC' 'X' ;
   'SINON' ;
      'OPTION' 'TRAC' 'PSC' ;
   'FINSI' ;
'FINSI' ;
*
* Latrice du laplacien construite en parallèle ou non avec NLIN
*
'DEBPROC' LAP1 ;
'ARGUMENT' lpara*'LOGIQUE' ;
idim   = 'VALEUR' 'DIME' ;
numop  = idim ;
numder = idim ;
numvar = 1 ;
numdat = 0 ;
numcof = 0 ;
*
discg = 'LINE' ;
methgau = 'GAU7' ;
*
   A = ININLIN numop numvar numdat numcof numder ;
   A . 'VAR' . 1 . 'NOMDDL' = 'MOTS' 'T' ;
   A . 'VAR' . 1 . 'DISC'   = 'LINE' ;
* Manière simple
   A . 1 . 1 . 1  = 'LECT' ;
   A . 2 . 1 . 2  = 'LECT' ;
*
   B = ININLIN numop numvar numdat numcof numder ;
   B . 'VAR' . 1 . 'NOMDDL' = 'MOTS' 'Q' ;
   B . 'VAR' . 1 . 'DISC'   = 'LINE' ;
* Manière simple
   B . 1 . 1 . 1  = 'LECT' ;
   B . 2 . 1 . 2  = 'LECT' ;
*
   'SI' lpara ;
      nbpart = 'VALEUR' 'ASSI' ;
      _mtpart = 'PART' 'ARLE' _mt nbpart ;
      tmlapn = 'ASSI' 'TOUS' 'NLIN' discg _mtpart A B methgau ;
      mlapn = 'ET' tmlapn ;
*      mlapn = 'ETG' tmlapn ;
*      'ERREUR' stop ;
   'SINON' ;
      mlapn = 'NLIN' discg _mt A B  methgau ;
   'FINSI' ;
'RESPRO' mlapn ;
'FINPROC' ;
*
*
* Maillage
*
nx = 15 ;
ny = 20 ;
pA = 0. 0. ;   pB = 1. 0. ;
pC = 1. 1. ;   pD = 0. 1. ;
l1 = 'DROIT' nx pA pB ;
l2 = 'DROIT' ny pB pC ;
l3 = 'DROIT' nx pC pD ;
l4 = 'DROIT' ny pD pA ;
*mt = 'DALLER' l1 l2 l3 l4 ;
mt = 'SURFACE' (l1 'ET' l2 'ET' l3 'ET' l4) ;
cmt = l1 'ET' l2 'ET' l3 'ET' l4 ;
*
_mt = 'CHANGER' mt 'QUAF' ;
_cmt = 'CHANGER' cmt 'QUAF' ;
'SI' graph ;
   'TRACER' mt 'NOEUD' 'TITRE' ('CHAINE' 'Maillage') ;
'FINSI' ;
*
* Solution exacte du problème
*
xmt ymt = 'COORDONNEE'  mt ;
solex = '+' ('*' xmt ('**' 2.D0 0.5D0))
            ('*' ymt PI) ;
solex = 'NOMC' 'T' solex 'NATURE' 'DISCRET' ;
*
* Matrice du problème
*
mlapnpar = LAP1 vrai ;
mlapnseq = LAP1 faux ;
*
* Conditions aux limites
*
clim  = 'REDU' solex cmt ;
mbloc = 'BLOQUE' 'T' cmt ;
fbloc = 'DEPIMPOSE' mbloc clim ;
'SI' graph ;
   'TRACER' clim   cmt 'TITRE' ('CHAINE' 'Conditions aux limites') ;
'FINSI' ;
*
* Résoud le problème
*
mtot_seq = mlapnseq 'ET' mbloc ;
mtot_par = mlapnpar 'ET' mbloc ;
ftot = fbloc ;
*
solu_seq = 'RESOUD' mtot_seq ftot ;
solu_par = 'RESOUD' mtot_par ftot ;
*
*
*  Post-traitement et calcul de l'erreur
*
*
tsol_seq   = 'EXCO' 'T' solu_seq 'T' ;
tsol_par   = 'EXCO' 'T' solu_par 'T' ;
dif_seq = '-' solex tsol_seq ;
dif_par = '-' solex tsol_par ;
'SI' graph ;
   'TRACER' tsol   mt 'TITRE' ('CHAINE' 'Solution approchee') ;
   'TRACER' dif_seq mt 'TITRE'
         ('CHAINE' 'Solution exacte - solution approchee sequentiel') ;
   'TRACER' dif_par mt 'TITRE'
         ('CHAINE' 'Solution exacte - solution approchee parallèle') ;
'FINSI' ;
nerr_seq = '/' ('**' ('XTX' dif_seq) 0.5D0) ('NBNO' mt) ;
nerr_par = '/' ('**' ('XTX' dif_par) 0.5D0) ('NBNO' mt) ;
'OPTION' 'ECHO' 0 ;
'SAUTER' 3 'LIGNE' ;
'MESSAGE' ('CHAINE' 'Norme de lerreur sequentiel : ' nerr_seq) ;
'MESSAGE' ('CHAINE' 'Norme de lerreur parallele  : ' nerr_par) ;
'SAUTER' 3 'LIGNE' ;
'OPTION' 'ECHO' 1 ;
*
'SI' ('OU' (nerr_seq '>' 1.D-10)  (nerr_par '>' 1.D-10)) ;
   'ERREUR' 5 ;
'FINSI' ;
*
'SI' interact ;
   'OPTION' 'DONN' 5 ;
'FINSI' ;
*
* End of dgibi file NLIN_LAPNPARA
*
'FIN' ;











