* fichier :  rayo-3D-1.dgibi
************************************************************************
* Section : Thermique Rayonnement
* Section : Thermique Convection
* Section : Thermique Conduction
************************************************************************

****************************************************************
*
*  test 3D couplage conduction-rayonnement
*  REFERENCE: cas TPNV 02/89 du guide VPCS
*
*  DONNEES
*  cavité cubique de cote 1.
*
*            1000K e=1.0
*            -----
*     e=0.5 |     | e=0.5
*           |     |
*            -----
*            2000K e=0.1
*
*
*  RESULTATS
*    temperature de la surface latérale : 1214K (solution analytique)
*  Remarques :
*   2 types d'éléments pour décrire la cavité
*   option convexe pour FFOR ou bien avec plan de symetrie
*   (dans ce cas la cavite est parallelipipedique 1x2x1 d'ou
*    une solution differente)
*   calcul en permanent et en transitoire (PASAPAS)
****************************************************************

*** Options ...

    option echo 0 dime 3 elem cub8 ;

    graph = faux ;

* options supplementaires: cavite convexe ou plan de symetrie
*       cvxe = vrai ; syme = faux ;
*     cvxe = faux ; syme = faux ;
        cvxe = faux ; syme = vrai ;

     2elem = vrai; comm 2 types elements ;

*** Paramètres ...

*  proprietes physiques
   lam = 20. ;
   e_sup=1.0 ; e_inf=0.1 ; e_late = 0.5 ;
   T_sup = 1000. ; T_inf = 2000. ;

*   solution de reference
     si (syme) ; Tana = 1205.0 ; sinon; Tana = 1214.0 ; finsi;

*** Points ...

    dens 1. ;

    p1 = -0.5 -0.5  0.  ;  p2 =  0.5 -0.5 0. ;
    p3 =  0.5  0.5  0.  ;  p4 = -0.5  0.5 0. ;
    p1p2 = droi 1 p1 p2 ; p2p3 = droi 1 p2 p3 ;
    p3p4 = droi 1 p3 p4 ; p4p1 = droi 1 p4 p1 ;

*   pour le plan de symetrie
    Q4 = P4 plus (0. 0. 1.);

*** Surfaces ...

*   plan inferieur
    sbase  = p1p2 p2p3 p3p4 p4p1 dall plan ;

*   plan supérieur
     si 2elem;
    opti elem tri3 ; comm pour avoir 2 types d elements;
     sinon;
    opti elem qua4 ;
    finsi ;
    cbase = p1p2 et p2p3 et p3p4 et p4p1 ;
    sb_tri3 = surf cbase plane ;
    shaut = inve( sb_tri3 plus (0. 0. 1. ));

    opti elem qua4 ;
*   surface laterale
sfron = inve( sbase tour (0.5 -0.5 0.) (0.5  0.5  0.)    90. ) ;
sarri = inve( sbase tour (-0.5 -0.5 0.) (-0.5  0.5  0.) -90. ) ;
sdroi = inve( sbase tour ( 0.5  0.5 0.) (-0.5  0.5  0.)  90. ) ;
sgauc = inve( sbase tour ( 0.5 -0.5 0.) (-0.5 -0.5  0.) -90. ) ;

si syme;
*   sarri est le plan de symetrie: points P1 P4 Q4
    slate =  sfron           et sdroi et sgauc ;
sinon;
     slate =  sfron et sarri et sdroi et sgauc ;
finsi;

    elim 0.01 slate ;

    cavite =  sbase et shaut et slate ;

*   centre du cube ;
    c = 0. 0. 0.5 ;

*   epaisseur des parois : dz=10mmm
    dz = 0.01 ; r = 1.01 ;

    sbase_e = sbase homo r c ;
    shaut_e = shaut homo r c ;
    slate_e = slate homo r c ;

*** Volumes ...

   opti elem cub8 ;
    z1 = volu 1  sbase sbase_e ;
    z2 = volu 1  shaut shaut_e ;
    z3 = volu 1  slate slate_e ;
    tout = z1 et z2 et z3 ;

    titr 'Le maillage de la cavite' ;
    si(graph) ; trac tout ; finsi ;

*** Modélisation ...

*   conduction
    lamb = lam/dz ;

    mcd  = modeli tout thermique  ;
    k = mate mcd 'K' lamb ;
    cnd = cond mcd k ;

si cvxe;
    mr1= modeli sbase thermique  rayonnement  'CAVITE' 'CONVEXE'
        CONS 'CAV1';
    mr2= modeli shaut thermique rayonnement 'CAVITE' 'CONVEXE'
        CONS 'CAV1';
    mr3= modeli slate thermique  rayonnement 'CAVITE' 'CONVEXE'
        CONS 'CAV1';
sinon;
  si syme ;
    mr1= modeli sbase thermique  rayonnement 'CAVITE'
          'SYMETRIE' P4 P1 Q4  CONS 'CAV1'  ;
    mr2= modeli shaut thermique rayonnement 'CAVITE'
           'SYMETRIE' P4 P1 Q4  CONS 'CAV1'  ;
    mr3= modeli slate thermique  rayonnement 'CAVITE'
           'SYMETRIE' P4 P1 Q4  CONS 'CAV1'  ;
  sinon;
     mr1= modeli sbase thermique  rayonnement 'CAVITE' CONS 'CAV1' ;
     mr2= modeli shaut thermique rayonnement 'CAVITE'  CONS 'CAV1' ;
     mr3= modeli slate thermique  rayonnement 'CAVITE' CONS 'CAV1' ;
  finsi;
finsi;

    mrt = mr1 et mr2 et mr3 ;
    e1 = mate mr1 'EMIS' e_inf ;
    e2 = mate mr2 'EMIS' e_sup ;
    e3 = mate mr3 'EMIS' e_late ;
    e = e1 et e2 et e3 ;

*** calcul des facteurs de forme

*    opti impi 1; comm pour bilans et condition de reciprocite ;
    fft = ffor  mrt  e ;
*    opti 'IMPI' 0 ;

*** Quelques verifications ...

*   list mrt ; list e ;

*   list fft ;
    surf = extr fft SURF 1 1 1;
*   mess ' surfaces: ' ; list surf ;

    nface = nbel (extr fft 'MAIL');
*    mess ' nface ' nface ;
*
*   impression des facteurs de forme
*
*    si (non 2elem);

*    repe iface nface;
*        fi = extr fft MIDL 1 &iface 1;
*         mess ' ';
*         mess ' elem: ' &iface ' Fij: ' ;
*         list fi ;
*    fin iface ;

*    finsi;
*
*
    tta= prray mrt;
*    list tta ;
    tta_int = tta . 1 ;
*    list tta_int;

*    opti donn 5;

*** Matrice de  rayonnement ...

    chamr = raye mrt  fft e ;

*** Conditions aux limites ...

    c1 = bloq z1   'T' ;
    tim1 = depi c1 T_inf ;
    c2 = bloq z2   'T' ;
    tim2 = depi c2 T_sup ;

*** Initialisation de la température ...

    tp = manu chpo tout 1 'T' T_inf natu 'DIFFUS' ;

*   calcul en permanent
*   -------------------

*** Résolution (par itérations) ...

*   Coeff. de relaxation ...
    alfa = 0.4 ;

    nbpsup = nbno tout ;

    listemp = prog ;
    listres = prog ;

    maxiter =  100 ;
    critconv = 1.e-5 ;
*    opti echo 1 ;
    REPE bloc1 ;

       nbiter = &bloc1 ;

       t_cavi   = redu tp cavite ;
       te_cavi   =  chan 'CHAM' t_cavi   mrt 'GRAVITE' ;
       cr = rayn mrt  chamr te_cavi    ;

       cndtot = cnd et cr et c1 et c2 ;

       residu = cndtot * tp ;
       normres = ((xtx (exco 'Q' residu)) / nbpsup) ** 0.5 ;
*      mess '   La norme du flux résiduel = ' normres ;
       si((nbiter > 1) et (normres < critconv)) ;
          mess 'Convergence à l itération ' (nbiter-1) ;
          quitter bloc1 ;
       finsi ;
       si(nbiter > maxiter) ;
          mess 'Erreur ! Pas de convergence après ' (nbiter-1)
               ' itérations !' ;
          erre 2 ;
          quitter bloc1 ;
       finsi ;
       listres = listres et (prog normres) ;

*      mess '-----------------------------------------' ;
*      mess 'Itération N° ' &bloc1 ;

       tt = resou cndtot (tim1 et tim2) ;

       dt = exco 'T' (tt - tp) 'T' ;
       normdt = ((xtx dt) / nbpsup) ** 0.5 ;
*      mess '   La norme de delta t = ' normdt ;

       tn = (alfa * tt) + ((1.-alfa) * tp) ;
       tp =tn ;

*      mess '   Température obtenue = ' (maxi(redu tt slate)) ;

    FIN bloc1 ;
*   opti echo 1 ;

*** Post-traitement ...

    t = exco 'T' tt 'T' ;
    si(graph) ;
       titr 'Le champ de temperature final' ;
       trac tout t ;
    finsi ;
    tlate = redu t slate ;

    tsol = maxi(tlate) ;
    mess 'La solution obtenue = ' tsol ;

    err_s =  ABS((tsol - tana)/tana) ;
    err_s = err_s * 100. ;
    mess 'Erreur relative en permanent' err_s '%' ;



* calcul en transitoire
* ---------------------

    Tinit= manu chpo tout 1 'T' T_inf natu 'DIFFUS';

    tabnl = table ;
    tabnl . 'MODELE' =  mcd  et mrt;
    tabnl . 'CARACTERISTIQUES' = k et e ;

    listtemp = prog 0  0.5 10 ;
    listval  = prog 1  1   1 ;

    evchar   = evol manu 't' listtemp 'f(t)' listval ;
    tabnl . 'CHARGEMENT' = char 'TIMP' evchar (tim1 et tim2) ;
    tabnl . 'BLOCAGES_THERMIQUES' = c1 et c2 ;

    tabnl . 'TEMPERATURES' = tabl;
    tabnl . 'TEMPERATURES' . 0 = Tinit;

    tabnl . 'TEMPS_CALCULES' = prog 0 pas 0.5 10 ;

    tabnl . 'PROCEDURE_THERMIQUE' = 'DUPONT' ;
*   tabnl . 'PROCEDURE_THERMIQUE' = 'NONLINEAIRE';

*** Résolution (avec PASAPAS) ...

     pasapas tabnl ;

*** Petit post-traitement ...

    nbpas = dime (tabnl . TEMPS) ;
    listtime = prog ;
    listtemp = prog ;
    repeter surpas nbpas ;
       lindice = &surpas - 1 ;
       listtime = listtime et (prog (tabnl . TEMPS . lindice)) ;
       valT =  redu (tabnl . TEMPERATURES . lindice) slate;
*      mess (mini valT) (maxi valT) ;

       valtemp = mini valT ;
       listtemp = listtemp et (prog valtemp) ;
    fin surpas ;

*       mess (mini valT) (maxi valT) ;

    titr 'Evolution de temperature laterale' ;
    evtemp = evol manu 't' listtime 'T' listtemp ;
    si(graph) ; dess evtemp ; finsi ;

    valobt = extr listtemp (dime listtemp) ;
    err_t =  abs ((valobt - tana) / tana) ;
    err_t = 100. * err_t;

    mess 'Solution obtenue en transitoire avec PASAPAS: ' valobt ;
    mess 'soit une erreur de ' err_t  ' %' ;

*** Test de bon fonctionnement

    si ( (err_s <EG 2.e-1) et (err_t <EG 2.E-1) );
       erre 0 ;
    sinon;
       erre 5;
    finsi ;

   FIN;














