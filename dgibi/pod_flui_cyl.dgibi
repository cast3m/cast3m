************************************************************************
* NOM         : pod_flui_cyl
* DESCRIPTION : Determination de bases POD issues d'un calcul CFD
*               d'ecoulement fluide autour d'un cylindre fixe puis
*               projection des resultats CFD sur les vecteurs de base
************************************************************************
SMALL = 1.E-5 ;
$$ = EXTR (CHAI '''') 1 1 ;
OPTI 'DIME' 2 'ELEM' 'QUA4' ;
*
*
* Affichages graphiques ?
GRAPH = FAUX ;
*
* Frequence de la sortie VTK (le dossier "pod_flui_cyl" doit exister)
* [0 => PAS DE SORTIE VTK]
FVTK = 0 ;
*
*
*
* ========================
* PARAMETRES DU CALCUL CFD
* ========================
*
* Refaire le calcul CFD ?
* (sinon, on restitue le resultat sauvegarde des que NOSAUV=FAUX)
RECALC = VRAI ;
* Sauvegarde en fin de calcul ?
NOSAUV = VRAI ;
*
* Diametre du tube
DIATUB = 0.01 ;
* Hauteur totale du domaine
DIADOM = 0.03 ;
* Longueur du domaine amont
LAMONT = 0. ;
* Longueur du domaine aval
LAVAL  = 0.04 ;
* Nombre d'elements sur un huitieme de cylindre
NBELEM = 2 ;
*
* Nombre de Reynolds
RE = 100 ;
* Type d'elements finis utilises
DISCR = 'QUAF'     ;
KPRES = 'CENTREP1' ;
* Decentrement
DCENTR = 'SUPG' ;
KCMD   = 0.     ;
* Formulation des contraintes visqueuses ('FTAU' ou 'MUCONS')
CVISQ = 'MUCONS' ;
*
* Pas de temps
DT = 0.01 ;
* Duree totale
TFINAL = 3. ;
* Instant a partir duquel les objets CHPOINT sont sauvegardes
TSAUV = 2. ;
* Duree (en secondes) de la perturbation UY en entree du domaine
* [0. => PAS DE PERTURBATION]
TPERTURB = 0.2 ;
* Intensite (en % relativement a la vitesse axiale)
IPERTURB = 0.1 ;
*
*
* =============================
* PARAMETRES DU POST-TRAITEMENT
* =============================
*
* Nombre de modes POD demandes
NBMODES = 5 ;
*
*
*
************************************************************************
************************************************************************
*
OPTI 'ECHO' 0 ;
*
*
SI (NON RECALC) ;
   OPTI 'REST' 'pod_flui_cyl.xdr' ;
   REST ;
*
SINON ;
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |              C R E A T I O N   D U   M A I L L A G E              |
* |                                                                   |
* +-------------------------------------------------------------------+
*
*
*          P6                               P5
*            ###############################        A
*            #                             #        |
*            #                           # #        |
*            #                         #   #        |
*            #                       #     #        |
*            #                     #       #        |
*            #                   #         #        |
*            #                 #           #        |   DIATUB / 2
*            ######          #             #        |
*          P3      ###     #               #        |
*                     ## #                 #        |
*                       #                  #        |
*                    P2  #                 #        |
*                         #                #        |
*                         #                #        |
*            #            ##################        V
*          P0           P1                  P4
*
*            <----------->
*                RAYTUB
*
*
*
*
*     P23         P22              P5 = P13                  P12
*        ****************************************************
*        *          *                 *                     *
*        *          *                 *                     *
*        *          *      *****      *                     *
*        *          *     *     *     *                     *
*        *          *     *     *     *                     *
*        *          *     *     *     *                     *
*        *          *      *****      *                     *
*        *          *                 *                     *
*        *          *                 *                     *
*        ****************************************************
*     P20         P21                 P10                    P11
*
*        <---------->                 <--------------------->
*           LAMONT                             LAVAL
*
*
SI (DIADOM <EG (1.1*DIATUB)) ;
    ERRE 'LE CYLINDRE EST TROP GROS, DONNEES D'$$'ENTREE INVALIDES' ;
    FIN ;
FINS ;
*
RAYTUB = 0.5*DIATUB ;
RAYDOM = 0.5*DIADOM ;
*
P0 = 0.     0.     ;
P1 = RAYTUB 0.     ;
P2 = (RAYTUB RAYTUB)*(0.5**0.5) ;
P3 = 0.     RAYTUB ;
P4 = RAYDOM 0.     ;
P5 = RAYDOM RAYDOM ;
P6 = 0.     RAYDOM ;
*
*
*
* *********************************************************************
*                    M A I L L A G E   D U   T U B E
* *********************************************************************
*
CERC1 = P1 CERC NBELEM P0 P2 CERC NBELEM P0 P3 ;
RECT1 = P4 DROI NBELEM P5 DROI NBELEM P6 ;
*
* On fait des mailles presque carrees autour du cylindre
DINI1 = 0.8 * (0.25*PI*RAYTUB / NBELEM) ;
DFIN1 = 0.8 * (RAYDOM / NBELEM) ;

MAIL4 = CERC1 REGL RECT1 'DINI' DINI1 'DFIN' DFIN1 ;
*
DOMCYL = MAIL4 ET (SYME MAIL4 'DROI' P0 P6)
               ET (SYME MAIL4 'DROI' P0 P4)
               ET (SYME MAIL4 'POIN' P0) ;

DOMTOT = DOMCYL ;
*
*
*
* *********************************************************************
*            M A I L L A G E   D U   D O M A I N E   A V A L
* *********************************************************************
*
SI (LAVAL > 0.) ;
    P10 =  RAYDOM          (-1.*RAYDOM) ;
    P11 = (RAYDOM + LAVAL) (-1.*RAYDOM) ;
    P12 = (RAYDOM + LAVAL)      RAYDOM  ;
    P13 =  RAYDOM               RAYDOM  ;
*
*   On fait des mailles presque carrees dans le domaine aval
    NBEL2 = ENTI 'SUPERIEUR' (LAVAL / (1.2 * (RAYDOM / NBELEM))) ;
    NBEL4 = 2*NBELEM ;
    AVAL1 = P10 DROI NBEL2 P11 ;
    AVAL2 = P13 DROI NBEL2 P12 ;
    DOMAVAL = AVAL1 REGL NBEL4 AVAL2 ;
    DOMTOT  = DOMTOT ET DOMAVAL ;
SINON ;
    P11 = RAYDOM (-1.*RAYDOM) ;
    P12 = RAYDOM      RAYDOM  ;
    ELIM (DOMTOT ET P11 ET P12) SMALL ;
FINS ;
*
*
*
* *********************************************************************
*           M A I L L A G E   D U   D O M A I N E   A M O N T
* *********************************************************************
*
SI (LAMONT > 0.) ;
    P20 = (-1.*RAYDOM - LAMONT)  (-1.*RAYDOM) ;
    P21 = (-1.*RAYDOM)           (-1.*RAYDOM) ;
    P22 = (-1.*RAYDOM)                RAYDOM  ;
    P23 = (-1.*RAYDOM - LAMONT)       RAYDOM  ;
*
*   On fait des mailles presque carrees dans le domaine amont
    NBEL2 = ENTI 'SUPERIEUR' (LAMONT / (1.2 * (RAYDOM / NBELEM))) ;
    NBEL4 = 2*NBELEM ;
    AMONT1 = P20 DROI NBEL2 P21 ;
    AMONT2 = P23 DROI NBEL2 P22 ;
    DOMAMONT = AMONT1 REGL NBEL4 AMONT2 ;
    DOMTOT   = DOMTOT ET DOMAMONT ;
SINON ;
    P20 = (-1.*RAYDOM)  (-1.*RAYDOM) ;
    P23 = (-1.*RAYDOM)       RAYDOM  ;
    ELIM (DOMTOT ET P20 ET P23) SMALL ;
FINS ;
*
*
*
* *********************************************************************
*           E L E M E N T S   P O U R   L E S   F L U I D E S
* *********************************************************************
*
ELIM DOMTOT SMALL ;
*
DOMTOT  = CHAN DOMTOT 'QUAF' ;
$DOMTOT = MODE DOMTOT 'NAVIER_STOKES' DISCR ;
DOMTOT  = DOMA $DOMTOT 'MAILLAGE' ;
DOMPRE  = DOMA $DOMTOT KPRES ;
_DOMTOT = CONT DOMTOT ;
*
CYLIND = _DOMTOT ELEM 'APPU' 'LARG' (_DOMTOT POIN 'SPHE' P0  P1  SMALL);
ENTREE = _DOMTOT ELEM 'APPU' 'STRI' (_DOMTOT POIN 'DROI' P20 P23 SMALL);
SORTIE = _DOMTOT ELEM 'APPU' 'STRI' (_DOMTOT POIN 'DROI' P11 P12 SMALL);
PAROIB = _DOMTOT ELEM 'APPU' 'STRI' (_DOMTOT POIN 'DROI' P11 P20 SMALL);
PAROIH = _DOMTOT ELEM 'APPU' 'STRI' (_DOMTOT POIN 'DROI' P12 P23 SMALL);
PAROIS = PAROIB ET PAROIH ;
*
* Trace du domaine et des frontieres
CYLIND = COUL 'JAUN' CYLIND ;
ENTREE = COUL 'VERT' ENTREE ;
SORTIE = COUL 'ROUG' SORTIE ;
PAROIS = COUL 'BLEU' PAROIS ;
SI GRAPH ;
    TRAC (DOMTOT ET CYLIND ET ENTREE ET SORTIE ET PAROIS)
         'TITR' 'MAILLAGE DU DOMAINE ET CONDITIONS LIMITES' ;
FINS ;
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |            C A L C U L   D E   L ' E C O U L E M E N T            |
* |                                                                   |
* +-------------------------------------------------------------------+
*
* Determination automatique des parametres de l'ecoulement
RHO = 1. ;
MU  = 1.E-5 ;
NU  = MU/RHO ;
U0  = RE*NU/DIATUB ;
*
*
*
* *********************************************************************
*  C O N S E R V A T I O N   D E   L A   Q U A N T I T E   D E   M V T
* *********************************************************************
*
* Creation de la table pour EXEC
RV = EQEX 'OPTI' 'EF' 'IMPL' DCENTR 'CMD' KCMD KPRES CVISQ
          'ZONE' $DOMTOT 'OPER' 'NS' 'RHO' 'UN' 'MU' 'INCO' 'UN'
          'OPTI' 'EFM1' 'IMPL' 'CENTREE'
          'ZONE' $DOMTOT 'OPER' 'DFDT' 'RHO' 'UNM' 'DT' 'INCO' 'UN'
          ;
*
* Param\E8tres du solveur pour la vitesse
RV.'NITER' = 1  ;
RV.'OMEGA' = 1. ;
RV.'FIDT'  = 100  ;
RV.'METHINV'.'TYPINV'   = 1     ;
RV.'METHINV'.'IMPINV'   = 0     ;
RV.'METHINV'.'NITMAX'   = 700   ;
RV.'METHINV'.'PRECOND'  = 3     ;
RV.'METHINV'.'ILUTLFIL' = 4     ;
RV.'METHINV'.'ILUTDTOL' = 0.    ;
RV.'METHINV'.'RESID'    = 1.E-9 ;
RV.'METHINV'.'FCPRECT'  = 1     ;
RV.'METHINV'.'FCPRECI'  = 1     ;
*
*
*
* *********************************************************************
*            C O N S E R V A T I O N   D E   L A   M A S S E
* *********************************************************************
*
RVP = 'EQEX' 'OPTI' 'EF' KPRES
             'ZONE' $DOMTOT 'OPER' 'KBBT' (-1.) 'INCO' 'UN' 'PN'
             ;
*
* Param\E8tres du solveur pour la pression
RVP.'METHINV'.'TYPINV'   = 1      ;
RVP.'METHINV'.'IMPINV'   = 0      ;
RVP.'METHINV'.'NITMAX'   = 800    ;
RVP.'METHINV'.'PRECOND'  = 3      ;
RVP.'METHINV'.'ILUTLFIL' = 10     ;
RVP.'METHINV'.'ILUTDTOL' = 0.     ;
RVP.'METHINV'.'RESID'    = 1.E-10 ;
RVP.'METHINV'.'FCPRECT'  = 1      ;
RVP.'METHINV'.'FCPRECI'  = 1      ;
*
* Traitement du couplage vitesse-pression par projection
RV . 'PROJ' = RVP ;
*
*
*
* *********************************************************************
*           C O N D I T I O N S   A U X   F R O N T I E R E S
* *********************************************************************
*
ENTREE1 = (CHAN 'POI1' ENTREE) DIFF (P20 ET P23) ;
*
RV = EQEX RV 'CLIM'
              'UN' 'UIMP'  ENTREE1           U0
              'UN' 'UIMP' (PAROIS ET CYLIND) 0.
              'UN' 'VIMP' (PAROIS ET CYLIND) 0.
              ;
*
*
*
* *********************************************************************
*                C O N D I T I O N S   I N I T I A L E S
* *********************************************************************
*
UN0 = MANU 'CHPO' DOMTOT 2 '1UN' 0. '2UN' 0. 'NATURE' 'DISCRET' ;
PN0 = MANU 'CHPO' DOMPRE 1 'SCAL' 0. 'NATURE' 'DISCRET' ;
*
RV.'INCO' = TABL 'INCO' ;
RV.'INCO'.'UN'  = UN0 ;
RV.'INCO'.'UNM' = UN0 ;
RV.'INCO'.'PN'  = PN0 ;
RV.'INCO'.'RHO' = RHO ;
RV.'INCO'.'MU'  = MU  ;
RV.'INCO'.'DT'  = DT  ;
*
*
*
* *********************************************************************
*                          S O R T I E   V T K
* *********************************************************************
*
SI (FVTK > 0) ;
    RV = EQEX RV 'ZONE' $DOMTOT 'OPER' 'SORT_VTK' FVTK ;
FINS ;
*
FINS ;
*
DEBP SORT_VTK RX*'TABLE' ;
    CHP1 MAT1 = KOPS 'MATRIK' ;
    RV = RX.'EQEX' ;
*
    IPDT1 = RV.'PASDETPS'.'NUPASDT' ;
    FPDT1 = RX.'ARG1' ;
*
*   Sauvegardes VTK a intervalle regulier
    SI ((FPDT1 EGA 0) OU (NON (MULT IPDT1 FPDT1))) ;
        QUIT SORT_VTK ;
    FINS ;
    MESS '*****************************************************' ;
    MESS (CHAI 'SORTIE VTK POUR LE PAS DE TEMPS ' IPDT1 ' SUR ' NBITER);
    MESS '*****************************************************' ;
*
    UN1  = RV.'INCO'.'UN' ;
    SI (EXIS (RV.'INCO') 'PRESSION') ;
        PN1  = ELNO $DOMTOT (RV.'INCO'.'PRESSION') KPRES ;
    SINON ;
        PN1 = PN0 ;
    FINS ;
    TPS1 = RV.'PASDETPS'.'TPS' ;
*
    OPTI 'SORT' 'pod_flui_cyl/CFD' ;
    SORT 'VTK' DOMTOT UN1 'VITE' PN1 'PRES' 'TEMP' TPS1 ;
FINP CHP1 MAT1 ;
*
SI RECALC ;
*
*
*
* *********************************************************************
*              S A U V E G A R D E   D E S   D O N N E E S
* *********************************************************************
*
* SAUVEGARDE DE L'EVOLUTION DU CHAMP DE VITESSE DANS RV.'INCO'.'HIST'
RV.'INCO'.'HIST' = TABL ;
RV.'INCO'.'HIST'.'IDEB' = ENTI 'PROC' (TSAUV/DT) ;
RV.'INCO'.'HIST'.'TPS' = PROG ;
RV.'INCO'.'HIST'.'UN'  = SUIT ;
*
* SAUVEGARDE DE L'EVOLUTION DE LA VITESSE EN UN POINT DANS RV.'HIST'
PTSONDE = DOMTOT POIN 'PROCHE' ((1.3*RAYTUB) 0.) ;
RV.'HIST' = KHIS 'UN' 2 (MANU 'POI1' PTSONDE) ;
RV.'NISTO' = 1 ;
*
*
*
* *********************************************************************
*               P E R T U R B A T I O N   I N I T I A L E
* *********************************************************************
*
SI (TPERTURB > TSAUV) ;
    ERRE (CHAI 'INUTILE DE SAUVEGARDER DES PAS DE TEMPS OU LA '
               'PERTURBATION EST ACTIVE') ;
    FIN ;
FINS ;
RV = EQEX RV 'ZONE' $DOMTOT 'OPER' 'PERTURB' TPERTURB (IPERTURB*U0) ;
*
FINS ;
*
DEBP PERTURB RX*'TABLE' ;
    CHP1 MAT1 = KOPS 'MATRIK' ;
    RV = RX.'EQEX' ;
*
    IPDT1 = RV.'PASDETPS'.'NUPASDT' ;
    TPS1  = RV.'PASDETPS'.'TPS' ;
    DT1   = RV.'PASDETPS'.'DELTAT' ;
    TMAX1 = RX.'ARG1' ;
    AMPL1 = RX.'ARG2' ;
*
    KPERTURB = (TMAX1 > (SMALL*DT1)) ;
*
*   DEBUT DE LA PERTURBATION
    SI ((IPDT1 EGA 1) ET KPERTURB) ;
        UY1 = MANU 'CHPO' ENTREE1 1 '2UN' AMPL1 'NATU' 'DISCRET' ;
        RV.'CLIM' = RV.'CLIM' + UY1 ;
        MESS '**************************************************' ;
        MESS '*                                                *' ;
        MESS '*            DEBUT DE LA PERTURBATION            *' ;
        MESS '*                                                *' ;
        MESS '**************************************************' ;
    FINS ;
*
*   FIN DE LA PERTURBATION
    SI ((TPS1 >EG TMAX1) ET KPERTURB) ;
        UY1 = MANU 'CHPO' ENTREE1 1 '2UN' AMPL1 'NATU' 'DISCRET' ;
        RV.'CLIM' = RV.'CLIM' - UY1 ;
        IPOS1 = POSI 'PERTURB' 'DANS' RV.'LISTOPER' ;
        RV.'LISTOPER' = ENLE (RV.'LISTOPER') IPOS1 ;
        OUBL RV (CHAI IPOS1 'PERTURB') ;
        MESS '**************************************************' ;
        MESS '*                                                *' ;
        MESS '*             FIN DE LA PERTURBATION             *' ;
        MESS '*                                                *' ;
        MESS '**************************************************' ;
    FINS ;
*
FINP CHP1 MAT1 ;
*
SI RECALC ;
*
*
*
* *********************************************************************
*                           E X E C U T I O N
* *********************************************************************
*
NBITER = ENTI 'SUPERIEUR' (TFINAL / DT) ;
*
SAUT 1 'LIGNE' ;
MESS '==============================================' ;
MESS (CHAI 'NOMBRE DE NOEUDS = ' (NBNO DOMTOT)) ;
MESS (CHAI 'PAS DE TEMPS = ' DT ' S') ;
MESS (CHAI 'TEMPS FINAL = ' TFINAL ' S') ;
MESS (CHAI 'NOMBRE D'$$'ITERATIONS = ' NBITER) ;
MESS (CHAI 'VITESSE EN ENTREE = ' U0 ' M/S') ;
MESS (CHAI 'NOMBRE DE REYNOLDS = ' RE) ;
MESS (CHAI 'PERIODE DU SILLAGE (APPROX.) = ' (5.*DIATUB/U0)) ;
MESS '==============================================' ;
*
RV.'ITMA' = NBITER ;
*
EXEC RV ;
*
SI (NON NOSAUV) ;
   GRAPH1   = GRAPH   ;
   FVTK1    = FVTK    ;
   RECALC1  = RECALC  ;
   NBMODES1 = NBMODES ;
   OUBL GRAPH ;
   OUBL FVTK ;
   OUBL RECALC ;
   OUBL NBMODES ;
   OPTI 'SAUV' 'pod_flui_cyl.xdr' ;
   SAUV ;
   GRAPH   = GRAPH1   ;
   FVTK    = FVTK1    ;
   RECALC  = RECALC1  ;
   NBMODES = NBMODES1 ;
FINS ;
*
FINS ;
*
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |                   P O S T - T R A I T E M E N T                   |
* |                                                                   |
* +-------------------------------------------------------------------+
*
*
*
* ======================================================
* DETERMINATION DE LA FREQUENCE DU SILLAGE DE VON KARMAN
* ======================================================
*
EVOL1 = RV.'HIST'.'2UN' ;
LTPS1 = EXTR EVOL1 'ABSC' ;
LVIT1 = EXTR EVOL1 'ORDO' ;
*
NVIT1 = DIME LVIT1 ;
NTFR1 = ENTI 'SUPE' ((LOG NVIT1) / (LOG 2)) ;
EVOL2 = EXTR (TFR NTFR1 EVOL1 'MOPH') 'COURBE' 1 ;
DUMMY F_VK DUMMY = MAXI EVOL2 ;
T_VK = 1./F_VK ;
*
LIPOD1 = MASQ RV.'INCO'.'HIST'.'TPS' 'EGSUPE' (TFINAL - T_VK) ;
LIPOD1 = ENTI 'PROC' LIPOD1 ;
*
*
*
* ==========================================
* GRAPHIQUE DES DIFFERENTES PHASES DU CALCUL
* ==========================================
*
NVKSIMU = TFINAL/T_VK ;
NVKFORC = TPERTURB/T_VK ;
NVKSAUV = (TFINAL - TSAUV) / T_VK ;
*
SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS (CHAI 'PERIODE DU DETACHEMENT TOURBILLONNAIRE = ' T_VK ' S') ;
MESS (CHAI '=> NOMBRE DE PERIODES SIMULEES = ' (@ARR NVKSIMU 2)) ;
MESS (CHAI '=> NOMBRE DE PERIODES PERTURBEES = ' (@ARR NVKFORC 2)) ;
MESS (CHAI '=> NOMBRE DE PERIODES ENREGISTREES = ' (@ARR NVKSAUV 2)) ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
*
* ON VA DECOMPOSER EVOL1 EN 3 OU 4 SOUS-PARTIES :
*    1) INTERVALLE OU LES DONNEES SONT SAUVEGARDEES
*    2) PAS DE TEMPS RETENUS POUR CALCULER LA BASE POD
*    3) INTERVALLE OU L'ECOULEMENT S'ETABLIT APRES LA PERTURBATION
*    4) INTERVALLE INITIAL OU L'ECOULEMENT EST PERTURBE (OPTIONNEL)
*
SI GRAPH ;
*
    NDTFORC = ENTI 'PROC' (TPERTURB / DT) ;
    NDTSAUV = DIME LIPOD1 ;
    NDTSNAP = SOMM LIPOD1 ;
*
    EVTOT = VIDE 'EVOLUTIO' ;
    TAB1 = TABL ;
    TAB1 . 'TITRE' = TABL ;
    TAB1 . 'INITIAL' = TABL ;
    TAB1 . 'FINAL' = TABL ;
*
*   SAUVEGARDES
    EVTOT = EVTOT ET (COUL 'ROUG' EVOL1) ;
    TAB1 . 1 = MOT 'MARQ ROND NOLI' ;
    TAB1 . 'TITRE' . 1 = MOT 'SAUVEGARDES' ;
    TAB1 . 'INITIAL' . 1 = NBITER - NDTSAUV + 1 ;
*
*   SNAPSHOTS
    EVTOT = EVTOT ET (COUL 'VERT' EVOL1) ;
    TAB1 . 2 = MOT 'MARQ CROI NOLI' ;
    TAB1 . 'TITRE' . 2 = MOT 'SNAPSHOTS' ;
    TAB1 . 'INITIAL' . 2 = NBITER - NDTSNAP + 1 ;
*
*   APRES PERTURBATION
    EVTOT = EVTOT ET (COUL 'BLAN' EVOL1) ;
    TAB1 . 'TITRE' . 3 = MOT 'PAS DE LEGENDE' ;
    TAB1 . 'INITIAL' . 3 = NDTFORC ;
*
*   AVANT PERTURBATION
    SI (NDTFORC > 0) ;
        EVTOT = EVTOT ET (COUL 'JAUN' EVOL1) ;
        TAB1 . 4 = MOT 'TIRR' ;
        TAB1 . 'TITRE' . 4 = MOT 'PERTURBATION' ;
        TAB1 . 'FINAL' . 4 = NDTFORC ;
    FINS ;
*
*
    DESS EVTOT
         'TITR' (CHAI 'VITESSE EN AVAL DU CYLINDRE '
                      '(PERIODE = ' (@ARR T_VK 3) ' S)')
         'TITX' 'TEMPS (S)'
         'TITY' 'VITESSE (M/S)'
         'POSY' 'EXCE'
         'GRIL' 'GRIS'
         'LEGE' TAB1 ;
FINS ;
*
*
*
* ====================
* CALCUL DES MODES POD
* ====================
*
LMO1 = MOTS '1UN' '2UN' ;
OPTI 'INCO' LMO1 LMO1 ;
*
* LVITE1/LTEMP1 => tous les pas de temps sauvegardes
LVITE1 = RV.'INCO'.'HIST'.'UN' ;
LTEMP1 = RV.'INCO'.'HIST'.'TPS' ;
*
* ON ENLEVE LA VALEUR MOYENNE
NBTPS1 = DIME LTEMP1 ;
CHPTOT = VIDE 'CHPOINT' ;
REPE KK NBTPS1 ;
    CHPTOT = CHPTOT + (EXTR LVITE1 &KK) ;
FIN KK ;
CHPTOT = CHPTOT * (1./NBTPS1) ;
REPE KK NBTPS1 ;
    CHPO1 = (EXTR LVITE1 &KK) - CHPTOT ;
    REMP LVITE1 &KK CHPO1 ;
FIN KK ;
*
* LSNAP1/LTEMP2 => les pas de temps pour la POD (derniere periode slt.)
LENTI1 = POSI 1 'DANS' LIPOD1 'TOUS' ;
LSNAP1 = EXTR LVITE1 LENTI1 ;
LTEMP2 = EXTR LTEMP1 LENTI1 ;
*
*
* CREATION D'UNE MATRICE MASSE CONSISTENTE
* A = ININLIN 1 1 0 0 2 ;
* A . 'VAR' . 1 . 'NOMDDL' = MOTS '1UN' ;
* A . 'VAR' . 1 . 'DISC'   = 'QUAF' ;
* A . 1 . 1 . 0 = 'LECT' ;
* B = ININLIN 1 1 0 0 2 ;
* B . 'VAR' . 1 . 'NOMDDL' = MOTS '1UN' ;
* B . 'VAR' . 1 . 'DISC'   = 'QUAF' ;
* B . 1 . 1 . 0 = 'LECT' ;
* RIG1A = NLIN 'QUAF' DOMTOT A B 'GAU4' ;
* A . 'VAR' . 1 . 'NOMDDL' = MOTS '2UN' ;
* B . 'VAR' . 1 . 'NOMDDL' = MOTS '2UN' ;
* RIG1B = NLIN 'QUAF' DOMTOT A B 'GAU4' ;
* MASS1 = RIG1A ET RIG1B ;
* MASS1 = CHAN MASS1 'INCO' LMO1 LMO1 LMO1 LMO1 'SYME' ;
*
* CREATION D'UNE MATRICE MASSE DIAGONALE
CHPO1 = DOMA $DOMTOT 'XXDIAGSI' ;
MASS1 = MANU 'RIGI' 'DIAG' ((NOMC CHPO1 '1UN') + (NOMC CHPO1 '2UN')) ;
*
* CALCUL DE LA BASE AVEC DIFFERENTES METHODES
TPOD1 = POD LSNAP1 'SNAPSHOTS' MASS1 NBMODES 'TBAS' ;
TPOD2 = POD LSNAP1 'CLASSIQUE' MASS1 NBMODES 'TBAS' ;
TPOD3 = POD LSNAP1 'SNAPSHOTS' NBMODES       'TBAS' ;
TPOD4 = POD LSNAP1 'CLASSIQUE' NBMODES       'TBAS' ;
*
* NORMALISATION EUCLIDIENNE
TPOD1 = NNOR 'EUCL' TPOD1 MASS1 ;
TPOD2 = NNOR 'EUCL' TPOD2 MASS1 ;
TPOD3 = NNOR 'EUCL' TPOD3 ;
TPOD4 = NNOR 'EUCL' TPOD4 ;
*
*
*
* ==========================================
* VISUALISATION DES MODES ET VALEURS PROPRES
* ==========================================
*
************************************************************************
* TAB2LIST = EXTRAIT DE LA TABLE TAB1 DE SOUS-TYPE 'BASE_MODALE' LE
*            LISTCHPO DES NB1 PREMIERS VECTEURS PROPRES ET LE LISTREEL
*            DES NB1 PREMIERES VALEURS PROPRES
DEBP TAB2LIST TAB1*'TABLE' NB1*'ENTIER' ;
   LVEC1 = SUIT ;
   LVAL1 = PROG ;
   REPE K NB1 ;
      VEC1  = TAB1.'MODES'.&K.'DEFORMEE_MODALE' ;
      VAL1  = (2.*PI*TAB1.'MODES'.&K.'FREQUENCE') ** 2 ;
      LVEC1 = LVEC1 ET VEC1 ;
      LVAL1 = LVAL1 ET VAL1 ;
   FIN K ;
FINP LVEC1 LVAL1 ;
************************************************************************
*
LMOD1 LAMB1 = TAB2LIST TPOD1 NBMODES ;
LMOD2 LAMB2 = TAB2LIST TPOD2 NBMODES ;
LMOD3 LAMB3 = TAB2LIST TPOD3 NBMODES ;
LMOD4 LAMB4 = TAB2LIST TPOD4 NBMODES ;
*
SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'POD "SNAPSHOTS" MATR1' ; LIST LAMB1 ;
MESS ' ' ;
MESS 'POD "CLASSIQUE" MATR1' ; LIST LAMB2 ;
MESS ' ' ;
MESS 'POD "SNAPSHOTS"' ; LIST LAMB3 ;
MESS ' ' ;
MESS 'POD "CLASSIQUE"' ; LIST LAMB4 ;
MESS ' ' ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
*
SI GRAPH ;
   THIST = TABL ;
   THIST.'NOMS' = TABL ;
   REPE K NBMODES ;
      THIST.'NOMS'.&K = &K ;
   FIN K ;
*
   EV1 TA1 = @HISTOGR LAMB1 THIST VRAI ;
   EV2 TA2 = @HISTOGR LAMB3 THIST VRAI ;
*
   YMIN1 = MINI LAMB1 ;
   YMAX1 = MAXI LAMB1 ;
   DESS EV1 'TITR' (CHAI 'VALEURS PROPRES : POD AVEC MATRICE')
            'TITX' ' ' 'TITY' 'VALEUR PROPRE'
            'LOGY' 'YBOR' YMIN1 YMAX1 'XBOR' 0. NBMODES 'XGRA' NBMODES
            'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'GRIS' TA1 ;
*
   YMIN2 = MINI LAMB3 ;
   YMAX2 = MAXI LAMB3 ;
   DESS EV2 'TITR' (CHAI 'VALEURS PROPRES : POD SANS MATRICE')
            'TITX' ' ' 'TITY' 'VALEUR PROPRE'
            'LOGY' 'YBOR' YMIN2 YMAX2 'XBOR' 0. NBMODES 'XGRA' NBMODES
            'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'GRIS' TA2 ;
FINS ;
*
*
************************************************************************
* VISU_POD = AFFICHAGE GRAPHIQUE DES MODES POD FLUIDES
DEBP VISU_POD MOT1*'MOT' LCHP1*'LISTCHPO' LFLO1*'LISTREEL' ;
    REPE BLOC1 NBMODES ;
        LAM1 = EXTR LFLO1 &BLOC1 ;
        TRAC DOMTOT (EXTR LCHP1 &BLOC1)
            'TITR' (CHAI MOT1 ' MODE NUMERO ' &BLOC1
                              ' / VAL. PROPRE = ' LAM1) ;
    FIN BLOC1 ;
FINP ;
************************************************************************
*
SI GRAPH ;
    VISU_POD '"SNAPSHOTS" MASS1' LMOD1 LAMB1 ;
    VISU_POD '"CLASSIQUE" MASS1' LMOD2 LAMB2 ;
    VISU_POD '"SNAPSHOTS" ' LMOD3 LAMB3 ;
    VISU_POD '"SNAPSHOTS" ' LMOD4 LAMB4 ;
FINS ;
*
*
*
* ================================
* VERIFICATION DE L'ORTHONORMALITE
* ================================
*
************************************************************************
* TESTBAS1 = AFFICHE LES PRODUITS SCALAIRES (AVEC OU SANS MATRICE MATR1)
*            ENTRE LES VECTEURS DE BASE LVEC1 PRIS DEUX A DEUX
DEBP TESTBAS1 LVEC1*'LISTCHPO' RIGI1/'RIGIDITE' MTIT1*'MOT' ;
   ZRIGI1 = EXIS RIGI1 ;
   SI (NON ZRIGI1) ;
      COMP1 = EXTR (EXTR LVEC1 1) 'COMP' ;
   FINS ;
   LPS1 = PROG ;
   NVEC1 = DIME LVEC1 ;
   REPE I NVEC1 ;
      VEC1 = EXTR LVEC1 &I ;
      REPE J NVEC1 ;
         VEC2 = EXTR LVEC1 &J ;
         SI ZRIGI1 ;
            XPS1 = YTMX RIGI1 VEC1 VEC2 ;
         SINON ;
            XPS1 = XTY VEC1 VEC2 COMP1 COMP1 ;
         FINS ;
         LPS1 = LPS1 ET XPS1 ;
      FIN J ;
   FIN I ;
*
   MTIT2 = CHAI 'VERIFICATION DE L' $$  'ORTHOGONALITE DES MODES : ' ;
   TABLO2D NVEC1 NVEC1 LPS1 (CHAI MTIT2 MTIT1) ;
*    TABLO3D NVEC1 NVEC1 LPS1 MTIT1 ;
FINP ;
************************************************************************
*
* EN THEORIE :  (PHI_i,PHI_j)=d_ij
SI GRAPH ;
   TESTBAS1 LMOD1 MASS1 'POD "SNAPSHOTS" MASS1' ;
   TESTBAS1 LMOD2 MASS1 'POD "CLASSIQUE" MASS1' ;
   TESTBAS1 LMOD3       'POD "SNAPSHOTS"' ;
   TESTBAS1 LMOD4       'POD "CLASSIQUE"' ;
FINS ;
*
*
*
* =============================================
* VERIFICATION DE LA NON-CORRELATION TEMPORELLE
* =============================================
*
************************************************************************
* TESTBAS2 = AFFICHE LE COEFFICIENT DE CORRELATION ENTRE LES EVOLUTIONS
*            TEMPORELLES DES COEFFICIENTS DE PROJECTION PRIS DEUX A DEUX
DEBP TESTBAS2 TBAS1*'TABLE' RIGI1/'RIGIDITE' ZERO1*'FLOTTANT'
              MTIT1*'MOT' ;
   SI (EXIS RIGI1) ;
      EVTOT1 = EVOL 'PJBA' LVITE1 LTEMP1 TBAS1 RIGI1 ;
   SINON ;
      EVTOT1 = EVOL 'PJBA' LVITE1 LTEMP1 TBAS1 ;
   FINS ;
   LPS1 = PROG ;
   NMOD1 = DIME EVTOT1 ;
   NTPS1 = DIME LTEMP1 ;
   TEMP1 = (EXTR LTEMP1 NTPS1) - (EXTR LTEMP1 1) ;
   REPE I NMOD1 ;
      COEF1 = EXTR EVTOT1 'COUR' &I ;
      REPE J NMOD1 ;
         COEF2 = EXTR EVTOT1 'COUR' &J ;
         COR12 = (INTG (COEF1 * COEF2)) / TEMP1 ;
         LPS1 = LPS1 ET COR12 ;
      FIN J ;
   FIN I ;
*
   MTIT2 = CHAI 'VERIFICATION DE LA NON CORRELATION DES MODES : ' ;
*    TABLO2D 'LOGA' NMOD1 NMOD1 LPS1 (CHAI MTIT2 MTIT1) ;
   TABLO3D 'LOGA' ZERO1 NMOD1 NMOD1 LPS1 (CHAI MTIT2 MTIT1) ;
FINP LPS1 ;
************************************************************************
*
* EN THEORIE (POUR LA POD) :  moyt(ALPHA_i(t)*ALPHA_j(t))=d_ij*lambda_i
SI GRAPH ;
   TESTBAS2 TPOD1 MASS1 (MINI LAMB1) 'POD "SNAPSHOTS" MASS1' ;
   TESTBAS2 TPOD2 MASS1 (MINI LAMB2) 'POD "CLASSIQUE" MASS1' ;
   TESTBAS2 TPOD3       (MINI LAMB3) 'POD "SNAPSHOTS"' ;
   TESTBAS2 TPOD4       (MINI LAMB4) 'POD "CLASSIQUE"' ;
FINS ;
*
*
*
* ==========================================================
* RECONSTRUCTION DE LA VITESSE AVAL SUR LES N PREMIERS MODES
* ==========================================================
*
PJBPOD1 = PJBA LVITE1 TPOD1 MASS1 ;
PJBPOD2 = PJBA LVITE1 TPOD2 MASS1 ;
PJBPOD3 = PJBA LVITE1 TPOD3 ;
PJBPOD4 = PJBA LVITE1 TPOD4 ;
*
SI GRAPH ;
   TLEG4 = TABL ;
   TLEG4.'TITRE' = TABL ;
   TLEG4 . 3 = 'TIRR' ;
   TLEG4 . 5 = 'TIRR' ;
   TLEG4.'TITRE' . 1 = MOT 'Simulation' ;
   TLEG4.'TITRE' . 2 = MOT 'POD "SNAPSHOTS" MASS1' ;
   TLEG4.'TITRE' . 3 = MOT 'POD "CLASSIQUE" MASS1' ;
   TLEG4.'TITRE' . 4 = MOT 'POD "SNAPSHOTS"' ;
   TLEG4.'TITRE' . 5 = MOT 'POD "CLASSIQUE"' ;
*
   PT1 = P4 ;
*
   EV1 = EVOL 'BLAN' 'TEMP' LVITE1 LTEMP1 '2UN' PT1 ;
   REPE II NBMODES ;
      EV2 = EVOL 'ROUG' 'RECO' PJBPOD1 LTEMP1 TPOD1 &II '2UN' PT1 ;
      EV3 = EVOL 'ORAN' 'RECO' PJBPOD2 LTEMP1 TPOD2 &II '2UN' PT1 ;
      EV4 = EVOL 'VERT' 'RECO' PJBPOD3 LTEMP1 TPOD3 &II '2UN' PT1 ;
      EV5 = EVOL 'OCEA' 'RECO' PJBPOD4 LTEMP1 TPOD4 &II '2UN' PT1 ;
*
      DESS (EV1 ET EV2 ET EV3 ET EV4 ET EV5)
            'TITR' (CHAI 'RECONSTRUCTION SUR ' &II ' MODE(S)')
            'TITX' 'TEMPS (S)'
            'TITY' 'Uy AVAL (M/S)'
            'POSX' 'EXCE'
            'POSY' 'EXCE'
            'LEGE' TLEG4 ;
   FIN II ;
FINS ;
*
*
*
* ==============================================================
* RECONSTRUCTION DE L'ENERGIE CINETIQUE SUR LES N PREMIERS MODES
* ==============================================================
*
NMOD1 = NBMODES + 1 ;
NBAR1 = (NMOD1*4) + 1 ;
LHIS1 = PROG NBAR1*0. ;
NBAR2 = (3*NBMODES) + 1 ;
LHIS2 = PROG NBAR2*0. ;
*
REPE II NBMODES ;
   LPOD1 = RECO PJBPOD1 TPOD1 &II ;
   LPOD2 = RECO PJBPOD2 TPOD2 &II ;
   LPOD3 = RECO PJBPOD3 TPOD3 &II ;
   LPOD4 = RECO PJBPOD4 TPOD4 &II ;
*
*  CALCUL DE L'ENERGIE EN FONCTION DU TEMPS
   LXVIT1 LXPOD1 LXPOD2 LXPOD3 LXPOD4 = VIDE 'LISTREEL'*5 ;
   REPE IT NBTPS1 ;
      VIT1 = EXTR LVITE1 &IT ;
      POD1 = EXTR LPOD1  &IT ;
      POD2 = EXTR LPOD2  &IT ;
      POD3 = EXTR LPOD3  &IT ;
      POD4 = EXTR LPOD4  &IT ;
*
      XVIT1 = 0.5*(XTMX VIT1 MASS1) ;
      XPOD1 = 0.5*(XTMX POD1 MASS1) ;
      XPOD2 = 0.5*(XTMX POD2 MASS1) ;
      XPOD3 = 0.5*(XTMX POD3 MASS1) ;
      XPOD4 = 0.5*(XTMX POD4 MASS1) ;
*
      LXVIT1 = LXVIT1 ET XVIT1 ;
      LXPOD1 = LXPOD1 ET XPOD1 ;
      LXPOD2 = LXPOD2 ET XPOD2 ;
      LXPOD3 = LXPOD3 ET XPOD3 ;
      LXPOD4 = LXPOD4 ET XPOD4 ;
   FIN IT ;
*
   EVIT1 = EVOL 'BLAN' 'MANU' LTEMP1 LXVIT1 ;
   EPOD1 = EVOL 'ROUG' 'MANU' LTEMP1 LXPOD1 ;
   EPOD2 = EVOL 'ORAN' 'MANU' LTEMP1 LXPOD2 ;
   EPOD3 = EVOL 'VERT' 'MANU' LTEMP1 LXPOD3 ;
   EPOD4 = EVOL 'OCEA' 'MANU' LTEMP1 LXPOD4 ;
*
   SI GRAPH ;
      DESS (EVIT1 ET EPOD1 ET EPOD2 ET EPOD3 ET EPOD4)
            'TITR' (CHAI 'RECONSTRUCTION SUR ' &II ' MODE(S)')
            'TITX' 'TEMPS (S)'
            'TITY' 'ENERGIE CINET. (J)'
            'POSX' 'EXCE'
            'POSY' 'EXCE'
            'LEGE' TLEG4 ;
   FINS ;
*
*  INTEGRATION TEMPORELLE ET MISE A JOUR DES HISTOGRAMMES
   XVIT1 =  EXTR (INTG EVIT1) 1 ;
   XPOD1 = (EXTR (INTG EPOD1) 1) / XVIT1 * 100 ;
   XPOD2 = (EXTR (INTG EPOD2) 1) / XVIT1 * 100 ;
   XPOD3 = (EXTR (INTG EPOD3) 1) / XVIT1 * 100 ;
   XPOD4 = (EXTR (INTG EPOD4) 1) / XVIT1 * 100 ;

   REMP LHIS1 (        1+&II) XPOD1 ;
   REMP LHIS1 (  NMOD1+1+&II) XPOD2 ;
   REMP LHIS1 (2*NMOD1+1+&II) XPOD3 ;
   REMP LHIS1 (3*NMOD1+1+&II) XPOD4 ;

   REMP LHIS2 ((&II - 1)*3 + 2) XPOD3 ;
   REMP LHIS2 ((&II - 1)*3 + 3) XPOD1 ;
FIN II ;
*
*
*
* ======================
* ENERGIE TOTALE CUMULEE
* ======================
*
*
SI GRAPH ;
*
*  GRAPHIQUE 1
*  ***********
*
   TNOM1 = TABL ;
   TNOM1 . (  NMOD1) = MOT 'POD SNAP RIG' ;
   TNOM1 . (2*NMOD1) = MOT 'POD CLAS RIG' ;
   TNOM1 . (3*NMOD1) = MOT 'POD SNAP' ;
   TNOM1 . (4*NMOD1) = MOT 'POD CLAS' ;
*
   THIS1 = TABL ;
   THIS1.'COUL' = MOTS NMOD1*'ROUG' NMOD1*'ORAN'
                       NMOD1*'VERT' NMOD1*'OCEA' ;
   THIS1.'LARG' = PROG NBAR1*1. ;
   THIS1.'ESPA' = 0. ;
   THIS1.'NOMS' = TNOM1 ;
*
   EVOL1 TABL1 = @HISTOGR LHIS1 THIS1 VRAI ;
   OUBL TABL1 1 ;
*
   EVMAX = EVOL 'GRIS' 'MANU' (PROG 0. NBAR1) (PROG 100. 100.) ;
*
   DESS (EVMAX ET EVOL1) TABL1
        'TITR' (CHAI 'ENERGIE DU SIGNAL RECONSTRUIT EN FONCTION DU '
                     'NOMBRE DE MODES RETENUS')
        'TITY' 'ENERGIE (%)'
        'YBOR' 0. 150. 'XBOR' 0. NBAR1 'XGRA' NBAR1 'YGRA' 10.
        'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' ;
*
*
*  GRAPHIQUE 2
*  ***********
*
   TNOM2 = TABL ;
   REPE KK NBMODES ;
      K1 = (&KK - 1) * 3 ;
      TNOM2.(K1 + 2) = &KK ;
      TNOM2.(K1 + 3) = &KK ;
   FIN KK ;
*
   THIS2 = TABL ;
   THIS2.'COUL' = MOTS 'BLAN' 'OLIV' 'ROUG' ;
   THIS2.'LARG' = PROG NBAR2*1. ;
   THIS2.'ESPA' = 0. ;
   THIS2.'NOMS' = TNOM2 ;
*
   EVOL2 TABL2 = @HISTOGR LHIS2 THIS2 VRAI ;
*
   TABL2.'TITRE' = TABL ;
   TABL2.'TITRE' . 2 = MOT 'POD (SANS MATRICE)' ;
   TABL2.'TITRE' . 3 = MOT 'POD (AVEC MATRICE)' ;
   REPE KK NBAR2 ;
      SI ((&KK >EG 2) ET (&KK <EG 3)) ;
         ITER KK ;
      FINS ;
      TABL2.'TITRE'.&KK = MOT 'PAS DE LEGENDE' ;
   FIN KK ;
*
   DESS EVOL2
        'TITR' (CHAI 'ENERGIE DU SIGNAL RECONSTRUIT EN FONCTION DU '
                     'NOMBRE DE MODES RETENUS')
        'TITY' 'ENERGIE (%)'
        'YBOR' 0. 100. 'XBOR' 0. NBAR2 'XGRA' NBAR2 'YGRA' 10.
        'POSX' 'EXCE' 'POSY' 'EXCE' 'GRIL' 'TIRR' 'GRIS' 'LEGE' TABL2 ;
*
FINS ;
*
*
XNRJPOD1 = EXTR LHIS2 (NBAR2 - 2) ;
XNRJPOD2 = EXTR LHIS2 (NBAR2 - 1) ;
SAUT 1 'LIGNE' ;
MESS '************************************' ;
MESS 'LE SIGNAL RECONSTRUIT SUR ' NBMODES ' MODES CONTIENT :' ;
MESS '    ' (@ARR XNRJPOD1 2) '% DE L' $$ 'ENERGIE AVEC POD' ;
MESS '    ' (@ARR XNRJPOD2 2) '% DE L' $$ 'ENERGIE AVEC POD MATR' ;
MESS '************************************' ;
SAUT 1 'LIGNE' ;
*
*
OPTI 'ECHO' 1 ;
*
*
*
*
* +-------------------------------------------------------------------+
* |                                                                   |
* |               T E S T S   D E   V A L I D A T I O N               |
* |                                                                   |
* +-------------------------------------------------------------------+
*
* 1) POD "SNAPSHOTS" ET "CLASSIQUE" DOIVENT DONNER LES MEMES RESULTATS
SI (NEG (SOMM LAMB1) (SOMM LAMB2) 1.E-10) ;
   ERRE 5 ;
FINS ;
SI (NEG (SOMM LAMB3) (SOMM LAMB4) 1.E-10) ;
   ERRE 5 ;
FINS ;
*
* 2) LA RECONSTRUCTION POD SUR 10 MODES DOIT CONTENIR AU MOINS 98% DE
*    L'ENERGIE
SI (XNRJPOD2 < 98.) ;
   ERRE 5 ;
FINS ;
*
*
*
FIN ;
*










