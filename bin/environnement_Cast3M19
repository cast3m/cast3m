#!/bin/bash
# Definition des variables d'environnement

if [ "${CASTEM_VERSION}" == "" ]   ; then CASTEM_VERSION=19         ; fi
if [ "${CASTEM_REVISION}" == "" ]  ; then CASTEM_REVISION=1     ; fi
if [ "${CASTEM_PLATEFORME}" == "" ]; then CASTEM_PLATEFORME=Linux ; fi
if [ "${CASTEM_REP}" == "" ]       ; then CASTEM_REP=/opt/Cast3M-2019-1          ; fi

# Choix du Type de licence
if [ -d ${CASTEM_REP}/licence ] || [ "$LICENCETYPE" == "INDUS" ] && [ ! "$LICENCETYPE" == "EDURE" ]; then
# Cas de la licence INDUSTRIELLE
  LICENCETYPE="INDUS"
else
# Cas de la licence EDUCATION - RECHERCHE
  LICENCETYPE="EDURE"
fi

# Detection de l'architecture ou forcee si BIT est defini dans l'environnement
if [ "`uname -m`" == "x86_64" ] || [ "$BIT" == "64" ] && [ ! "$BIT" == "32" ] ; then
  BIT="64"
  GNU_VER="8.2.0"
  GNU_PATH=${CASTEM_REP}/GCC/GCC-x86_64
  export TFELHOME=${CASTEM_REP}/MFRONT/mfront-x86_64
else
  BIT="32"
  GNU_VER="6.3.0"
  GNU_PATH=${CASTEM_REP}/GCC/GCC-i686
  export TFELHOME=${CASTEM_REP}/MFRONT/mfront-i686
fi

# Repertoires lies a MPI (includes)
# Variable d'environnement definissant la commande MPI : MPI_RUNCMD
if [ "${MPI_LIBREP}" == "" ]  ; then MPI_LIBREP=${CASTEM_REP}/mpi/mpi${BIT}/lib  ; fi
if [ "${MPI_EXECREP}" == "" ] ; then MPI_EXECREP=${CASTEM_REP}/mpi/mpi${BIT}/bin ; fi
if [ "${MPI_INCREP}" == "" ]  ; then MPI_INCREP=${CASTEM_REP}/mpi/mpi${BIT}/include ; fi
if [ "${OPAL_PREFIX}" == "" ] ; then export OPAL_PREFIX=${CASTEM_REP}/mpi/mpi${BIT} ; fi

# Repertoire pour les librairies necessaires (pour l'execution ou l'edition des liens)
if [ "${CASTEM_PLATEFORME}" == "Linux" ]; then
  export LD_LIBRARY_PATH="${CASTEM_REP}/lib${BIT}:${GNU_PATH}/lib:${GNU_PATH}/lib64:${MPI_LIBREP}:${TFELHOME}/lib:./src:$LD_LIBRARY_PATH"
  # Parfois "ld" ne trouve pas crt1.o il faut ajouter des repertoires a LIBRARY_PATH
  export LIBRARY_PATH="${LIBRARY_PATH}:/usr/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/i386-linux-gnu"
elif [ "${CASTEM_PLATEFORME}" == "MAC" ]; then
  export DYLD_LIBRARY_PATH="${CASTEM_REP}/lib${BIT}:${GNU_PATH}/lib:${GNU_PATH}/lib64:${MPI_LIBREP}:${DYLD_LIBRARY_PATH}"
fi

# Ajout du chemin vers mpirun au PATH
if  [ -x ${MPI_EXECREP}/mpirun ]; then
  export PATH=${MPI_EXECREP}:$PATH
fi

# Detection de la variable d'environnement GFORTRAN
if [ "$GFORTRAN" == "" ] ; then
  GFORTRAN=${GNU_PATH}/bin/gfortran-${GNU_VER}
  alias gfortran=gfortran-${GNU_VER}
fi

if [ "$GFORTRAN" == "" ] ; then
  GFORBIN="FAUX"
else
  GFORBIN="VRAI"
fi

# Detection de la variable d'environnement GCC
if [ "$GCC" == "" ] ; then
  GCC=${GNU_PATH}/bin/gcc-${GNU_VER}
  alias gcc=gcc-${GNU_VER}
fi

if [ "$GCC" == "" ] ; then
  GCCBIN="FAUX"
else
  GCCBIN="VRAI"
fi

# Ajout au PATH du repertoire contenant les binaires
export PATH=${CASTEM_REP}/bin:${GNU_PATH}/bin:${TFELHOME}/bin:$PATH
