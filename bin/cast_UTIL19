#!/bin/bash

#Recuperation des variables d'environnement
if [ "${CASTEM_VERSION}" == "" ]   ; then CASTEM_VERSION=19                                     ; fi
if [ "${CASTEM_REP}" == "" ]       ; then CASTEM_REP="$( cd "$( dirname "${BASH_SOURCE[0]}")/.." && pwd )"; fi
source ${CASTEM_REP}/bin/environnement_Cast3M${CASTEM_VERSION}

castScript="castem${CASTEM_VERSION}"

# Nettoyage preliminaire
[ -f UTILNOTI  ] && rm -f UTILNOTI
[ -f UTILPROC  ] && rm -f UTILPROC
[ -f ZZZ_Procedures_ERREURS.txt ] && rm -f ZZZ_Procedures_ERREURS.txt
[ -f ZZZ_Notices_ERREURS.txt    ] && rm -f ZZZ_Notices_ERREURS.txt

ETOILE="__________________________________________________________________________"


########################################################################
# PROCEDURES --> UTILPROC
########################################################################
nb_proc=`( ls -1 | fgrep '.procedur' | wc -l )`
if [ $nb_proc -gt 0 ] ; then

  echo "${ETOILE}"
  echo "|                     LISTE DES PROCEDURES UTILISATEUR                   |"
  echo "${ETOILE}"

  for i in *.procedur ; do
    # Affichage du nom de la procedure
    echo "| ${i}"

    # Concatenation des procedures en une seule
    cat ${i} >> ZZZ_proc.procedur
  done

  # Ajout des $$$$ ý la toute fin du fichier
  # ATTENTION : Ceci sera retire si toutes les procedures se terminent par $$$$
  echo '$$$$' >> ZZZ_proc.procedur

  # Generation du fichier .dgibi
  echo "util proc 'ZZZ_proc.procedur';"  >  ZZZ_procedur.dgibi
  echo "fin;"                            >> ZZZ_procedur.dgibi

  # Lancement de Cast3M
  $castScript ZZZ_procedur.dgibi > ZZZ_proc.res 2>&1
  rm -f ZZZ_proc.res ZZZ_proc.procedur ZZZ_procedur.dgibi ZZZ_procedur.trace

  # Generation de CAST3M.PROC si ce dernier n'existe pas
  if [ ! -f ${CASTEM_REP}/data/CAST3M.PROC ] ; then
    mv    UTILPROC ${CASTEM_REP}/data/CAST3M.PROC
  fi
fi


########################################################################
# NOTICES --> UTILNOTI
########################################################################
nb_noti=`( ls -1 | fgrep '.notice' | wc -l )`
if [ $nb_noti -gt 0 ] ; then

  # La notices '*.notice' est supprimee : Elle est en double avec etoil.notice
  # if [ -f ./'*.notice'  ]; then \rm -f ./'*.notice' ; fi

  # Les notices avec des noms speciaux sont renommees elles font planter les scripts
  if [ -f ./'SPAL.notice'  ]; then mv ./'SPAL.notice'  spal.notice             ; fi
  if [ -f ./'<eg.notice'   ]; then mv ./'<eg.notice'   aaa_inf_egal.notice     ; fi
  if [ -f ./'>eg.notice'   ]; then mv ./'>eg.notice'   aaa_sup_egal.notice     ; fi
  if [ -f ./'<.notice'     ]; then mv ./'<.notice'     aaa_inf_strict.notice   ; fi
  if [ -f ./'>.notice'     ]; then mv ./'>.notice'     aaa_sup_strict.notice   ; fi
  if [ -f ./'+.notice'     ]; then mv ./'+.notice'     aaa_addition.notice     ; fi
  if [ -f ./'-.notice'     ]; then mv ./'-.notice'     aaa_soustraction.notice ; fi
  if [ -f ./'etoil.notice' ]; then mv ./'etoil.notice' aaa_produit.notice      ; fi
  if [ -f ./'*.notice'     ]; then mv ./'*.notice'     aaa_produit2.notice     ; fi
  if [ -f ./'aaa1.notice'  ]; then mv ./'aaa1.notice'  aaa_division.notice     ; fi
  if [ -f ./'**.notice'    ]; then mv ./'**.notice'    aaa_puissance.notice    ; fi

  echo "${ETOILE}"
  echo "|                      LISTE DES NOTICES  UTILISATEUR                    |"
  echo "${ETOILE}"

  for i in *.notice ; do
    # Affichage du nom de la notice
    echo "| ${i}"

    # Concatenation des notices en une seule
    cat ${i} >> ZZZ_noti.notice
  done

  # Ajout des $$$$ ý la toute fin du fichier
  # ATTENTION : Ceci sera retire si toutes les notices se terminent par $$$$
  echo '$$$$' >> ZZZ_noti.notice

  # Generation du fichier .dgibi
  echo "util noti 'ZZZ_noti.notice';"  >  ZZZ_notice.dgibi
  echo "fin;"                          >> ZZZ_notice.dgibi

  # Lancement de Cast3M
  $castScript ZZZ_notice.dgibi > ZZZ_noti.res 2>&1
  rm -f ZZZ_noti.res ZZZ_noti.notice ZZZ_notice.dgibi ZZZ_notice.trace

  # Generation de CAST3M.MASTER si ce dernier n'existe pas
  if [ ! -f ${CASTEM_REP}/data/CAST3M.MASTER ] ; then
    mv    UTILNOTI ${CASTEM_REP}/data/CAST3M.MASTER
  fi
fi

########################################################################
# Gestion des ERREURS rencontrees
########################################################################

# Affichage des Problemes rencontres dans les procedures
if [ -f ZZZ_Procedures_ERREURS.txt   ]; then
  echo ' '
  cat ZZZ_Procedures_ERREURS.txt
  echo ' '
fi

# Affichage des Problemes rencontres dans les notices
if [ -f ZZZ_Notices_ERREURS.txt   ]   ; then
  echo ' '
  cat ZZZ_Notices_ERREURS.txt
  echo ' '
fi

# Menage dans les fichiers generes
\rm -f fort.*

